<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>python在ubuntu下爬取金庸作品集</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/50695/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/50695/</url>
      
        <content type="html"><![CDATA[<p>准备爬取金庸作品集后做一个语录搜索引擎，找到了某位<a href="https://blog.csdn.net/wardseptember">大神</a>的源码，稍微修改就成了，以备后续使用。</p><p><strong>目标网站</strong>：<a href="http://jinyong.zuopinj.com/">金庸作品集</a></p><p>代码实现（文件所在路径<code>/home/patten/workspace/others/python/jyyl.python</code>）：</p><pre><code>#!/usr/bin/python3# -*- coding:utf-8 -*-# @Time:2019/08/07 20:00# @Author: PattenKuo# @File: jyyl.pythonimport requestsfrom bs4 import BeautifulSoupimport time#获取每本书的章节内容def get_chapter(url):    # 获取网页的源代码    try:        html=requests.get(url,timeout=100)        html.encoding = html.apparent_encoding        content=html.content        # 将网页源代码解析成HTML格式        soup = BeautifulSoup(content, &quot;lxml&quot;)        title = soup.find('h1').text    #获取章节的标题        text = soup.find('div', id='htmlContent')    #获取章节的内容        #处理章节的内容，使得格式更加整洁、清晰        content = text.get_text('\n','br/').replace('\n', '\n    ')        content = content.replace('　　', '\n　　')        return title, '    '+content    except Exception as e:        print(str(e))        return &quot;超时，未下载成功&quot;def main():    # 书本列表    books = ['射雕英雄传','天龙八部','鹿鼎记','神雕侠侣','笑傲江湖','碧血剑','倚天屠龙记',\             '飞狐外传','书剑恩仇录','连城诀','侠客行','越女剑','鸳鸯刀','白马啸西风',\             '雪山飞狐']    order = [1,2,3,4,5,6,7,8,10,11,12,14,15,13,9]  #order of books to scrapy    #list to store each book's scrapying range    page_range = [1,43,94,145,185,225,248,289,309,329,341,362,363,364,374,385]    for i,book in enumerate(books):        with open('//home//patten//workspace//others//python//%s.txt'%book, 'w', encoding='gb18030') as f1:            f1.close()            pass        for num in range(page_range[i],page_range[i+1]):        #for num in range(185,225):            url = &quot;http://jinyong.zuopinj.com/%s/%s.html&quot;%(order[i],num)            # 错误处理机制            try:                title, chapter = get_chapter(url)                time.sleep(2)                with open('//home//patten//workspace//others//python//%s.txt'%book, 'a', encoding='gb18030') as f:                    print(book+':'+title+'--&gt;写入成功！')                    f.write(title+'\n\n\n')                    f.write(chapter+'\n\n\n')                    f.close()            except Exception as e:                print(str(e))    print('全部写入完毕!')main()</code></pre><p>运行结果：</p><pre><code>patten@patten-hp:~/workspace/others/python$ jyyl.python 射雕英雄传:第01章 风雪惊变--&gt;写入成功！射雕英雄传:第02章 江南七怪--&gt;写入成功！射雕英雄传:第03章 大漠风沙--&gt;写入成功！射雕英雄传:第04章 黑风双煞--&gt;写入成功！射雕英雄传:第05章 弯弓射雕--&gt;写入成功！射雕英雄传:第06章 崖顶疑阵--&gt;写入成功！射雕英雄传:第07章 比武招亲--&gt;写入成功！射雕英雄传:第08章 各显神通--&gt;写入成功！射雕英雄传:第09章 铁枪破犁--&gt;写入成功！射雕英雄传:第10章 冤家聚头--&gt;写入成功！射雕英雄传:第11章 长春服输--&gt;写入成功！射雕英雄传:第12章 亢龙有悔--&gt;写入成功！射雕英雄传:第13章 五湖废人--&gt;写入成功！射雕英雄传:第14章 桃花岛主--&gt;写入成功！射雕英雄传:第15章 神龙摆尾--&gt;写入成功！射雕英雄传:第16章 九阴真经--&gt;写入成功！射雕英雄传:第17章 双手互搏--&gt;写入成功！射雕英雄传:第18章 三道试题--&gt;写入成功！射雕英雄传:第19章 洪涛群鲨--&gt;写入成功！射雕英雄传:第20章 窜改经文--&gt;写入成功！射雕英雄传:第21章 千钧巨岩--&gt;写入成功！射雕英雄传:第22章 骑鲨遨游--&gt;写入成功！射雕英雄传:第23章 大闹禁宫--&gt;写入成功！射雕英雄传:第24章 密室疗伤--&gt;写入成功！射雕英雄传:第25章 荒村野店--&gt;写入成功！射雕英雄传:第26章 新盟旧约--&gt;写入成功！射雕英雄传:第27章 轩辕台前--&gt;写入成功！射雕英雄传:第28章 铁掌峰顶--&gt;写入成功！射雕英雄传:第29章 黑沼隐女--&gt;写入成功！射雕英雄传:第30章 一灯大师--&gt;写入成功！......</code></pre><p><strong>致谢</strong>：</p><blockquote><p>《<a href="https://blog.csdn.net/wardseptember/article/details/82934851">python爬取金庸小说全集</a>》</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++中的_access函数判断文件是否存在</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/3461/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/3461/</url>
      
        <content type="html"><![CDATA[<h3 id="引言"><a class="markdownIt-Anchor" href="#引言"></a> 引言：</h3><p><code>access</code>函数主要用于文件读取方面——判断文件是否存在，并判断文件是否可写。Linux下，该函数为access，位于头文件&lt;unistd.h&gt;中，而在标准C++中，该函数为_access，位于头文件&lt;io.h&gt;中，两者的使用方法基本相同，只是在一些参数方面可能会有一些不同的宏定义。</p><h2 id="windows环境"><a class="markdownIt-Anchor" href="#windows环境"></a> windows环境</h2><h3 id="windows下函数原型"><a class="markdownIt-Anchor" href="#windows下函数原型"></a> windows下函数原型：</h3><p><strong>头文件</strong>：<code>&lt;io.h&gt;</code><br><strong>函数原型</strong>：<code>int _access(const char *pathname, int mode);</code><br><strong>参数</strong>：<code>pathname</code> 为文件路径或目录路径 <code>mode</code> 为访问权限（在不同系统中可能用不能的宏定义重新定义）<br><strong>返回值</strong>：如果文件具有指定的访问权限，则函数返回<code>0</code>；如果文件不存在或者不能访问指定的权限，则返回<code>-1</code>.<br><strong>备注</strong>：当<code>pathname</code>为文件时，<code>_access</code>函数判断文件是否存在，并判断文件是否可以用<code>mode</code>值指定的模式进行访问。当<code>pathname</code>为目录时，<code>_access</code>只判断指定目录是否存在，在<code>Windows NT</code>和<code>Windows 2000</code>中，所有的目录都只有读写权限。<br><code>mode</code>的值和含义如下所示：</p><ul><li><code>00</code>——只检查文件是否存在</li><li><code>02</code>——写权限</li><li><code>04</code>——读权限</li><li><code>06</code>——读写权限<br>对应的还有<code>_access</code>的宽字符版本，用法相同。</li></ul><h3 id="windows下英文原文定义"><a class="markdownIt-Anchor" href="#windows下英文原文定义"></a> windows下英文原文定义：</h3><p><strong>access</strong><br>Synopsis：<br>　　#include<br>　　<code>int _access(const char *path,int mode);</code><br><strong>Description</strong><br>　　The access function, when used with files, determines whether the specified file exists and can be accessed as specified by the value of mode. When used with directories, _access determines only whether the specified directory exists; since under Windows all directories have read and write access.</p><p>The mode argument can be one of :<br>　　<code>00</code> Existence only<br>　　<code>02</code> Write permission<br>　　<code>04</code> Read permission<br>　　<code>06</code> Read and write permission<br><strong>Returns</strong><br>　　Zero if the file has the given mode, <code>-1</code> if an error occurs.<br><strong>Portability :</strong><br>　　Windows. Under Unix a similar function exists too.<br>　　Note that lcc-win32 accepts both _access (Microsoft convention) and access.</p><h3 id="windows下代码实例"><a class="markdownIt-Anchor" href="#windows下代码实例"></a> Windows下代码实例：</h3><p>该段代码未做验证，请读者自行验证：</p><pre><code>#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;windows.h&gt;#include &lt;io.h&gt;#include &lt;map&gt;#include &lt;math.h&gt;#include &lt;list&gt;#include &lt;string&gt;#include &lt;sstream&gt;#include &lt;algorithm&gt;// std::find(...)#include &lt;vector&gt;using namespace std;//#include &quot;stdafx.h&quot;#include &lt;iostream&gt;#include &lt;windows.h&gt;#include &lt;math.h&gt;using namespace std;void main()&#123;    int iRtn = _access(&quot;D:/G_资料_2018/20181119_xx&quot;, 0);// 这个文件夹是 存在的    printf(&quot;_access return(1) : %d\n&quot;, iRtn);    iRtn = _access(&quot;D:/G_资料_2018/20181119_xx_No&quot;, 0);// 这个文件夹是 不存在的    printf(&quot;_access return(2) : %d\n&quot;, iRtn);    iRtn = _access(&quot;D:/G_资料_2018/20181119_xx/芜湖两条线路/华二112线.g&quot;, 0);// 这个文件是 存在的    printf(&quot;_access return(3) : %d\n&quot;, iRtn);    iRtn = _access(&quot;D:/G_资料_2018/20181119_xx/芜湖两条线路/华二112线.no.g&quot;, 0);// 这个文件是 不存在的    printf(&quot;_access return(4) : %d\n&quot;, iRtn);    system(&quot;pause&quot;);&#125;</code></pre><h2 id="linux环境"><a class="markdownIt-Anchor" href="#linux环境"></a> Linux环境</h2><h3 id="linux下函数原型"><a class="markdownIt-Anchor" href="#linux下函数原型"></a> Linux下函数原型：</h3><p><strong>函数功能</strong>：检查调用进程是否可以对指定的文件执行某种操作。<br><strong>函数头文件</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;unistd.h&gt;</span><br></pre></td></tr></table></figure><p><strong>函数</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int access(const char * pathname, int mode)</span><br></pre></td></tr></table></figure><p><strong>形参</strong><br><code>pathname</code>:需要检测的文件路劲名<br><code>mode</code>:需要测试的操作模式。<br><strong>函数返回值说明</strong><br>成功执行时，返回<code>0</code>。失败返回<code>-1</code>，errno被设为以下的某个值：</p><ul><li><code>EINVAL</code>： 模式值无效</li><li><code>EACCES</code>： 文件或路径名中包含的目录不可访问</li><li><code>ELOOP</code>： 解释路径名过程中存在太多的符号连接</li><li><code>ENAMETOOLONG</code>：路径名太长</li><li><code>ENOENT</code>：路径名中的目录不存在或是无效的符号连接</li><li><code>ENOTDIR</code>： 路径名中当作目录的组件并非目录</li><li><code>EROFS</code>： 文件系统只读</li><li><code>EFAULT</code>： 路径名指向可访问的空间外</li><li><code>EIO</code>：输入输出错误</li><li><code>ENOMEM</code>： 不能获取足够的内核内存</li><li><code>ETXTBSY</code>：对程序写入出错<br><strong>mode说明</strong></li></ul><table><thead><tr><th>参数名</th><th>功用</th></tr></thead><tbody><tr><td>R_OK</td><td>测试读许可权</td></tr><tr><td>W_OK</td><td>测试写许可权</td></tr><tr><td>X_OK</td><td>测试执行许可权</td></tr><tr><td>F_OK</td><td>测试文件是否存在</td></tr></tbody></table><h3 id="linux下代码实例"><a class="markdownIt-Anchor" href="#linux下代码实例"></a> Linux下代码实例：</h3><pre><code>//main.cpp#include &lt;stdio.h&gt;#include &lt;unistd.h&gt;int main(void) &#123;  if (access(&quot;test.txt&quot;, R_OK) == 0) printf(&quot;READ OK\n&quot;);  if (access(&quot;test.txt&quot;, W_OK) == 0) printf(&quot;WRITE OK\n&quot;);  if (access(&quot;test.txt&quot;, X_OK) == 0) printf(&quot;EXEC OK\n&quot;);  if (access(&quot;test.txt&quot;, F_OK) == 0) &#123;    printf(&quot;File exist\n&quot;);  &#125; else &#123;    printf(&quot;File doesn't exist\n&quot;);  &#125;  return 0;&#125;</code></pre><h3 id="编译运行结果"><a class="markdownIt-Anchor" href="#编译运行结果"></a> 编译运行结果</h3><pre><code>patten@patten-hp:~/workspace/others/cpp/demo$ g++ main.cpp -std=c++11patten@patten-hp:~/workspace/others/cpp/demo$ ./a.out File doesn't existpatten@patten-hp:~/workspace/others/cpp/demo$</code></pre>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++11/14中的新特性：其他杂项</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/24359/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/24359/</url>
      
        <content type="html"><![CDATA[<p>尊重原创，转载自<a href="https://www.shiyanlou.com/">实验楼</a>，如需线上实操，请直接访问原教程网址：<a href="https://www.shiyanlou.com/courses/605">点击这里</a>。</p><p>本博文仅作为备份，侵删。</p><p><strong>“C++11/14中的新特性”系列汇总：</strong></p><ol><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/13475/">C++11/14中的新特性：语言可用性的强化</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/9365/">C++11/14中的新特性：语言运行期的强化</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/18864/">C++11/14中的新特性：对标准库的扩充 - 智能指针和引用计数</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/19053/">C++11/14中的新特性：对标准库的扩充 - 正则表达式</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/21758/">C++11/14中的新特性：对标准库的扩充 - 新增容器</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/40738/">C++11/14中的新特性：对标准库的扩充 - 语言级线程支持</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/24359/">C++11/14中的新特性：其他杂项</a></strong></li></ol><h2 id="一-新类型"><a class="markdownIt-Anchor" href="#一-新类型"></a> 一、新类型</h2><h3 id="long-long-int"><a class="markdownIt-Anchor" href="#long-long-int"></a> long long int</h3><p><code>long long int</code> 并不是 C<ins>11 最先引入的，其实早在 C99，<code>long long int</code> 就已经被纳入 C 标准中，所以大部分的编译器早已支持。C</ins>11 的工作则是正式把它纳入标准库，规定了一个 <code>long long int</code> 类型至少具备 64 位的比特数。</p><h2 id="二-noexcept-的修饰和操作"><a class="markdownIt-Anchor" href="#二-noexcept-的修饰和操作"></a> 二、noexcept 的修饰和操作</h2><p>C++ 相比于 C 的一大优势就在于 C++ 本身就定义了一套完整的异常处理机制。然而在 C<ins>11 之前，几乎没有人去使用在函数名后书写异常声明表达式，从 C</ins>11 开始，这套机制被弃用，所以我们不去讨论也不去介绍以前这套机制是如何工作如何使用，你更不应该主动去了解它。</p><p>C++11 将异常的声明简化为以下两种情况：</p><ol><li>函数可能抛出任何异常</li><li>函数不能抛出任何异常</li></ol><p>并使用 <code>noexcept</code> 对这两种行为进行限制，例如：</p><pre><code>void may_throw();           // 可能抛出异常void no_throw() noexcept;   // 不可能抛出异常</code></pre><p>使用 <code>noexcept</code> 修饰过的函数如果抛出异常，编译器会使用 <code>std::terminate()</code> 来立即终止程序运行。</p><p><code>noexcept</code> 还能用作操作符，用于操作一个表达式，当表达式无异常时，返回 <code>true</code>，否则返回 <code>false</code>。</p><pre><code>#include &lt;iostream&gt;void may_throw() &#123;    throw true;&#125;auto non_block_throw = []&#123;    may_throw();&#125;;void no_throw() noexcept &#123;    return;&#125;auto block_throw = []() noexcept &#123;    no_throw();&#125;;int main()&#123;    std::cout &lt;&lt; std::boolalpha    &lt;&lt; &quot;may_throw() noexcept? &quot; &lt;&lt; noexcept(may_throw()) &lt;&lt; std::endl    &lt;&lt; &quot;no_throw() noexcept? &quot; &lt;&lt; noexcept(no_throw()) &lt;&lt; std::endl    &lt;&lt; &quot;lmay_throw() noexcept? &quot; &lt;&lt; noexcept(non_block_throw()) &lt;&lt; std::endl    &lt;&lt; &quot;lno_throw() noexcept? &quot; &lt;&lt; noexcept(block_throw()) &lt;&lt; std::endl;    return 0;&#125;</code></pre><p><code>noexcept</code> 修饰完一个函数之后能够起到封锁异常扩散的功效，如果内部产生异常，外部也不会触发。例如：</p><pre><code>try &#123;    may_throw();&#125; catch (...) &#123;    std::cout &lt;&lt; &quot;捕获异常, 来自 my_throw()&quot; &lt;&lt; std::endl;&#125;try &#123;    non_block_throw();&#125; catch (...) &#123;    std::cout &lt;&lt; &quot;捕获异常, 来自 non_block_throw()&quot; &lt;&lt; std::endl;&#125;try &#123;    block_throw();&#125; catch (...) &#123;    std::cout &lt;&lt; &quot;捕获异常, 来自 block_throw()&quot; &lt;&lt; std::endl;&#125;</code></pre><p>最终输出为：</p><pre><code>捕获异常, 来自 my_throw()捕获异常, 来自 non_block_throw()</code></pre><h2 id="三-字面量"><a class="markdownIt-Anchor" href="#三-字面量"></a> 三、字面量</h2><h3 id="原始字符串字面量"><a class="markdownIt-Anchor" href="#原始字符串字面量"></a> 原始字符串字面量</h3><p>传统 C++ 里面要编写一个充满特殊字符的字符串其实是非常痛苦的一件事情，比如一个包含 HTML 本体的字符串需要添加大量的转义符，例如一个Windows 上的文件路径经常会：<code>C:\\What\\The\\Fxxk</code>。</p><p>C++11 提供了原始字符串字面量的写法，可以在一个字符串前方使用 <code>R</code> 来修饰这个字符串，同时，将原始字符串使用括号包裹，例如：</p><pre><code>#include &lt;iostream&gt;#include &lt;string&gt;int main() &#123;    std::string str = R&quot;(C:\\What\\The\\Fxxk)&quot;;    std::cout &lt;&lt; str &lt;&lt; std::endl;    return 0;&#125;</code></pre><h3 id="自定义字面量"><a class="markdownIt-Anchor" href="#自定义字面量"></a> 自定义字面量</h3><p>C++11 引进了自定义字面量的能力，通过重载双引号后缀运算符实现：</p><pre><code>// 字符串字面量自定义必须设置如下的参数列表std::string operator&quot;&quot; _wow1(const char *wow1, size_t len) &#123;    return std::string(wow1)+&quot;woooooooooow, amazing&quot;;&#125;std::string operator&quot;&quot; _wow2 (unsigned long long i) &#123;    return std::to_string(i)+&quot;woooooooooow, amazing&quot;;&#125;int main() &#123;    auto str = &quot;abc&quot;_wow1;    auto num = 1_wow2;    std::cout &lt;&lt; str &lt;&lt; std::endl;    std::cout &lt;&lt; num &lt;&lt; std::endl;    return 0;&#125;</code></pre><p>自定义字面量支持四种字面量：</p><ol><li>整型字面量：重载时必须使用 <code>unsigned long long</code>、<code>const char *</code>、模板字面量算符参数，在上面的代码中使用的是前者；</li><li>浮点型字面量：重载时必须使用 <code>long double</code>、<code>const char *</code>、模板字面量算符；</li><li>字符串字面量：必须使用 <code>(const char *, size_t)</code> 形式的参数表；</li><li>字符字面量：参数只能是 <code>char</code>, <code>wchar_t</code>, <code>char16_t</code>, <code>char32_t</code> 这几种类型。</li></ol><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>本节介绍的几个特性是从剩余 C++1x 新特性里挑出的使用频次较靠前的几个特性，其中 <code>noexcept</code> 是最为重要的特性，它的一个功能在于能够阻止异常的扩散传播，让编译器能最大限度的优化我们的代码。</p><p>本节的代码可以从下面的链接中获取：</p><pre><code>$ wget http://labfile.oss.aliyuncs.com/courses/605/8.zip</code></pre><p>附带的 Makefile 用法如下</p><pre><code>$ make all # 编译全部例程$ make 8.1 # 仅编译 8.1.cpp</code></pre><h2 id="致谢"><a class="markdownIt-Anchor" href="#致谢"></a> 致谢</h2><blockquote><p><a href="https://www.shiyanlou.com/">实验楼</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++11/14中的新特性：对标准库的扩充 - 语言级线程支持</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/40738/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/40738/</url>
      
        <content type="html"><![CDATA[<p>尊重原创，转载自<a href="https://www.shiyanlou.com/">实验楼</a>，如需线上实操，请直接访问原教程网址：<a href="https://www.shiyanlou.com/courses/605">点击这里</a>。</p><p>本博文仅作为备份，侵删。</p><p><strong>“C++11/14中的新特性”系列汇总：</strong></p><ol><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/13475/">C++11/14中的新特性：语言可用性的强化</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/9365/">C++11/14中的新特性：语言运行期的强化</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/18864/">C++11/14中的新特性：对标准库的扩充 - 智能指针和引用计数</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/19053/">C++11/14中的新特性：对标准库的扩充 - 正则表达式</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/21758/">C++11/14中的新特性：对标准库的扩充 - 新增容器</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/40738/">C++11/14中的新特性：对标准库的扩充 - 语言级线程支持</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/24359/">C++11/14中的新特性：其他杂项</a></strong></li></ol><blockquote><p>提示：本节代码编译需要使用 <code>-pthread</code> 选项，例如：</p></blockquote><pre><code>g++ main.cpp -std=c++14 -pthread</code></pre><h2 id="一-stdthread"><a class="markdownIt-Anchor" href="#一-stdthread"></a> 一、std::thread</h2><p><code>std::thread</code> 用于创建一个执行的线程实例，所以它是一切并发编程的基础，使用时需要包含<thread>头文件，它提供了很多基本的线程操作，例如<code>get_id()</code>来获取所创建线程的线程 ID，例如使用 <code>join()</code> 来加入一个线程等等，例如：</thread></p><pre><code>#include &lt;iostream&gt;#include &lt;thread&gt;void foo() &#123;    std::cout &lt;&lt; &quot;hello world&quot; &lt;&lt; std::endl;&#125;int main() &#123;    std::thread t(foo);    t.join();    return 0;&#125;</code></pre><h2 id="二-stdmutex-stdunique_lock"><a class="markdownIt-Anchor" href="#二-stdmutex-stdunique_lock"></a> 二、 std::mutex, std::unique_lock</h2><p>我们在操作系统的相关知识中已经了解过了有关并发技术的基本知识，mutex 就是其中的核心之一。C++11引入了 mutex 相关的类，其所有相关的函数都放在 <code>&lt;mutex&gt;</code> 头文件中。</p><p><code>std::mutex</code> 是 C<ins>11 中最基本的 <code>mutex</code> 类，通过实例化 <code>std::mutex</code> 可以创建互斥量，而通过其成员函数 <code>lock()</code> 可以仅此能上锁，<code>unlock()</code> 可以进行解锁。但是在在实际编写代码的过程中，最好不去直接调用成员函数，因为调用成员函数就需要在每个临界区的出口处调用 <code>unlock()</code>，当然，还包括异常。这时候 C</ins>11 还为互斥量提供了一个 RAII 语法的模板类<code>std::lock_gurad</code>。RAII 在不失代码简洁性的同时，很好的保证了代码的异常安全性。</p><p>在 RAII 用法下，对于临界区的互斥量的创建只需要在作用域的开始部分，例如：</p><pre><code>void some_operation(const std::string &amp;message) &#123;    static std::mutex mutex;    std::lock_guard&lt;std::mutex&gt; lock(mutex);    // ...操作    // 当离开这个作用域的时候，互斥锁会被析构，同时unlock互斥锁    // 因此这个函数内部的可以认为是临界区&#125;</code></pre><p>由于 C++保证了所有栈对象在声明周期结束时会被销毁，所以这样的代码也是异常安全的。无论 <code>some_operation()</code> 正常返回、还是在中途抛出异常，都会引发堆栈回退，也就自动调用了 <code>unlock()</code>。</p><p>而 <code>std::unique_lock</code> 则相对于 <code>std::lock_guard</code> 出现的，<code>std::unique_lock</code> 更加灵活，<code>std::unique_lock</code> 的对象会以独占所有权（没有其他的 <code>unique_lock</code> 对象同时拥有某个 <code>mutex</code> 对象的所有权）的方式管理 <code>mutex</code> 对象上的上锁和解锁的操作。所以在并发编程中，推荐使用 <code>std::unique_lock</code>。例如：</p><pre><code>#include &lt;iostream&gt;#include &lt;thread&gt;#include &lt;mutex&gt;std::mutex mtx;void block_area() &#123;    std::unique_lock&lt;std::mutex&gt; lock(mtx);    //...临界区&#125;int main() &#123;    std::thread thd1(block_area);    thd1.join();    return 0;&#125;</code></pre><h3 id="stdfuture-stdpackaged_task"><a class="markdownIt-Anchor" href="#stdfuture-stdpackaged_task"></a> std::future, std::packaged_task</h3><p><code>std::future</code> 则是提供了一个访问异步操作结果的途径，这句话很不好理解。为了理解这个特性，我们需要先理解一下在 C++11之前的多线程行为。</p><p>试想，如果我们的主线程 A 希望新开辟一个线程 B 去执行某个我们预期的任务，并返回我一个结果。而这时候，线程 A 可能正在忙其他的事情，无暇顾及 B 的结果，所以我们会很自然的希望能够在某个特定的时间获得线程 B 的结果。</p><p>在 C++11 的 <code>std::future</code> 被引入之前，通常的做法是：创建一个线程A，在线程A里启动任务 B，当准备完毕后发送一个事件，并将结果保存在全局变量中。而主函数线程 A 里正在做其他的事情，当需要结果的时候，调用一个线程等待函数来获得执行的结果。</p><p>而 C++11 提供的 <code>std::future</code> 简化了这个流程，可以用来获取异步任务的结果。自然地，我们很容易能够想象到把它作为一种简单的线程同步手段。</p><p>此外，<code>std::packaged_task</code> 可以用来封装任何可以调用的目标，从而用于实现异步的调用。例如：</p><pre><code>#include &lt;iostream&gt;#include &lt;future&gt;#include &lt;thread&gt;int main() &#123;    // 将一个返回值为7的 lambda 表达式封装到 task 中    // std::packaged_task 的模板参数为要封装函数的类型    std::packaged_task&lt;int()&gt; task([]()&#123;return 7;&#125;);    // 获得 task 的 future    std::future&lt;int&gt; result = task.get_future();    // 在一个线程中执行 task    std::thread(std::move(task)).detach();    std::cout &lt;&lt; &quot;Waiting...&quot;;    result.wait();    // 输出执行结果    std::cout &lt;&lt; &quot;Done!&quot; &lt;&lt; std:: endl &lt;&lt; &quot;Result is &quot; &lt;&lt; result.get() &lt;&lt; '\n';&#125;</code></pre><p>在封装好要调用的目标后，可以使用 <code>get_future()</code> 来获得一个 <code>std::future</code> 对象，以便之后事实线程同步。</p><h3 id="stdcondition_variable"><a class="markdownIt-Anchor" href="#stdcondition_variable"></a> std::condition_variable</h3><p><code>std::condition_variable</code> 是为了解决死锁而生的。当互斥操作不够用而引入的。比如，线程可能需要等待某个条件为真才能继续执行，而一个忙等待循环中可能会导致所有其他线程都无法进入临界区使得条件为真时，就会发生死锁。所以，<code>condition_variable</code> 实例被创建出现主要就是用于唤醒等待线程从而避免死锁。<code>std::condition_variable</code>的 <code>notify_one()</code> 用于唤醒一个线程；<code>notify_all()</code> 则是通知所有线程。下面是一个生产者和消费者模型的例子：</p><pre><code>#include &lt;condition_variable&gt;#include &lt;mutex&gt;#include &lt;thread&gt;#include &lt;iostream&gt;#include &lt;queue&gt;#include &lt;chrono&gt;int main()&#123;    // 生产者数量    std::queue&lt;int&gt; produced_nums;    // 互斥锁    std::mutex m;    // 条件变量    std::condition_variable cond_var;    // 结束标志    bool done = false;    // 通知标志    bool notified = false;    // 生产者线程    std::thread producer([&amp;]() &#123;        for (int i = 0; i &lt; 5; ++i) &#123;            std::this_thread::sleep_for(std::chrono::seconds(1));            // 创建互斥锁            std::unique_lock&lt;std::mutex&gt; lock(m);            std::cout &lt;&lt; &quot;producing &quot; &lt;&lt; i &lt;&lt; '\n';            produced_nums.push(i);            notified = true;            // 通知一个线程            cond_var.notify_one();        &#125;           done = true;        cond_var.notify_one();    &#125;);     // 消费者线程    std::thread consumer([&amp;]() &#123;        std::unique_lock&lt;std::mutex&gt; lock(m);        while (!done) &#123;            while (!notified) &#123;  // 循环避免虚假唤醒                cond_var.wait(lock);            &#125;               while (!produced_nums.empty()) &#123;                std::cout &lt;&lt; &quot;consuming &quot; &lt;&lt; produced_nums.front() &lt;&lt; '\n';                produced_nums.pop();            &#125;               notified = false;        &#125;       &#125;);     producer.join();    consumer.join();&#125;</code></pre><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>C++11 语言层提供了并发编程的相关支持，本节简单的介绍了 <code>std::thread</code>/<code>std::mutex</code>/<code>std::future</code> 这些并发编程中不可回避的重要工具。</p><blockquote><p>本节提到的内容足以让我们使用不超过 100 行代码编写一个简单的线程池库</p></blockquote><blockquote><p>关于这方面的使用技巧，可以通过项目课：<a href="https://www.shiyanlou.com/courses/565">100 行 C++ 代码实现线程池</a> 进行进一步巩固学习。</p></blockquote><p>本节代码：</p><pre><code>http://labfile.oss.aliyuncs.com/courses/605/7.zip</code></pre><h2 id="致谢"><a class="markdownIt-Anchor" href="#致谢"></a> 致谢</h2><blockquote><p><a href="https://www.shiyanlou.com/">实验楼</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++11/14中的新特性：对标准库的扩充 - 新增容器</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/21758/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/21758/</url>
      
        <content type="html"><![CDATA[<p>尊重原创，转载自<a href="https://www.shiyanlou.com/">实验楼</a>，如需线上实操，请直接访问原教程网址：<a href="https://www.shiyanlou.com/courses/605">点击这里</a>。</p><p>本博文仅作为备份，侵删。</p><p><strong>“C++11/14中的新特性”系列汇总：</strong></p><ol><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/13475/">C++11/14中的新特性：语言可用性的强化</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/9365/">C++11/14中的新特性：语言运行期的强化</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/18864/">C++11/14中的新特性：对标准库的扩充 - 智能指针和引用计数</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/19053/">C++11/14中的新特性：对标准库的扩充 - 正则表达式</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/21758/">C++11/14中的新特性：对标准库的扩充 - 新增容器</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/40738/">C++11/14中的新特性：对标准库的扩充 - 语言级线程支持</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/24359/">C++11/14中的新特性：其他杂项</a></strong></li></ol><h2 id="一-stdarray-和-stdforward_list"><a class="markdownIt-Anchor" href="#一-stdarray-和-stdforward_list"></a> 一、std::array 和 std::forward_list</h2><h3 id="stdarray"><a class="markdownIt-Anchor" href="#stdarray"></a> std::array</h3><p>看到这个容器的时候肯定会出现这样的问题：</p><ol><li>为什么要引入 <code>std::array</code> 而不是直接使用 <code>std::vector</code>？</li><li>已经有了传统数组，为什么要用 <code>std::array</code>?</li></ol><p>先回答第一个问题，<code>std::vecotr</code> 太强大了，以至于我们没有必要为了去敲碎一个鸡蛋而用一个钉锤。使用 <code>std::array</code> 保存在栈内存中，相比堆内存中的 <code>std::vector</code>，我们就能够灵活的访问这里面的元素，从而获得更高的性能；同时正式由于其堆内存存储的特性，有些时候我们还需要自己负责释放这些资源。</p><p>而第二个问题就更加简单，使用<code>std::array</code>能够让代码变得更加现代，且封装了一些操作函数，同时还能够友好的使用标准库中的容器算法等等，比如 <code>std::sort</code>。</p><p><code>std::array</code> 会在编译时创建一个固定大小的数组，<code>std::array</code> 不能够被隐式的转换成指针，使用 <code>std::array</code> 很简单，只需指定其类型和大小即可：</p><pre><code>std::array&lt;int, 4&gt; arr= &#123;1,2,3,4&#125;;int len = 4;std::array&lt;int, len&gt; arr = &#123;1,2,3,4&#125;; // 非法, 数组大小参数必须是常量表达式</code></pre><p>当我们开始用上了 <code>std::array</code> 时，难免会遇到要将其兼容 C 风格的接口，这里有三种做法：</p><pre><code>void foo(int *p, int len) &#123;    return;&#125;std::array&lt;int 4&gt; arr = &#123;1,2,3,4&#125;;// C 风格接口传参// foo(arr, arr.size());           // 非法, 无法隐式转换foo(&amp;arr[0], arr.size());foo(arr.data(), arr.size());// 使用 `std::sort`std::sort(arr.begin(), arr.end());</code></pre><h3 id="stdforward_list"><a class="markdownIt-Anchor" href="#stdforward_list"></a> std::forward_list</h3><p><code>std::forward_list</code> 是一个列表容器，使用方法和 <code>std::list</code> 基本类似，因此我们就不花费篇幅进行介绍了。</p><p>需要知道的是，和 <code>std::list</code> 的双向链表的实现不同，<code>std::forward_list</code> 使用单向链表进行实现，提供了 <code>O(1)</code> 复杂度的元素插入，不支持快速随机访问（这也是链表的特点），也是标准库容器中唯一一个不提供 <code>size()</code> 方法的容器。当不需要双向迭代时，具有比 <code>std::list</code> 更高的空间利用率。</p><h2 id="二-无序容器"><a class="markdownIt-Anchor" href="#二-无序容器"></a> 二、无序容器</h2><p>我们已经熟知了传统 C++ 中的有序容器 <code>std::map</code>/<code>std::set</code>，这些容器内部通过红黑树进行实现，插入和搜索的平均复杂度均为 <code>O(log(size))</code>。在插入元素时候，会根据 <code>&lt;</code> 操作符比较元素大小并判断元素是否相同，并选择合适的位置插入到容器中。当对这个容器中的元素进行遍历时，输出结果会按照 <code>&lt;</code> 操作符的顺序来逐个遍历。</p><p>而无序容器中的元素是不进行排序的，内部通过 Hash 表实现，插入和搜索元素的平均复杂度为 <code>O(constant)</code>，在不关心容器内部元素顺序时，能够获得显著的性能提升。</p><p>C++11 引入了两组无序容器：<code>std::unordered_map</code>/<code>std::unordered_multimap</code> 和 <code>std::unordered_set</code>/<code>std::unordered_multiset</code>。</p><p>它们的用法和原有的 <code>std::map</code>/<code>std::multimap</code>/<code>std::set</code>/<code>set::multiset</code> 基本类似，由于这些容器我们已经很熟悉了，便不一一举例，我们直接来比较一下<code>std::map</code>和<code>std::multimap</code>：</p><pre><code>#include &lt;iostream&gt;#include &lt;string&gt;#include &lt;unordered_map&gt;#include &lt;map&gt;int main() &#123;    // 两组结构按同样的顺序初始化    std::unordered_map&lt;int, std::string&gt; u = &#123;        &#123;1, &quot;1&quot;&#125;,        &#123;3, &quot;3&quot;&#125;,        &#123;2, &quot;2&quot;&#125;    &#125;;    std::map&lt;int, std::string&gt; v = &#123;        &#123;1, &quot;1&quot;&#125;,        &#123;3, &quot;3&quot;&#125;,        &#123;2, &quot;2&quot;&#125;    &#125;;    // 分别对两种容器进行遍历    std::cout &lt;&lt; &quot;std::unordered_map&quot; &lt;&lt; std::endl;    for( const auto &amp; n : u)         std::cout &lt;&lt; &quot;Key:[&quot; &lt;&lt; n.first &lt;&lt; &quot;] Value:[&quot; &lt;&lt; n.second &lt;&lt; &quot;]\n&quot;;    std::cout &lt;&lt; std::endl;    std::cout &lt;&lt; &quot;std::map&quot; &lt;&lt; std::endl;    for( const auto &amp; n : v)         std::cout &lt;&lt; &quot;Key:[&quot; &lt;&lt; n.first &lt;&lt; &quot;] Value:[&quot; &lt;&lt; n.second &lt;&lt; &quot;]\n&quot;;&#125;</code></pre><p>最终的输出结果为：</p><pre><code>std::unordered_mapKey:[2] Value:[2]Key:[3] Value:[3]Key:[1] Value:[1]std::mapKey:[1] Value:[1]Key:[2] Value:[2]Key:[3] Value:[3]</code></pre><h2 id="三-元组-stdtuple"><a class="markdownIt-Anchor" href="#三-元组-stdtuple"></a> 三、元组 std::tuple</h2><p>了解过 Python 的程序员应该知道元组的概念，纵观传统 C++ 中的容器，除了 <code>std::pair</code> 外，似乎没有现成的结构能够用来存放不同类型的数据（通常我们会自己定义结构）。但 <code>std::pair</code> 的缺陷是显而易见的，只能保存两个元素。</p><h3 id="元组基本操作"><a class="markdownIt-Anchor" href="#元组基本操作"></a> 元组基本操作</h3><p>关于元组的使用有三个核心的函数：</p><ol><li><p><code>std::make_tuple</code>: 构造元组</p></li><li><p><code>std::get</code>: 获得元组某个位置的值</p></li><li><p><code>std::tie</code>: 元组拆包</p><p>#include <tuple><br>#include <iostream></iostream></tuple></p><p>auto get_student(int id)<br>{<br>// 返回类型被推断为 std::tuple&lt;double, char, std::string&gt;</p><pre><code>if (id == 0)    return std::make_tuple(3.8, 'A', &quot;张三&quot;);if (id == 1)    return std::make_tuple(2.9, 'C', &quot;李四&quot;);if (id == 2)    return std::make_tuple(1.7, 'D', &quot;王五&quot;);return std::make_tuple(0.0, 'D', &quot;null&quot;);   // 如果只写 0 会出现推断错误, 编译失败</code></pre><p>}</p><p>int main()<br>{<br>auto student = get_student(0);<br>std::cout &lt;&lt; &quot;ID: 0, &quot;<br>&lt;&lt; &quot;GPA: &quot; &lt;&lt; std::get&lt;0&gt;(student) &lt;&lt; &quot;, &quot;<br>&lt;&lt; &quot;成绩: &quot; &lt;&lt; std::get&lt;1&gt;(student) &lt;&lt; &quot;, &quot;<br>&lt;&lt; &quot;姓名: &quot; &lt;&lt; std::get&lt;2&gt;(student) &lt;&lt; ‘\n’;</p><pre><code>double gpa;char grade;std::string name;// 元组进行拆包std::tie(gpa, grade, name) = get_student(1);std::cout &lt;&lt; &quot;ID: 1, &quot;&lt;&lt; &quot;GPA: &quot; &lt;&lt; gpa &lt;&lt; &quot;, &quot;&lt;&lt; &quot;成绩: &quot; &lt;&lt; grade &lt;&lt; &quot;, &quot;&lt;&lt; &quot;姓名: &quot; &lt;&lt; name &lt;&lt; '\n';</code></pre><p>}</p></li></ol><p><code>std::get</code> 除了使用常量获取元组对象外，C++14 增加了使用类型来获取元组中的对象：</p><pre><code>std::tuple&lt;std::string, double, double, int&gt; t(&quot;123&quot;, 4.5, 6.7, 8);std::cout &lt;&lt; std::get&lt;std::string&gt;(t) &lt;&lt; std::endl;std::cout &lt;&lt; std::get&lt;double&gt;(t) &lt;&lt; std::endl;   // 非法, 引发编译期错误std::cout &lt;&lt; std::get&lt;3&gt;(t) &lt;&lt; std::endl;</code></pre><h3 id="运行期索引"><a class="markdownIt-Anchor" href="#运行期索引"></a> 运行期索引</h3><p>如果你仔细思考一下可能就会发现上面代码的问题，<code>std::get&lt;&gt;</code> 依赖一个编译期的常量，所以下面的方式是不合法的：</p><pre><code>int index = 1;std::get&lt;index&gt;(t);</code></pre><p>那么要怎么处理？答案是，<strong>标准库做不到</strong>。这里介绍一个使用 <code>boost::variant</code> 配合变长模板参数的黑魔法：</p><blockquote><p><strong>提示</strong>：使用 <code>boost</code> 只是暂时性的解决方案，<code>variant</code> 已在 C++17 中被纳入标准库 <code>std::variant</code>，见扩展主题它的讨论。<a href="http://en.cppreference.com/w/cpp/utility/variant">http://en.cppreference.com/w/cpp/utility/variant</a></p></blockquote><pre><code>#include &lt;boost/variant.hpp&gt;template &lt;size_t n, typename... T&gt;boost::variant&lt;T...&gt; _tuple_index(size_t i, const std::tuple&lt;T...&gt;&amp; tpl) &#123;    if (i == n)        return std::get&lt;n&gt;(tpl);    else if (n == sizeof...(T) - 1)        throw std::out_of_range(&quot;越界.&quot;);    else        return _tuple_index&lt;(n &lt; sizeof...(T)-1 ? n+1 : 0)&gt;(i, tpl);&#125;template &lt;typename... T&gt;boost::variant&lt;T...&gt; tuple_index(size_t i, const std::tuple&lt;T...&gt;&amp; tpl) &#123;    return _tuple_index&lt;0&gt;(i, tpl);&#125;</code></pre><p>这样我们就能：</p><pre><code>int i = 1;std::cout &lt;&lt; tuple_index(i, t) &lt;&lt; std::endl;</code></pre><h3 id="元组合并与遍历"><a class="markdownIt-Anchor" href="#元组合并与遍历"></a> 元组合并与遍历</h3><p>还有一个常见的需求就是合并两个元组，这可以通过 <code>std::tuple_cat</code> 来实现：</p><pre><code>auto new_tuple = std::tuple_cat(get_student(1), std::move(t));</code></pre><p>马上就能够发现，应该如何快速遍历一个元组？但是我们刚才介绍了如何在运行期通过非常数索引一个 <code>tuple</code> 那么遍历就变得简单了，首先我们需要知道一个元组的长度，可以：</p><pre><code>template &lt;typename T&gt;auto tuple_len(T &amp;tpl) &#123;    return std::tuple_size&lt;T&gt;::value;&#125;</code></pre><p>这样就能够对元组进行迭代了：</p><pre><code>// 迭代for(int i = 0; i != tuple_len(new_tuple); ++i)    // 运行期索引    std::cout &lt;&lt; tuple_index(i, new_tuple) &lt;&lt; std::endl;</code></pre><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>本节简单介绍了 C<ins>11/14 中新增的容器，它们的用法和传统 C</ins> 中已有的容器类似，相对简单，可以根据实际场景丰富的选择需要使用的容器，从而获得更好的性能。</p><p><code>std::tuple</code> 虽然有效，但是标准库提供的功能有限，没办法满足运行期索引和迭代的需求，好在我们还有其他的方法可以自行实现。</p><p>本节的所有代码可以在下面的链接中获取：</p><pre><code>wget http://labfile.oss.aliyuncs.com/courses/605/4.zip</code></pre><p>其中包含一个用来编译例程的Makefile:</p><pre><code>$ cd 4 # 4是解压4.zip后得到的文件夹$ make # 编译全部例程$ make 4.1 # 仅编译4.1.cpp</code></pre><h2 id="致谢"><a class="markdownIt-Anchor" href="#致谢"></a> 致谢</h2><blockquote><p><a href="https://www.shiyanlou.com/">实验楼</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++11/14中的新特性：对标准库的扩充 - 正则表达式</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/19053/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/19053/</url>
      
        <content type="html"><![CDATA[<p>尊重原创，转载自<a href="https://www.shiyanlou.com/">实验楼</a>，如需线上实操，请直接访问原教程网址：<a href="https://www.shiyanlou.com/courses/605">点击这里</a>。</p><p>本博文仅作为备份，侵删。</p><p><strong>“C++11/14中的新特性”系列汇总：</strong></p><ol><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/13475/">C++11/14中的新特性：语言可用性的强化</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/9365/">C++11/14中的新特性：语言运行期的强化</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/18864/">C++11/14中的新特性：对标准库的扩充 - 智能指针和引用计数</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/19053/">C++11/14中的新特性：对标准库的扩充 - 正则表达式</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/21758/">C++11/14中的新特性：对标准库的扩充 - 新增容器</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/40738/">C++11/14中的新特性：对标准库的扩充 - 语言级线程支持</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/24359/">C++11/14中的新特性：其他杂项</a></strong></li></ol><h2 id="一-正则表达式简介"><a class="markdownIt-Anchor" href="#一-正则表达式简介"></a> 一、正则表达式简介</h2><p>正则表达式不是 C++ 语言的一部分，这里仅做简单的介绍。</p><p>正则表达式描述了一种字符串匹配的模式。一般使用正则表达式主要是实现下面三个需求：</p><ol><li>检查一个串是否包含某种形式的子串；</li><li>将匹配的子串替换；</li><li>从某个串中取出符合条件的子串。</li></ol><p>正则表达式是由普通字符（例如 a 到 z）以及特殊字符组成的文字模式。模式描述在搜索文本时要匹配的一个或多个字符串。正则表达式作为一个模板，将某个字符模式与所搜索的字符串进行匹配。</p><h3 id="普通字符"><a class="markdownIt-Anchor" href="#普通字符"></a> 普通字符</h3><p>普通字符包括没有显式指定为元字符的所有可打印和不可打印字符。这包括所有大写和小写字母、所有数字、所有标点符号和一些其他符号。</p><h3 id="特殊字符"><a class="markdownIt-Anchor" href="#特殊字符"></a> 特殊字符</h3><p>特殊字符是正则表达式里有特殊含义的字符，也是正则表达式的核心匹配语法。参见下表：</p><p>特别字符</p><p>描述</p><p><code>$</code></p><p>匹配输入字符串的结尾位置。</p><p><code>(</code>,<code>)</code></p><p>标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。</p><p><code>*</code></p><p>匹配前面的子表达式零次或多次。</p><p><code>+</code></p><p>匹配前面的子表达式一次或多次。</p><p><code>.</code></p><p>匹配除换行符 <code>\n</code> 之外的任何单字符。</p><p><code>[</code></p><p>标记一个中括号表达式的开始。</p><p><code>?</code></p><p>匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。</p><p><code>\</code></p><p>将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。例如， <code>n</code> 匹配字符 <code>n</code>。<code>\n</code> 匹配换行符。序列 <code>\\</code> 匹配 <code>'\'</code> 字符，而 <code>\(</code> 则匹配 <code>'('</code> 字符。</p><p><code>^</code></p><p>匹配输入字符串的开始位置，除非在方括号表达式中使用，此时它表示不接受该字符集合。</p><p><code>&#123;</code></p><p>标记限定符表达式的开始。</p><p>|</p><p>指明两项之间的一个选择。</p><h3 id="限定符"><a class="markdownIt-Anchor" href="#限定符"></a> 限定符</h3><p>限定符用来指定正则表达式的一个给定的组件必须要出现多少次才能满足匹配。见下表：</p><p>字符</p><p>描述</p><p><code>*</code></p><p>匹配前面的子表达式零次或多次。例如，<code>foo*</code> 能匹配 <code>fo</code> 以及 <code>foooo</code>。<code>*</code> 等价于<code>&#123;0,&#125;</code>。</p><p><code>+</code></p><p>匹配前面的子表达式一次或多次。例如，<code>foo+</code> 能匹配 <code>foo</code> 以及 <code>foooo</code>，但不能匹配 <code>fo</code>。<code>+</code> 等价于 <code>&#123;1,&#125;</code>。</p><p><code>?</code></p><p>匹配前面的子表达式零次或一次。例如，<code>Your(s)?</code> 可以匹配 <code>Your</code> 或 <code>Yours</code> 中的<code>Your</code> 。<code>?</code> 等价于 <code>&#123;0,1&#125;</code>。</p><p><code>&#123;n&#125;</code></p><p><code>n</code> 是一个非负整数。匹配确定的 <code>n</code> 次。例如，<code>f&#123;2&#125;</code> 不能匹配 <code>for</code> 中的 <code>o</code>，但是能匹配 <code>foo</code> 中的两个 <code>o</code>。</p><p><code>&#123;n,&#125;</code></p><p><code>n</code> 是一个非负整数。至少匹配 <code>n</code> 次。例如，<code>f&#123;2,&#125;</code> 不能匹配 <code>for</code> 中的 <code>o</code>，但能匹配 <code>foooooo</code> 中的所有 <code>o</code>。<code>o&#123;1,&#125;</code> 等价于 <code>o+</code>。<code>o&#123;0,&#125;</code> 则等价于 <code>o*</code>。</p><p><code>&#123;n,m&#125;</code></p><p><code>m</code> 和 <code>n</code> 均为非负整数，其中 <code>n</code> 小于等于 <code>m</code>。最少匹配 <code>n</code> 次且最多匹配 <code>m</code> 次。例如，<code>o&#123;1,3&#125;</code> 将匹配 <code>foooooo</code> 中的前三个 <code>o</code>。<code>o&#123;0,1&#125;</code> 等价于 <code>o?</code>。注意，在逗号和两个数之间不能有空格。</p><p>有了这三张表，我们通常就能够读懂几乎所有的正则表达式了。</p><h2 id="二-stdregex-及其相关"><a class="markdownIt-Anchor" href="#二-stdregex-及其相关"></a> 二、std::regex 及其相关</h2><p>对字符串内容进行匹配的最常见手段就是使用正则表达式。可惜在传统 C++ 中正则表达式一直没有得到语言层面的支持，没有纳入标准库，而 C++ 作为一门高性能语言，在后台服务的开发中，对 URL 资源链接进行判断时，使用正则表达式也是工业界最为成熟的普遍做法。</p><p>一般的解决方案就是使用 <code>boost</code> 的正则表达式库。而 C++11 正式将正则表达式的的处理方法纳入标准库的行列，从语言级上提供了标准的支持，不再依赖第三方。</p><p>C++11 提供的正则表达式库操作 <code>std::string</code> 对象，模式 <code>std::regex</code> (本质是 <code>std::basic_regex</code>)进行初始化，通过 <code>std::regex_match</code> 进行匹配，从而产生 <code>std::smatch</code> （本质是 <code>std::match_results</code> 对象）。</p><p>我们通过一个简单的例子来简单介绍这个库的使用。考虑下面的正则表达式</p><ul><li><code>[a-z]+\.txt</code>: 在这个正则表达式中, <code>[a-z]</code> 表示匹配一个小写字母, <code>+</code> 可以使前面的表达式匹配多次，因此 <code>[a-z]+</code> 能够匹配一个小写字母组成的字符串。在正则表达式中一个 <code>.</code> 表示匹配任意字符，而 <code>\.</code> 则表示匹配字符 <code>.</code>，最后的 <code>txt</code> 表示严格匹配 <code>txt</code> 则三个字母。因此这个正则表达式的所要匹配的内容就是由纯小写字母组成的文本文件。</li></ul><p><code>std::regex_match</code> 用于匹配字符串和正则表达式，有很多不同的重载形式。最简单的一个形式就是传入<code>std::string</code> 以及一个 <code>std::regex</code> 进行匹配，当匹配成功时，会返回 <code>true</code>，否则返回 <code>false</code>。例如：</p><pre><code>#include &lt;iostream&gt;#include &lt;string&gt;#include &lt;regex&gt;int main() &#123;    std::string fnames[] = &#123;&quot;foo.txt&quot;, &quot;bar.txt&quot;, &quot;test&quot;, &quot;a0.txt&quot;, &quot;AAA.txt&quot;&#125;;    // 在 C++ 中 `\` 会被作为字符串内的转义符，为使 `\.` 作为正则表达式传递进去生效，需要对 `\` 进行二次转义，从而有 `\\.`    std::regex txt_regex(&quot;[a-z]+\\.txt&quot;);    for (const auto &amp;fname: fnames)        std::cout &lt;&lt; fname &lt;&lt; &quot;: &quot; &lt;&lt; std::regex_match(fname, txt_regex) &lt;&lt; std::endl;&#125;</code></pre><p>另一种常用的形式就是依次传入 <code>std::string</code>/<code>std::smatch</code>/<code>std::regex</code> 三个参数，其中 <code>std::smatch</code> 的本质其实是 <code>std::match_results</code>，在标准库中， <code>std::smatch</code> 被定义为了 <code>std::match_results&lt;std::string::const_iterator&gt;</code>，也就是一个子串迭代器类型的 <code>match_results</code>。使用 <code>std::smatch</code> 可以方便的对匹配的结果进行获取，例如：</p><pre><code>std::regex base_regex(&quot;([a-z]+)\\.txt&quot;);std::smatch base_match;for(const auto &amp;fname: fnames) &#123;    if (std::regex_match(fname, base_match, base_regex)) &#123;        // sub_match 的第一个元素匹配整个字符串        // sub_match 的第二个元素匹配了第一个括号表达式        if (base_match.size() == 2) &#123;            std::string base = base_match[1].str();            std::cout &lt;&lt; &quot;sub-match[0]: &quot; &lt;&lt; base_match[0].str() &lt;&lt; std::endl;            std::cout &lt;&lt; fname &lt;&lt; &quot; sub-match[1]: &quot; &lt;&lt; base &lt;&lt; std::endl;        &#125;    &#125;&#125;</code></pre><p>以上两个代码段的输出结果为：</p><pre><code>foo.txt: 1bar.txt: 1test: 0a0.txt: 0AAA.txt: 0sub-match[0]: foo.txtfoo.txt sub-match[1]: foosub-match[0]: bar.txtbar.txt sub-match[1]: bar</code></pre><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>本节简单介绍了正则表达式本身，然后根据使用正则表达式的主要需求，通过一个实际的例子介绍了正则表达式库的使用。</p><p>本节提到的内容足以让我们开发编写一个简单的 Web 框架中关于URL匹配的功能。</p><p>关于这方面的开发和细节，可以通过项目课：<a href="https://www.shiyanlou.com/courses/568">C++ 开发 Web 服务框架</a> 进行进一步学习。</p><p>本节代码：</p><pre><code>http://labfile.oss.aliyuncs.com/courses/605/6.zip</code></pre><h2 id="致谢"><a class="markdownIt-Anchor" href="#致谢"></a> 致谢</h2><blockquote><p><a href="https://www.shiyanlou.com/">实验楼</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++11/14中的新特性：对标准库的扩充 - 智能指针和引用计数</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/18864/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/18864/</url>
      
        <content type="html"><![CDATA[<p>尊重原创，转载自<a href="https://www.shiyanlou.com/">实验楼</a>，如需线上实操，请直接访问原教程网址：<a href="https://www.shiyanlou.com/courses/605">点击这里</a>。</p><p>本博文仅作为备份，侵删。</p><p><strong>“C++11/14中的新特性”系列汇总：</strong></p><ol><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/13475/">C++11/14中的新特性：语言可用性的强化</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/9365/">C++11/14中的新特性：语言运行期的强化</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/18864/">C++11/14中的新特性：对标准库的扩充 - 智能指针和引用计数</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/19053/">C++11/14中的新特性：对标准库的扩充 - 正则表达式</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/21758/">C++11/14中的新特性：对标准库的扩充 - 新增容器</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/40738/">C++11/14中的新特性：对标准库的扩充 - 语言级线程支持</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/24359/">C++11/14中的新特性：其他杂项</a></strong></li></ol><h2 id="一-raii-与引用计数"><a class="markdownIt-Anchor" href="#一-raii-与引用计数"></a> 一、RAII 与引用计数</h2><p>了解 <code>Objective-C</code>/<code>Swift</code> 的程序员应该知道引用计数的概念。引用计数这种计数是为了防止内存泄露而产生的。基本想法是对于动态分配的对象，进行引用计数，每当增加一次对同一个对象的引用，那么引用对象的引用计数就会增加一次，每删除一次引用，引用计数就会减一，当一个对象的引用计数减为零时，就自动删除指向的堆内存。</p><p>在传统 C++ 中，『记得』手动释放资源，总不是最佳实践。因为我们很有可能就忘记了去释放资源而导致泄露。所以通常的做法是对于一个对象而言，我们在构造函数的时候申请空间，而在析构函数（在离开作用域时调用）的时候释放空间，也就是我们常说的 RAII 资源获取即初始化技术。</p><p>凡事都有例外，我们总会有需要将对象在自由存储上分配的需求，在传统 C++ 里我们只好使用 <code>new</code> 和 <code>delete</code> 去『记得』对资源进行释放。而 C++11 引入了智能指针的概念，使用了引用计数的想法，让程序员不再需要关心手动释放内存。这些智能指针就包括 <code>std::shared_ptr</code>/<code>std::unique_ptr</code>/<code>std::weak_ptr</code>，使用它们需要包含头文件 <code>&lt;memory&gt;</code>。</p><blockquote><p>注意：引用计数不是垃圾回收，引用技术能够尽快收回不再被使用的对象，同时在回收的过程中也不会造成长时间的等待，更能够清晰明确的表明资源的生命周期。</p></blockquote><h2 id="二-stdshared_ptr"><a class="markdownIt-Anchor" href="#二-stdshared_ptr"></a> 二、std::shared_ptr</h2><p><code>std::shared_ptr</code> 是一种智能指针，它能够记录多少个 <code>shared_ptr</code> 共同指向一个对象，从而消除显示的调用 <code>delete</code>，当引用计数变为零的时候就会将对象自动删除。</p><p>但还不够，因为使用 <code>std::shared_ptr</code> 仍然需要使用 <code>new</code> 来调用，这使得代码出现了某种程度上的不对称。</p><p><code>std::make_shared</code> 就能够用来消除显示的使用 <code>new</code>，所以<code>std::make_shared</code> 会分配创建传入参数中的对象，并返回这个对象类型的<code>std::shared_ptr</code>指针。例如：</p><pre><code>#include &lt;iostream&gt;#include &lt;memory&gt;void foo(std::shared_ptr&lt;int&gt; i)&#123;    (*i)++;&#125;int main()&#123;    // auto pointer = new int(10); // 非法, 不允许直接赋值    // 构造了一个 std::shared_ptr    auto pointer = std::make_shared&lt;int&gt;(10);    foo(pointer);    std::cout &lt;&lt; *pointer &lt;&lt; std::endl; // 11    // 离开作用域前，shared_ptr 会被析构，从而释放内存    return 0;&#125;</code></pre><p><code>std::shared_ptr</code> 可以通过 <code>get()</code> 方法来获取原始指针，通过 <code>reset()</code> 来减少一个引用计数，并通过<code>get_count()</code>来查看一个对象的引用计数。例如：</p><pre><code>auto pointer = std::make_shared&lt;int&gt;(10);auto pointer2 = pointer;    // 引用计数+1auto pointer3 = pointer;    // 引用计数+1int *p = pointer.get();             // 这样不会增加引用计数std::cout &lt;&lt; &quot;pointer.use_count() = &quot; &lt;&lt; pointer.use_count() &lt;&lt; std::endl;      // 3std::cout &lt;&lt; &quot;pointer2.use_count() = &quot; &lt;&lt; pointer2.use_count() &lt;&lt; std::endl;    // 3std::cout &lt;&lt; &quot;pointer3.use_count() = &quot; &lt;&lt; pointer3.use_count() &lt;&lt; std::endl;    // 3pointer2.reset();std::cout &lt;&lt; &quot;reset pointer2:&quot; &lt;&lt; std::endl;std::cout &lt;&lt; &quot;pointer.use_count() = &quot; &lt;&lt; pointer.use_count() &lt;&lt; std::endl;      // 2std::cout &lt;&lt; &quot;pointer2.use_count() = &quot; &lt;&lt; pointer2.use_count() &lt;&lt; std::endl;    // 0, pointer2 已 resetstd::cout &lt;&lt; &quot;pointer3.use_count() = &quot; &lt;&lt; pointer3.use_count() &lt;&lt; std::endl;    // 2pointer3.reset();std::cout &lt;&lt; &quot;reset pointer3:&quot; &lt;&lt; std::endl;std::cout &lt;&lt; &quot;pointer.use_count() = &quot; &lt;&lt; pointer.use_count() &lt;&lt; std::endl;      // 1std::cout &lt;&lt; &quot;pointer2.use_count() = &quot; &lt;&lt; pointer2.use_count() &lt;&lt; std::endl;    // 0std::cout &lt;&lt; &quot;pointer3.use_count() = &quot; &lt;&lt; pointer3.use_count() &lt;&lt; std::endl; </code></pre><h2 id="三-stdunique_ptr"><a class="markdownIt-Anchor" href="#三-stdunique_ptr"></a> 三、std::unique_ptr</h2><p><code>std::unique_ptr</code> 是一种独占的智能指针，它禁止其他智能指针与其共享同一个对象，从而保证了代码的安全：</p><pre><code>std::unique_ptr&lt;int&gt; pointer = std::make_unique&lt;int&gt;(10);   // make_unique 从 C++14 引入std::unique_ptr&lt;int&gt; pointer2 = pointer;    // 非法</code></pre><blockquote><p>make_unique 并不复杂，C++11 没有提供 std::make_unique，可以自行实现：</p></blockquote><pre><code>template&lt;typename T, typename ...Args&gt;std::unique_ptr&lt;T&gt; make_unique( Args&amp;&amp; ...args ) &#123;    return std::unique_ptr&lt;T&gt;( new T( std::forward&lt;Args&gt;(args)... ) );&#125;</code></pre><blockquote><p>至于为什么没有提供，C++ 标准委员会主席 Herb Sutter 在他的<a href="https://herbsutter.com/gotw/_102/">博客</a>中提到原因是因为『被他们忘记了』。</p></blockquote><p>既然是独占，换句话说就是不可复制。但是，我们可以利用 <code>std::move</code> 将其转移给其他的 <code>unique_ptr</code>，例如：</p><pre><code>#include &lt;iostream&gt;#include &lt;memory&gt;struct Foo &#123;    Foo()      &#123; std::cout &lt;&lt; &quot;Foo::Foo&quot; &lt;&lt; std::endl;  &#125;    ~Foo()     &#123; std::cout &lt;&lt; &quot;Foo::~Foo&quot; &lt;&lt; std::endl; &#125;    void foo() &#123; std::cout &lt;&lt; &quot;Foo::foo&quot; &lt;&lt; std::endl;  &#125;&#125;;void f(const Foo &amp;) &#123;    std::cout &lt;&lt; &quot;f(const Foo&amp;)&quot; &lt;&lt; std::endl;&#125;int main() &#123;    std::unique_ptr&lt;Foo&gt; p1(std::make_unique&lt;Foo&gt;());    // p1 不空, 输出    if (p1) p1-&gt;foo();    &#123;        std::unique_ptr&lt;Foo&gt; p2(std::move(p1));        // p2 不空, 输出        f(*p2);        // p2 不空, 输出        if(p2) p2-&gt;foo();        // p1 为空, 无输出        if(p1) p1-&gt;foo();        p1 = std::move(p2);        // p2 为空, 无输出        if(p2) p2-&gt;foo();        std::cout &lt;&lt; &quot;p2 被销毁&quot; &lt;&lt; std::endl;    &#125;    // p1 不空, 输出    if (p1) p1-&gt;foo();    // Foo 的实例会在离开作用域时被销毁&#125;</code></pre><h2 id="四-stdweak_ptr"><a class="markdownIt-Anchor" href="#四-stdweak_ptr"></a> 四、std::weak_ptr</h2><p>如果你仔细思考 <code>std::shared_ptr</code> 就会发现依然存在着资源无法释放的问题。看下面这个例子：</p><pre><code>#include &lt;iostream&gt;#include &lt;memory&gt;class A;class B;class A &#123;public:    std::shared_ptr&lt;B&gt; pointer;    ~A() &#123;        std::cout &lt;&lt; &quot;A 被销毁&quot; &lt;&lt; std::endl;    &#125;&#125;;class B &#123;public:    std::shared_ptr&lt;A&gt; pointer;    ~B() &#123;        std::cout &lt;&lt; &quot;B 被销毁&quot; &lt;&lt; std::endl;    &#125;&#125;;int main() &#123;    std::shared_ptr&lt;A&gt; a = std::make_shared&lt;A&gt;();    std::shared_ptr&lt;B&gt; b = std::make_shared&lt;B&gt;();    a-&gt;pointer = b;    b-&gt;pointer = a;    return 0;&#125;</code></pre><p>运行结果是 A, B 都不会被销毁，这是因为 a,b 内部的 pointer 同时又引用了 <code>a,b</code>，这使得 <code>a,b</code>的引用计数均变为了 2，而离开作用域时，<code>a,b</code> 智能指针被析构，却智能造成这块区域的引用计数减一，这样就导致了 <code>a,b</code> 对象指向的内存区域引用计数不为零，而外部已经没有办法找到这块区域了，也就造成了内存泄露，如图所示：</p><p><img src="https://www.guopengzhen.com/content/images/2019/07/image.png" alt></p><p>解决这个问题的办法就是使用弱引用指针 <code>std::weak_ptr</code>，<code>std::weak_ptr</code>是一种弱引用（相比较而言 <code>std::shared_ptr</code> 就是一种强引用）。弱引用不会引起引用计数增加，当换用弱引用时候，最终的释放流程如下图所示：</p><p><img src="https://www.guopengzhen.com/content/images/2019/07/image-1.png" alt></p><p>在上图中，最后一步只剩下 B，而 B 并没有任何智能指针引用它，因此这块内存资源也会被释放。</p><p><code>std::weak_ptr</code> 没有 <code>*</code> 运算符和 <code>-&gt;</code> 运算符，所以不能够对资源进行操作，它的唯一作用就是用于检查 <code>std::shared_ptr</code> 是否存在，<code>expired()</code> 方法在资源未被释放时，会返回 <code>true</code>，否则返回 <code>false</code>。</p><p>正确的代码如下：</p><pre><code>#include &lt;iostream&gt;#include &lt;memory&gt;class A;class B;class A &#123;public:    // A 或 B 中至少有一个使用 weak_ptr    std::weak_ptr&lt;B&gt; pointer;    ~A() &#123;        std::cout &lt;&lt; &quot;A 被销毁&quot; &lt;&lt; std::endl;    &#125;&#125;;class B &#123;public:    std::shared_ptr&lt;A&gt; pointer;    ~B() &#123;        std::cout &lt;&lt; &quot;B 被销毁&quot; &lt;&lt; std::endl;    &#125;&#125;;int main() &#123;    std::shared_ptr&lt;A&gt; a = std::make_shared&lt;A&gt;();    std::shared_ptr&lt;B&gt; b = std::make_shared&lt;B&gt;();    a-&gt;pointer = b;    b-&gt;pointer = a;    return 0;&#125;</code></pre><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>智能指针这种技术并不新奇，在很多语言中都是一种常见的技术，C++1x 将这项技术引进，在一定程度上消除了 <code>new</code>/<code>delete</code> 的滥用，是一种更加成熟的编程范式。</p><p>本节代码：</p><pre><code>http://labfile.oss.aliyuncs.com/courses/605/5.zip</code></pre><h2 id="致谢"><a class="markdownIt-Anchor" href="#致谢"></a> 致谢</h2><blockquote><p><a href="https://www.shiyanlou.com/">实验楼</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++11/14中的新特性：语言运行期的强化</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/9365/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/9365/</url>
      
        <content type="html"><![CDATA[<p>尊重原创，转载自<a href="https://www.shiyanlou.com/">实验楼</a>，如需线上实操，请直接访问原教程网址：<a href="https://www.shiyanlou.com/courses/605">点击这里</a>。</p><p>本博文仅作为备份，侵删。</p><p><strong>“C++11/14中的新特性”系列汇总：</strong></p><ol><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/13475/">C++11/14中的新特性：语言可用性的强化</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/9365/">C++11/14中的新特性：语言运行期的强化</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/18864/">C++11/14中的新特性：对标准库的扩充 - 智能指针和引用计数</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/19053/">C++11/14中的新特性：对标准库的扩充 - 正则表达式</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/21758/">C++11/14中的新特性：对标准库的扩充 - 新增容器</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/40738/">C++11/14中的新特性：对标准库的扩充 - 语言级线程支持</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/24359/">C++11/14中的新特性：其他杂项</a></strong></li></ol><h2 id="一-lambda-表达式"><a class="markdownIt-Anchor" href="#一-lambda-表达式"></a> 一、Lambda 表达式</h2><p>Lambda 表达式是 C++11 中最重要的新特性之一，而 Lambda 表达式，实际上就是提供了一个类似匿名函数的特性，而匿名函数则是在需要一个函数，但是又不想费力去命名一个函数的情况下去使用的。这样的场景其实有很多很多，所以匿名函数几乎是现代编程语言的标配。</p><h3 id="lambda-表达式基础"><a class="markdownIt-Anchor" href="#lambda-表达式基础"></a> Lambda 表达式基础</h3><p>Lambda 表达式的基本语法如下：</p><pre><code>[捕获列表](参数列表) mutable(可选) 异常属性 -&gt; 返回类型 &#123;    // 函数体&#125;</code></pre><p>上面的语法规则除了 <code>[捕获列表]</code> 内的东西外，其他部分都很好理解，只是一般函数的函数名被略去，返回值使用了一个 <code>-&gt;</code> 的形式进行（我们在上一节前面的尾返回类型已经提到过这种写法了）。</p><p>所谓捕获列表，其实可以理解为参数的一种类型，lambda 表达式内部函数体在默认情况下是不能够使用函数体外部的变量的，这时候捕获列表可以起到传递外部数据的作用。根据传递的行为，捕获列表也分为以下几种：</p><h3 id="1-值捕获"><a class="markdownIt-Anchor" href="#1-值捕获"></a> 1. 值捕获</h3><p>与参数传值类似，值捕获的前期是变量可以拷贝，不同之处则在于，被捕获的变量在 lambda 表达式被创建时拷贝，而非调用时才拷贝：</p><pre><code>void learn_lambda_func_1() &#123;    int value_1 = 1;    auto copy_value_1 = [value_1] &#123;        return value_1;    &#125;;    value_1 = 100;    auto stored_value_1 = copy_value_1();    // 这时, stored_value_1 == 1, 而 value_1 == 100.    // 因为 copy_value_1 在创建时就保存了一份 value_1 的拷贝    cout &lt;&lt; &quot;value_1 = &quot; &lt;&lt; value_1 &lt;&lt; endl;    cout &lt;&lt; &quot;stored_value_1 = &quot; &lt;&lt; stored_value_1 &lt;&lt; endl;&#125;</code></pre><h3 id="2-引用捕获"><a class="markdownIt-Anchor" href="#2-引用捕获"></a> 2. 引用捕获</h3><p>与引用传参类似，引用捕获保存的是引用，值会发生变化。</p><pre><code>void learn_lambda_func_2() &#123;    int value_2 = 1;    auto copy_value_2 = [&amp;value_2] &#123;        return value_2;    &#125;;    value_2 = 100;    auto stored_value_2 = copy_value_2();    // 这时, stored_value_2 == 100, value_1 == 100.    // 因为 copy_value_2 保存的是引用    cout &lt;&lt; &quot;value_2 = &quot; &lt;&lt; value_2 &lt;&lt; endl;    cout &lt;&lt; &quot;stored_value_2 = &quot; &lt;&lt; stored_value_2 &lt;&lt; endl;&#125;</code></pre><h3 id="3-隐式捕获"><a class="markdownIt-Anchor" href="#3-隐式捕获"></a> 3. 隐式捕获</h3><p>手动书写捕获列表有时候是非常复杂的，这种机械性的工作可以交给编译器来处理，这时候可以在捕获列表中写一个 <code>&amp;</code> 或 <code>=</code> 向编译器声明采用 引用捕获或者值捕获.</p><p>总结一下，捕获提供了lambda 表达式对外部值进行使用的功能，捕获列表的最常用的四种形式可以是：</p><ul><li>[] 空捕获列表</li><li>[name1, name2, …] 捕获一系列变量</li><li>[&amp;] 引用捕获, 让编译器自行推导捕获列表</li><li>[=] 值捕获, 让编译器执行推导应用列表</li></ul><h3 id="4-表达式捕获c14"><a class="markdownIt-Anchor" href="#4-表达式捕获c14"></a> 4. 表达式捕获(C++14)</h3><blockquote><p>这部分内容需要了解后面马上要提到的右值引用以及智能指针</p></blockquote><p>上面提到的值捕获、引用捕获都是已经在外层作用域声明的变量，因此这些捕获方式捕获的均为左值，而不能捕获右值。</p><p>C++14 给与了我们方便，允许捕获的成员用任意的表达式进行初始化，这就允许了右值的捕获，被声明的捕获变量类型会根据表达式进行判断，判断方式与使用 <code>auto</code> 本质上是相同的：</p><pre><code>#include &lt;iostream&gt;#include &lt;utility&gt;void learn_lambda_func_3()&#123;    auto important = std::make_unique&lt;int&gt;(1);    auto add = [v1 = 1, v2 = std::move(important)](int x, int y) -&gt; int &#123;        return x+y+v1+(*v2);    &#125;;    std::cout &lt;&lt; &quot;add(3, 4) = &quot; &lt;&lt; add(3, 4) &lt;&lt; std::endl;&#125;</code></pre><p>在上面的代码中，<code>important</code> 是一个独占指针，是不能够被捕获到的，这时候我们需要将其转移为右值，在表达式中初始化。</p><h3 id="泛型-lambda-c14"><a class="markdownIt-Anchor" href="#泛型-lambda-c14"></a> 泛型 Lambda (C++14)</h3><p>上一节中我们提到了 <code>auto</code> 关键字不能够用在参数表里，这是因为这样的写法会与模板的功能产生冲突。但是 Lambda 表达式并不是普通函数，所以 Lambda 表达式并不能够模板化。这就为我们造成了一定程度上的麻烦：参数表不能够泛化，必须明确参数表类型。</p><p>幸运的是，这种麻烦只存在于 C<ins>11 中，从 C</ins>14 开始，Lambda 函数的形式参数可以使用 <code>auto</code> 关键字来产生意义上的泛型：</p><pre><code>void learn_lambda_func_4()&#123;    auto generic = [](auto x, auto y) &#123;        return x+y;    &#125;;    std::cout &lt;&lt; &quot;generic(1,2) = &quot; &lt;&lt; generic(1, 2) &lt;&lt; std::endl;    std::cout &lt;&lt; &quot;generic(1.1,2.2) = &quot; &lt;&lt; generic(1.1, 2.2) &lt;&lt; std::endl;&#125;</code></pre><h2 id="二-函数对象包装器"><a class="markdownIt-Anchor" href="#二-函数对象包装器"></a> 二、函数对象包装器</h2><p>这部分内容虽然属于标准库的一部分，但是从本质上来看，它却增强了 C++ 语言运行时的能力，这部分内容也相当重要，所以放到这里来进行介绍。</p><h3 id="stdfunction"><a class="markdownIt-Anchor" href="#stdfunction"></a> std::function</h3><p>Lambda 表达式的本质是一个函数对象，当 Lambda 表达式的捕获列表为空时，Lambda 表达式还能够作为一个函数指针进行传递，例如：</p><pre><code>#include &lt;iostream&gt;using foo = void(int);  // 定义函数指针, using 的使用见上一节中的别名语法void functional(foo f) &#123;    f(1);&#125;int main() &#123;    auto f = [](int value) &#123;        std::cout &lt;&lt; value &lt;&lt; std::endl;    &#125;;    functional(f);  // 函数指针调用    f(1);           // lambda 表达式调用    return 0;&#125;</code></pre><p>上面的代码给出了两种不同的调用形式，一种是将 Lambda 作为函数指针传递进行调用，而另一种则是直接调用 Lambda 表达式，在 C++11 中，统一了这些概念，将能够被调用的对象的类型，统一称之为可调用类型。而这种类型，便是通过 <code>std::function</code>引入的。</p><p>C<ins>11 <code>std::function</code> 是一种通用、多态的函数封装，它的实例可以对任何可以调用的目标实体进行存储、复制和调用操作，它也是对 C</ins>中现有的可调用实体的一种类型安全的包裹（相对来说，函数指针的调用不是类型安全的），换句话说，就是函数的容器。当我们有了函数的容器之后便能够更加方便的将函数、函数指针作为对象进行处理。例如：</p><pre><code>#include &lt;functional&gt;#include &lt;iostream&gt;int foo(int para) &#123;    return para;&#125;int main() &#123;    // std::function 包装了一个返回值为 int, 参数为 int 的函数    std::function&lt;int(int)&gt; func = foo;    int important = 10;    std::function&lt;int(int)&gt; func2 = [&amp;](int value) -&gt; int &#123;        return 1+value+important;    &#125;;    std::cout &lt;&lt; func(10) &lt;&lt; std::endl;    std::cout &lt;&lt; func2(10) &lt;&lt; std::endl;&#125;</code></pre><h3 id="stdbindstdplaceholder"><a class="markdownIt-Anchor" href="#stdbindstdplaceholder"></a> std::bind/std::placeholder</h3><p>而 <code>std::bind</code> 则是用来绑定函数调用的参数的，它解决的需求是我们有时候可能并不一定能够一次性获得调用某个函数的全部参数，通过这个函数，我们可以将部分调用参数提前绑定到函数身上成为一个新的对象，然后在参数齐全后，完成调用。例如：</p><pre><code>int foo(int a, int b, int c) &#123;    ;&#125;int main() &#123;    // 将参数1,2绑定到函数 foo 上，但是使用 std::placeholders::_1 来对第一个参数进行占位    auto bindFoo = std::bind(foo, std::placeholders::_1, 1,2);    // 这时调用 bindFoo 时，只需要提供第一个参数即可    bindFoo(1);&#125;</code></pre><blockquote><p>**提示：**注意 <code>auto</code> 关键字的妙用。有时候我们可能不太熟悉一个函数的返回值类型，但是我们却可以通过 <code>auto</code> 的使用来规避这一问题的出现。</p></blockquote><h2 id="三-右值引用"><a class="markdownIt-Anchor" href="#三-右值引用"></a> 三、右值引用</h2><p>右值引用是 C<ins>11 引入的与 Lambda 表达式齐名的重要特性之一。它的引入解决了 C</ins> 中大量的历史遗留问题，消除了诸如 <code>std::vector</code>、<code>std::string</code> 之类的额外开销，也才使得函数对象容器 <code>std::function</code> 成为了可能。</p><h3 id="左值-右值的纯右值-将亡值-右值"><a class="markdownIt-Anchor" href="#左值-右值的纯右值-将亡值-右值"></a> 左值、右值的纯右值、将亡值、右值</h3><p>要弄明白右值引用到底是怎么一回事，必须要对左值和右值做一个明确的理解。</p><p><strong>左值(lvalue, left value)</strong>，顾名思义就是赋值符号左边的值。准确来说，左值是表达式（不一定是赋值表达式）后依然存在的持久对象。</p><p><strong>右值(rvalue, right value)</strong>，右边的值，是指表达式结束后就不再存在的临时对象。</p><p>而 C++11 中为了引入强大的右值引用，将右值的概念进行了进一步的划分，分为：纯右值、将亡值。</p><p><strong>纯右值(prvalue, pure rvalue)</strong>，纯粹的右值，要么是纯粹的字面量，例如 <code>10</code>, <code>true</code>；要么是求值结果相当于字面量或匿名临时对象，例如 <code>1+2</code>。非引用返回的临时变量、运算表达式产生的临时变量、原始字面量、Lambda 表达式都属于纯右值。</p><p><strong>将亡值(xvalue, expiring value)</strong>，是 C<ins>11 为了引入右值引用而提出的概念（因此在传统 C</ins>中，纯右值和右值是统一个概念），也就是即将被销毁、却能够被移动的值。</p><p>将亡值可能稍有些难以理解，我们来看这样的代码：</p><pre><code>std::vector&lt;int&gt; foo() &#123;    std::vector&lt;int&gt; temp = &#123;1, 2, 3, 4&#125;;    return temp;&#125;std::vector&lt;int&gt; v = foo();</code></pre><p>在这样的代码中，函数 <code>foo</code> 的返回值 <code>temp</code> 在内部创建然后被赋值给 <code>v</code>，然而 <code>v</code> 获得这个对象时，会将整个 temp 拷贝一份，然后把 <code>temp</code> 销毁，如果这个 <code>temp</code> 非常大，这将造成大量额外的开销（这也就是传统 C++ 一直被诟病的问题）。在最后一行中，<code>v</code> 是左值、<code>foo()</code> 返回的值就是右值（也是纯右值）。</p><p>但是，<code>v</code> 可以被别的变量捕获到，而 <code>foo()</code> 产生的那个返回值作为一个临时值，一旦被 <code>v</code> 复制后，将立即被销毁，无法获取、也不能修改。</p><p>将亡值就定义了这样一种行为：临时的值能够被识别、同时又能够被移动。</p><h3 id="右值引用和左值引用"><a class="markdownIt-Anchor" href="#右值引用和左值引用"></a> 右值引用和左值引用</h3><p>需要拿到一个将亡值，就需要用到右值引用的申明：<code>T &amp;&amp;</code>，其中 <code>T</code> 是类型。右值引用的声明让这个临时值的生命周期得以延长、只要变量还活着，那么将亡值将继续存活。</p><p>C++11 提供了 <code>std::move</code> 这个方法将左值参数无条件的转换为右值，有了它我们就能够方便的获得一个右值临时对象，例如：</p><pre><code>#include &lt;iostream&gt;#include &lt;string&gt;void reference(std::string&amp; str) &#123;    std::cout &lt;&lt; &quot;左值&quot; &lt;&lt; std::endl;&#125;void reference(std::string&amp;&amp; str) &#123;    std::cout &lt;&lt; &quot;右值&quot; &lt;&lt; std::endl;&#125;int main()&#123;    std::string  lv1 = &quot;string,&quot;;       // lv1 是一个左值    // std::string&amp;&amp; r1 = s1;           // 非法, s1 在全局上下文中没有声明    std::string&amp;&amp; rv1 = std::move(lv1); // 合法, std::move 可以将左值转移为右值    std::cout &lt;&lt; &quot;rv1 = &quot; &lt;&lt; rv1 &lt;&lt; std::endl;      // string,    const std::string&amp; lv2 = lv1 + lv1; // 合法, 常量左值引用能够延长临时变量的生命周期    // lv2 += &quot;Test&quot;;                   // 非法, 引用的右值无法被修改    std::cout &lt;&lt; &quot;lv2 = &quot;&lt;&lt;lv2 &lt;&lt; std::endl;      // string,string    std::string&amp;&amp; rv2 = lv1 + lv2;      // 合法, 右值引用延长临时对象的生命周期    rv2 += &quot;string&quot;;                    // 合法, 非常量引用能够修改临时变量    std::cout &lt;&lt; &quot;rv2 = &quot; &lt;&lt; rv2 &lt;&lt; std::endl;      // string,string,string,    reference(rv2);                     // 输出左值&#125;</code></pre><p><strong>注意</strong>：<code>rv2</code> 虽然引用了一个右值，但由于它是一个引用，所以 <code>rv2</code> 依然是一个左值。</p><h3 id="移动语义"><a class="markdownIt-Anchor" href="#移动语义"></a> 移动语义</h3><p>传统 C++ 通过拷贝构造函数和赋值操作符为类对象设计了拷贝/复制的概念，但为了实现对资源的移动操作，调用者必须使用先复制、再析构的方式，否则就需要自己实现移动对象的接口。试想，搬家的时候是把家里的东西直接搬到新家去，而不是将所有东西复制一份（重买）再放到新家、再把原来的东西全部销毁，这是非常反人类的一件事情。</p><p>传统的 C++ 没有区分『移动』和『拷贝』的概念，造成了大量的数据移动，浪费时间和空间。右值引用的出现恰好就解决了这两个概念的混淆问题，例如：</p><pre><code>#include &lt;iostream&gt;class A &#123;public:    int *pointer;    A() :pointer(new int(1)) &#123;         std::cout &lt;&lt; &quot;构造&quot; &lt;&lt; pointer &lt;&lt; std::endl;     &#125;    // 无意义的对象拷贝    A(A&amp; a) :pointer(new int(*a.pointer)) &#123;         std::cout &lt;&lt; &quot;拷贝&quot; &lt;&lt; pointer &lt;&lt; std::endl;     &#125;        A(A&amp;&amp; a) :pointer(a.pointer) &#123;         a.pointer = nullptr;         std::cout &lt;&lt; &quot;移动&quot; &lt;&lt; pointer &lt;&lt; std::endl;     &#125;    ~A() &#123;         std::cout &lt;&lt; &quot;析构&quot; &lt;&lt; pointer &lt;&lt; std::endl;         delete pointer;     &#125;&#125;;// 防止编译器优化A return_rvalue(bool test) &#123;    A a,b;    if(test) return a;    else return b;&#125;int main() &#123;    A obj = return_rvalue(false);    std::cout &lt;&lt; &quot;obj:&quot; &lt;&lt; std::endl;    std::cout &lt;&lt; obj.pointer &lt;&lt; std::endl;    std::cout &lt;&lt; *obj.pointer &lt;&lt; std::endl;    return 0;&#125;</code></pre><p>在上面的代码中：</p><ol><li>首先会在 <code>return_rvalue</code> 内部构造两个 <code>A</code> 对象，于是获得两个构造函数的输出；</li><li>函数返回后，产生一个将亡值，被 <code>A</code> 的移动构造（<code>A(A&amp;&amp;)</code>）引用，从而延长生命周期，并将这个右值中的指针拿到，保存到了 <code>obj</code> 中，而将亡值的指针被设置为 <code>nullptr</code>，防止了这块内存区域被销毁。</li></ol><p>从而避免了无意义的拷贝构造，加强了性能。再来看看涉及标准库的例子：</p><pre><code>#include &lt;iostream&gt; // std::cout#include &lt;utility&gt;  // std::move#include &lt;vector&gt;   // std::vector#include &lt;string&gt;   // std::stringint main() &#123;    std::string str = &quot;Hello world.&quot;;    std::vector&lt;std::string&gt; v;    // 将使用 push_back(const T&amp;), 即产生拷贝行为    v.push_back(str);    // 将输出 &quot;str: Hello world.&quot;    std::cout &lt;&lt; &quot;str: &quot; &lt;&lt; str &lt;&lt; std::endl;    // 将使用 push_back(const T&amp;&amp;), 不会出现拷贝行为    // 而整个字符串会被移动到 vector 中，所以有时候 std::move 会用来减少拷贝出现的开销    // 这步操作后, str 中的值会变为空    v.push_back(std::move(str));    // 将输出 &quot;str: &quot;    std::cout &lt;&lt; &quot;str: &quot; &lt;&lt; str &lt;&lt; std::endl;    return 0;&#125;</code></pre><h3 id="完美转发"><a class="markdownIt-Anchor" href="#完美转发"></a> 完美转发</h3><p>前面我们提到了，一个声明的右值引用其实是一个左值。这就为我们进行参数转发（传递）造成了问题：</p><pre><code>void reference(int&amp; v) &#123;    std::cout &lt;&lt; &quot;左值&quot; &lt;&lt; std::endl;&#125;void reference(int&amp;&amp; v) &#123;    std::cout &lt;&lt; &quot;右值&quot; &lt;&lt; std::endl;&#125;template &lt;typename T&gt;void pass(T&amp;&amp; v) &#123;    std::cout &lt;&lt; &quot;普通传参:&quot;;    reference(v);   // 始终调用 reference(int&amp; )&#125;int main() &#123;    std::cout &lt;&lt; &quot;传递右值:&quot; &lt;&lt; std::endl;    pass(1);        // 1是右值, 但输出左值    std::cout &lt;&lt; &quot;传递左值:&quot; &lt;&lt; std::endl;        int v = 1;    pass(v);        // v是左引用, 输出左值    return 0;&#125;</code></pre><p>对于 <code>pass(1)</code> 来说，虽然传递的是右值，但由于 <code>v</code> 是一个引用，所以同时也是左值。因此 <code>reference(v)</code> 会调用 <code>reference(int&amp;)</code>，输出『左值』。而对于<code>pass(v)</code>而言，<code>v</code>是一个左值，为什么会成功传递给 <code>pass(T&amp;&amp;)</code> 呢？</p><p>这是基于<strong>引用坍缩规则</strong>的：在传统 C++ 中，我们不能够对一个引用类型继续进行引用，但 C++ 由于右值引用的出现而放宽了这一做法，从而产生了引用坍缩规则，允许我们对引用进行引用，既能左引用，又能右引用。但是却遵循如下规则：</p><p>函数形参类型</p><p>实参参数类型</p><p>推导后函数形参类型</p><p>T&amp;</p><p>左引用</p><p>T&amp;</p><p>T&amp;</p><p>右引用</p><p>T&amp;</p><p>T&amp;&amp;</p><p>左引用</p><p>T&amp;</p><p>T&amp;&amp;</p><p>右引用</p><p>T&amp;&amp;</p><p>因此，模板函数中使用 <code>T&amp;&amp;</code> 不一定能进行右值引用，当传入左值时，此函数的引用将被推导为左值。更准确的讲，<strong>无论模板参数是什么类型的引用，当且仅当实参类型为右引用时，模板参数才能被推导为右引用类型</strong>。这才使得 <code>v</code> 作为左值的成功传递。</p><p>完美转发就是基于上述规律产生的。所谓完美转发，就是为了让我们在传递参数的时候，保持原来的参数类型（左引用保持左引用，右引用保持右引用）。为了解决这个问题，我们应该使用 <code>std::forward</code> 来进行参数的转发（传递）：</p><pre><code>#include &lt;iostream&gt;#include &lt;utility&gt;void reference(int&amp; v) &#123;    std::cout &lt;&lt; &quot;左值引用&quot; &lt;&lt; std::endl;&#125;void reference(int&amp;&amp; v) &#123;    std::cout &lt;&lt; &quot;右值引用&quot; &lt;&lt; std::endl;&#125;template &lt;typename T&gt;void pass(T&amp;&amp; v) &#123;    std::cout &lt;&lt; &quot;普通传参:&quot;;    reference(v);    std::cout &lt;&lt; &quot;std::move 传参:&quot;;    reference(std::move(v));    std::cout &lt;&lt; &quot;std::forward 传参:&quot;;    reference(std::forward&lt;T&gt;(v));&#125;int main() &#123;    std::cout &lt;&lt; &quot;传递右值:&quot; &lt;&lt; std::endl;    pass(1);    std::cout &lt;&lt; &quot;传递左值:&quot; &lt;&lt; std::endl;    int v = 1;    pass(v);    return 0;&#125;</code></pre><p>输出结果为：</p><pre><code>传递右值:普通传参:左值引用std::move 传参:右值引用std::forward 传参:右值引用传递左值:普通传参:左值引用std::move 传参:右值引用std::forward 传参:左值引用</code></pre><p>无论传递参数为左值还是右值，普通传参都会将参数作为左值进行转发，所以 <code>std::move</code> 总会接受到一个左值，从而转发调用了<code>reference(int&amp;&amp;)</code> 输出右值引用。</p><p>唯独 <code>std::forward</code> 即没有造成任何多余的拷贝，同时<strong>完美转发</strong>(传递)了函数的实参给了内部调用的其他函数。</p><blockquote><p><code>std::forward</code> 和 <code>std::move</code> 一样，没有做任何事情，<code>std::move</code> 单纯的将左值转化为右值，<code>std::forward</code> 也只是单纯的将参数做了一个类型的转换，从是实现来看，<code>std::forward&lt;T&gt;(v)</code> 和 <code>static_cast&lt;T&amp;&amp;&gt;(v)</code> 是完全一样的。</p></blockquote><h2 id="四-总结"><a class="markdownIt-Anchor" href="#四-总结"></a> 四、总结</h2><p>本节介绍了 C++11/14 中对语言可用性的增强，这些特性都非常重要且有用，所有特性都是值得掌握的：</p><ol><li>Lambda 表达式</li><li>函数对象容器 std::function</li><li>右值引用</li></ol><p>本节代码：</p><pre><code>http://labfile.oss.aliyuncs.com/courses/605/3.zip</code></pre><p>其中包含有一个 Makefile, 使用 Make all 或 Make 会将所有的 cpp 文件编译成可执行文件，使用 Make + 编号（3.1或3.2依此类推）会将 cpp 文件编译成对应的可执行文件, Make clean 清除生成的文件。 比如，下面的指令将会把 3.1.cpp 编译成对应的可执行文件</p><pre><code>$ Make 3.1</code></pre><h2 id="致谢"><a class="markdownIt-Anchor" href="#致谢"></a> 致谢</h2><blockquote><p><a href="https://www.shiyanlou.com/">实验楼</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++11/14中的新特性：语言可用性的强化</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/13475/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/13475/</url>
      
        <content type="html"><![CDATA[<p>尊重原创，转载自<a href="https://www.shiyanlou.com/">实验楼</a>，如需线上实操，请直接访问原教程网址：<a href="https://www.shiyanlou.com/courses/605">点击这里</a>。</p><p>本博文仅作为备份，侵删。</p><p><strong>“C++11/14中的新特性”系列汇总：</strong></p><ol><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/13475/">C++11/14中的新特性：语言可用性的强化</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/9365/">C++11/14中的新特性：语言运行期的强化</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/18864/">C++11/14中的新特性：对标准库的扩充 - 智能指针和引用计数</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/19053/">C++11/14中的新特性：对标准库的扩充 - 正则表达式</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/21758/">C++11/14中的新特性：对标准库的扩充 - 新增容器</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/40738/">C++11/14中的新特性：对标准库的扩充 - 语言级线程支持</a></strong></li><li><strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/24359/">C++11/14中的新特性：其他杂项</a></strong></li></ol><h2 id="一-nullptr-与-constexpr"><a class="markdownIt-Anchor" href="#一-nullptr-与-constexpr"></a> 一、nullptr 与 constexpr</h2><h3 id="nullptr"><a class="markdownIt-Anchor" href="#nullptr"></a> nullptr</h3><p><code>nullptr</code> 出现的目的是为了替代 <code>NULL</code>。在某种意义上来说，传统 C++ 会把 <code>NULL</code>、<code>0</code> 视为同一种东西，这取决于编译器如何定义 NULL，有些编译器会将 NULL 定义为 <code>((void*)0)</code>，有些则会直接将其定义为 <code>0</code>。</p><p>C++ 不允许直接将 <code>void *</code> 隐式转换到其他类型，但如果 <code>NULL</code> 被定义为 <code>((void*)0)</code>，那么当编译</p><pre><code>char *ch = NULL;</code></pre><p>时，<code>NULL</code> 只好被定义为 <code>0</code>。而这依然会产生问题，将导致了 <code>C++</code> 中重载特性会发生混乱，考虑：</p><pre><code>void foo(char *);void foo(int);</code></pre><p>对于这两个函数来说，如果 <code>NULL</code> 又被定义为了 <code>0</code> 那么 <code>foo(NULL);</code> 这个语句将会去调用 <code>foo(int)</code>，从而导致代码违反直观。</p><p>为了解决这个问题，C++11 引入了 <code>nullptr</code> 关键字，专门用来区分空指针、0。<code>nullptr</code> 的类型为 <code>nullptr_t</code>，能够隐式的转换为任何指针或成员指针的类型，也能和他们进行相等或者不等的比较。</p><p>你可以尝试使用 g++ 两个编译器同时编译下面的代码：</p><pre><code>#include &lt;stdio.h&gt;#include &lt;iostream&gt;using namespace std;void foo(char *);void foo(int);int main() &#123;  if(NULL == (void *)0 ) printf(&quot;NULL == 0 \n&quot;);  else  &#123;    printf(&quot;NULL != 0 \n&quot;);  &#125;  foo(0);  //foo(NULL); 编译将报错  foo(nullptr);  return 0;&#125;void foo(char *ch)&#123;  printf(&quot;call foo(char*) \n&quot;);&#125;void foo(int i)&#123;  printf(&quot;call foo(int) \n&quot;);&#125;</code></pre><p>将输出：</p><pre><code>patten@patten-hp:~/workspace/others/cpp$ g++ patten.cpp -std=c++11patten@patten-hp:~/workspace/others/cpp$ ./a.out NULL == 0 call foo(int) call foo(char*) patten@patten-hp:~/workspace/others/cpp$</code></pre><p>所以，当需要使用 <code>NULL</code> 时候，请养成直接使用 <code>nullptr</code>的习惯。</p><h3 id="constexpr"><a class="markdownIt-Anchor" href="#constexpr"></a> constexpr</h3><p>C++ 本身已经具备了常数表达式的概念，比如 1+2, 3*4 这种表达式总是会产生相同的结果并且没有任何副作用。如果编译器能够在编译时就把这些表达式直接优化并植入到程序运行时，将能增加程序的性能。一个非常显著的例子就是在数组的定义阶段：</p><pre><code>#define LEN 10int len_foo() &#123;    return 5;&#125;int main() &#123;    char arr_1[10];    char arr_2[LEN];    int len = 5;    char arr_3[len+5];          // 非法    const int len_2 = 10;    char arr_4[len_2+5];        // 合法    char arr_5[len_foo()+5];  // 非法    return 0;&#125;</code></pre><p>在 C++11 之前，可以在常量表达式中使用的变量必须被声明为 <code>const</code>，在上面代码中，<code>len_2</code> 被定义成了常量，因此 <code>len_2+5</code> 是一个常量表达式，所以能够合法的分配一个数组；</p><p>而对于 <code>arr_5</code> 来说，C++98 之前的编译器无法得知 <code>len_foo()</code> 在运行期实际上是返回一个常数，这也就导致了非法的产生。</p><p>C++11 提供了 <code>constexpr</code> 让用户显式的声明函数或对象构造函数在编译器会成为常数，这个关键字明确的告诉编译器应该去验证 <code>len_foo</code> 在编译器就应该是一个常数。</p><p>此外，<code>constexpr</code> 的函数可以使用递归：</p><pre><code>constexpr int fibonacci(const int n) &#123;    return n == 1 || n == 2 ? 1 : fibonacci(n-1)+fibonacci(n-2);&#125;</code></pre><p>从 C<ins>14 开始，constexptr 函数可以在内部使用局部变量、循环和分支等简单语句，例如下面的代码在 C</ins>11 的标准下是不能够通过编译的：</p><pre><code>constexpr int fibonacci(const int n) &#123;    if(n == 1) return 1;    if(n == 2) return 1;    return fibonacci(n-1)+fibonacci(n-2);&#125;</code></pre><h2 id="二-类型推导"><a class="markdownIt-Anchor" href="#二-类型推导"></a> 二、类型推导</h2><p>在传统 C 和 C++中，参数的类型都必须明确定义，这其实对我们快速进行编码没有任何帮助，尤其是当我们面对一大堆复杂的模板类型时，必须明确的指出变量的类型才能进行后续的编码，这不仅拖慢我们的开发效率，也让代码变得又臭又长。</p><p>C<ins>11 引入了 <code>auto</code> 和 <code>decltype</code> 这两个关键字实现了类型推导，让编译器来操心变量的类型。这使得 C</ins> 也具有了和其他现代编程语言一样，某种意义上提供了无需操心变量类型的使用习惯。</p><h3 id="auto"><a class="markdownIt-Anchor" href="#auto"></a> auto</h3><p><code>auto</code> 在很早以前就已经进入了 C++，但是他始终作为一个存储类型的指示符存在，与 <code>register</code> 并存。在传统 C++ 中，如果一个变量没有声明为 <code>register</code> 变量，将自动被视为一个 <code>auto</code> 变量。而随着 <code>register</code> 被弃用，对 <code>auto</code> 的语义变更也就非常自然了。</p><p>使用 <code>auto</code> 进行类型推导的一个最为常见而且显著的例子就是迭代器。在以前我们需要这样来书写一个迭代器：</p><pre><code>for(vector&lt;int&gt;::const_iterator itr = vec.cbegin(); itr != vec.cend(); ++itr)</code></pre><p>而有了 <code>auto</code> 之后可以：</p><pre><code>// 由于 cbegin() 将返回 vector&lt;int&gt;::const_iterator // 所以 itr 也应该是 vector&lt;int&gt;::const_iterator 类型for(auto itr = vec.cbegin(); itr != vec.cend(); ++itr);</code></pre><p>一些其他的常见用法：</p><pre><code>auto i = 5;             // i 被推导为 intauto arr = new auto(10) // arr 被推导为 int *</code></pre><p><strong>注意</strong>：<code>auto</code> 不能用于函数传参，因此下面的做法是无法通过编译的（考虑重载的问题，我们应该使用模板）：</p><pre><code>int add(auto x, auto y);</code></pre><p>此外，<code>auto</code> 还不能用于推导数组类型：</p><pre><code>#include &lt;iostream&gt;int main() &#123; auto i = 5; int arr[10] = &#123;0&#125;; auto auto_arr = arr; auto auto_arr2[10] = arr; return 0;&#125;</code></pre><h3 id="decltype"><a class="markdownIt-Anchor" href="#decltype"></a> decltype</h3><p><code>decltype</code> 关键字是为了解决 auto 关键字只能对变量进行类型推导的缺陷而出现的。它的用法和 <code>sizeof</code> 很相似：</p><pre><code>decltype(表达式)</code></pre><p>有时候，我们可能需要计算某个表达式的类型，例如：</p><pre><code>auto x = 1;auto y = 2;decltype(x+y) z;</code></pre><h3 id="尾返回类型-auto-与-decltype-配合"><a class="markdownIt-Anchor" href="#尾返回类型-auto-与-decltype-配合"></a> 尾返回类型、auto 与 decltype 配合</h3><p>你可能会思考，<code>auto</code> 能不能用于推导函数的返回类型。考虑这样一个例子加法函数的例子，在传统 C++ 中我们必须这么写：</p><pre><code>template&lt;typename R, typename T, typename U&gt;R add(T x, U y) &#123;    return x+y&#125;</code></pre><p>typename 和 class 在模板中没有区别，在 typename 这个关键字出现之前，都是使用 class 来定义模板参数的</p><p>这样的代码其实变得很丑陋，因为程序员在使用这个模板函数的时候，必须明确指出返回类型。但事实上我们并不知道 <code>add()</code> 这个函数会做什么样的操作，获得一个什么样的返回类型。</p><p>在 C++11 中这个问题得到解决。虽然你可能马上回反应出来使用 <code>decltype</code> 推导 <code>x+y</code> 的类型，写出这样的代码：</p><pre><code>decltype(x+y) add(T x, U y);</code></pre><p>但事实上这样的写法并不能通过编译。这是因为在编译器读到 decltype(x+y) 时，<code>x</code> 和 <code>y</code> 尚未被定义。为了解决这个问题，C++11 还引入了一个叫做尾返回类型（trailing return type），利用 auto 关键字将返回类型后置：</p><pre><code>template&lt;typename T, typename U&gt;auto add(T x, U y) -&gt; decltype(x+y) &#123;    return x+y;&#125;</code></pre><p>令人欣慰的是从 C++14 开始是可以直接让普通函数具备返回值推导，因此下面的写法变得合法：</p><pre><code>template&lt;typename T, typename U&gt;auto add(T x, U y) &#123;    return x+y;&#125;</code></pre><h2 id="三-区间迭代"><a class="markdownIt-Anchor" href="#三-区间迭代"></a> 三、区间迭代</h2><h3 id="基于范围的-for-循环"><a class="markdownIt-Anchor" href="#基于范围的-for-循环"></a> 基于范围的 for 循环</h3><p>终于，C++11 引入了基于范围的迭代写法，我们拥有了能够写出像 Python 一样简洁的循环语句：</p><pre><code>int array[] = &#123;1,2,3,4,5&#125;;for(auto &amp;x : array) &#123;    std::cout &lt;&lt; x &lt;&lt; std::endl;&#125;</code></pre><p>最常用的 <code>std::vector</code> 遍历将从原来的样子：</p><pre><code>std::vector&lt;int&gt; arr(5, 100);for(std::vector&lt;int&gt;::iterator i = arr.begin(); i != arr.end(); ++i) &#123;    std::cout &lt;&lt; *i &lt;&lt; std::endl;&#125;</code></pre><p>变得非常的简单：</p><pre><code>// &amp; 启用了引用, 如果没有则对 arr 中的元素只能读取不能修改for(auto &amp;i : arr) &#123;        std::cout &lt;&lt; i &lt;&lt; std::endl;&#125;</code></pre><h2 id="四-初始化列表"><a class="markdownIt-Anchor" href="#四-初始化列表"></a> 四、初始化列表</h2><p>初始化是一个非常重要的语言特性，最常见的就是对对象进行初始化。在传统 C++ 中，不同的对象有着不同的初始化方法，例如普通数组、POD （plain old data，没有构造、析构和虚函数的类或结构体）类型都可以使用 <code>&#123;&#125;</code> 进行初始化，也就是我们所说的初始化列表。而对于类对象的初始化，要么需要通过拷贝构造、要么就需要使用 <code>()</code> 进行。这些不同方法都针对各自对象，不能通用。</p><pre><code>int arr[3] = &#123;1,2,3&#125;;   // 列表初始化class Foo &#123;private:    int value;public:    Foo(int) &#123;&#125;&#125;;Foo foo(1);             // 普通构造初始化</code></pre><p>为了解决这个问题，C++11 首先把初始化列表的概念绑定到了类型上，并将其称之为 <code>std::initializer_list</code>，允许构造函数或其他函数像参数一样使用初始化列表，这就为类对象的初始化与普通数组和 POD 的初始化方法提供了统一的桥梁，例如：</p><pre><code>#include &lt;initializer_list&gt;class Magic &#123;public:    Magic(std::initializer_list&lt;int&gt; list) &#123;&#125;&#125;;Magic magic = &#123;1,2,3,4,5&#125;;std::vector&lt;int&gt; v = &#123;1, 2, 3, 4&#125;;</code></pre><p>这种构造函数被叫做初始化列表构造函数，具有这种构造函数的类型将在初始化时被特殊关照。</p><p>初始化列表除了用在对象构造上，还能将其作为普通函数的形参，例如：</p><pre><code>void func(std::initializer_list&lt;int&gt; list) &#123;    return;&#125;func(&#123;1,2,3&#125;);</code></pre><p>其次，C++11 提供了统一的语法来初始化任意的对象，例如：</p><pre><code>struct A &#123;    int a;    float b;&#125;;struct B &#123;    B(int _a, float _b): a(_a), b(_b) &#123;&#125;private:    int a;    float b;&#125;;A a &#123;1, 1.1&#125;;    // 统一的初始化语法B b &#123;2, 2.2&#125;;</code></pre><h2 id="五-模板增强"><a class="markdownIt-Anchor" href="#五-模板增强"></a> 五、模板增强</h2><h3 id="外部模板"><a class="markdownIt-Anchor" href="#外部模板"></a> 外部模板</h3><p>传统 C++ 中，模板只有在使用时才会被编译器实例化。换句话说，只要在每个编译单元（文件）中编译的代码中遇到了被完整定义的模板，都会实例化。这就产生了重复实例化而导致的编译时间的增加。并且，我们没有办法通知编译器不要触发模板实例化。</p><p>C++11 引入了外部模板，扩充了原来的强制编译器在特定位置实例化模板的语法，使得能够显式的告诉编译器何时进行模板的实例化：</p><pre><code>template class std::vector&lt;bool&gt;;            // 强行实例化extern template class std::vector&lt;double&gt;;  // 不在该编译文件中实例化模板 </code></pre><h3 id="尖括号"><a class="markdownIt-Anchor" href="#尖括号"></a> 尖括号 “&gt;”</h3><p>在传统 C++ 的编译器中，<code>&gt;&gt;</code>一律被当做右移运算符来进行处理。但实际上我们很容易就写出了嵌套模板的代码：</p><pre><code>std::vector&lt;std::vector&lt;int&gt;&gt; wow;</code></pre><p>这在传统C<ins>编译器下是不能够被编译的，而 C</ins>11 开始，连续的右尖括号将变得合法，并且能够顺利通过编译。</p><h3 id="类型别名模板"><a class="markdownIt-Anchor" href="#类型别名模板"></a> 类型别名模板</h3><p>在了解类型别名模板之前，需要理解『模板』和『类型』之间的不同。仔细体会这句话：**模板是用来产生类型的。**在传统 C++中，<code>typedef</code> 可以为类型定义一个新的名称，但是却没有办法为模板定义一个新的名称。因为，模板不是类型。例如：</p><pre><code>template&lt; typename T, typename U, int value&gt;class SuckType &#123;public:    T a;    U b;    SuckType():a(value),b(value)&#123;&#125;&#125;;template&lt; typename U&gt;typedef SuckType&lt;std::vector&lt;int&gt;, U, 1&gt; NewType; // 不合法</code></pre><p>C++11 使用 <code>using</code> 引入了下面这种形式的写法，并且同时支持对传统 <code>typedef</code> 相同的功效：</p><blockquote><p>通常我们使用 <code>typedef</code> 定义别名的语法是：<code>typedef 原名称 新名称;</code>，但是对函数指针等别名的定义语法却不相同，这通常给直接阅读造成了一定程度的困难。</p></blockquote><pre><code>typedef int (*process)(void *);  // 定义了一个返回类型为 int，参数为 void* 的函数指针类型，名字叫做 processusing process = int(*)(void *); // 同上, 更加直观template &lt;typename T&gt;using NewType = SuckType&lt;int, T, 1&gt;;    // 合法</code></pre><h3 id="默认模板参数"><a class="markdownIt-Anchor" href="#默认模板参数"></a> 默认模板参数</h3><p>我们可能定义了一个加法函数：</p><pre><code>template&lt;typename T, typename U&gt;auto add(T x, U y) -&gt; decltype(x+y) &#123;    return x+y&#125;</code></pre><p>但在使用时发现，要使用 add，就必须每次都指定其模板参数的类型。</p><p>在 C++11 中提供了一种便利，可以指定模板的默认参数：</p><pre><code>template&lt;typename T = int, typename U = int&gt;auto add(T x, U y) -&gt; decltype(x+y) &#123;    return x+y;&#125;</code></pre><h3 id="变长参数模板"><a class="markdownIt-Anchor" href="#变长参数模板"></a> 变长参数模板</h3><p>模板一直是 C++ 所独有的黑魔法（一起念：<strong>Dark Magic</strong>）之一。在 C<ins>11 之前，无论是类模板还是函数模板，都只能按其指定的样子，接受一组固定数量的模板参数；而 C</ins>11 加入了新的表示方法，允许任意个数、任意类别的模板参数，同时也不需要在定义时将参数的个数固定。</p><pre><code>template&lt;typename... Ts&gt; class Magic;</code></pre><p>模板类 Magic 的对象，能够接受不受限制个数的 typename 作为模板的形式参数，例如下面的定义：</p><pre><code>class Magic&lt;int,             std::vector&lt;int&gt;,             std::map&lt;std::string,                      std::vector&lt;int&gt;&gt;&gt; darkMagic;</code></pre><p>既然是任意形式，所以个数为0的模板参数也是可以的：<code>class Magic&lt;&gt; nothing;</code>。</p><p>如果不希望产生的模板参数个数为0，可以手动的定义至少一个模板参数：</p><pre><code>template&lt;typename Require, typename... Args&gt; class Magic;</code></pre><p>变长参数模板也能被直接调整到到模板函数上。传统 C 中的 printf 函数，虽然也能达成不定个数的形参的调用，但其并非类别安全。而 C++11 除了能定义类别安全的变长参数函数外，还可以使类似 printf 的函数能自然地处理非自带类别的对象。除了在模板参数中能使用 <code>...</code> 表示不定长模板参数外，函数参数也使用同样的表示法代表不定长参数，这也就为我们简单编写变长参数函数提供了便捷的手段，例如：</p><pre><code>template&lt;typename... Args&gt; void printf(const std::string &amp;str, Args... args);</code></pre><p>那么我们定义了变长的模板参数，如何对参数进行解包呢？</p><p>首先，我们可以使用 <code>sizeof...</code> 来计算参数的个数，：</p><pre><code>template&lt;typename... Args&gt;void magic(Args... args) &#123;    std::cout &lt;&lt; sizeof...(args) &lt;&lt; std::endl;&#125;</code></pre><p>我们可以传递任意个参数给 <code>magic</code> 函数：</p><pre><code>magic();        // 输出0magic(1);       // 输出1magic(1, &quot;&quot;);   // 输出2</code></pre><p>其次，对参数进行解包，到目前为止还没有一种简单的方法能够处理参数包，但有两种经典的处理手法：</p><p><strong>1. 递归模板函数</strong></p><p>递归是非常容易想到的一种手段，也是最经典的处理方法。这种方法不断递归的向函数传递模板参数，进而达到递归遍历所有模板参数的目的：</p><pre><code>#include &lt;iostream&gt;template&lt;typename T&gt;void printf(T value) &#123;    std::cout &lt;&lt; value &lt;&lt; std::endl;&#125;template&lt;typename T, typename... Args&gt;void printf(T value, Args... args) &#123;    std::cout &lt;&lt; value &lt;&lt; std::endl;    printf(args...);&#125;int main() &#123;    printf(1, 2, &quot;123&quot;, 1.1);    return 0;&#125;</code></pre><p><strong>2. 初始化列表展开</strong></p><blockquote><p>这个方法需要之后介绍的知识，读者可以简单阅读以下，将这个代码段保存，在后面的内容了解过了之后再回过头来阅读此处方法会大有收获。</p></blockquote><p>递归模板函数是一种标准的做法，但缺点显而易见的在于必须定义一个终止递归的函数。</p><p>这里介绍一种使用初始化列表展开的黑魔法：</p><pre><code>// 编译这个代码需要开启 -std=c++14// 因为版本原因，实验环境中的 g++ 尚不支持此特性，此处可以使用 clang++ 替代 g++template&lt;typename T, typename... Args&gt;auto print(T value, Args... args) &#123;    std::cout &lt;&lt; value &lt;&lt; std::endl;    return std::initializer_list&lt;T&gt;&#123;([&amp;] &#123;        std::cout &lt;&lt; args &lt;&lt; std::endl;    &#125;(), value)...&#125;;&#125;int main() &#123;    print(1, 2.1, &quot;123&quot;);    return 0;&#125;</code></pre><p>在这个代码中，额外使用了 C<ins>11 中提供的初始化列表以及 Lambda 表达式的特性（下一节中将提到），而 std::initializer_list 也是 C</ins>11 新引入的容器（以后会介绍到）。</p><p>通过初始化列表，<code>(lambda 表达式, value)...</code> 将会被展开。由于逗号表达式的出现，首先会执行前面的 lambda 表达式，完成参数的输出。唯一不美观的地方在于如果不使用 <code>return</code> 编译器会给出未使用的变量作为警告。</p><blockquote><p>事实上，有时候我们虽然使用了变参模板，却不一定需要对参数做逐个遍历，我们可以利用 <code>std::bind</code> 及完美转发等特性实现对函数和参数的绑定，从而达到成功调用的目的。</p></blockquote><blockquote><p>关于这方面的使用技巧，可以通过项目课：<a href="https://www.shiyanlou.com/teacher/courses/565">100 行 C++ 代码实现线程池</a> 进行进一步巩固学习。</p></blockquote><h2 id="六-面向对象增强"><a class="markdownIt-Anchor" href="#六-面向对象增强"></a> 六、面向对象增强</h2><h3 id="委托构造"><a class="markdownIt-Anchor" href="#委托构造"></a> 委托构造</h3><p>C++11 引入了委托构造的概念，这使得构造函数可以在同一个类中一个构造函数调用另一个构造函数，从而达到简化代码的目的：</p><pre><code>class Base &#123;public:    int value1;    int value2;    Base() &#123;        value1 = 1;    &#125;    Base(int value) : Base() &#123;  // 委托 Base() 构造函数        value2 = 2;    &#125;&#125;;int main() &#123;    Base b(2);    std::cout &lt;&lt; b.value1 &lt;&lt; std::endl;    std::cout &lt;&lt; b.value2 &lt;&lt; std::endl;&#125;</code></pre><h3 id="继承构造"><a class="markdownIt-Anchor" href="#继承构造"></a> 继承构造</h3><p>在传统 C++ 中，构造函数如果需要继承是需要将参数一一传递的，这将导致效率低下。C++11 利用关键字 using 引入了继承构造函数的概念：</p><pre><code>class Base &#123;public:    int value1;    int value2;    Base() &#123;        value1 = 1;    &#125;    Base(int value) : Base() &#123;                          // 委托 Base() 构造函数        value2 = 2;    &#125;&#125;;class Subclass : public Base &#123;public:    using Base::Base;  // 继承构造&#125;;int main() &#123;    Subclass s(3);    std::cout &lt;&lt; s.value1 &lt;&lt; std::endl;    std::cout &lt;&lt; s.value2 &lt;&lt; std::endl;&#125;</code></pre><h3 id="显式虚函数重载"><a class="markdownIt-Anchor" href="#显式虚函数重载"></a> 显式虚函数重载</h3><p>在传统 C++中，经常容易发生意外重载虚函数的事情。例如：</p><pre><code>struct Base &#123;    virtual void foo();&#125;;struct SubClass: Base &#123;    void foo();&#125;;</code></pre><p><code>SubClass::foo</code> 可能并不是程序员尝试重载虚函数，只是恰好加入了一个具有相同名字的函数。另一个可能的情形是，当基类的虚函数被删除后，子类拥有旧的函数就不再重载该虚拟函数并摇身一变成为了一个普通的类方法，这将造成灾难性的后果。</p><p>C++11 引入了 <code>override</code> 和 <code>final</code> 这两个关键字来防止上述情形的发生。</p><h3 id="override"><a class="markdownIt-Anchor" href="#override"></a> override</h3><p>当重载虚函数时，引入 <code>override</code> 关键字将显式的告知编译器进行重载，编译器将检查基函数是否存在这样的虚函数，否则将无法通过编译：</p><pre><code>struct Base &#123;    virtual void foo(int);&#125;;struct SubClass: Base &#123;    virtual void foo(int) override; // 合法    virtual void foo(float) override; // 非法, 父类没有此虚函数&#125;;</code></pre><h3 id="final"><a class="markdownIt-Anchor" href="#final"></a> final</h3><p><code>final</code> 则是为了防止类被继续继承以及终止虚函数继续重载引入的。</p><pre><code>struct Base &#123;        virtual void foo() final;&#125;;struct SubClass1 final: Base &#123;&#125;;                  // 合法struct SubClass2 : SubClass1 &#123;&#125;;                  // 非法, SubClass 已 finalstruct SubClass3: Base &#123;        void foo(); // 非法, foo 已 final&#125;;</code></pre><h3 id="显式禁用默认函数"><a class="markdownIt-Anchor" href="#显式禁用默认函数"></a> 显式禁用默认函数</h3><p>在传统 C++ 中，如果程序员没有提供，编译器会默认为对象生成默认构造函数、复制构造、赋值算符以及析构函数。另外，C++ 也为所有类定义了诸如 <code>new</code> <code>delete</code> 这样的运算符。当程序员有需要时，可以重载这部分函数。</p><p>这就引发了一些需求：无法精确控制默认函数的生成行为。例如禁止类的拷贝时，必须将赋值构造函数与赋值算符声明为 <code>private</code>。尝试使用这些未定义的函数将导致编译或链接错误，则是一种非常不优雅的方式。</p><p>并且，编译器产生的默认构造函数与用户定义的构造函数无法同时存在。若用户定义了任何构造函数，编译器将不再生成默认构造函数，但有时候我们却希望同时拥有这两种构造函数，这就造成了尴尬。</p><p>C++11 提供了上述需求的解决方案，允许显式的声明采用或拒绝编译器自带的函数。例如：</p><pre><code>class Magic &#123;public:    Magic() = default;  // 显式声明使用编译器生成的构造    Magic&amp; operator=(const Magic&amp;) = delete; // 显式声明拒绝编译器生成构造    Magic(int magic_number);&#125;</code></pre><h2 id="七-强类型枚举"><a class="markdownIt-Anchor" href="#七-强类型枚举"></a> 七、强类型枚举</h2><p>在传统 C++中，枚举类型并非类型安全，枚举类型会被视作整数，则会让两种完全不同的枚举类型可以进行直接的比较（虽然编译器给出了检查，但并非所有），甚至枚举类型的枚举值名字不能相同，这不是我们希望看到的结果。</p><p>C++11 引入了枚举类（enumaration class），并使用 <code>enum class</code> 的语法进行声明：</p><pre><code>enum class new_enum : unsigned int &#123;    value1,    value2,    value3 = 100,    value4 = 100&#125;;</code></pre><p>这样定义的枚举实现了类型安全，首先他不能够被隐式的转换为整数，同时也不能够将其与整数数字进行比较，更不可能对不同的枚举类型的枚举值进行比较。但相同枚举值之间如果指定的值相同，那么可以进行比较：</p><pre><code>if (new_enum::value3 == new_enum::value4) &#123;    // 会输出    std::cout &lt;&lt; &quot;new_enum::value3 == new_enum::value4&quot; &lt;&lt; std::endl;&#125;</code></pre><p>在这个语法中，枚举类型后面使用了冒号及类型关键字来指定枚举中枚举值的类型，这使得我们能够为枚举赋值（未指定时将默认使用 int）。</p><p>而我们希望获得枚举值的值时，将必须显式的进行类型转换，不过我们可以通过重载 <code>&lt;&lt;</code> 这个算符来进行输出，可以收藏下面这个代码段：</p><pre><code>#include &lt;iostream&gt;template&lt;typename T&gt;std::ostream&amp; operator&lt;&lt;(typename std::enable_if&lt;std::is_enum&lt;T&gt;::value, std::ostream&gt;::type&amp; stream, const T&amp; e)&#123;    return stream &lt;&lt; static_cast&lt;typename std::underlying_type&lt;T&gt;::type&gt;(e);&#125;</code></pre><p>这时，下面的代码将能够被编译：</p><pre><code>std::cout &lt;&lt; new_enum::value3 &lt;&lt; std::endl</code></pre><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>本节介绍了 C++11/14 中对语言可用性的增强，其中笔者认为最为重要的几个特性是几乎所有人都需要了解并熟练使用的：</p><ol><li>auto 类型推导</li><li>范围 for 迭代</li><li>初始化列表</li><li>变参模板</li></ol><p>本节代码：</p><ul><li><p>另由于各个编译器对标准支持的力度并不相同，所以当使用 g++ 无法编译时，可以使用别的编译器（clang++）再次尝试，比如 2.6.cpp 使用 clang++ 下就能正常编译，而 g++ 则会报错。</p><p><a href="http://labfile.oss.aliyuncs.com/courses/605/2.zip">http://labfile.oss.aliyuncs.com/courses/605/2.zip</a></p></li></ul><h2 id="致谢"><a class="markdownIt-Anchor" href="#致谢"></a> 致谢</h2><blockquote><p><a href="https://www.shiyanlou.com/">实验楼</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++数据类型及各种形式的输入输出汇总</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/44614/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/44614/</url>
      
        <content type="html"><![CDATA[<h2 id="数据类型输入输出汇总"><a class="markdownIt-Anchor" href="#数据类型输入输出汇总"></a> 数据类型输入输出汇总</h2><p>巩固C++知识时数据类型及输入输出形式汇总：</p><table><thead><tr><th>数据类型</th><th>位</th><th>中文名</th><th>输入输出形式</th></tr></thead><tbody><tr><td>char</td><td>1个字节</td><td>字符型</td><td>%c</td></tr><tr><td>int</td><td>4个字节</td><td>整型</td><td>%d</td></tr><tr><td>short(short int)</td><td>2个字节</td><td>短整型</td><td>%d</td></tr><tr><td>long(long int)</td><td>8个字节</td><td>长整型</td><td>%ld</td></tr><tr><td>long long(long long int)</td><td>8个字节</td><td>长整型（C++标准）</td><td>%lld</td></tr><tr><td>float</td><td>4个字节</td><td>浮点型</td><td>%f</td></tr><tr><td>double</td><td>8个字节</td><td>双精度浮点型</td><td>% lf</td></tr></tbody></table><h2 id="补充"><a class="markdownIt-Anchor" href="#补充"></a> 补充</h2><p>另外，补充如下：</p><ul><li><code>%e</code> 表示按指数形式的浮点数的格式输出</li><li><code>%g</code> 表示自动选择合适的表示法输出</li><li><code>%u</code> 表示输出无符号的<code>unsigned</code>（比如<code>unsigned long long int</code> 的输入输出形式就是<code>%llu</code>）;</li><li><code>printf(&quot;%%&quot;);</code>这样才能输出符号%</li></ul><h2 id="数据类型简介"><a class="markdownIt-Anchor" href="#数据类型简介"></a> 数据类型简介</h2><ul><li><code>char</code>：<code>char</code>为一个字节，所以<code>char</code>的<code>unsigned</code>的范围是0到255，<code>signed</code>类型的话就是-128到127(-28-&gt;27-1)；<strong>输入输出</strong>：<code>%c</code></li><li><code>int</code>：在32位系统中（现在普遍是int32位），<code>signed</code>的范围是(-216到215-1)，即是-2147483648~+2147483647，<code>unsigned</code>类型 的<code>int</code> 范围：0~4294967295 即（ 0到232-1）；<strong>输入输出</strong>：<code>%d</code></li><li><code>short int</code>：<code>short int</code> 只有<code>int</code>的一半， 也就是216， 范围为(0到65536-1)；<strong>输入输出</strong>：<code>%d</code></li><li><code>long</code>：<code>long</code>和<code>long int</code> 都是4字节， 要注意：<code>long int</code>的大小和系统是32位还是64位的有关系，事实上，<code>long</code>整型与<code>int</code>能储存的长度差不多；输入输出：<code>%ld</code></li><li><code>long long int</code>：<code>long long int</code>有8字节， 表示范围为-263到263-1，也就是10的18次方左右；<strong>输入输出</strong>：<code>%lld</code></li><li><code>float</code>：<code>float</code>占用的内存为4个字节， 和<code>int</code>占用的空间是一样的， 只是保存的方式不同， <code>float</code>采用的是指数的方式保存数字， 精确度会有问题，储存长度大概与<code>int</code>相差无几。（稍微比<code>int</code>大）；<strong>输入输出</strong>：<code>%f</code></li><li><code>double</code>：<code>double</code>占用的8个字节的内存， 所以表示范围会比<code>float</code>更大， <code>double</code>保存数值的方式也是为指数保存， 所以也有精确度的问题，表示的长度大概是10的32次方。<strong>输入输出</strong>：<code>%lf</code></li></ul><h2 id="scanf和print函数"><a class="markdownIt-Anchor" href="#scanf和print函数"></a> scanf()和print()函数</h2><blockquote><p><code>scanf()</code>函数一般格式是：scanf(格式控制, 输出表列)<br><code>printf()</code>函数的一般格式是:printf(格式控制,输出表列)</p></blockquote><h3 id="用scanf和printf函数进行输入和输出"><a class="markdownIt-Anchor" href="#用scanf和printf函数进行输入和输出"></a> 用scanf和printf函数进行输入和输出</h3><p>例子：</p><pre><code>#include &lt;iostream&gt;using namespace std;int main( )&#123;  int a; float b; char c;  scanf(&quot;%d %c %f&quot;,&amp;a,&amp;c,&amp;b);  //注意在变量名前要加地址运算符&amp;  printf(&quot;a=%d,b=%f,c=%c\n&quot;,a,b,c);  return 0;&#125;</code></pre><p>输入输出如下：</p><pre><code>patten@patten-PC:~/Desktop/cpp$ g++ test.cpp patten@patten-PC:~/Desktop/cpp$ ./a.out 2 g 2.19a=2,b=2.190000,c=gpatten@patten-PC:~/Desktop/cpp$</code></pre><p><strong><strong>相关文章</strong></strong>：《<strong><a href="https://blog.svenhetin.com/bian-chang-can-shu-de-hong-ding-yi-yi-ji-__va_args__/">C++11变长参数的宏定义以及 “__VA_ARGS__”在Log输出中的应用</a></strong>》</p>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>类似Windows的WinSCP的FTP工具FileZilla简介（WinSCP for linux）</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/28151/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/28151/</url>
      
        <content type="html"><![CDATA[<p>大多数从事windows操作系统界面的服务器端开发者对winSCP再熟悉不过，但是当我们转为Linux操作系统界面下的服务器端开发时，就将一脸懵。。。</p><p>怎么连WinSCP都没有，我又觉得“scp”的文件传输命令太麻烦，那你们copy文件是用的什么？于是在各个搜索引擎上搜索“WinSCP for Linux/Ubuntu/CentOS”，What？都是什么鬼？于是有了这篇博文。</p><h2 id="什么是-winscp"><a class="markdownIt-Anchor" href="#什么是-winscp"></a> 什么是 WinSCP</h2><p><a href="https://winscp.net/">WinSCP</a> 是一个 Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端。同时支持 SCP 协议。它的主要功能是在本地与远程计算机间安全地复制文件，并且可以直接编辑文件。</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/28151/winSCP.jpeg" alt></p><p>WinSCP，顾名思义，就是Windows下的SCP传输工具，嘿嘿，是不是本来Windows没有文件传输工具，把Linux的scp命令封装到了这个软件？这就不得而知了。</p><h3 id="scp和ftp简介"><a class="markdownIt-Anchor" href="#scp和ftp简介"></a> scp和ftp简介</h3><blockquote><p><strong>FTP（File Transfer Protocol）</strong>：是TCP/IP网络上两台计算机传送文件的协议，FTP是在TCP/IP网络和INTERNET上最早使用的协议之一，它属于网络协议组的应用层。FTP客户机可以给服务器发出命令来下载文件，上载文件，创建或改变服务器上的目录。相比于HTTP，FTP协议要复杂得多。复杂的原因，是因为FTP协议要用到两个TCP连接，一个是命令链路，用来在FTP客户端与服务器之间传递命令；另一个是数据链路，用来上传或下载数据。</p></blockquote><blockquote><p><strong>SCP（Secure Copy）</strong>：SCP就是Secure copy，是用来进行远程文件复制的，并且整个复制过程是加密的。数据传输使用ssh，并且和使用和ssh相同的认证方式，提供相同的安全保证。</p></blockquote><p>那“WinSCP for Linux/Ubuntu/CentOS”这个问题就变成了“linux下类似windows下的WinSCP的linux远程管理工具”。</p><p>啊，那FileZilla呼之欲出——</p><h2 id="什么是filezilla"><a class="markdownIt-Anchor" href="#什么是filezilla"></a> 什么是FileZilla</h2><p>先看英文原文：</p><blockquote><p>Welcome to the homepage of FileZilla®, the free FTP solution. The <em>FileZilla Client</em> not only supports FTP, but also FTP over TLS (FTPS) and SFTP. It is open source software distributed free of charge under the terms of the GNU General Public License.</p></blockquote><blockquote><p>We are also offering <em><a href="https://filezilla-project.org/filezilla_pro.php">FileZilla Pro</a></em>, with additional protocol support for WebDAV, Amazon S3, Backblaze B2, Dropbox, Microsoft OneDrive, Google Drive, Microsoft Azure Blob and File Storage, and Google Cloud Storage.</p></blockquote><blockquote><p>Last but not least, <em>FileZilla Server</em> is a free open source FTP and FTPS Server.</p></blockquote><blockquote><p>Support is available through our <a href="https://forum.filezilla-project.org/">forums</a>, the <a href="https://wiki.filezilla-project.org/Main_Page">wiki</a> and the <a href="https://trac.filezilla-project.org/">bug and feature request trackers.</a></p></blockquote><blockquote><p>In addition, you will find documentation on how to compile FileZilla and nightly builds for multiple platforms in the development section.</p></blockquote><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/28151/FileZilla-details.png" alt></p><p>开始说中国话：</p><p><a href="https://filezilla-project.org/">FileZilla</a>是一个免费的FTP解决方案，FileZilla客户端不仅支持FTP，还支持基于FTP 的 TLS（FTPS）和SFTP。它是根据GNU通用公共许可证条款免费分发的开源软件。全平台适用，Windows/Linux等等。</p><h3 id="filezilla安装"><a class="markdownIt-Anchor" href="#filezilla安装"></a> FileZilla安装</h3><p>FileZilla Client 非常好用，以下是安装步骤。</p><h3 id="安装filezilla"><a class="markdownIt-Anchor" href="#安装filezilla"></a> 安装filezilla</h3><pre><code>sudo apt-get install filezilla</code></pre><h3 id="再装个语言包"><a class="markdownIt-Anchor" href="#再装个语言包"></a> 再装个语言包</h3><pre><code>sudo apt-get install filezilla-locales</code></pre><h3 id="安装完成"><a class="markdownIt-Anchor" href="#安装完成"></a> 安装完成</h3><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/28151/searchFz-1.png" alt></p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/28151/FileZilla.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> Linux </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu16.04下python辅助bitbake编译脚本</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/60487/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/60487/</url>
      
        <content type="html"><![CDATA[<p>做大型项目的过程中使用bitbake，免不了源代码在不止一个地方，这个python脚本是我上司写的一个简单脚本，直接上代码，做个备份：</p><p><a href="//pybuild.py">//pybuild.py</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#! &#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"></span><br><span class="line">import os</span><br><span class="line">import filecmp</span><br><span class="line">import shutil</span><br><span class="line"></span><br><span class="line">avs_device_sdk &#x3D; &#123;</span><br><span class="line">    &quot;PRJ_ROOT&quot; : &quot;&#x2F;home&#x2F;patten&#x2F;workspace&#x2F;austin&#x2F;&quot;,</span><br><span class="line">    &quot;SRC_PATH&quot; : &quot;guest&#x2F;linux&#x2F;meta-austin&#x2F;recipes-application&#x2F;alexa-server&#x2F;avs-device-sdk&#x2F;avs-device-sdk&quot;,</span><br><span class="line">    &quot;TGT_PATH&quot; : &quot;guest&#x2F;linux&#x2F;build&#x2F;austin&#x2F;tmp&#x2F;work&#x2F;aarch64-agl-linux&#x2F;avs-device-sdk&#x2F;1.0-r0&#x2F;git&#x2F;&quot;,</span><br><span class="line">    &quot;PRJ_NAME&quot; : &quot;avs-device-sdk&quot;,</span><br><span class="line"></span><br><span class="line">    &quot;INCLUDES&quot; : [</span><br><span class="line">        &quot;ACL&#x2F;&quot;,</span><br><span class="line">        &quot;ADSL&#x2F;&quot;,</span><br><span class="line">        &quot;AFML&#x2F;&quot;,</span><br><span class="line">&quot;ApplicationUtilities&#x2F;&quot;,</span><br><span class="line">  &quot;AttachCommon&#x2F;&quot;,</span><br><span class="line">  &quot;AVSCommon&#x2F;&quot;,</span><br><span class="line">&quot;BluetoothImplementations&#x2F;&quot;,</span><br><span class="line">&quot;build&#x2F;&quot;,</span><br><span class="line">        &quot;CapabilitiesDelegate&#x2F;&quot;,</span><br><span class="line">        &quot;CapabilityAgents&#x2F;&quot;,</span><br><span class="line">        &quot;CertifiedSender&#x2F;&quot;,</span><br><span class="line">        &quot;ContextManager&#x2F;&quot;,</span><br><span class="line">        &quot;ESP&#x2F;&quot;,</span><br><span class="line">        &quot;Integration&#x2F;&quot;,</span><br><span class="line">&quot;KWD&#x2F;&quot;,</span><br><span class="line">&quot;MediaPlayer&#x2F;&quot;,</span><br><span class="line">        &quot;PlaylistParser&#x2F;&quot;,</span><br><span class="line">        &quot;RegistrationManager&#x2F;&quot;,</span><br><span class="line">&quot;SampleApp&#x2F;&quot;,</span><br><span class="line">&quot;Storage&#x2F;&quot;,</span><br><span class="line">&quot;ThirdParty&#x2F;&quot;,</span><br><span class="line">&quot;tools&#x2F;&quot;,</span><br><span class="line">        &quot;alexaservice.service&quot;,</span><br><span class="line">        &quot;CMakeLists.txt&quot;,</span><br><span class="line">        &quot;alexaservice.service&quot;,</span><br><span class="line">        &quot;pkg-config.pc.cmake&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;EXCLUDES&quot; : [</span><br><span class="line">        #TODO: not in used, now.</span><br><span class="line">    ],</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Projects &#x3D; [</span><br><span class="line">    avs_device_sdk,</span><br><span class="line"></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def doBuildProject(prjInfo):</span><br><span class="line">    print &#39;Do build project :&#39; + prjInfo[&#39;PRJ_NAME&#39;]</span><br><span class="line">    for p in prjInfo[&quot;INCLUDES&quot;]:</span><br><span class="line">        src_path &#x3D; os.path.join(prjInfo[&quot;PRJ_ROOT&quot;], prjInfo[&quot;SRC_PATH&quot;], p)</span><br><span class="line">        tgt_path &#x3D; os.path.join(prjInfo[&quot;PRJ_ROOT&quot;], prjInfo[&quot;TGT_PATH&quot;], p)</span><br><span class="line"></span><br><span class="line">        if os.path.isfile(src_path):</span><br><span class="line">            tryCopyFile(src_path, tgt_path)</span><br><span class="line">        elif os.path.isdir(src_path):</span><br><span class="line">            tryCopyDir(src_path, tgt_path)</span><br><span class="line">        else:</span><br><span class="line">            print &#39;Error, invlaid src path:&#39;, src_path</span><br><span class="line"></span><br><span class="line">    cmd &#x3D; &#39;bitbake -c compile -v -f avs-device-sdk;bitbake -c install -v -f  avs-device-sdk&#39;</span><br><span class="line">    os.system(cmd)</span><br><span class="line"></span><br><span class="line">def tryCopyFile(src_path, tgt_path):</span><br><span class="line">    if not os.path.exists(tgt_path) or not filecmp.cmp(src_path, tgt_path):</span><br><span class="line">        print &#39;do copy file, from [&#39; + src_path + &#39;] to [&#39; + tgt_path + &#39;]&#39;</span><br><span class="line">        shutil.copy2(src_path, tgt_path)</span><br><span class="line">        </span><br><span class="line">def tryCopyDir(src_path, tgt_path):</span><br><span class="line">    for root, _, files in os.walk(src_path):</span><br><span class="line">        for f in files:</span><br><span class="line">            tryCopyFile(os.path.join(root, f), os.path.join(tgt_path, root[len(src_path):], f))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    doBuildProject(Projects[0])</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> Linux </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS中window.requestAnimationFrame()获取浏览器刷新帧率FPS及相关函数rAF()</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/11963/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/11963/</url>
      
        <content type="html"><![CDATA[<p>在实际项目实践中，甲方爸爸提出了一个需求，实时传输Chrome浏览器的刷新帧率（FPS）至性能监控模块，于是各种搜索，找到了一个比较好的解决方案，就是利用下面这个函数：<code>window.requestAnimationFrame()</code>。</p><h2 id="requestanimationframe引入"><a class="markdownIt-Anchor" href="#requestanimationframe引入"></a> requestAnimationFrame()引入</h2><p>计时器一直是JavaScript动画的核心技术。而编写动画循环的关键是要知道延迟时间多长合适。一方面，循环间隔必须足够短，这样才能让不同的动画效果显得平滑流畅；另一方面，循环间隔还要足够长，这样才能确保浏览器有能力渲染产生的变化。</p><p>大多数电脑显示器的刷新频率是<code>60Hz</code>，大概相当于每秒钟重绘<code>60</code>次。大多数浏览器都会对重绘操作加以限制，不超过显示器的重绘频率，因为即使超过那个频率用户体验也不会有提升。因此，最平滑动画的最佳循环间隔是<code>1000ms/60</code>，约等于<code>16.6ms</code>。</p><p><code>window.requestAnimationFrame</code>（<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/requestAnimationFrame">查看相关文档</a>），顾名思义就是请求动画帧，去告诉浏览器——你希望执行一个动画，并且要求浏览器在下次重绘之前调用指定的回调函数更新动画。该方法需要传入一个回调函数作为参数，该回调函数会在浏览器下一次重绘之前执行。</p><blockquote><p><strong>注意：若你想在浏览器下次重绘之前继续更新下一帧动画，那么回调函数自身必须再次调用<code>window.requestAnimationFrame()</code></strong></p></blockquote><p>当你准备更新动画时你应该调用此方法。这将使浏览器在下一次重绘之前调用你传入给该方法的动画函数(即你的回调函数)。回调函数执行次数通常是每秒60次，但在大多数遵循W3C建议的浏览器中，回调函数执行次数通常与浏览器屏幕刷新次数相匹配。为了提高性能和电池寿命，因此在大多数浏览器里，当<code>requestAnimationFrame()</code> 运行在后台标签页或者隐藏的<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/iframe"><code>&lt;iframe&gt;</code></a> 里时，<code>requestAnimationFrame()</code> 会被暂停调用以提升性能和电池寿命。</p><p>回调函数会被传入<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/DOMHighResTimeStamp"><code>DOMHighResTimeStamp</code></a>参数，<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/DOMHighResTimeStamp"><code>DOMHighResTimeStamp</code></a>指示由RequestAnimationFrame（）排队的回调开始触发的时间。指示当前被 <code>requestAnimationFrame()</code> 排序的回调函数被触发的时间。在同一个帧中的多个回调函数，它们每一个都会接受到一个相同的时间戳，即使在计算上一个回调函数的工作负载期间已经消耗了一些时间。该时间戳是一个十进制数，单位毫秒，最小精度为1ms(1000μs)。</p><h2 id="requestanimationframe对比"><a class="markdownIt-Anchor" href="#requestanimationframe对比"></a> requestAnimationFrame()对比</h2><p>与<code>setTimeout</code>和<code>setInterval</code>相比——</p><ul><li>而<code>setTimeout</code>和<code>setInterval</code>的问题是，它们都不精确。因为javascript是单线程的，它们的内在运行机制决定了时间间隔参数实际上只是指定了把动画代码添加到浏览器UI线程队列中以等待执行的时间。如果队列前面已经加入了其他任务，那动画代码就要等前面的任务完成后再执行。</li><li><code>requestAnimationFrame</code>采用系统时间间隔，保持最佳绘制效率，不会因为间隔时间过短，造成过度绘制，增加开销；也不会因为间隔时间太长，使用动画卡顿不流畅，让各种网页动画效果能够有一个统一的刷新机制，从而节省系统资源，提高系统性能，改善视觉效果。</li></ul><h2 id="requestanimationframe特点"><a class="markdownIt-Anchor" href="#requestanimationframe特点"></a> requestAnimationFrame()特点</h2><ul><li><code>requestAnimationFrame</code>会把每一帧中的所有DOM操作集中起来，在一次重绘或回流中就完成，并且重绘或回流的时间间隔紧紧跟随浏览器的刷新频率</li><li>在隐藏或不可见的元素中，<code>requestAnimationFrame</code>将不会进行重绘或回流，这当然就意味着更少的CPU、GPU和内存使用量</li><li><code>requestAnimationFrame</code>是由浏览器专门为动画提供的API，在运行时浏览器会自动优化方法的调用，并且如果页面不是激活状态下的话，动画会自动暂停，有效节省了CPU开销</li></ul><h2 id="requestanimationframe语法"><a class="markdownIt-Anchor" href="#requestanimationframe语法"></a> requestAnimationFrame()语法</h2><pre><code>window.requestAnimationFrame(callback);</code></pre><h3 id="参数"><a class="markdownIt-Anchor" href="#参数"></a> 参数</h3><p>**<code>callback</code>**下一次重绘之前更新动画帧所调用的函数(即上面所说的回调函数)。该回调函数会被传入<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/DOMHighResTimeStamp"><code>DOMHighResTimeStamp</code></a>参数，该参数与<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Performance/now"><code>performance.now()</code></a>的返回值相同，它表示<code>requestAnimationFrame()</code> 开始去执行回调函数的时刻。</p><h3 id="返回值"><a class="markdownIt-Anchor" href="#返回值"></a> 返回值</h3><p>一个 <code>long</code> 整数，请求 ID ，是回调列表中唯一的标识。是个非零值，没别的意义。你可以传这个值给 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/cancelAnimationFrame"><code>window.cancelAnimationFrame()</code></a> 以取消回调函数。</p><h2 id="rafrequestanimationframe"><a class="markdownIt-Anchor" href="#rafrequestanimationframe"></a> rAF(requestAnimationFrame)</h2><p>网上很多教程里都有这个“rAF()”函数，看它的英文名全称就知道其实没什么神秘的，如果你喜欢，也可以叫“XXOO()”。因为目前，主要浏览器Firefox 23 / IE 10 / Chrome / Safari）都支持这个方法。可以用下面的方法，检查浏览器是否支持这个API。如果不支持，则自行模拟部署该方法。</p><pre><code>window.requestAnimFrame = (function()&#123;  return  window.requestAnimationFrame       ||           window.webkitRequestAnimationFrame ||           window.mozRequestAnimationFrame    ||           window.oRequestAnimationFrame      ||           window.msRequestAnimationFrame     ||           function( callback )&#123;            window.setTimeout(callback, 1000 / 60);          &#125;;&#125;)();</code></pre><h2 id="获取浏览器刷新帧率fps"><a class="markdownIt-Anchor" href="#获取浏览器刷新帧率fps"></a> 获取浏览器刷新帧率FPS</h2><p>一共两种方式：“纯requestAnimationFrame方式”和“rAF()获取方式”</p><p>两个调用方式都是直接使用如下代码：</p><pre><code>loopToGetFps();</code></pre><h3 id="纯requestanimationframe方式"><a class="markdownIt-Anchor" href="#纯requestanimationframe方式"></a> 纯requestAnimationFrame方式</h3><p>获取浏览器帧率代码如下：</p><p><strong>方案一：固定时间</strong></p><pre><code>//此代码运行于chrome版本 75.0.3770.100（正式版本）snap （64 位）//fps varialesvar frame = 0;var allFrameCount = 0;var lastTime = Date.now();var lastFameTime = Date.now();var preFps = 0;var loopToGetFps = function () &#123;    var now = Date.now();  //获取当前时间    var fs = (now - lastFameTime);  //计算时间差    var fps = Math.round(1000 / fs); //计算帧率    lastFameTime = now;    // not set 0， to get FPS by recording the difference in this value at the beginning and end of the animation     allFrameCount++;    frame++;    if (now &gt; 1000 + lastTime) &#123;        var fps = Math.round((frame * 1000) / (now - lastTime));                if (preFps != fps) &#123;            console.log(&quot;fps:&quot;, fps);            preFps = fps;        &#125;        frame = 0;        lastTime = now;    &#125;;    window.requestAnimationFrame(loopToGetFps);&#125;</code></pre><p><strong>方案二：固定帧数</strong></p><pre><code>//此代码运行于chrome版本 75.0.3770.100（正式版本）snap （64 位）//fps varialesvar frame = 0;var allFrameCount = 0;var lastTime = Date.now();var lastFameTime = Date.now();var preFps = 0;var now = Date.now();var fps = 0;var sendFps = 0;var loopToGetFps = function () &#123;    frame++;    if (frame &gt;= 60) &#123;        now = Date.now();        fps = Math.round((frame * 1000) / (now - lastTime));        console.log(&quot;fps:&quot;, fps);                if (preFps != fps) &#123;            sendFps = &quot;fpsNum&quot; + fps;            if (alexaFpsFlag) &#123;                sendMessage(sendFps);            &#125;            preFps = fps;        &#125;        frame = 0;        lastTime = now;    &#125;;    window.requestAnimationFrame(loopToGetFps);&#125;</code></pre><h3 id="raf获取浏览器刷新帧率fps"><a class="markdownIt-Anchor" href="#raf获取浏览器刷新帧率fps"></a> rAF()获取浏览器刷新帧率FPS</h3><p>之所以采用“rAF()”，是为了更好地适配兼容各种浏览器，获取浏览器帧率代码如下：</p><pre><code>//fps varialesvar frame = 0;var allFrameCount = 0;var lastTime = Date.now();var lastFameTime = Date.now();var preFps = 0;var rAF = function () &#123;    return (        window.requestAnimationFrame ||        window.webkitRequestAnimationFrame ||        function (callback) &#123;            window.setTimeout(callback, 1000 / 60);        &#125;    );&#125;();var loopToGetFps = function () &#123;    var now = Date.now();    var fs = (now - lastFameTime);    var fps = Math.round(1000 / fs);    lastFameTime = now;    // not set 0， to get FPS by recording the difference in this value at the beginning and end of the animation     allFrameCount++;    frame++;    if (now &gt; 1000 + lastTime) &#123;        var fps = Math.round((frame * 1000) / (now - lastTime));        console.log(&quot;fps:&quot;, fps);                if (preFps != fps) &#123;            var sendFps = &quot;fpsNum&quot; + fps;            if (alexaFpsFlag) &#123;                sendMessage(sendFps);            &#125;            preFps = fps;        &#125;        frame = 0;        lastTime = now;    &#125;;    rAF(loopToGetFps);&#125;</code></pre><h2 id="致谢"><a class="markdownIt-Anchor" href="#致谢"></a> 致谢</h2><p>参考资料过多，不一一列举了，在此表示感谢。</p>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nodejs解析含中文的url或字符串中的百分号编码</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/45916/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/45916/</url>
      
        <content type="html"><![CDATA[<p>写网站的时候，前端表单发送数据到nodejs服务器，发送的数据会出现一些乱码，像下面这样：</p><pre><code>userName=%E7%8F%AD%E8%A1%A5&amp;email=zhaopin%40junmatek.com&amp;info=%E8%B7%AF1388%E5%8F%B7%E6%B0%91%E6%B6%A6%E5%A4%A7%E5%8E%A6%E4%B8%80%E5%8F%B7</code></pre><h2 id="百分号编码原理"><a class="markdownIt-Anchor" href="#百分号编码原理"></a> 百分号编码原理</h2><p>百分号编码（也被称为URI编码）的产生是为了防止SQL注入，所以将一些特殊字符转换为对应的百分号编码，详细原理可以自行搜索。</p><h2 id="nodejs如何解码"><a class="markdownIt-Anchor" href="#nodejs如何解码"></a> nodejs如何解码</h2><h3 id="decodeuri函数"><a class="markdownIt-Anchor" href="#decodeuri函数"></a> decodeURI()函数</h3><pre><code>let url = &quot;userName=%E7%8F%AD%E8%A1%A5&amp;email=zhaopin%40junmatek.com&amp;info=%E8%B7%AF1388%E5%8F%B7%E6%B0%91%E6%B6%A6%E5%A4%A7%E5%8E%A6%E4%B8%80%E5%8F%B7&quot;let decode_url = decodeURI(url)console.log(decode_url)</code></pre><p>控制台打印出来的结果如下：</p><pre><code>userName=班补&amp;email=zhaopin%40junmatek.com&amp;info=路1388号民润大厦一号</code></pre><p>可以看到“%40”（也就是“@”）没有转换，这是因为“@”在encodeURI()函数中属于保留字符，不会转换换为百分号编码，所以对应的解码函数decodeURI()也不会对其进行解码。（上面的url是firefox浏览器提交ajax表单的时候产生的）</p><h3 id="decodeuricomponent函数"><a class="markdownIt-Anchor" href="#decodeuricomponent函数"></a> decodeURIComponent()函数</h3><p>“@”“#”“$”…等符号不属于encodeURIComponent()函数的保留字，所以其对应的解码函数decodeURIComponent()函数可以将“%40”转为“@”符号。</p><pre><code>let url = &quot;userName=%E7%8F%AD%E8%A1%A5&amp;email=zhaopin%40junmatek.com&amp;info=%E8%B7%AF1388%E5%8F%B7%E6%B0%91%E6%B6%A6%E5%A4%A7%E5%8E%A6%E4%B8%80%E5%8F%B7&quot;let decode_url = decodeURIComponent(url)console.log(decode_url)</code></pre><p>控制台的输出如下：</p><pre><code>userName=班补&amp;email=zhaopin@junmatek.com&amp;info=路1388号民润大厦一号</code></pre><h2 id="不睡觉"><a class="markdownIt-Anchor" href="#不睡觉"></a> <a href="https://blog.csdn.net/weixin_42829466">不睡觉</a> 网友写的解码函数</h2><p>这个大家可以看看，理解一下解码的过程，其实挺简单的。</p><pre><code>function decode(url) &#123;    let reg = /(%(\w|[abcdef])(\w|[abcdef]))+/g       let code = url.match(reg)    let replace_reg = /%/g    let decode_reg = /(%(\w|[abcdef])(\w|[abcdef]))+/    for(let i = 0; i &lt; code.length; i ++) &#123;        code[i] = code[i].replace(replace_reg, &quot;&quot;)    //去掉百分号        code[i] = new Buffer(code[i], &quot;hex&quot;).toString()  //转换为utf-8字符        url = url.replace(decode_reg, code[i])  //替换百分号编码    &#125;    return url&#125;</code></pre><p>先将编码段用正则表达示匹配出来，存在code数组中。然后将code数组中的代码段去掉百分号，形成的十六进制编码段再转换为对应的编码（这里页面的编码为utf-8，有时候页面编码可能是gb2312，注意区分清楚），最后用生成的字符替换url中的百分号编码。</p><p>nodejs的&quot;querystring&quot;中也有相应的解码函数，详细可以参考nodejs的API文档。</p><h2 id="致谢"><a class="markdownIt-Anchor" href="#致谢"></a> 致谢</h2><blockquote><p>不睡觉《<a href="https://blog.csdn.net/weixin_42829466/article/details/81283671">nodejs处理url中的百分号编码</a>》</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> Linux </tag>
            
            <tag> Nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux下C++利用socket获取网络时间并更新到本地</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/62276/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/62276/</url>
      
        <content type="html"><![CDATA[<h2 id="wt与rtc"><a class="markdownIt-Anchor" href="#wt与rtc"></a> WT与RTC</h2><p>网上自行搜索了解两者区别：</p><ul><li><p><strong>系统时间</strong>(WT， Wall Time)：由Linux系统软件维持的时间。</p></li><li><p><strong>RTC</strong>（Real-Time Clock）：翻译过来是实时时钟芯片。</p></li></ul><p>对于一台安装了操作系统的服务器来说，操作系统和服务器硬件本身都在记录和更新当前的时间，也就是说系统时间和RTC时间是两套独立的计时机制。简单的说就是——RTC时间才是真正持续更新，而操作系统则是只有在系统启动以后才会持续更新，在操作系统关闭或重启期间，甚至服务器下电期间，整个服务器的时间就依赖于RTC了。</p><h2 id="ntp服务器列表"><a class="markdownIt-Anchor" href="#ntp服务器列表"></a> NTP服务器列表</h2><table class="aligncenter" border="1" width="700" cellspacing="1" cellpadding="1"><tbody align="center"><tr><td style="text-align: center;"><span style="font-size: 18px;">域名</span></td><td style="text-align: center;"><span style="font-size: 18px;">IP地址</span></td></tr><tr><td width="350px"><span style="font-size: 18px;">time-a.nist.gov</span></td><td width="350px"><span style="font-size: 18px;">129.6.15.28</span></td></tr><tr><td><span style="font-size: 18px;">time-b.nist.gov</span></td><td><span style="font-size: 18px;">129.6.15.29</span></td></tr><tr><td><span style="font-size: 18px;">time-a.timefreq.bldrdoc.gov</span></td><td><span style="font-size: 18px;">132.163.4.101</span></td></tr><tr><td><span style="font-size: 18px;">time-b.timefreq.bldrdoc</span></td><td><span style="font-size: 18px;">132.163.4.102</span></td></tr><tr><td><span style="font-size: 18px;">time-c.timefreq.bldrdoc.gov</span></td><td><span style="font-size: 18px;">132.163.4.103</span></td></tr><tr><td><span style="font-size: 18px;">utcnist.colorado.edu</span></td><td><span style="font-size: 18px;">128.138.140.44</span></td></tr><tr><td><span style="font-size: 18px;">time.nist.gov</span></td><td><span style="font-size: 18px;">192.43.244.18</span></td></tr><tr><td><span style="font-size: 18px;">time-nw.nist.gov</span></td><td><span style="font-size: 18px;">131.107.1.10</span></td></tr><tr><td><span style="font-size: 18px;">nist1.datum.com</span></td><td><span style="font-size: 18px;">66.243.43.21</span></td></tr><tr><td><span style="font-size: 18px;">nist1-dc.glassey.com</span></td><td><span style="font-size: 18px;">216.200.93.8</span></td></tr><tr><td><span style="font-size: 18px;">nist1-ny.glassey.com</span></td><td><span style="font-size: 18px;">208.184.49.9</span></td></tr><tr><td><span style="font-size: 18px;">nist1-sj.glassey.com</span></td><td><span style="font-size: 18px;">207.126.98.204</span></td></tr><tr><td><span style="font-size: 18px;">nist1.aol-ca.truetime.com</span></td><td><span style="font-size: 18px;">207.200.81.113</span></td></tr><tr><td><span style="font-size: 18px;">nist1.aol-va.truetime.com</span></td><td><span style="font-size: 18px;">205.188.185.33</span></td></tr><tr><td><span style="font-size: 18px;">国家授时</span></td><td><span style="font-size: 18px;">210.72.145.44</span></td></tr></tbody></table><p><a href="https://www.ntppool.org/zone/@">ntppool</a>提供了各个地区的NTP池，我测试了几个，发现巴西的<a href="https://www.pool.ntp.org/zone/br">https://www.pool.ntp.org/zone/br</a> （200.20.186.76）比较好用。</p><h2 id="代码实现如下"><a class="markdownIt-Anchor" href="#代码实现如下"></a> 代码实现如下：</h2><pre><code>#include &lt;arpa/inet.h&gt;#include &lt;netdb.h&gt;#include &lt;netinet/in.h&gt;#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;#include &lt;sys/socket.h&gt;#include &lt;sys/types.h&gt;#include &lt;time.h&gt;#include &lt;iostream&gt;#define LOG(...)                                               \  &#123;                                                            \    fprintf(stderr, &quot;&#123;&#123;%s: Line %d:&#125;&#125;\t&quot;, __FILE__, __LINE__); \    fprintf(stderr, __VA_ARGS__);                              \    fprintf(stderr, &quot;\n&quot;);                                     \  &#125;void ntpdate();int main() &#123;  ntpdate();  return 0;&#125;void ntpdate() &#123;  char *hostname = (char *)&quot;200.20.186.76&quot;;               // pool.ntp.br NTP server IP  int portno = 123;                                       // NTP is port 123  int maxlen = 1024;                                      // check our buffers  int i;                                                  // misc var i  unsigned char msg[48] = &#123;010, 0, 0, 0, 0, 0, 0, 0, 0&#125;;  // the packet we send  unsigned long buf[maxlen];                              // the buffer we get back  // struct in_addr ipaddr;  struct protoent *proto;  //  struct sockaddr_in server_addr;  int s;      // socket  long tmit;  // the time -- This is a time_t sort of  LOG(&quot;200.20.186.76 has been setted!!&quot;);  // use Socket;  //  //#we use the system call to open a UDP socket  // socket(SOCKET, PF_INET, SOCK_DGRAM, getprotobyname(&quot;udp&quot;)) or die &quot;socket: $!&quot;;  proto = getprotobyname(&quot;udp&quot;);  s = socket(PF_INET, SOCK_DGRAM, proto-&gt;p_proto);  perror(&quot;socket&quot;);  //#convert hostname to ipaddress if needed  //$ipaddr   = inet_aton($HOSTNAME);  memset(&amp;server_addr, 0, sizeof(server_addr));  server_addr.sin_family = AF_INET;  server_addr.sin_addr.s_addr = inet_addr(hostname);  server_addr.sin_port = htons(portno);  /*   * build a message.  Our message is all zeros except for a one in the   * protocol version field   * msg[] in binary is 00 001 000 00000000   * it should be a total of 48 bytes long   */  // send the data  printf(&quot;sending data..\n&quot;);  i = sendto(s, msg, sizeof(msg), 0, (struct sockaddr *)&amp;server_addr, sizeof(server_addr));  perror(&quot;sendto&quot;);  // get the data back  struct sockaddr saddr;  socklen_t saddr_l = sizeof(saddr);  i = recvfrom(s, buf, 48, 0, &amp;saddr, &amp;saddr_l);  perror(&quot;recvfr:&quot;);  /*   * The high word of transmit time is the 10th word we get back   * tmit is the time in seconds not accounting for network delays which   * should be way less than a second if this is a local NTP server   */  tmit = ntohl((time_t)buf[4]);  //# get transmit time  /*   * Convert time to unix standard time NTP is number of seconds since 0000   * UT on 1 January 1900 unix time is seconds since 0000 UT on 1 January   * 1970 There has been a trend to add a 2 leap seconds every 3 years.   * Leap seconds are only an issue the last second of the month in June and   * December if you don't try to set the clock then it can be ignored but   * this is importaint to people who coordinate times with GPS clock sources.   */  tmit -= 2208988800U;  std::cout &lt;&lt; &quot;remote time is &quot; &lt;&lt; ctime(&amp;tmit) &lt;&lt; std::endl;  char bufCurrentTime[32];  char currentTime[64] = &quot;date -s &quot;;  strftime(bufCurrentTime, sizeof(bufCurrentTime) - 1, &quot; '%H:%M:%S %Y-%m-%d' &quot;, localtime(&amp;tmit));  std::cout &lt;&lt; &quot;bufCurrentTime:&quot; &lt;&lt; bufCurrentTime &lt;&lt; std::endl;  for (int i = 0; i &lt; 32; i++) &#123;    currentTime[8 + i] = bufCurrentTime[i];  &#125;  std::cout &lt;&lt; &quot;currentTime:&quot; &lt;&lt; currentTime &lt;&lt; std::endl;  int setInSuccess = system(currentTime);  if (setInSuccess != 0) &#123;    LOG(&quot;setTime is fail&quot;);  &#125;  i = time(0);  std::cout &lt;&lt; &quot;System time is &quot; &lt;&lt; (i - tmit) &lt;&lt; &quot; seconds off&quot; &lt;&lt; std::endl;  return 0;&#125;</code></pre><p>可能会报如下错误：</p><pre><code>patten@patten-hp:~/diskTwo/demoCode/cppTime$ g++ getTime.cpp patten@patten-hp:~/diskTwo/demoCode/cppTime$ ./a.out socket: Successsending data..sendto: Successrecvfr:: Successtime is Wed Jun 19 15:33:51 2019currentTime:date -s 2019/06/19date: 无法设置日期: 不允许的操作2019年 06月 19日 星期三 00:00:00 CST&#123;&#123;getTime.cpp: Line 103:&#125;&#125;      setTime is failSystem time is -198251 seconds off</code></pre><p>主要原因在于执行system指令时权限不够，所以执行该程序时，应该拥有root权限。</p><h2 id="cperror函数"><a class="markdownIt-Anchor" href="#cperror函数"></a> C++perror函数</h2><ul><li>C++中的errno变量，是用来记录错误类型。当调用，某些函数出错时，会自动设置errno的值。此时，可以利用perror，将errno错误输出。</li><li>作用：将上一个函数发生的错误原因，输出到标准设备.</li></ul><p>代码解析：</p><pre><code>// 头文件#include &lt;stdio.h&gt;/* 函数原型 * 参数str，指定要输出的字符串 * 如 perror(&quot;Error:&quot;) * 输出 Error: error message */void perror (const char* str)// 例子#include &lt;stdio.h&gt;int main()&#123;    FILE* fp;    fp = fopen（&quot;/xxx/xxx&quot;, &quot;r+&quot;);    if (NULL == fp) &#123;        perror(&quot;Error: &quot;);    &#125;    return 0;&#125;</code></pre><p>关联文章：<strong><a href="https://blog.svenhetin.com/c-huo-qu-dang-qian-shi-jian-ri-qi-yy-mm-dd-hh-mm-ss/">Linux下C++获取当前时间（日期）YY-MM-DD hh:mm:ss</a></strong></p>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bitbake.bb文件解析</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/9960/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/9960/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br></pre></td><td class="code"><pre><span class="line">SUMMARY &#x3D; &quot;Linux Bluetooth Stack Userland V5&quot;</span><br><span class="line"># 用於打包系統（例如opkg，rpm或dpkg）的二進制包的（72個字符或更少）摘要。</span><br><span class="line">默認情況下，如果在配方中未設置DESCRIPTION，則使用SUMMARY值的定義描述變量。</span><br><span class="line"> </span><br><span class="line">DESCRIPTION &#x3D; &quot;Linux Bluetooth stack V5 userland components.  </span><br><span class="line">These include a system configurations, daemons, tools and system libraries.&quot;</span><br><span class="line"># 提供給包管理器的包描述信息。如果未設置，說明將使用內容變量的值</span><br><span class="line"> </span><br><span class="line">HOMEPAGE &#x3D; &quot;http:&#x2F;&#x2F;www.bluez.org&quot;</span><br><span class="line"># 一般為配方的正在構建的軟件的主頁，從中可以獲取更多的軟件信息。</span><br><span class="line"> </span><br><span class="line">SECTION &#x3D; &quot;libs&quot;</span><br><span class="line"># 用於對軟件包進行分類，此變量用於軟件包管理程序。</span><br><span class="line"> </span><br><span class="line">LICENSE &#x3D; &quot;GPLv2+ &amp; LGPLv2.1+&quot;</span><br><span class="line"># 配方的源文件許可列表.LICENSE需遵循以下規則：</span><br><span class="line"># 　　（1）不要在單個許可名稱中使用空格</span><br><span class="line"># 　　（2）當許可可選擇多個時，使用| 分隔許可證。</span><br><span class="line"># 　　（3）當存在涵蓋源文件的不同部分的多個許可證時，使用與分隔許可證。</span><br><span class="line"># 　　（4）您可以在許可名稱之間使用空格。</span><br><span class="line"># 　　（5）對於標準許可，請使用元&#x2F;文件&#x2F; common-licenses &#x2F;中的LICENSE，</span><br><span class="line">或者在meta &#x2F; conf &#x2F; licenses.conf中定義的具有SPDXLICENSEMAP標誌的LICENSE。</span><br><span class="line"># 下面是一些例子：</span><br><span class="line">#  LICENSE &#x3D;「LGPLv2.1 | GPLv3」</span><br><span class="line">#  LICENSE &#x3D;「MPL-1＆LGPLv2.1」</span><br><span class="line">#  LICENSE &#x3D;「GPLv2 +」</span><br><span class="line"># 第一個示例來自Qt的配方，源文件可以選擇LGPLv2.1或GPLv3許可。第二個示例來自Cairo，其中兩個LICENSE涵蓋源代碼的不同部分。</span><br><span class="line">最後一個示例來自sysstat，它提供了一個單一的LICENSE。</span><br><span class="line"># 您還可以針對每個包指定LICENSE以處理輸出組件具有不同的LICENSE情況。</span><br><span class="line">例如，如果某個軟件的代碼根據GPLv2許可，但是文檔卻根據GNU 1.2自由文檔許可，其LICENSE可以被規定如下:</span><br><span class="line"># LICENSE &#x3D;「GFDL-1.2＆GPLv2」</span><br><span class="line"># LICENSE _ $ &#123;PN&#125; &#x3D;「GPLv2」</span><br><span class="line"># LICENSE _ $ &#123;PN&#125; -doc &#x3D;「GFDL-1.2」</span><br><span class="line"> </span><br><span class="line">LIC_FILES_CHKSUM &#x3D; &quot;file:&#x2F;&#x2F;COPYING;md5&#x3D;12f884d2ae1ff87c09e5b7ccc2c4ca7e \</span><br><span class="line">                    file:&#x2F;&#x2F;COPYING.LIB;md5&#x3D;fb504b67c50331fc78734fed90fb0e09 \</span><br><span class="line">                    file:&#x2F;&#x2F;src&#x2F;main.c;beginline&#x3D;1;endline&#x3D;24;md5&#x3D;9bc54b93cd7e17bf03f52513f39f926e&quot;</span><br><span class="line"># 配方文件構建的軟件源代碼中的許可文本的校驗和。</span><br><span class="line"># 此變量跟蹤軟件源代碼文件的許可文本的更改。如果許可文本被更改，它將觸發構建失敗，這使開發人員有機會審查任何許可更改。</span><br><span class="line"># 所有配方文件必須定義此變量（除非許可設置為「關閉」）。</span><br><span class="line"> </span><br><span class="line">DEPENDS &#x3D; &quot;udev libusb dbus-glib glib-2.0 libcheck readline&quot;</span><br><span class="line"># 列出配方的構建時的依賴項（即其他配方文件）。</span><br><span class="line">在執行配方的配置任務之前，系統確保列出的所有依賴項都已構建，並且所有依賴項的內容已經保存在相應的 sysroot 中。</span><br><span class="line"># 考慮這個簡單的例子，兩個名為「a」和「b」的配方生成類似命名的包。</span><br><span class="line">在本示例中，DEPENDS語句出現在「a」配方中：</span><br><span class="line">#   DEPENDS &#x3D;「b」  </span><br><span class="line"># 這裡，DEPENDS使得配方「a」的do_configure任務取決於配方「b」的do_populate_sysroot任務。</span><br><span class="line">這意味著當配方「a」正在配置自身時，配方「b」放入sysroot的任何內容都必須可用。</span><br><span class="line"> </span><br><span class="line">PROVIDES +&#x3D; &quot;bluez-hcidump&quot;</span><br><span class="line"># 用於提供配方的別名。默認情況下，配方自己的PN已經包含在PROVIDES列表中。</span><br><span class="line">如果配方使用PROVIDES，則別名是配方的PN的同義詞，並可用於其他配方的DEPENDS中。</span><br><span class="line"># 以配方文件libav_0.8.11.bb為例，libav_0.8.11.bb中的現狀提供語句如下：</span><br><span class="line">#   PROVIDES +&#x3D; 「libpostproc」</span><br><span class="line"># 該現狀提供語句使得「libav」配方也被稱為「libpostproc」。</span><br><span class="line"> </span><br><span class="line">RPROVIDES_$&#123;PN&#125; +&#x3D; &quot;bluez-hcidump&quot;</span><br><span class="line"># 用於提供包名的別名列表。這些別名用於滿足其他包在構造期間和指定目標時（在RDEPENDS所指定的）的運行時依賴。</span><br><span class="line"># 注意</span><br><span class="line"># 程序包自身的名稱（PN）已隱含在其。RPROVIDES中列表</span><br><span class="line"># 與所有程序包控制變量一樣，您必須始終將該變量與包名結合使用例如：</span><br><span class="line">#   RPROVIDES_$&#123;PN&#125; &#x3D;「widget-abi-2」</span><br><span class="line"> </span><br><span class="line">RCONFLICTS_$&#123;PN&#125; &#x3D; &quot;bluez4&quot;</span><br><span class="line"># 用於指定與當前軟件包衝突的軟件包列表。請注意，如果沒有先刪除衝突的包，則不會安裝當前軟件包。</span><br><span class="line"># 與所有包控制變量一樣，您必須始終將其與包名結合使用。例如：</span><br><span class="line">#   RCONFLICTS _ $ &#123;PN&#125; &#x3D;「another_conflicting_package_name」</span><br><span class="line"># OpenEmbedded構架系統使用的BitBake支持指定衝突的軟件包版本。</span><br><span class="line">雖然語法因為軟件打包格式而異，但BitBake會隱藏這些差異。</span><br><span class="line">下面是使用RCONFLICTS變量指定衝突的軟件包的一般語法：</span><br><span class="line">#   RCONFLICTS _ $ &#123;PN&#125; &#x3D;「package（operator version）」</span><br><span class="line"># 對於運營商，以下內容說明了當前軟件包與軟件包FOO的1.2或更高版本衝突：</span><br><span class="line">#   RCONFLICTS _ $ &#123;PN&#125; &#x3D;「foo（&gt; &#x3D; 1.2）」</span><br><span class="line"> </span><br><span class="line">PACKAGECONFIG ??&#x3D; &quot;obex-profiles&quot;</span><br><span class="line">PACKAGECONFIG[obex-profiles] &#x3D; &quot;--enable-obex,--disable-obex,libical&quot;</span><br><span class="line">PACKAGECONFIG[experimental] &#x3D; &quot;--enable-experimental,--disable-experimental,&quot;</span><br><span class="line"># 該變量提供了在配方上啟用或禁用配方的 feature 的方法您可以在配方中指定的 feature 以及 feature 的參數來創建PACKAGECONFIG塊以下是基本的塊結構。：</span><br><span class="line">#   PACKAGECONFIG ?? &#x3D;「f1 f2 f3 ...」</span><br><span class="line">#   PACKAGECONFIG [f1] &#x3D;「--with-f1， - without-f1，build-deps-f1，rt-deps-f1」</span><br><span class="line">#   PACKAGECONFIG [f2] &#x3D;「--with-f2， - without-f2，build-deps-f2，rt-deps-f2」</span><br><span class="line">#   PACKAGECONFIG [f3] &#x3D;「--with-f3， - without-f3，build-deps-f3，rt-deps-f3」</span><br><span class="line"># PACKAGECONFIG首先指定了一個空格分隔的要啟用的功能列表。</span><br><span class="line">在feature列表下面，您可以通過提供最多四個按順序排列的參數來確定每個 feature的行為，這些參數之間用逗號分隔。</span><br><span class="line">您可以省略。</span><br><span class="line">任何您喜歡的參數，但必須保留逗號分隔符您必須按照以下順序指定 feature的參數：</span><br><span class="line"># 　　1.如果啟用了該功能，則應將額外的參數添加到配置腳本參數列表（EXTRA_OECONF）。</span><br><span class="line"># 　　2.如果禁用了該功能，應該將額外的參數添加到EXTRA_OECONF。</span><br><span class="line"># 　　3.如果啟用了該功能，則應添加附加的構建時依賴關係（DEPENDS）。</span><br><span class="line"># 　　4.如果啟用了該功能，應該添加附加的運行時依賴關係（RDEPENDS）。</span><br><span class="line"># 以的librsvg中的PACKAGECONFIG塊為例。</span><br><span class="line">在這個例子中，feature是croco，它通過三個參數來確定其行為。</span><br><span class="line">#   PACKAGECONFIG ?? &#x3D;「croco」</span><br><span class="line">#   PACKAGECONFIG [croco] &#x3D;「 - with-croco，- without-croco，libcroco」</span><br><span class="line"># –with-croco和libcroco參數僅在啟用此feature時適用。</span><br><span class="line">在這種情況下，–with-croco將被添加到配置腳本的參數列表中，而libcroco將被添加到DEPENDS中。</span><br><span class="line">另一方面，如果您通過另一層中的.bbappend文件禁用該功能，則第二個參數–without-croco將會被添加到配置腳本中，而不是–with-croco。</span><br><span class="line">基本的PACKAGECONFIG結構適用於創建塊或者更改塊。</span><br><span class="line">如果要更改現有的PACKAGECONFIG塊，可以採用以下兩種方法之一： </span><br><span class="line"># 1.附加文件：在您的層（layer）中創建一個名為recipename.bbappend的附加文件，並覆蓋PACKAGECONFIG的值。您可以完全覆蓋變量的值：</span><br><span class="line">#     PACKAGECONFIG &#x3D;「f4 f5」</span><br><span class="line">#   或者，您可以只添加變量的值：</span><br><span class="line">#     PACKAGECONFIG_append &#x3D;「f4」</span><br><span class="line"># 2.配置文件：如果您沒有修改local.conf或mydistro.conf文件，此方法與通過附加文件更改塊相同。</span><br><span class="line">與之前描述的附加文件一樣，您可以完全覆蓋變量的值：</span><br><span class="line">#     PACKAGECONFIG_pn-recipename &#x3D;「f4 f5」</span><br><span class="line">#   或者，您可以只修改變量的值：</span><br><span class="line">#     PACKAGECONFIG_append_pn-recipename &#x3D;「f4」</span><br><span class="line"> </span><br><span class="line">SRC_URI &#x3D; &quot;\</span><br><span class="line">    $&#123;KERNELORG_MIRROR&#125;&#x2F;linux&#x2F;bluetooth&#x2F;bluez-$&#123;PV&#125;.tar.xz \</span><br><span class="line">    file:&#x2F;&#x2F;out-of-tree.patch \</span><br><span class="line">    file:&#x2F;&#x2F;set_device_class.patch \</span><br><span class="line">    file:&#x2F;&#x2F;init \</span><br><span class="line">    file:&#x2F;&#x2F;run-ptest \</span><br><span class="line">    $&#123;@bb.utils.contains(&#39;DISTRO_FEATURES&#39;, &#39;systemd&#39;, &#39;&#39;, &#39;file:&#x2F;&#x2F;0001-Allow-using-obexd-without-systemd-in-the-user-sessio.patch&#39;, d)&#125; \</span><br><span class="line">    file:&#x2F;&#x2F;0001-tests-add-a-target-for-building-tests-without-runnin.patch \</span><br><span class="line">&quot;</span><br><span class="line"># 用於指定源文件列表（本地或遠程）。</span><br><span class="line">這個變量告訴OpenEmbedded構建系統哪些位要進入構建以及如何獲取它們。</span><br><span class="line">例如，如果配方或附加文件只需要從Internet中提取壓縮後的源文件，則配方或附加文件只需使用單個SRC_URI條目即可。</span><br><span class="line">另一方面，如果配方或附加文件需要同時獲取壓縮後的源文件，應用兩個補丁以及自定義文件，則配方或附加文件中的SRC_URI變量將包括四個條目。 </span><br><span class="line"># 以下列出了可用的URI協議： </span><br><span class="line"># 　　file：&#x2F;&#x2F;-從本地獲取文件，這些文件通常是元數據附帶的文件。</span><br><span class="line">其路徑相對於FILESPATH變量。因此，構建系統按順序從配方文件（.bb）或附加文件（.bbappend）所在的目錄的子目錄中搜索：</span><br><span class="line"> </span><br><span class="line">#   1 $&#123;BPN&#125; - 沒有任何特殊後綴或版本號的配方名稱。</span><br><span class="line">#   2 $&#123;BP&#125; - $ &#123;BPN&#125; - $ &#123;PV&#125;。配方的名稱和版本，但沒有任何特殊的包名稱後綴。</span><br><span class="line"># files - files目錄中的文件，一般配方或附加文件旁邊。 </span><br><span class="line"># 　　注意： </span><br><span class="line"># 　　如果希望構建系統從append文件中選取通過SRC_URI語句指定的文件，則可以通過在append文件中使用FILESEXTRAPATHS變量來擴展FILESPATH變量。 </span><br><span class="line"># 　　bzr：&#x2F;&#x2F; - 從Bazaar版本控制存儲庫獲取文件。 </span><br><span class="line"># 　　git：&#x2F;&#x2F; - 從Git版本控制存儲庫獲取文件。 </span><br><span class="line"># 　　osc：&#x2F;&#x2F; - 從OSC（OpenSUSE Build服務）版本控制存儲庫獲取文件。 </span><br><span class="line"># 　　repo：&#x2F;&#x2F; - 從repo（Git）存儲庫獲取文件。 </span><br><span class="line"># 　　ccrc：&#x2F;&#x2F; - 從ClearCase存儲庫獲取文件。 </span><br><span class="line"># 　　http：&#x2F;&#x2F; - 使用http從Internet獲取文件。 </span><br><span class="line"># 　　https：&#x2F;&#x2F; - 使用https從Internet獲取文件。 </span><br><span class="line"># 　　ftp：&#x2F;&#x2F; - 使用ftp從Internet獲取文件。 </span><br><span class="line"># 　　cvs：&#x2F;&#x2F; - 從CVS版本控制存儲庫獲取文件。 </span><br><span class="line"># 　　hg：&#x2F;&#x2F; - 從Mercurial（hg）版本控制存儲庫獲取文件。 </span><br><span class="line"># 　　p4：&#x2F;&#x2F; - 從Perforce（p4）版本控制存儲庫獲取文件。 </span><br><span class="line"># 　　ssh：&#x2F;&#x2F; - 從安全shell獲取文件。 </span><br><span class="line"># 　　svn：&#x2F;&#x2F; - 從Subversion（svn）版本控制存儲庫獲取文件。 </span><br><span class="line"># 針對SRC_URI的每個條目還有一些標準和特定的配方選項。以下是標準選項： </span><br><span class="line"># 　　apply - 是否應用補丁。默認操作是應用補丁。 </span><br><span class="line"># 　　striplevel - 應用補丁時使用的級別。默認級別為1。 </span><br><span class="line"># 　　patchdir - 指定補丁的目錄。默認值為$ &#123;S&#125;。 </span><br><span class="line"># 以下是版本控制系統針對配方構建代碼的選項： </span><br><span class="line"># 　　mindate - 只有在SRCDATE等於或大於mindat時才應用補丁 </span><br><span class="line"># 　　maxdate - 僅當SRCDATE不晚於mindate時才應用補丁。 </span><br><span class="line"># 　　minrev - 僅當SRCREV等於或大於minrev時才應用補丁。 </span><br><span class="line"># 　　maxrev - 僅當SRCREV不晚於maxrev時才應用補丁。 </span><br><span class="line"># 　　rev - 僅當SRCREV等於rev時才應用補丁。 </span><br><span class="line"># 　　notrev - 僅當SRCREV不等於rev時才應用補丁。 </span><br><span class="line"># 這裡還有一些值得一提的額外選項： </span><br><span class="line"># 　　unpack - 控制是否解壓縮文件（如果是歸檔文件）。默認操作是解壓縮文件。 </span><br><span class="line"># 　　subdir - 將文件（或提取其內容）放置到WORKDIR的指定子目錄中。</span><br><span class="line">此選項對於異常tarball或其他那些解壓後文件不放置在子目錄的歸檔文件非常有用。 </span><br><span class="line"># 　　name - 當SRC_URI中有多個文件時，指定與SRC_URI校驗相關的名稱。 </span><br><span class="line"># 　　downloadfilename - 指定存儲下載文件時使用的文件名。</span><br><span class="line"> </span><br><span class="line">S &#x3D; &quot;$&#123;WORKDIR&#125;&#x2F;bluez-$&#123;PV&#125;&quot;</span><br><span class="line"># 配方文件中源文件解壓縮後在build目錄中的位置。 此位置在工作目錄（WORKDIR）中，且不是靜態的。 </span><br><span class="line">解壓縮後的源文件位置取決於配方名稱（PN）和配方版本（PV），如下所示：</span><br><span class="line">#   $ &#123;WORKDIR&#125; &#x2F; $ &#123;PN&#125; - $ &#123;PV&#125;</span><br><span class="line"># 例如，假設一個名為poky的源目錄頂級文件夾和一個poky &#x2F; build的默認構建目錄。 </span><br><span class="line">在這種情況下，構建系統用於保留db配方源文件解壓縮後的目錄如下： </span><br><span class="line"># poky &#x2F; build &#x2F; tmp &#x2F; work &#x2F; qemux86-poky-linux &#x2F; db &#x2F; 5.1.19-r3 &#x2F; db-5.1.19</span><br><span class="line"> </span><br><span class="line">inherit autotools pkgconfig systemd update-rc.d distro_features_check ptest</span><br><span class="line"># 用於指定在解析過程中應繼承的類。 該變量僅在配置文件中有效。</span><br><span class="line"> </span><br><span class="line">EXTRA_OECONF &#x3D; &quot;\</span><br><span class="line">  --enable-tools \</span><br><span class="line">  --disable-cups \</span><br><span class="line">  --enable-test \</span><br><span class="line">  --enable-datafiles \</span><br><span class="line">  $&#123;@bb.utils.contains(&#39;DISTRO_FEATURES&#39;, &#39;systemd&#39;, &#39;--enable-systemd&#39;, &#39;--disable-systemd&#39;, d)&#125; \</span><br><span class="line">  --enable-library \</span><br><span class="line">&quot;</span><br><span class="line"># 指定用於configure 的參數。</span><br><span class="line"> </span><br><span class="line"># bluez5 builds a large number of useful utilities but does not</span><br><span class="line"># install them.  Specify which ones we want put into $&#123;PN&#125;-noinst-tools.</span><br><span class="line">NOINST_TOOLS_READLINE ??&#x3D; &quot;&quot;</span><br><span class="line">NOINST_TOOLS_EXPERIMENTAL ??&#x3D; &quot;&quot;</span><br><span class="line">NOINST_TOOLS &#x3D; &quot; \</span><br><span class="line">    $&#123;NOINST_TOOLS_READLINE&#125; \</span><br><span class="line">    $&#123;@bb.utils.contains(&#39;PACKAGECONFIG&#39;, &#39;experimental&#39;, &#39;$&#123;NOINST_TOOLS_EXPERIMENTAL&#125;&#39;, &#39;&#39;, d)&#125; \</span><br><span class="line">&quot;</span><br><span class="line"> </span><br><span class="line">do_install_append() &#123;</span><br><span class="line">    install -d $&#123;D&#125;$&#123;INIT_D_DIR&#125;</span><br><span class="line">    # 目標目錄。do_install任務在build目錄中安裝組件的位置。 此位置默認為：</span><br><span class="line">    #   $ &#123;WORKDIR&#125; &#x2F; image</span><br><span class="line"> </span><br><span class="line">    install -m 0755 $&#123;WORKDIR&#125;&#x2F;init $&#123;D&#125;$&#123;INIT_D_DIR&#125;&#x2F;bluetooth</span><br><span class="line">    # OpenEmbedded構建系統構建配方的工作目錄的路徑名。</span><br><span class="line">此目錄位於TMPDIR目錄結構中，並且特定於正在構建的配方和正在構建的系統。 </span><br><span class="line">    # WORKDIR目錄定義如下：</span><br><span class="line"> </span><br><span class="line">    # $ &#123;TMPDIR&#125; &#x2F; work &#x2F; $ &#123;MULTIMACH_TARGET_SYS&#125; &#x2F; $ &#123;PN&#125; &#x2F; $ &#123;EXTENDPE&#125; $ &#123;PV&#125; - $ &#123;PR&#125;</span><br><span class="line">    # 1</span><br><span class="line">    # 實際目錄取決於幾個事情： </span><br><span class="line">    # 　　TMPDIR：最上層構建輸出目錄 </span><br><span class="line">    # 　　MULTIMACH_TARGET_SYS：目標系統 </span><br><span class="line">    # 　　PN：配方名稱 </span><br><span class="line">    # 　　EXTENDPE：時間戳？ - （如果PE未指定，這通常是大多數配方的情況，則EXTENDPE為空） </span><br><span class="line">    # 　　PV：配方版本 </span><br><span class="line">    # 　　PR：配方修訂版 </span><br><span class="line">    # 例如，假設源目錄最上層文件夾名稱為poky，默認構建目錄為poky&#x2F;build，目標系統為qemux86-poky-linux。此外，假設您的配方名為foo_1.3.0-r0.bb。在這種情況下，構建系統用於構建包的工作目錄（WORKDIR）將如下所示： </span><br><span class="line">    # poky &#x2F; build &#x2F; tmp &#x2F; work &#x2F; qemux86-poky-linux &#x2F; foo &#x2F; 1.3.0-r0</span><br><span class="line"> </span><br><span class="line">    install -d $&#123;D&#125;$&#123;sysconfdir&#125;&#x2F;bluetooth&#x2F;</span><br><span class="line">    if [ -f $&#123;S&#125;&#x2F;profiles&#x2F;audio&#x2F;audio.conf ]; then</span><br><span class="line">      # 配方文件中源文件解壓縮後在build目錄中的位置。 </span><br><span class="line">此位置在工作目錄（WORKDIR）中，且不是靜態的。 解壓縮後的源文件位置取決於配方名稱（PN）和配方版本（PV），如下所示：</span><br><span class="line"> </span><br><span class="line">        install -m 0644 $&#123;S&#125;&#x2F;profiles&#x2F;audio&#x2F;audio.conf $&#123;D&#125;&#x2F;$&#123;sysconfdir&#125;&#x2F;bluetooth&#x2F;</span><br><span class="line">        # 配置文件中源文件解壓縮後在build目錄中的位置。</span><br><span class="line">此位置在工作目錄（WORKDIR）中，並且不是靜態的。解壓縮後的源文件位置取決於配置名稱（PN）和配方版本（PV） ，如下所示：</span><br><span class="line">        #   $ &#123;WORKDIR&#125; &#x2F; $ &#123;PN&#125; - $ &#123;PV&#125;</span><br><span class="line">        # 例如，假設一個名為poky的源目錄頂級文件夾和一個poky &#x2F; build的默認構造目錄。</span><br><span class="line">在這種情況下，構建系統用於保留db配方源文件解壓縮後的目錄如下：</span><br><span class="line">        # poky &#x2F; build &#x2F; tmp &#x2F; work &#x2F; qemux86-poky-linux &#x2F; db &#x2F; 5.1.19-r3 &#x2F; db-5.1.19</span><br><span class="line">    fi</span><br><span class="line">    if [ -f $&#123;S&#125;&#x2F;profiles&#x2F;network&#x2F;network.conf ]; then</span><br><span class="line">        install -m 0644 $&#123;S&#125;&#x2F;profiles&#x2F;network&#x2F;network.conf $&#123;D&#125;&#x2F;$&#123;sysconfdir&#125;&#x2F;bluetooth&#x2F;</span><br><span class="line">    fi</span><br><span class="line">    if [ -f $&#123;S&#125;&#x2F;profiles&#x2F;input&#x2F;input.conf ]; then</span><br><span class="line">        install -m 0644 $&#123;S&#125;&#x2F;profiles&#x2F;input&#x2F;input.conf $&#123;D&#125;&#x2F;$&#123;sysconfdir&#125;&#x2F;bluetooth&#x2F;</span><br><span class="line">    fi</span><br><span class="line"> </span><br><span class="line">        if [ -f $&#123;S&#125;&#x2F;src&#x2F;main.conf ]; then</span><br><span class="line">        install -m 0644 $&#123;S&#125;&#x2F;src&#x2F;main.conf $&#123;D&#125;&#x2F;$&#123;sysconfdir&#125;&#x2F;bluetooth&#x2F;</span><br><span class="line">    fi</span><br><span class="line"> </span><br><span class="line">  if [ -f $&#123;D&#125;&#x2F;$&#123;sysconfdir&#125;&#x2F;init.d&#x2F;bluetooth ]; then</span><br><span class="line">    sed -i -e &#39;s#@LIBEXECDIR@#$&#123;libexecdir&#125;#g&#39; $&#123;D&#125;&#x2F;$&#123;sysconfdir&#125;&#x2F;init.d&#x2F;bluetooth</span><br><span class="line">  fi</span><br><span class="line"> </span><br><span class="line">    # Install desired tools that upstream leaves in build area</span><br><span class="line">        for f in $&#123;NOINST_TOOLS&#125; ; do</span><br><span class="line">        install -m 755 $&#123;B&#125;&#x2F;$f $&#123;D&#125;&#x2F;$&#123;bindir&#125;</span><br><span class="line">    done</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">ALLOW_EMPTY_libasound-module-bluez &#x3D; &quot;1&quot;</span><br><span class="line">PACKAGES &#x3D;+ &quot;libasound-module-bluez $&#123;PN&#125;-testtools $&#123;PN&#125;-obex $&#123;PN&#125;-noinst-tools&quot;</span><br><span class="line"> </span><br><span class="line">FILES_libasound-module-bluez &#x3D; &quot;$&#123;libdir&#125;&#x2F;alsa-lib&#x2F;lib*.so $&#123;datadir&#125;&#x2F;alsa&quot;</span><br><span class="line">FILES_$&#123;PN&#125; +&#x3D; &quot;$&#123;libdir&#125;&#x2F;bluetooth&#x2F;plugins&#x2F;*.so $&#123;base_libdir&#125;&#x2F;udev&#x2F; $&#123;nonarch_base_libdir&#125;&#x2F;udev&#x2F; $&#123;systemd_unitdir&#125;&#x2F; $&#123;datadir&#125;&#x2F;dbus-1&quot;</span><br><span class="line"># 指定需要放入包中的目錄或文件的列表。 </span><br><span class="line"># 使用FILES變量時，必須與生成包的包名結合使用。然後提供一個空格分隔的文件或路徑列表，用於標識要包含在生成包中的文件。例如：</span><br><span class="line"> </span><br><span class="line"># FILES _ $ &#123;PN&#125; + &#x3D;「$ &#123;bindir&#125; &#x2F; mydir1 &#x2F; $ &#123;bindir&#125; &#x2F; mydir2 &#x2F; myfile」</span><br><span class="line"># 1</span><br><span class="line"># 注意: </span><br><span class="line"># 當為FILES變量指定文件或路徑時，最好使用相對路徑。</span><br><span class="line">例如，使用sysconfdir而不是&#x2F;etc，或 &#123;bindir&#125;而不是&#x2F; usr &#x2F; bin。您可以在源目錄中的meta &#x2F; conf &#x2F; bitbake.conf文件的頂部找到這些變量的列表。 </span><br><span class="line"># 如果您提供的FILES變量中的一些文件是可編輯的，並且您知道它們不應該在軟件包管理系統（PMS）的軟件包更新過程中被覆蓋，您可以讓PMS識別這些文件，以便PMS不會覆蓋它們。</span><br><span class="line">有關如何使PMS的識別這些文件，請參考CONFFILES變量。</span><br><span class="line"> </span><br><span class="line">FILES_$&#123;PN&#125;-dev +&#x3D; &quot;\</span><br><span class="line">  $&#123;libdir&#125;&#x2F;bluetooth&#x2F;plugins&#x2F;*.la \</span><br><span class="line">  $&#123;libdir&#125;&#x2F;alsa-lib&#x2F;*.la \</span><br><span class="line">&quot;</span><br><span class="line"> </span><br><span class="line">FILES_$&#123;PN&#125;-obex &#x3D; &quot;$&#123;libexecdir&#125;&#x2F;bluetooth&#x2F;obexd \</span><br><span class="line">                    $&#123;exec_prefix&#125;&#x2F;lib&#x2F;systemd&#x2F;user&#x2F;obex.service \</span><br><span class="line">                    $&#123;datadir&#125;&#x2F;dbus-1&#x2F;services&#x2F;org.bluez.obex.service \</span><br><span class="line">                   &quot;</span><br><span class="line">SYSTEMD_SERVICE_$&#123;PN&#125;-obex &#x3D; &quot;obex.service&quot;</span><br><span class="line"># 如果配方繼承了systemd類，那麼此變量為配方生成包的指定了systemd的服務名稱。</span><br><span class="line">當您在配方中使用此文件時，請指定包名，以保證變量值應用到目標包上。下面是一個來自connman配方中的例子：</span><br><span class="line">#   SYSTEMD_SERVICE _ $ &#123;PN&#125; &#x3D;「connman.service」</span><br><span class="line"> </span><br><span class="line">FILES_$&#123;PN&#125;-testtools &#x3D; &quot;$&#123;libdir&#125;&#x2F;bluez&#x2F;test&#x2F;*&quot;</span><br><span class="line"> </span><br><span class="line">def get_noinst_tools_paths (d, bb, tools):</span><br><span class="line">    s &#x3D; list()</span><br><span class="line">    bindir &#x3D; d.getVar(&quot;bindir&quot;, True)</span><br><span class="line">    for bdp in tools.split():</span><br><span class="line">        f &#x3D; os.path.basename(bdp)</span><br><span class="line">        s.append(&quot;%s&#x2F;%s&quot; % (bindir, f))</span><br><span class="line">    return &quot;\n&quot;.join(s)</span><br><span class="line"> </span><br><span class="line">FILES_$&#123;PN&#125;-noinst-tools &#x3D; &quot;$&#123;@get_noinst_tools_paths(d, bb, d.getVar(&#39;NOINST_TOOLS&#39;, True))&#125;&quot;</span><br><span class="line"> </span><br><span class="line">RDEPENDS_$&#123;PN&#125;-testtools +&#x3D; &quot;python python-dbus python-pygobject&quot;</span><br><span class="line"># 列出包的運行時依賴關係（即其他程序包），依賴包必須先安裝才能使當前構建的程序包正常運行。</span><br><span class="line">如果在構建過程中找不到此列表中的依賴包，構建將會失敗。 </span><br><span class="line"># 當在配方中使用RDEPENDS變量時，說明當前配方的do_build任務取決於特定包。</span><br><span class="line">下面以兩個名為「a」和「b」的配方為例，它們生成類似命名的IPK包。在此示例中，RDEPENDS語句顯示在「a」配方中：</span><br><span class="line"># RDEPENDS _ $ &#123;PN&#125; &#x3D;「b」</span><br><span class="line">#</span><br><span class="line"># 這裡，RDEPENDS使得配方「a」的do_build任務取決於配方「b」的do_package_write_ipk任務。</span><br><span class="line">這意味著當構建配方「a」時，「b」的包文件必須可用。更重要的是，以包管理器理解的方式，包「a」將被標記為依賴於包「b。 </span><br><span class="line"># 在RDEPENDS中列出的包的名稱必須是其他包的名稱 - 它們不能是配方名稱。</span><br><span class="line">雖然軟件包名稱和配方名稱通常匹配，但重要的是，您必須在RDEPENDS變量中提供軟件包名稱。</span><br><span class="line">有關如何從配方創建軟件包的示例，請參考PACKAGES變量。 </span><br><span class="line"># 因為RDEPENDS變量適用於正在構建的包，所以您應該始終使用帶有附加的包名稱的形式的變量名。</span><br><span class="line">例如，假設您正在構建一個依賴於perl包的開發包。在這種情況下，您將使用以下RDEPENDS語句：</span><br><span class="line"># RDEPENDS _ $ &#123;PN&#125; -dev + &#x3D;「perl」</span><br><span class="line"># </span><br><span class="line"># 在該示例中，RDEPENDS變量具有$ &#123;PN&#125; -dev包名稱作為變量名的一部分。 </span><br><span class="line"># 附加到RDEPENDS變量的程序包，在通過類（如debian）重命名之前，其包名必需同PACKAGES命名空間中的名稱一致。 </span><br><span class="line"># 在許多情況下，您不需要使用RDEPENDS顯式添加運行時的依賴包，因為配方會自動運行某些處理： </span><br><span class="line"># shlibdeps：如果運行時的程序包包含共享庫（.so），構建過程中將處理庫以及與其動態鏈接的其他庫，並在創建運行時的包時將這些庫添加到RDEPENDS。 </span><br><span class="line"># pcdeps：如果程序包含有pkg-config文件，則構建過程中將使用此文件將條目添加到RDEPENDS變量以創建運行時的程序包。 </span><br><span class="line"># OpenEmbedded構建系統使用的BitBake支持依賴指定版本的特性。</span><br><span class="line">雖然語法因軟件包打包格式而異，但BitBake會隱藏這些差異。以下是使用RDEPENDS變量指定依賴軟件包版本的一般語法：</span><br><span class="line"> </span><br><span class="line"># RDEPENDS _ $ &#123;PN&#125; &#x3D;「package（operator version）」</span><br><span class="line"># 1</span><br><span class="line"># 對於operator，您可以指定以下內容：</span><br><span class="line">#   &#x3D;,&lt;,&gt;,&lt;&#x3D;,&gt;&#x3D;</span><br><span class="line"># </span><br><span class="line"># 例如，以下內容說明配方運行時依賴軟件包foo的1.2或更高版本：</span><br><span class="line"># RDEPENDS _ $ &#123;PN&#125; &#x3D;「foo（&gt; &#x3D; 1.2）」</span><br><span class="line"># </span><br><span class="line"># 有關構建時依賴的內容，請參考DEPENDS變量</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">SYSTEMD_SERVICE_$&#123;PN&#125; &#x3D; &quot;bluetooth.service&quot;</span><br><span class="line">INITSCRIPT_PACKAGES &#x3D; &quot;$&#123;PN&#125;&quot;</span><br><span class="line"># 包含初始化的軟件包列表。 如果有多個包，則應該使用帶有附加的包名稱的形式的變量名。 </span><br><span class="line"># 只有配方繼承update-rc.d.bbclass，此變量才可使用。該變量是可選的且默認為值為PN。</span><br><span class="line">INITSCRIPT_NAME_$&#123;PN&#125; &#x3D; &quot;bluetooth&quot;</span><br><span class="line"># 安裝到$ &#123;sysconfdir&#125; &#x2F;init.d的初始化腳本名。 </span><br><span class="line"># 只有配方繼承update-rc.d.bbclass，此變量才可使用。 此變量是必需的。</span><br><span class="line"> </span><br><span class="line">EXCLUDE_FROM_WORLD &#x3D; &quot;1&quot;</span><br><span class="line"># 將當前配方從BitBake world 中排除。 </span><br><span class="line">在執行BitBake world期間，BitBake會定位，解析和構建在bblayers.conf配置文件中公開的每一層的配方。 </span><br><span class="line"># 如果需要BitBake world不構建當前配方，請在配方中將EXCLUDE_FROM_WORLD變量設置為「1」。 </span><br><span class="line"># 注意: </span><br><span class="line"># 如果有其他配方依賴於設置EXCLUDE_FROM_WORLD的值為1的配方，則此配方仍然可能被BitBake world構建。 </span><br><span class="line">將EXCLUDE_FROM_WORLD設置為1,僅確保配方未顯式添加到BitBake world的構建目標列表中。</span><br><span class="line"> </span><br><span class="line">do_compile_ptest() &#123;</span><br><span class="line">        oe_runmake buildtests</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">do_install_ptest() &#123;</span><br><span class="line">        cp -r $&#123;B&#125;&#x2F;unit&#x2F; $&#123;D&#125;$&#123;PTEST_PATH&#125;</span><br><span class="line">        rm -f $&#123;D&#125;$&#123;PTEST_PATH&#125;&#x2F;unit&#x2F;*.o</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>poky/meta/conf/bitbake.conf + build/conf/local.conf</code>定义了bb文件里面的路径引用</p><p><code>sysroot_descdir</code>,<code>yocto</code>会自动把当前bb想要传递出去的头文件以及库文件放入此目录</p><p><code>recipe-sysroo</code>,<code>yocto</code>会自动把当前bb DEPENDS的bb文件的<code>sysroot_descdir</code>文件夹里的头文件以及库文件拷贝到此目录</p>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA 学习笔记（一）</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/49427/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/49427/</url>
      
        <content type="html"><![CDATA[<h1 id="java基本语法"><a class="markdownIt-Anchor" href="#java基本语法"></a> JAVA基本语法</h1><p>编写JAVA程序时，应注意以下五点：</p><ul><li>大小写敏感：不做过多解释，比如<code>hello</code>和<code>Hello</code>是不同的</li><li>类名：对所有类来说，类名的首字母应该大写。建议采用“驼峰命名法”，就是说如果由若干单词组成的类名，每个单词的首字母应该大写，比如<code>CuteFlyingPig</code>。</li><li>方法名：所有的方法名都应该以小写字母开头。同样采用“驼峰”命名法，比如<code>pigCanFlay()</code>;</li><li>源文件名：源文件名必须和类名相同。当保存文件时，应该使用类名作为文件名保存（万分注意：JAVA大小写敏感！JAVA大小写敏感！JAVA大小写敏感！），文件后缀名为<code>.java</code>。否则，文件名和类名不一致会导致编译错误。</li><li>主方法入口：左右的Java程序都是由<code>public static void main(String[] args)</code>方法开始执行的。</li></ul><h1 id="java-对象和类"><a class="markdownIt-Anchor" href="#java-对象和类"></a> Java 对象和类</h1><p>Java作为一种面向对象语言，支持以下基本概念：多态、继承、封装、抽象、类、对象、实例、方法、重载等。</p><h2 id="源文件声明规则"><a class="markdownIt-Anchor" href="#源文件声明规则"></a> 源文件声明规则</h2><p>当在一个源文件中定义多个类，并且还有<code>import</code>语句和<code>package</code>语句时，要特别注意这些规则：</p><ul><li>一个源文件智能有一个<code>public</code>类</li><li>一个源文件可以有多个非<code>public</code>类</li><li>源文件的名称应该和<code>public</code>类的类名保持一致。例如，源文件中<code>public</code>类的类名是<code>Nantong</code>，那么源文件<code>import</code>语句应该在源文件中的最前面</li><li><code>import</code>语句和<code>package</code>语句对源文件中定义的所有类都有效。在同一源文件中，不能给不同的类不同的包声明。</li></ul><h1 id="java-基本数据类型"><a class="markdownIt-Anchor" href="#java-基本数据类型"></a> Java 基本数据类型</h1><p>Java的两大数据类型：内置数据类型、引用数据类型。</p><p>实际上，Java中还存在另外一种基本数据类型<code>void</code>，它也有对应的包装类<code>java.lang.Void</code>，不过我们无法直接对他们进行操作。</p><h2 id="类型默认值"><a class="markdownIt-Anchor" href="#类型默认值"></a> 类型默认值</h2><p>下表列出了Java各个类型的默认值：</p><p><strong>数据类型</strong></p><p><strong>默认值</strong></p><table class="reference"><tbody><tr><th align="left"><strong>数据类型</strong></th><th align="left"><strong>默认值</strong></th></tr><tr><td headers="h1">byte</td><td headers="h2">0</td></tr><tr><td headers="h1">short</td><td headers="h2">0</td></tr><tr><td headers="h1">int</td><td headers="h2">0</td></tr><tr><td headers="h1">long</td><td headers="h2">0L</td></tr><tr><td headers="h1">float</td><td headers="h2">0.0f</td></tr><tr><td headers="h1">double</td><td headers="h2">0.0d</td></tr><tr><td headers="h1">char</td><td headers="h2">'u0000'</td></tr><tr><td headers="h1">String (or any object)</td><td headers="h2">null</td></tr><tr><td headers="h1">boolean</td><td headers="h2">false</td></tr></tbody></table><h2 id="引用类型"><a class="markdownIt-Anchor" href="#引用类型"></a> 引用类型</h2><ul><li>在Java中，引用类型的变量非常类似于C/C++的指针。引用类型指向一个对象，指向对象的变量是引用变量。这些变量在声明时被指定为一个特定的类型，比如<code>Employee</code>、<code>Puppy</code>等。变量一旦声明后，类型就不能改变了。</li><li>对象、数组都是引用类型数据。</li><li>所有的引用变量的默认值都是<code>null</code>。</li><li>一个引用变量可以用来引用任何与之兼容的类型。</li><li>例如<code>Student superman = new Student(&quot;Radio&quot;)</code></li></ul><h2 id="java-常量"><a class="markdownIt-Anchor" href="#java-常量"></a> Java 常量</h2><p>Java语言支持一些特殊的转义字符序列。</p><table class="reference"><tbody><tr><th>符号</th><th>字符含义</th></tr><tr><td>\n</td><td>换行 (0x0a)</td></tr><tr><td>\r</td><td>回车 (0x0d)</td></tr><tr><td>\f</td><td>换页符(0x0c)</td></tr><tr><td>\b</td><td>退格 (0x08)</td></tr><tr><td>\0</td><td>空字符 (0x20)</td></tr><tr><td>\s</td><td>字符串</td></tr><tr><td>\t</td><td>制表符</td></tr><tr><td>\"</td><td>双引号</td></tr><tr><td>\'</td><td>单引号</td></tr><tr><td>\\</td><td>反斜杠</td></tr><tr><td>\ddd</td><td>八进制字符 (ddd)</td></tr><tr><td>\uxxxx</td><td>16进制Unicode字符 (xxxx)</td></tr></tbody></table><h1 id="自动类型转换"><a class="markdownIt-Anchor" href="#自动类型转换"></a> 自动类型转换</h1><p>整型、实型（常量）、字符型数据可以混合运算。在运算中。不同类型的数据先转化为同一类型，然后进行运算。转换从低级到高级：</p><pre><code>低-------------------------&gt;高byte,short,char -&gt; int -&gt; long -&gt; float -&gt; double</code></pre><p>数据类型的转换必须满足如下规则：</p><ul><li><p>不能对<code>boolean</code>类型进行类型转换。</p></li><li><p>不能把对象类型转换成不相关类的对象。</p></li><li><p>把大容量的类型转换为小容量的类型必须使用强制类型转换。</p></li><li><p>转换过程中可能导致溢出或损失精度，例如(因为<code>byte</code>类型是8位，最大值是127,所以当<code>int</code>强制转换为byte类型时，值<code>128</code>会导致溢出):</p><p>int i = 128;<br>byte b = (byte)i;</p></li><li><p>浮点数到整数的转换是通过舍弃小数得到，而不是四舍五入，例如：</p><p>(int)45.6 == 45;<br>(int)-88.33f == -88;</p></li></ul><p><strong>自动类型转换</strong>必须满足转换前的数据类型的位数要低于转换后的数据类型。</p><h1 id="java-变量类型"><a class="markdownIt-Anchor" href="#java-变量类型"></a> Java 变量类型</h1><p>Java语言支持的变量类型有：</p><ul><li>类变量（静态变量）：独立于方法之外的变量，用<code>static</code>修饰，但必须在方法之外。</li><li>实例变量：独立于方法之外的变量，不过没有用<code>static</code>修饰。实例变量可以声明在使用前或者使用后。</li><li>局部变量：类的方法中的变量，局部变量没有默认值，所以局部变量被声明后，必须经过初始化，才可以使用</li></ul><h1 id="java-修饰符"><a class="markdownIt-Anchor" href="#java-修饰符"></a> Java 修饰符</h1><p>Java的修饰符主要分为两类：访问修饰符和非访问修饰符。</p><p>访问修饰符具体访问权限如下表所示：</p><table class="reference"><caption style="font-weight: bold;font-size:16px;font-weight: bold;" id="accesscontrol-levels">访问控制表</caption><tbody><tr><th>修饰符</th><th>当前类</th><th>同一包内</th><th>子孙类(同一包)</th><th>子孙类(不同包)</th><th>其他包</th></tr><tr><td headers="h1"><code>public</code></td><td headers="h2">Y</td><td headers="h3">Y</td><td headers="h4">Y</td><td headers="h5">Y</td><td headers="h6">Y</td></tr><tr><td headers="h1"><code>protected</code></td><td headers="h2">Y</td><td headers="h3">Y</td><td headers="h4">Y</td><td headers="h5">Y/N（<a href="#protected-desc">说明</a>）</td><td headers="h6">N</td></tr><tr><td headers="h1"><code>default</code></td><td headers="h2">Y</td><td headers="h3">Y</td><td headers="h4">Y</td><td headers="h5">N</td><td headers="h6">N</td></tr><tr><td headers="h1"><code>private</code></td><td headers="h2">Y</td><td headers="h3">N</td><td headers="h4">N</td><td headers="h5">N</td><td headers="h6">N</td></tr></tbody></table><p><strong>final 类</strong>：final类不能被继承，没有类能继承final类的任何特性。</p><p><strong>抽象类</strong>：抽象类不能用来实例化对象，声明抽象类的唯一目的是为了将来对该类进行扩充。一个类不能同时被<code>abstract</code>和<code>final</code>修饰。如果一个类包含抽象方法，那么该类一定要声明为抽象类，否则将出现编译错误。抽象类可以包含抽象方法和非抽象方法。<br>比如：</p><pre><code>abstract class Caravan&#123;   private double price;   private String model;   private String year;   public abstract void goFast(); //抽象方法   public abstract void changeColor();&#125;</code></pre><p><strong>抽象方法</strong>：抽象方法是一种没有任何实现的方法，该方法的具体实现由子类提供。抽象方法不能被声明为<code>final</code>和<code>static</code>。任何继承抽象类的子类必须实现父类的所有抽象方法，除非子类也是抽象类。抽象类可以不包括抽象方法。抽象方法的声明以分号结尾，例如<code>public abstract sample();</code>。</p><pre><code>public abstract class SuperClass&#123;    abstract void m(); //抽象方法&#125; class SubClass extends SuperClass&#123;     //实现抽象方法      void m()&#123;          .........      &#125;&#125;</code></pre><h2 id="synchronized-修饰符"><a class="markdownIt-Anchor" href="#synchronized-修饰符"></a> synchronized 修饰符</h2><p><code>synchronized</code>关键字声明的方法同一时间只能被一个线程访问。<code>synchronized</code>修饰符可以应用于四个访问修饰符。</p><pre><code>public synchronized void showDetails()&#123;.......&#125;</code></pre><h2 id="transient-修饰符"><a class="markdownIt-Anchor" href="#transient-修饰符"></a> transient 修饰符</h2><p>序列化的对象包含被<code>transient</code>修饰的实例变量时，java虚拟机（JVM）跳过该特定的变量。<br>该修饰符包含在定义变量的语句中，用来预处理变量和类的数据类型。</p><pre><code>public transient int limit = 55;   // 不会持久化public int b; // 持久化</code></pre><h3 id="volatile-修饰符"><a class="markdownIt-Anchor" href="#volatile-修饰符"></a> <strong>volatile 修饰符</strong></h3><p><code>volatile</code>修饰的成员在每次被线程访问时，都强制从共享内存中重新读取该成员变量的值。而且，当成员变量发生变化时，会强制线程将变化值回写到共享内训。这样在任何时刻，两个不同的线程总是看到某个成员变量的同一个值。<br>一个<code>volatil</code>对象可能是<code>null</code>。</p><pre><code>public class MyRunnable implements Runnable&#123;    private volatile boolean active;    public void run()    &#123;        active = true;        while (active) // 第一行        &#123;            // 代码        &#125;    &#125;    public void stop()    &#123;        active = false; // 第二行    &#125;&#125;</code></pre><p>通常情况下，在一个线程调用 <code>run()</code> 方法（在 <code>Runnable</code> 开启的线程），在另一个线程调用 <code>stop()</code> 方法。 如果 第一行 中缓冲区的 <code>active</code> 值被使用，那么在 第二行 的 <code>active</code> 值为 <code>false</code> 时循环不会停止。</p><p>但是以上代码中我们使用了 <code>volatile</code> 修饰 <code>active</code>，所以该循环会停止。</p>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java 关键字汇总</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/40957/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/40957/</url>
      
        <content type="html"><![CDATA[<p>下面列出了 Java 关键字。这些保留字不能用于常量、变量、和任何标识符的名称。</p><table class="reference"><tbody><tr><th>类别</th><th>关键字</th><th>说明</th></tr><tr><td rowspan="3" align="center">访问控制</td><td>private</td><td>私有的</td></tr><tr><td>protected</td><td>受保护的</td></tr><tr><td>public</td><td>公共的</td></tr><tr><td rowspan="13" align="center">类、方法和变量修饰符</td><td>abstract</td><td>声明抽象</td></tr><tr><td>class</td><td>类</td></tr><tr><td>extends</td><td>扩充,继承</td></tr><tr><td>final</td><td>最终值,不可改变的</td></tr><tr><td>implements</td><td>实现（接口）</td></tr><tr><td>interface</td><td>接口</td></tr><tr><td>native</td><td>本地，原生方法（非 Java 实现）</td></tr><tr><td>new</td><td>新,创建</td></tr><tr><td>static</td><td>静态</td></tr><tr><td>strictfp</td><td>严格,精准</td></tr><tr><td>synchronized</td><td>线程,同步</td></tr><tr><td>transient</td><td>短暂</td></tr><tr><td>volatile</td><td>易失</td></tr><tr><td rowspan="12" align="center">程序控制语句</td><td>break</td><td>跳出循环</td></tr><tr><td>case</td><td>定义一个值以供 switch 选择</td></tr><tr><td>continue</td><td>继续</td></tr><tr><td>default</td><td>默认</td></tr><tr><td>do</td><td>运行</td></tr><tr><td>else</td><td>否则</td></tr><tr><td>for</td><td>循环</td></tr><tr><td>if</td><td>如果</td></tr><tr><td>instanceof</td><td>实例</td></tr><tr><td>return</td><td>返回</td></tr><tr><td>switch</td><td>根据值选择执行</td></tr><tr><td>while</td><td>循环</td></tr><tr><td rowspan="6" align="center">错误处理</td><td>assert</td><td>断言表达式是否为真</td></tr><tr><td>catch</td><td>捕捉异常</td></tr><tr><td>finally</td><td>有没有异常都执行</td></tr><tr><td>throw</td><td>抛出一个异常对象</td></tr><tr><td>throws</td><td>声明一个异常可能被抛出</td></tr><tr><td>try</td><td>捕获异常</td></tr><tr><td rowspan="2" align="center">包相关</td><td>import</td><td>引入</td></tr><tr><td>package</td><td>包</td></tr><tr><td rowspan="8" align="center">基本类型</td><td>boolean</td><td>布尔型</td></tr><tr><td>byte</td><td>字节型</td></tr><tr><td>char</td><td>字符型</td></tr><tr><td>double</td><td>双精度浮点</td></tr><tr><td>float</td><td>单精度浮点</td></tr><tr><td>int</td><td>整型</td></tr><tr><td>long</td><td>长整型</td></tr><tr><td>short</td><td>短整型</td></tr><tr><td rowspan="3" align="center">变量引用</td><td>super</td><td>父类,超类</td></tr><tr><td>this</td><td>本类</td></tr><tr><td>void</td><td>无返回值</td></tr><tr><td rowspan="3" align="center">保留关键字</td><td>goto</td><td>是关键字，但不能使用</td></tr><tr><td>const</td><td>是关键字，但不能使用</td></tr><tr><td>null</td><td>空</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS浏览器前缀兼容写法归纳整理</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/21345/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/21345/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Vendor prefix — 浏览器引擎前缀，是一些放在CSS属性前的小字符串，用来确保这种属性只在特定的浏览器渲染引擎下才能识别和生效。谷歌浏览器和Safari浏览器使用的是 WebKit 渲染引擎，火狐浏览器使用的是 Gecko 引擎，Internet Explorer 使用的是 Trident 引擎，Opera以前使用 Presto 引擎，后改为 WebKit 引擎。一种浏览器引擎里一般不实现其它引擎前缀标识的CSS属性，但由于以 WebKit 为引擎的移动浏览器相当流行，火狐等浏览器在其移动版里也实现了部分 WebKit 引擎前缀的CSS属性。</p></blockquote><h1 id="1-浏览器引擎前缀vendor-prefix有哪些"><a class="markdownIt-Anchor" href="#1-浏览器引擎前缀vendor-prefix有哪些"></a> 1. 浏览器引擎前缀(Vendor Prefix)有哪些？</h1><pre><code>-moz-       /* 火狐等使用Mozilla浏览器引擎的浏览器 */-webkit-    /* Safari, 谷歌浏览器等使用Webkit引擎的浏览器 */-o-         /* Opera浏览器(早期) */-ms-        /* Internet Explorer (不一定) */</code></pre><h1 id="2-为什么需要浏览器引擎前缀vendor-prefix"><a class="markdownIt-Anchor" href="#2-为什么需要浏览器引擎前缀vendor-prefix"></a> 2. 为什么需要浏览器引擎前缀(Vendor Prefix)？</h1><p>这些浏览器引擎前缀(Vendor Prefix)主要是各种浏览器用来试验或测试新出现的CSS3属性特征。可以总结为以下3点:</p><ol><li>试验一些还未成为标准的的CSS属性——也许永远不会成为标准</li><li>对新出现的标准的CSS3属性特征做实验性的实现</li><li>对CSS3中一些新属性做等效语义的个性实现</li></ol><p>这些前缀并非所有都是需要的，但通常你加上这些前缀不会有任何害处——<strong>只要记住一条，把不带前缀的版本放到最后一行</strong>：</p><pre><code>-moz-border-radius: 10px; -webkit-border-radius: 10px; -o-border-radius: 10px; border-radius: 10px;</code></pre><p>有些新的CSS3属性已经试验了很久，一些浏览器已经对这些属性不再使用前缀。Border-radius属性就是一个非常典型的例子。最新版的浏览器都支持不带前缀的Border-radius属性写法。</p><h1 id="3-需要使用vendor-prefixes的css3属性"><a class="markdownIt-Anchor" href="#3-需要使用vendor-prefixes的css3属性"></a> 3. 需要使用Vendor Prefixes的CSS3属性</h1><ol><li>@keyframes</li><li>移动和变换属性(transition-property, transition-duration, transition-timing-function, transition-delay)</li><li>动画属性 (animation-name, animation-duration, animation-timing-function, animation-delay)</li><li>border-radius</li><li>box-shadow</li><li>backface-visibility</li><li>column属性</li><li>flex属性</li><li>perspective属性</li></ol><p><strong>完整的列表不只这些，而且还会增加。</strong></p><h1 id="4-浏览器引擎前缀vendor-prefix的用法"><a class="markdownIt-Anchor" href="#4-浏览器引擎前缀vendor-prefix的用法"></a> 4. 浏览器引擎前缀(vendor-prefix)的用法</h1><p>当需要使用浏览器引擎前缀(vendor-prefix)时，最好是把带有各种前缀的写法放在前面，然后把不带前缀的标准的写法放到最后。比如:</p><pre><code>/* 简单属性 */.myClass &#123;    -webkit-animation-name: fadeIn;    -moz-animation-name: fadeIn;    -o-animation-name: fadeIn;    -ms-animation-name: fadeIn;    animation-name: fadeIn;  /* 不带前缀的放到最后 */&#125;/* 复杂属性 keyframes */@-webkit-keyframes fadeIn &#123;    0% &#123; opacity: 0; &#125; 100% &#123; opacity: 0; &#125;&#125;@-moz-keyframes fadeIn &#123;    0% &#123; opacity: 0; &#125; 100% &#123; opacity: 0; &#125;&#125;@-o-keyframes fadeIn &#123;    0% &#123; opacity: 0; &#125; 100% &#123; opacity: 0; &#125;&#125;@-ms-keyframes fadeIn &#123;    0% &#123; opacity: 0; &#125; 100% &#123; opacity: 0; &#125;&#125;/* 不带前缀的放到最后 */@keyframes fadeIn &#123;    0% &#123; opacity: 0; &#125; 100% &#123; opacity: 0; &#125;&#125;</code></pre><h1 id="5-internet-explorer"><a class="markdownIt-Anchor" href="#5-internet-explorer"></a> 5. Internet Explorer</h1><p>Internet Explorer 9 开始支持很多(但并不是全部)CSS3里的新属性。比如，你也可以在IE里使用不带浏览器引擎前缀(vendor-prefix)的border-radius属性。</p><p>IE6到IE8都不支持CSS3，很遗憾的是，使用这些低版本浏览器的用户还很多。所以，确保你的网站设计在不支持CSS3的情况下也能正常显示。对于一些属性：border-radius , linear-gradient, 和 box-shadow, 你可以使用CSS3Pie，它是一个很小的文件，把它放到你的网站的根目录下，就能让你的页面中IE6，IE8中也支持这些属性。</p><h1 id="致谢"><a class="markdownIt-Anchor" href="#致谢"></a> 致谢</h1><blockquote><p>转载自<a href="https://blog.csdn.net/yishuihan_001"><strong>YSP易水寒</strong></a>《<a href="https://blog.csdn.net/yishuihan_001/article/details/74188132">CSS浏览器前缀兼容写法</a>》</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux中的dmesg和addr2line命令在没有core文件时定位core dump段错误 (核心已转储) 问题</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/60914/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/60914/</url>
      
        <content type="html"><![CDATA[<h2 id="dmesg命令的用途"><a class="markdownIt-Anchor" href="#dmesg命令的用途"></a> dmesg命令的用途</h2><p>dmesg命令用会把开机信息存到ring bufer中， 形成一个缓冲， 免得你我来不及看。 在root权限下， 可以用dmesg -c来清除这个消息。 单纯的一个dmesg命令则是用来输出这些记录信息的。</p><p><strong>功能说明</strong>：显示开机信息。</p><p><strong>语　　法</strong>：<code>dmesg \[-cn\]\[-s &lt;缓冲区大小&gt;\]</code></p><p><strong>补充说明</strong>：kernel会将开机信息存储在ring buffer中。您若是开机时来不及查看信息，可利用dmesg来查看。开机信息亦保存在/var/log目录中，名称为dmesg的文件里。</p><p><strong>参　　数：</strong></p><ul><li>-c 　显示信息后，清除ring buffer中的内容。</li><li>-s&lt;缓冲区大小&gt; 　预设置为8196，刚好等于ring buffer的大小。</li><li>-n 　设置记录信息的层级</li></ul><h2 id="addr2line命令使用"><a class="markdownIt-Anchor" href="#addr2line命令使用"></a> addr2line命令使用</h2><p>Addr2line 工具（它是标准的 GNU Binutils 中的一部分）是一个可以将指令的地址和可执行映像转换成文件名、函数名和源代码行数的工具。这种功能对于将跟踪地址转换成更有意义的内容来说简直是太棒了。</p><p>使用Addr2line 工具，就可以判断出函数名（main）、源文件（test.cpp）以及它在源文件中的行号。</p><p>在调用 Addr2line 工具时，要使用 -e 选项来指定可执行映像是 test。通过使用 -f 选项，可以告诉工具输出函数名。</p><h2 id="经典dmesg-addr2line命令的使用"><a class="markdownIt-Anchor" href="#经典dmesg-addr2line命令的使用"></a> 经典dmesg + addr2line命令的使用</h2><p>下面， 我们来看一下经典的dmesg + addr2line：</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/60914/dmesg.png" alt></p><p>可见， 第5行有错。</p><p>为什么我的<code>dmesg</code>输出了几百几十行信息呢？当dmesg显示的信息较多时候， 我们通过grep来过滤， 比如 <code>dmesg | grep a.out</code></p><p>在实际开发中， 通常是从日志文件中看到堆栈异常， 同样是为了拿到堆栈出错的地方， 然后用addr2line来定位代码行， 此时， 可以将日志文件看成是dmesg命令的扩展。 在这两种情况下， 我么可以不依赖于core文件， 便可搞定core dump了。</p><h2 id="linux-addr2line-返回或0-如何解决"><a class="markdownIt-Anchor" href="#linux-addr2line-返回或0-如何解决"></a> linux addr2line 返回??:?或??:0 如何解决?</h2><p>按你的教程，为什么我的输出是下面这样子的呢？</p><p>为什么我的<code>addr2line -e a.out 000000000040085a</code>后输出了<code>?:??</code>呢？WTFaaaaaaaaa~~~~~</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/60914/addr2line.png" alt></p><p>如果遇到addr2line得到??:?或??:0的情况，原因就是编译得到的so文件没有附加上符号表(symbolic)信息。</p><p>如果在android源码环境下，android编译环境会自动生成附带有符号表(symbolic)的so文件。标准android5.0中，附带有符号表(symbolic)的so文件在下面路径</p><p><code>out/target/product/[productname]/symbols/system/lib/****.so</code></p><p>如果是非android环境，需要在makefile中指定生成附带有符号表(symbolic)的so文件的选项，具体关于动态链接库以及符号表等，请参阅如下网站:<a href="http://tldp.org/HOWTO/Program-Library-HOWTO/shared-libraries.html">http://tldp.org/HOWTO/Program-Library-HOWTO/shared-libraries.html</a></p><p>你如果仔细比对了上面两图的指令，会发现编译的参数略有差异：</p><p>正常的编译选项是<code>g++ -std=c++11 -g test.cpp</code>，出现<code>?:??</code>的是<code>g++ -std=c++11 test.cpp</code>。也就是说少了<code>-g</code>参数，那这个参数是什么意思呢？复习一下——</p><ul><li>-o：指定生成可执行文件的名称。使用方法为：g++ -o afile file.cpp file.h … （可执行文件不可与待编译或链接文件同名，否则会生成相应可执行文件且覆盖原编译或链接文件），如果不使用-o选项，则会生成默认可执行文件a.out。</li><li>-c：只编译不链接，只生成目标文件。</li><li>-g：添加gdb调试选项。</li></ul><p>Over，现在大工告成了！</p>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javascript浏览器禁止用户放大缩小的五种方法</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/26603/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/26603/</url>
      
        <content type="html"><![CDATA[<p>近期在AGL（Automotive Grade Linux）上做一个基于chrome的网页，比较烦的是用了好多方案都不能禁止用户的双指触控放大缩小的动作，最后成功解决了该问题，今天在这里分享一下成功和失败的方法，之所以列出失败的方法，是因为对我没用的，可能对你们有用。</p><p>记住一点，用户触发浏览器页面缩放的行为是针对浏览器的操作，你想在H5页面文件里里控制禁止浏览器缩放是越权行为。如果真的想，就要牺牲一些多指触控的功能，<strong>用户在执行缩放动作时肯定是多点触控触发的事件</strong>。</p><h2 id="方案一设置对应浏览器的启动参数来禁止用户缩放页面"><a class="markdownIt-Anchor" href="#方案一设置对应浏览器的启动参数来禁止用户缩放页面"></a> 方案一：设置对应浏览器的启动参数来禁止用户缩放页面</h2><p>这种方案在自建平台上，自选的指定浏览器上效果是可以的，但是不推荐，比如chrome主要通过设置<code>* &#123; touch-acion : none &#125;</code>来实现禁用缩放的方法，具体方案可自行搜索,我也没有进行相关测试。<br>touch-acion的参数意义如下：</p><ul><li>auto：默认值。浏览器允许一些手势（touch）操作在设置了此属性的元素上，例如：对视口（viewport）平移、缩放等操作。</li><li>none：禁止触发默认的手势操作。</li><li>pan-x：可以在父级元素(the nearest ancestor)内进行水平移动的手势操作。</li><li>pan-y：可以在父级元素内进行垂直移动的手势操作。</li><li>manipulation：允许手势水平/垂直平移或持续的缩放。任何auto属性支持的额外操作都不支持。<br><strong>注</strong>：touch-action只支持具有CSS width和height属性的元素。这个限制的目的是帮助浏览器优化低延时的手势操作。对于默认不支持此属性的元素，如这种内联元素，可以给它设置display:block这样的CSS属性来支持width和height。未来W3C规范会将此API扩展到支持所有元素。</li></ul><h2 id="方案二设置meta来禁止用户缩放页面"><a class="markdownIt-Anchor" href="#方案二设置meta来禁止用户缩放页面"></a> 方案二：设置meta来禁止用户缩放页面</h2><p>这是搜索后经常出现的方案，但是现在，这个标签在新的浏览器（比如在ios10+）中已经失效，换言之，对于老版本的浏览器可能有效。<br>在Android的自带浏览器中(例如华为，魅族，小米)第一次手动缩放时，会提示–再次操作可强制缩放网页—；再次缩放也可以缩放；<br>这一现象意味着meta标签的失效。在Android的chrome中不可以用户缩放（表现正常）</p><p>直接上代码（在<code>.html</code>文件中的<code>&lt;head&gt;&lt;/head&gt;</code>之间添加如下语句）：</p><pre><code>&lt;meta content=&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no;&quot; name=&quot;viewport&quot; /&gt; </code></pre><h2 id="方案三通过js监听来禁止用户缩放页面"><a class="markdownIt-Anchor" href="#方案三通过js监听来禁止用户缩放页面"></a> 方案三：通过js监听来禁止用户缩放页面</h2><p>直接上代码：</p><pre><code>window.onload=function()&#123;  document.addEventListener('touchstart',function (event) &#123;       if(event.touches.length&gt;=2)&#123;         event.preventDefault();       &#125;   &#125;)     document.addEventListener('touchmove',function (event) &#123;       if(event.touches.length&gt;=2)&#123;         event.preventDefault();       &#125;   &#125;)     document.addEventListener('touchend',function (event) &#123;       if(event.touches.length&gt;=2)&#123;         event.preventDefault();       &#125;   &#125;) &#125;</code></pre><p>其中的<code>event.touches.length</code>是获取当天有几个点击事件同时发生，简单而言，就是有几个手指同时点击了屏幕，以为一般缩放操作都是两个手指以上进行的，所以这里应该满足的条件为<code>event.touches.length&gt;=2</code>。不足之处就是<strong>禁用了所有的多点触控的操作</strong>。</p><h2 id="方案四禁用ontouchmove事件"><a class="markdownIt-Anchor" href="#方案四禁用ontouchmove事件"></a> 方案四：禁用“ontouchmove”事件</h2><p>因为缩放屏幕必然跟随着双指的<code>ontouchmove</code>事件，我们在<code>&lt;html&gt;&lt;/html&gt;</code>标签内加入禁用该事件的函数<code>event.preventDefault()</code>即可，<strong>这招非常暴力，意味着全局无法使用使用滑动、拖动等动作，只接受点击动作。</strong><br>代码如下——</p><pre><code>&lt;!DOCTYPE html&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; ontouchmove=&quot;event.preventDefault();&quot;&gt;  &lt;head&gt;     /****some code***/  &lt;/head&gt;  &lt;body&gt;    /****some code***/  &lt;/body&gt;&lt;/html&gt;</code></pre><p>其中的<code>event.preventDefault()</code>函数将通知 Web 浏览器不要执行与事件关联的默认动作（如果存在这样的动作）。例如，如果 type 属性是 “submit”，在事件传播的任意阶段可以调用任意的事件句柄，通过调用该方法，可以阻止提交表单。注意，如果 Event 对象的 cancelable 属性是 fasle，那么就没有默认动作，或者不能阻止默认动作。无论哪种情况，调用该方法都没有作用。</p><p>写到这里，忽然想到，是否只禁用某个<code>&lt;div&gt;&lt;/div&gt;</code>区块的<code>ontouchmove</code>事件，比如：</p><pre><code>&lt;div ontouchmove=&quot;event.preventDefault();&quot;&gt;&lt;/div&gt;</code></pre><p>但这种区块禁用的方式我还没有测试，你可以说我比较懒了，自己去测试吧～～～～</p><p>然而还没有得瑟一个月，我就有了这个需求，补充如下，直接上实现代码：</p><pre><code>var singleTouchFlag; //多指触控标识符$(&quot;#songList&quot;).on(&quot;touchstart&quot;, function (e) &#123;  //引用了jquery库，我所要多指禁止的区域id为“songList”    // 判断默认行为是否可以被禁用    console.log(&quot;touchstart Entered!!!&quot;);    if (e.cancelable) &#123;        // 判断默认行为是否已经被禁用        if (!e.defaultPrevented) &#123;            e.preventDefault();        &#125;    &#125;    if (1 == parseInt(e.originalEvent.touches.length)) &#123;        singleTouchFlag = true;        // do something    &#125; else &#123;        singleTouchFlag = false;    &#125;&#125;);$(&quot;#songList&quot;).on(&quot;touchmove&quot;, function (e) &#123;    // 判断默认行为是否可以被禁用    if (e.cancelable) &#123;        // 判断默认行为是否已经被禁用        if (!e.defaultPrevented) &#123;            e.preventDefault();        &#125;    &#125;    if (singleTouchFlag) &#123;        //do something    &#125;&#125;);$(&quot;#songList&quot;).on(&quot;touchend&quot;, function (e) &#123;    // 判断默认行为是否可以被禁用    console.log(&quot;touchend Entered!!!&quot;);    if (e.cancelable) &#123;        // 判断默认行为是否已经被禁用        if (!e.defaultPrevented) &#123;            e.preventDefault();        &#125;    &#125;    if (singleTouchFlag) &#123;        //do something            &#125;&#125;);</code></pre><h2 id="方案五借助于多点触摸手势库hammerjs-解决"><a class="markdownIt-Anchor" href="#方案五借助于多点触摸手势库hammerjs-解决"></a> 方案五：借助于**多点触摸手势库“hammer.js ”**解决</h2><p><a href="http://eightmedia.github.com/hammer.js/">hammer.js</a> 是一个多点触摸手势库，能够<strong><strong>为网页加入Tap、Double Tap、Swipe、Hold、Pinch、Drag等多点触摸事件</strong></strong>，免去自己监听底层touchstart、touchmove、touchend事件并且写一大堆判断逻辑的痛苦。</p><p><a href="http://eightmedia.github.com/hammer.js/">hammer.js</a> 不但支持触摸屏设备的浏览器，在桌面浏览器上，也能将鼠标的点击当做触摸，方便开发人员在桌面浏览器上调试。（<a href="http://jszai.com/">JS仔</a>在自己的<a href="http://suishoubei.com/">随手背</a>项目里面也用了<a href="http://eightmedia.github.com/hammer.js/">hammer.js</a>，真心好用）</p><p>直接上代码（在<code>.html</code>文件中的<code>&lt;head&gt;&lt;/head&gt;</code>之间添加如下语句）：</p><pre><code>&lt;script src = &quot;http://eightmedia.github.com/hammer.js/hammer.js&quot; &gt; &lt;/script&gt;    &lt;script&gt;        window.onload = function () &#123;            var hammerMusicBlock = new Hammer(document.getElementById(&quot;musicBlock&quot;));            hammerMusicBlock.ontransformstart = function (ev) &#123; ev.preventDefault(); &#125;; // double fingers touchstart            hammerMusicBlock.ontransform = function (ev) &#123; ev.preventDefault(); &#125;; // double fingers touchmove            hammerMusicBlock.ontransformend = function (ev) &#123; ev.preventDefault(); &#125;; // double fingers touchend        &#125;    &lt;/script&gt;</code></pre><p><a href="http://eightmedia.github.com/hammer.js/">hammer.js</a> 其他的使用方式简介，直接看代码：</p><pre><code>&lt;script src = &quot;http://eightmedia.github.com/hammer.js/hammer.js&quot; &gt; &lt;/script&gt; // 先要对监听的DOM进行一些初始化var hammer = new Hammer ( document . getElementById ( &quot;container&quot; ) ) ; // 然后加入相应的回调函数即可hammer . ondragstart = function ( ev ) &#123; &#125; ;    // 开始拖动hammer . ondrag = function ( ev ) &#123; &#125; ; // 拖动中hammer . ondragend = function ( ev ) &#123; &#125; ; // 拖动结束hammer . onswipe = function ( ev ) &#123; &#125; ; // 滑动 hammer . ontap = function ( ev ) &#123; &#125; ; // 单击hammer . ondoubletap = function ( ev ) &#123; &#125; ; //双击hammer . onhold = function ( ev ) &#123; &#125; ; // 长按 hammer . ontransformstart = function ( ev ) &#123; &#125; ; // 双指收张开始hammer . ontransform = function ( ev ) &#123; &#125; ; // 双指收张中hammer . ontransformend = function ( ev ) &#123; &#125; ; // 双指收张结束 hammer . onrelease = function ( ev ) &#123; &#125; ; // 手指离开屏幕</code></pre><p><a href="http://eightmedia.github.com/hammer.js/">hammer.js</a> 还支持jQuery插件的形式调用：</p><pre><code>&lt;script src = &quot;http://eightmedia.github.com/hammer.js/jquery.hammer.js&quot; &gt; &lt;/script&gt; $ ( &quot;#element&quot; )   . hammer ( &#123;         // 对DOM进行一些初始化，这里可以加入一些参数   &#125; )   . bind ( &quot;tap&quot; , function ( ev ) &#123;         console . log ( ev ) ;   &#125; ) ;</code></pre><p>暂时总结这五种方案，如果有其他更好的方案，请添加到评论区，谢谢。</p>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++的单例模式与线程安全单例模式（懒汉/饿汉）</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/13275/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/13275/</url>
      
        <content type="html"><![CDATA[<p>单例模式也称为单件模式、单子模式，可能是使用最广泛的设计模式。其意图是保证一个类仅有一个实例，并提供一个访问它的全局访问点，该实例被所有程序模块共享。有很多地方需要这样的功能模块，如系统的日志输出，GUI应用必须是单鼠标，MODEM的联接需要一条且只需要一条电话线，操作系统只能有一个窗口管理器，一台PC连一个键盘。<br>单例模式有许多种实现方法，在C++中，甚至可以直接用一个全局变量做到这一点，但这样的代码显的很不优雅。 使用全局对象能够保证方便地访问实例，但是不能保证只声明一个对象——也就是说除了一个全局实例外，仍然能创建相同类的本地实例。</p><h1 id="教科书里的单例模式"><a class="markdownIt-Anchor" href="#教科书里的单例模式"></a> 教科书里的单例模式</h1><p>我们都很清楚一个简单的单例模式该怎样去实现：构造函数声明为private或protect防止被外部函数实例化，内部保存一个private static的类指针保存唯一的实例，实例的动作由一个public的类方法代劳，该方法也返回单例类唯一的实例。例如：</p><pre><code>class singleton&#123;protected:    singleton()&#123;&#125;private:    static singleton* p;public:    static singleton* instance();&#125;;singleton* singleton::p = NULL;singleton* singleton::instance()&#123;    if (p == NULL)        p = new singleton();    return p;&#125;</code></pre><p>这是一个很棒的实现，简单易懂。但这是一个完美的实现吗？不！该方法是线程不安全的，考虑两个线程同时首次调用instance方法且同时检测到p是NULL值，则两个线程会同时构造一个实例给p，这是严重的错误！同时，这也不是单例的唯一实现！</p><h1 id="懒汉与饿汉"><a class="markdownIt-Anchor" href="#懒汉与饿汉"></a> 懒汉与饿汉</h1><p>单例大约有两种实现方法：懒汉与饿汉。</p><ul><li>懒汉：故名思义，不到万不得已就不会去实例化类，也就是说在第一次用到类实例的时候才会去实例化，所以上边的经典方法被归为懒汉实现；</li><li>饿汉：饿了肯定要饥不择食。所以在单例类定义的时候就进行实例化。</li></ul><p>特点与选择：</p><ul><li>由于要进行线程同步，所以在访问量比较大，或者可能访问的线程比较多时，采用饿汉实现，可以实现更好的性能。这是以空间换时间。</li><li>在访问量较小时，采用懒汉实现。这是以时间换空间。</li></ul><h1 id="线程安全的懒汉实现"><a class="markdownIt-Anchor" href="#线程安全的懒汉实现"></a> 线程安全的懒汉实现</h1><h2 id="方法1加锁的经典懒汉实现"><a class="markdownIt-Anchor" href="#方法1加锁的经典懒汉实现"></a> 方法1：加锁的经典懒汉实现：</h2><pre><code>class singleton&#123;protected:    singleton()    &#123;        pthread_mutex_init(&amp;mutex);    &#125;private:    static singleton* p;public:    static pthread_mutex_t mutex;    static singleton* initance();&#125;;pthread_mutex_t singleton::mutex;singleton* singleton::p = NULL;singleton* singleton::initance()&#123;    if (p == NULL)    &#123;        pthread_mutex_lock(&amp;mutex);        if (p == NULL)            p = new singleton();        pthread_mutex_unlock(&amp;mutex);    &#125;    return p;&#125;</code></pre><h2 id="方法2内部静态变量的懒汉实现"><a class="markdownIt-Anchor" href="#方法2内部静态变量的懒汉实现"></a> 方法2：内部静态变量的懒汉实现</h2><p>此方法也很容易实现，在instance函数里定义一个静态的实例，也可以保证拥有唯一实例，在返回时只需要返回其指针就可以了。推荐这种实现方法，真得非常简单。</p><pre><code>class singleton&#123;protected:    singleton()    &#123;        pthread_mutex_init(&amp;mutex);    &#125;public:    static pthread_mutex_t mutex;    static singleton* initance();    int a;&#125;;pthread_mutex_t singleton::mutex;singleton* singleton::initance()&#123;    pthread_mutex_lock(&amp;mutex);    static singleton obj;    pthread_mutex_unlock(&amp;mutex);    return &amp;obj;&#125;</code></pre><h1 id="饿汉实现"><a class="markdownIt-Anchor" href="#饿汉实现"></a> 饿汉实现</h1><p>为什么我不讲“线程安全的饿汉实现”？因为饿汉实现本来就是线程安全的，不用加锁。为啥？自己想！</p><pre><code>class singleton&#123;protected:    singleton()    &#123;&#125;private:    static singleton* p;public:    static singleton* initance();&#125;;singleton* singleton::p = new singleton;singleton* singleton::initance()&#123;    return p;&#125;</code></pre><p>是不是特别简单呢？</p><p>以空间换时间，你说简单不简单？</p><h1 id="进一步的讨论"><a class="markdownIt-Anchor" href="#进一步的讨论"></a> 进一步的讨论</h1><p>《设计模式》一书中给出了一种很不错的实现，定义一个单例类，使用类的私有静态指针变量指向类的唯一实例，并用一个公有的静态方法获取该实例。<br>单例模式通过类本身来管理其唯一实例，这种特性提供了解决问题的方法。唯一的实例是类的一个普通对象，但设计这个类时，让它只能创建一个实例并提供对此实例的全局访问。唯一实例类Singleton在静态成员函数中隐藏创建实例的操作。习惯上把这个成员函数叫做Instance()，它的返回值是唯一实例的指针。<br>定义如下：</p><pre><code>class CSingleton&#123;private:CSingleton()   //构造函数是私有的&#123;&#125;static CSingleton *m_pInstance;public:static CSingleton * GetInstance()&#123;if(m_pInstance == NULL)  //判断是否第一次调用m_pInstance = new CSingleton();return m_pInstance;&#125;&#125;;</code></pre><p>用户访问唯一实例的方法只有GetInstance()成员函数。如果不通过这个函数，任何创建实例的尝试都将失败，因为类的构造函数是私有的。GetInstance()使用懒惰初始化，也就是说它的返回值是当这个函数首次被访问时被创建的。这是一种防弹设计——所有GetInstance()之后的调用都返回相同实例的指针：</p><pre><code>CSingleton* p1 = CSingleton :: GetInstance();CSingleton* p2 = p1-&gt;GetInstance();CSingleton &amp; ref = * CSingleton :: GetInstance();</code></pre><p>对GetInstance稍加修改，这个设计模板便可以适用于可变多实例情况，如一个类允许最多五个实例。</p><p>单例类CSingleton有以下特征：</p><ul><li>它有一个指向<strong>唯一实例的静态指针m_pInstance，并且是私有的</strong>；</li><li>它有一个公有的函数，可以获取这个唯一的实例，并且在需要的时候创建该实例；</li><li>它的构造函数是私有的，这样就不能从别处创建该类的实例。</li></ul><p>大多数时候，这样的实现都不会出现问题。有经验的读者可能会问，m_pInstance指向的空间什么时候释放呢？更严重的问题是，该实例的析构函数什么时候执行？<br>如果在类的析构行为中有必须的操作，比如关闭文件，释放外部资源，那么上面的代码无法实现这个要求。我们需要一种方法，正常的删除该实例。<br>可以在程序结束时调用GetInstance()，并对返回的指针掉用delete操作。这样做可以实现功能，但不仅很丑陋，而且容易出错。因为这样的附加代码很容易被忘记，而且也很难保证在delete之后，没有代码再调用GetInstance函数。</p><p><strong>一个妥善的方法是让这个类自己知道在合适的时候把自己删除，或者说把删除自己的操作挂在操作系统中的某个合适的点上，使其在恰当的时候被自动执行。</strong><br>我们知道，<strong>程序在结束的时候，系统会自动析构所有的全局变量。<strong>事实上，系统也会析构所有的类的静态成员变量，就像这些静态成员也是全局变量一样。利用这个特征，我们可以在单例类中定义一个这样的</strong>静态成员变量</strong>，而它的<strong>唯一工作</strong>就是在析构函数中删除单例类的实例。如下面的代码中的CGarbo类（Garbo意为垃圾工人）：</p><pre><code>class CSingleton&#123;private:CSingleton()&#123;&#125;static CSingleton *m_pInstance;class CGarbo   //它的唯一工作就是在析构函数中删除CSingleton的实例&#123;public:~CGarbo()&#123;if(CSingleton::m_pInstance)delete CSingleton::m_pInstance;&#125;&#125;;static CGarbo Garbo;  //定义一个静态成员变量，程序结束时，系统会自动调用它的析构函数public:static CSingleton * GetInstance()&#123;if(m_pInstance == NULL)  //判断是否第一次调用m_pInstance = new CSingleton();return m_pInstance;&#125;&#125;;</code></pre><p>类CGarbo被定义为CSingleton的私有内嵌类，以防该类被在其他地方滥用。</p><p>程序运行结束时，系统会调用CSingleton的静态成员Garbo的析构函数，该析构函数会删除单例的唯一实例。</p><p><strong>使用这种方法释放单例对象有以下特征</strong>：</p><ul><li>在单例类内部定义专有的嵌套类；</li><li>在单例类内定义私有的专门用于释放的静态成员；</li><li>利用程序在结束时析构全局变量的特性，选择最终的释放时机；</li><li>使用单例的代码不需要任何操作，不必关心对象的释放。</li></ul><h1 id="再进一步的讨论"><a class="markdownIt-Anchor" href="#再进一步的讨论"></a> 再进一步的讨论</h1><p>但是添加一个类的静态对象，总是让人不太满意，所以有人用如下方法来重新实现单例和解决它相应的问题，代码如下：</p><pre><code>class CSingleton&#123;private:CSingleton()   //构造函数是私有的&#123;&#125;public:static CSingleton &amp; GetInstance()&#123;static CSingleton instance;   //局部静态变量return instance;&#125;&#125;;</code></pre><p>使用<strong>局部静态变量</strong>，非常强大的方法，完全实现了单例的特性，而且代码量更少，也不用担心单例销毁的问题。</p><p>但使用此种方法也会出现问题，当如下方法使用单例时问题来了，<code>Singleton singleton = Singleton :: GetInstance();</code><br>这么做就出现了一个类拷贝的问题，这就违背了单例的特性。产生这个问题原因在于：编译器会为类生成一个默认的构造函数，来支持类的拷贝。最后没有办法，我们要禁止类拷贝和类赋值，禁止程序员用这种方式来使用单例，当时的想法是<code>GetInstance()</code>函数返回一个指针而不是返回一个引用，函数的代码改为如下：</p><pre><code>class CSingleton&#123;private:CSingleton()   //构造函数是私有的&#123;&#125;public:static CSingleton * GetInstance()&#123;static CSingleton instance;   //局部静态变量return &amp;instance;&#125;&#125;;</code></pre><p>但我总觉的不好，为什么不让编译器不这么干呢。这时我才想起可以显示的声明类拷贝的构造函数，和重载 = 操作符，新的单例类如下：</p><pre><code>class CSingleton&#123;private:CSingleton()   //构造函数是私有的&#123;&#125;CSingleton(const CSingleton &amp;);CSingleton &amp; operator = (const CSingleton &amp;);public:static CSingleton &amp; GetInstance()&#123;static CSingleton instance;   //局部静态变量return instance;&#125;&#125;;</code></pre><p>关于<code>Singleton(const Singleton);</code>和 <code>Singleton &amp; operate = (const Singleton&amp;);</code>函数，需要声明成私有的，并且只声明不实现。这样，如果用上面的方式来使用单例时，不管是在友元类中还是其他的，编译器都是报错。<br>不知道这样的单例类是否还会有问题，但在程序中这样子使用已经基本没有问题了。</p><p>考虑到线程安全、异常安全，可以做以下扩展：</p><pre><code>class Lock&#123;private:       CCriticalSection m_cs;public:Lock(CCriticalSection  cs) : m_cs(cs)&#123;m_cs.Lock();&#125;~Lock()&#123;m_cs.Unlock();&#125;&#125;; class Singleton&#123;private:Singleton();Singleton(const Singleton &amp;);Singleton&amp; operator = (const Singleton &amp;); public:static Singleton *Instantialize();static Singleton *pInstance;static CCriticalSection cs;&#125;; Singleton* Singleton::pInstance = 0; Singleton* Singleton::Instantialize()&#123;if(pInstance == NULL)&#123;   //double checkLock lock(cs);           //用lock实现线程安全，用资源管理类，实现异常安全//使用资源管理类，在抛出异常的时候，资源管理类对象会被析构，析构总是发生的无论是因为异常抛出还是语句块结束。if(pInstance == NULL)&#123;pInstance = new Singleton();&#125;&#125;return pInstance;&#125;</code></pre><p>之所以在Instantialize函数里面对pInstance 是否为空做了两次判断，因为该方法调用一次就产生了对象，pInstance == NULL 大部分情况下都为false，如果按照原来的方法，每次获取实例都需要加锁，效率太低。而改进的方法只需要在第一次 调用的时候加锁，可大大提高效率。</p><h1 id="致谢"><a class="markdownIt-Anchor" href="#致谢"></a> 致谢</h1><blockquote><p><a href="https://blog.csdn.net/hackbuteer1">Hackbuteer1的专栏</a>《<a href="https://blog.csdn.net/Hackbuteer1/article/details/7460019">C++中的单例模式</a>》</p></blockquote><blockquote><p><a href="https://home.cnblogs.com/u/qiaoconglovelife/">CoderCong</a>《<a href="https://www.cnblogs.com/qiaoconglovelife/p/5851163.html">C++的单例模式与线程安全单例模式（懒汉/饿汉）</a>》</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++中std::lock_guard 使用</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10762/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10762/</url>
      
        <content type="html"><![CDATA[<h2 id="stdlock_guard-简介"><a class="markdownIt-Anchor" href="#stdlock_guard-简介"></a> std::lock_guard 简介</h2><p>这个类是一个互斥量的包装类，用来<strong><strong>提供自动为互斥量上锁和解锁</strong></strong>的功能，简化了多线程编程。</p><p>互斥类的最重要成员函数是lock()和unlock()。在进入临界区时，执行lock()加锁操作，如果这时已经被其它线程锁住，则当前线程在此排队等待。退出临界区时，执行unlock()解锁操作。更好的办法是采用”资源分配时初始化”(RAII)方法来加锁、解锁，这避免了在临界区中因为抛出异常或return等操作导致没有解锁就退出的问题。极大地简化了程序员编写mutex相关的异常处理代码。C++11的标准库中提供了std::lock_guard类模板做mutex的RAII。</p><p><strong><strong>std::lock_guard类的构造函数禁用拷贝构造，且禁用移动构造。std::lock_guard类除了构造函数和析构函数外没有其它成员函数</strong></strong>。</p><p>用法如下：</p><pre><code>#include &lt;mutex&gt;std::mutex kMutex;void function() &#123;  // 构造时自动加锁  std::lock_guard&lt;std::mutex&gt; (kMutex);    // 离开局部作用域，析构函数自动完成解锁功能&#125;</code></pre><p>用法非常简单，只需在保证线程安全的函数开始处加上一行代码即可，其他的都在这个类的构造函数和析构函数中自动完成。</p><h2 id="实现-my_lock_guard"><a class="markdownIt-Anchor" href="#实现-my_lock_guard"></a> 实现 my_lock_guard</h2><p>这是cheng-zhi实现的一个 <code>lock_guard</code>，就是在<strong><strong>构造和析构中完成加锁和解锁</strong></strong>的操作，之所以会自动完成，是因为<strong><strong>离开函数作用域会导致局部变量析构函数被调用</strong></strong>，而我们又是手动构造了 <code>lock_guard</code>，因此这两个函数都是自动被调用的。</p><pre><code>namespace myspace &#123;    template&lt;typename T&gt; class my_lock_guard &#123;    public:        // 在 std::mutex 的定义中，下面两个函数被删除了        // mutex(const mutex&amp;) = delete;        // mutex&amp; operator=(const mutex&amp;) = delete;        // 因此这里必须传递引用        my_lock_guard(T&amp; mutex) :mutex_(mutex)&#123;            // 构造加锁            mutex_.lock();        &#125;        ~my_lock_guard() &#123;            // 析构解锁            mutex_.unlock();        &#125;    private:        // 不可赋值，不可拷贝        my_lock_guard(my_lock_guard const&amp;);        my_lock_guard&amp; operator=(my_lock_guard const&amp;);    private:        T&amp; mutex_;    &#125;;&#125;;</code></pre><p>要注意的是这个类官方定义是<strong><strong>不可以赋值和拷贝</strong></strong>，因此需要私有化 <code>operator =</code> 和 <code>copy</code>这两个函数。</p><h2 id="什么是-stdmutex"><a class="markdownIt-Anchor" href="#什么是-stdmutex"></a> 什么是 std::mutex ？</h2><p>如果你细心可以发现，不管是 <code>std::lock_guard</code>，还是<code>my_lock_guard</code>，都使用了一个 <code>std::mutex</code> 作为构造函数的参数，这是因为我们的 <code>lock_guard</code> 只是一个包装类，而实际的加锁和解锁的操作都还是 <code>std::mutex</code> 完成的，那什么是 <code>std::mutex</code> 呢？</p><p>在std::lock_guard对象构造时，传入的mutex对象(即它所管理的mutex对象)会被当前线程锁住。在lock_guard对象被析构时，它所管理的mutex对象会自动解锁，不需要程序员手动调用lock和unlock对mutex进行上锁和解锁操作。<strong>lock_guard对象并不负责管理mutex对象的生命周期</strong>，lock_guard对象只是简化了mutex对象的上锁和解锁操作，方便线程对互斥量上锁，即在某个lock_guard对象的生命周期内，它所管理的锁对象会一直保持上锁状态；而lock_guard的生命周期结束之后，它所管理的锁对象会被解锁。程序员可以非常方便地使用lock_guard，而不用担心异常安全问题。</p><p>std::lock_guard在构造时只被锁定一次，并且在销毁时解锁。</p><p>基本使用方法如下：</p><pre><code>#include &lt;mutex&gt;std::mutex kMutex;void function() &#123;  //加锁  kMutex.lock();  //kMutex.try_lock();  //do something that is thread safe...    // 离开作用域解锁  kMutex.unlock();&#125;</code></pre><p>前面都提到了<strong><strong>锁</strong></strong>这个概念，那么什么是锁，有啥用处？</p><h2 id="什么是锁"><a class="markdownIt-Anchor" href="#什么是锁"></a> 什么是锁？</h2><p><strong><strong>锁是用来保护共享资源（变量或者代码）不被并发访问的一种方法</strong></strong>，它只是方法，实际的实现就是 <code>std::mutex</code> 等等的类了。</p><p>可以简单的理解为：</p><ul><li>当前线程访问一个变量之前，将这个变量放到盒子里锁住，并且当前线程拿着钥匙。这样一来，如果有其他的线程也要访问这个变量，则必须等待当前线程将盒子解锁之后才能访问，之后其他线程在访问这个变量之前也将会再次锁住这个变量。</li><li>当前线程执行完后，就将该盒子解锁，这样其他的线程就可以拿到盒子的钥匙，并再次加锁访问这个变量了。</li></ul><p>这样就<strong><strong>保证了同一时刻只有一个线程可以访问共享资源</strong></strong>，解决了简单的线程安全问题。</p><p>什么，你还没有遇到过线程安全问题？下面开始我的表演…</p><h2 id="一个简单的线程安全的例子"><a class="markdownIt-Anchor" href="#一个简单的线程安全的例子"></a> 一个简单的线程安全的例子</h2><p>这个例子中，<strong><strong>主线程开启了 2 个子线程</strong></strong>，每个子线程都修改<strong><strong>共享的全局变量</strong></strong> <code>kData</code>，如果没有增加必要的锁机制，那么每个子线程打印出的 <code>kData</code> 就可能会出错。</p><p>这里使用了 3 种不同的加锁方法来解决：</p><ul><li>使用 std::lock_guard</li><li>使用 std::mutex 实现原生的加锁</li><li>使用自己的 myspace::my_lock_guard</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;mutex&gt;</span><br><span class="line">#include &lt;thread&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 两个子线程共享的全局变量</span><br><span class="line">int kData &#x3D; 0;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; std::mutex 提供了一种防止共享数据被多个线程并发访问的简单同步方法</span><br><span class="line">&#x2F;&#x2F; 调用线程可以通过 lock 和 try_lock 来获取互斥量，使用 unlock() 释放互斥量</span><br><span class="line">std::mutex kMutex;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void increment() &#123;</span><br><span class="line">    &#x2F;&#x2F; 1.创建一个互斥量的包装类，用来自动管理互斥量的获取和释放</span><br><span class="line">    &#x2F;&#x2F; std::lock_guard&lt;std::mutex&gt; lock(kMutex);</span><br><span class="line">    </span><br><span class="line">    &#x2F;&#x2F; 2.原生加锁</span><br><span class="line">    &#x2F;&#x2F; kMutex.lock();</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 3.自己实现的 std::mutex 的包装类</span><br><span class="line">    myspace::my_lock_guard&lt;std::mutex&gt; lock(kMutex);</span><br><span class="line">    </span><br><span class="line">    for (int i &#x3D; 0; i &lt; 10; i++) &#123;</span><br><span class="line">        &#x2F;&#x2F; 打印当前线程的 id : kData</span><br><span class="line">        std::cout &lt;&lt; std::this_thread::get_id() </span><br><span class="line">                  &lt;&lt; &quot;:&quot; &lt;&lt; kData++ &lt;&lt; std::endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    &#x2F;&#x2F; 2. 原生解锁  </span><br><span class="line">    &#x2F;&#x2F;kMutex.unlock();</span><br><span class="line">    </span><br><span class="line">    &#x2F;&#x2F; 离开局部作用域，局部锁解锁，释放互斥量</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F; 打印当前函数名</span><br><span class="line">    std::cout &lt;&lt; __FUNCTION__ &lt;&lt; &quot;:&quot; &lt;&lt; kData &lt;&lt; std::endl;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 开启两个线程</span><br><span class="line">    std::thread t1(increment);</span><br><span class="line">    std::thread t2(increment);</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 主线程等待这两个线程完成操作之后再退出</span><br><span class="line">    t1.join();</span><br><span class="line">    t2.join();</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 防止立刻退出</span><br><span class="line">    getchar();</span><br><span class="line">    return 0;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：在 <code>vs</code> 中编译这段代码。</p><h2 id="结果分析"><a class="markdownIt-Anchor" href="#结果分析"></a> 结果分析</h2><p>为什么不加锁的结果会出错？首先线程是一种轻量级的进程，也存在调度，假设当前 <code>CPU</code> 使用的是<strong>基于时间片的轮转调度算法</strong>，为每个进程分配一段可执行的时间片，因此每个线程都得到一段可以执行的时间（这里只是简单概括，仔细研究其实是有点复杂的，涉及到内核线程和用户线程，这里就不多说了，不是这里讨论的重点），这就导致子线程 1 在修改并打印 <code>kData</code> 的时候，子线程 1 的时间片用完了，<code>CPU</code> 切换到子线程 2 去修改并打印 <code>kData</code>，这就导致了最终的打印结果不是预先的顺序，就是这个原理，简单的理解是不难的。</p><p>可能遇到的问题：</p><pre class="highlight"><code class>    error: no matching function for call to ‘std::lock_guardstd::mutex::lock_guard()’std::lock_guardstd::mutex (kMutex);</code></pre><p>参考这位网友（<a href="https://stackoverflow.com/users/103167/ben-voigt">Ben Voigt</a>）的<a href="https://stackoverflow.com/questions/32850504/how-to-use-stdlock-guard-on-a-class-member-mutex">回答</a>，即将<code>std::lock_guard&lt;std::mutex&gt; (kMutex);</code>改为<code>std::lock_guard&lt;std::mutex&gt; (this-&gt;kMutex);</code>在这里表示感谢：</p><p>If you declare your lock_guard correctly, they both work:</p><pre><code>void Foo::bad()&#123;  std::lock_guard&lt;std::mutex&gt; x&#123;lock_&#125;;&#125;void Foo::good()&#123;  std::lock_guard&lt;std::mutex&gt; y&#123;this-&gt;lock_&#125;;&#125;</code></pre><p>Using a temporary is almost useless, because the lock gets released immediately. Correct usage is to declare a local variable with automatic lifetime.</p><h2 id="致谢"><a class="markdownIt-Anchor" href="#致谢"></a> 致谢</h2><blockquote><p>cheng-zhi《std::lock_guard 引起的思考》（注：原网站已无法访问fengbingchun《C++11中std::lock_guard的使用》</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>习立风对话尼采：悲剧里的独行者，独行者里的超人</title>
      <link href="%E9%9A%8F%E7%AC%94/64295/"/>
      <url>%E9%9A%8F%E7%AC%94/64295/</url>
      
        <content type="html"><![CDATA[<p>凡能吸入我著作中气息的人，他就知道，这是高岗上的空气，是使人精神焕发的。一个人必须加以培养以适应这种空气，否则就会有不少受寒的危险。</p><p>——题记（尼采语录）</p><p><img src="/%E9%9A%8F%E7%AC%94/64295/image.png" alt></p><p>有人曾说，“哲学是人生观的学问，哲学是心灵的完整，哲学是生命的诗”。今晨我在杨柳岸痴迷于《尼采生存哲学》，任清风摇动柳枝，任柳枝拂过面庞，任碧波微荡，任机灵的香樟树落花蹦跶跶地化作书签，而我，看到了十岁的弗里德里希·威廉·尼采这个神情忧郁的小男孩正朝我走来。</p><p><img src="/%E9%9A%8F%E7%AC%94/64295/nicaibook.jpg" alt></p><p>“你好，查拉图斯特拉，你的神情为何如此沮丧？你的诗作为何总是在说父亲的坟墓、晚祷的钟声、生命的无常、幸福的虚幻？你总说，却闭口不谈这快意人生？”</p><p>“哦，树叶从树上飘零，终被秋风扫走。生命和他的美梦，终将灰土尘垢。我是一个悲观的人，可我本有一个幸福欢快的家庭。可五年前，我那和蔼可亲的爸爸就去世了。可你知道吗？有一天，我做了一个梦，四处奏响了古希腊的悲剧哀乐，我爸爸的坟墓打开了，爸爸穿着整齐的牧师袍子，在风中向我们的教堂中走来，他抱起了一个孩子，对，我看不清那个孩子的脸，爸爸抱着那个孩子走进了坟墓，墓又慢慢地合上了。几天后，仅仅几天后，我的弟弟就死了，我清晰地记得他的面庞，我也记得那个梦。人生可真是一个悲剧，这几年我已见过许多悲痛与苦难，所以完全不像其他孩子那样天真烂漫、无忧无虑。这几年我一直在寻求孤独，我喜欢躲在无人叨扰的地方构思《死亡与毁灭》，人终将要死的，生命还有什么意义？你能回答我吗？”</p><p>听了他的话，我低头看地上的黄色花瓣儿，陷入了沉思，当我再次抬起头，看到查拉图斯特，他已二十四岁了。</p><p><img src="/%E9%9A%8F%E7%AC%94/64295/nicaiground.jpg" alt></p><p>“尼采先生，听闻你前几年曾创作过一首管弦乐《赞美生活》，这首歌在1983年第17届世界哲学大会上演奏，你知道吗？但我现在只想谈谈你怎么看待叔本华？”</p><p>“哼，我在莱比锡大学求学，买书的时候是很审慎的，我在旧书店里偶然发现了叔本华的《作为意志和表象的世界》，你知道吗？我属于叔本华的这样的读者之列，一旦读了他的书的第一页，就知道我一定会读完这本书，倾听他说的每一句话。我一下子就信任了他。我理解他所说的一切，就像他的书是专门为我写的一样。我从来没有读到他任何似是而非的东西······他从来不故作姿态，他是为自己而写的。他的文字不拘小节、诚实坦白而又不失幽默。他知道如何用简朴表达深奥，推理严格合乎逻辑，却不是文绉绉的，不用华丽辞藻，因些让人在阅读时心中深怀爱意。”</p><p>尼采又满含真情地说：“他去世时我才十六岁啊，我多么想和他促膝而谈。当我幻想自己能找到一个真正的哲学家做老师时，我简直是异想天开，我想象他能够使我超越时代的不足，教我在思想上和生活中回归简单和诚实，也就是不合时宜……我正是在这样的困苦、需要和渴求中，结识了叔本华。”</p><p><img src="/%E9%9A%8F%E7%AC%94/64295/nicaisky.jpg" alt></p><p>我翻了翻《尼采生存哲学》，而后合上了书页，对着蓝天，依旧在想，这就是查拉图斯特拉吗？我再瞧见他时，看到他在用左手敲打着自己的头部，右手按压着着自己的胃部，我知道，此时的他已经偏头痛、胃病、梅毒缠身了。</p><p>“你那个年代六年半只买了几百册的《悲剧的诞生》，在我们中国一经推出就卖掉了几十万册，你知道吗？你为何背叛了叔本华？作为神学研究者的你为什么奔走呼号‘上帝已死’？查拉图斯特拉，你究竟是一个什么样的人啊？”</p><p>“呵，我的信徒们，可鄙的人类，可我又是那么地爱着你们呢！上帝已死，你们停止浪费生命吧，走上你们的天堂吧，哪怕是你们的地狱也好。当你凝视深渊时，深渊也在凝视着你。白昼之光，岂知夜色之深？谁终将声震人间，必长久深自缄默；谁终将点燃闪电，必长久如云漂泊。不能听命于自己者，就要受命于他人。这个世界有死亡的说教者，同时也有许多必须被劝说放弃生命的人。这个世界到处充满了多余的人，生命都早已被那些人糟蹋涂地，就让‘永生’诱引他们离开这个世界吧。我的信徒们，千万不要靠近那恶臭！对的，生命是满载悲剧色彩的，可我们要有超人意志和权力意志，我们要让悲剧的人生闪耀着自由的价值！”</p><p>“查拉图斯特拉先生，冒昧问一句，听闻您与瓦格纳决裂，一生未婚，而且一直鄙夷女性，可莎乐美女士······”</p><p>还没等我说完，查拉图斯特拉目光柔和了一些，“莎乐美，我的女神！一个在一瞬间就能征服一个人灵魂的人！不，是一个神！她说我身上隐藏着一种孤独感，我视力不佳，使得我面目很清奇，眼神既瞥向内心，同时又望向远方。女人的一切都是个谜，女人的一切只有一个答案——那就是生育。哦，对，到女人那里去，别忘了带上你的鞭子！到女人那里去，别忘了带上你的鞭子！到女人那里去，别忘了带上你的鞭子！如果你到女人那里去，不要让你自己被女人的诱惑所征服，不要忘记你是主人，不要忘记女人真正重要的任务是侍候男人，是美化他人生的友好伴侣。”</p><p>“查拉图斯特拉先生，你是梅毒病发作了吗？”</p><p>“在那种突然疯狂的时刻，寂寞的人想要拥抱随便哪个人！”查拉图斯特拉说完这句话就走了。</p><p><img src="/%E9%9A%8F%E7%AC%94/64295/image-2.png" alt></p><p>从此我再也没有见过查拉图斯特拉，只听说有一天早晨，在意大利的都灵，他在街上看见一个马车夫用鞭子抽打马，他大叫一声扑上去，抱着马的脖子痛哭，然后就昏过去了。醒来以后，他的神智再也没有清醒过，一直到死。尼采的病历上记载说，这个病人喜欢拥抱街上的任何一个行人。</p><p>还听说，他说了句——</p><p>“我若死了，庸人们，你们不必假惺惺地跑来为我吊唁。”</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++文件IO操作open(), close(), read(), write()函数详解</title>
      <link href="uncategorized/8275/"/>
      <url>uncategorized/8275/</url>
      
        <content type="html"><![CDATA[<h1 id="函数介绍"><a class="markdownIt-Anchor" href="#函数介绍"></a> 函数介绍</h1><h2 id="open函数"><a class="markdownIt-Anchor" href="#open函数"></a> open()函数</h2><h3 id="功能描述"><a class="markdownIt-Anchor" href="#功能描述"></a> 功能描述：</h3><p>  用于打开或创建文件，在打开或创建文件时可以指定文件的属性及用户的权限等参数。</p><h3 id="头文件依赖"><a class="markdownIt-Anchor" href="#头文件依赖"></a> 头文件依赖：</h3><p>  <code>#include&lt;sys/types.h&gt;</code>, <code>#include &lt;sys/stat.h&gt;</code>, <code>#include &lt;fcntl.h&gt;</code></p><h3 id="函数原型"><a class="markdownIt-Anchor" href="#函数原型"></a> 函数原型：</h3><p>   <code>int open(const char *pathname, int flags, int perms)</code></p><h3 id="参数"><a class="markdownIt-Anchor" href="#参数"></a> 参数：</h3><p>  <code>pathname</code>：被打开的文件名（可包括路径名，如（<code>dev/ttyS0</code>））<br>  <code>flags</code>:文件打开方式：</p><ul><li><code>O_RDONLY</code>:以只读方式打开文件</li><li><code>O_WRONLY</code>:以只写方式打开文件</li><li><code>O_RDWR</code>:以读写方式打开文件</li><li><code>O_CREAT</code>:如果改文件不存在，就创建一个新的文件，并用第三个参数为其设置权限</li><li><code>O_EXCL</code>:如果使用<code>O_CREAT</code>时文件存在，则返回错误消息。这一参数可测试文件是否存在。此时<code>open</code>是原子操作，防止多个进程同时创建同一个文件</li><li><code>O_NOCTTY</code>:使用本参数时，若文件为终端，那么该终端不会成为调用<code>open()</code>的那个进程的控制终端</li><li><code>O_TRUNC</code>:若文件已经存在，那么会删除文件中的全部原有数据，并且设置文件大小为0</li><li><code>O_APPEND</code>:以添加方式打开文件，在打开文件的同时，文件指针指向文件的末尾，即将写入的数据添加到文件的末尾</li><li><code>O_NONBLOCK</code>: 如果<code>pathname</code>指的是一个FIFO、一个块特殊文件或一个字符特殊文件，则此选择项为此文件的本次打开操作和后续的I/O操作设置非阻塞方式。</li><li><code>O_SYNC</code>:使每次write都等到物理I/O操作完成。</li><li><code>O_RSYNC</code>:read 等待所有写入同一区域的写操作完成后再进行</li></ul><p>  在<code>open()</code>函数中，<code>falgs</code>参数可以通过“|”组合构成，但前3个标准常量（O_RDONLY，O_WRONLY，和O_RDWR）不能互相组合。<br>   <code>perms</code>：被打开文件的存取权限，可以用两种方法表示，可以用一组宏定义：S_I(R/W/X)(USR/GRP/OTH),其中R/W/X表示读写执行权限，<br>   <code>USR/GRP/OTH</code>分别表示文件的所有者/文件所属组/其他用户,如S_IRUUR|S_IWUUR|S_IXUUR,（-rex------）,也可用八进制800表示同样的权限</p><h3 id="返回值"><a class="markdownIt-Anchor" href="#返回值"></a> 返回值：</h3><p><strong>成功</strong>：返回文件描述符<br><strong>失败</strong>：返回<code>-1</code></p><h2 id="close函数"><a class="markdownIt-Anchor" href="#close函数"></a> close()函数</h2><h3 id="功能描述-2"><a class="markdownIt-Anchor" href="#功能描述-2"></a> 功能描述：</h3><p>  用于关闭一个被打开的的文件</p><h3 id="所需头文件"><a class="markdownIt-Anchor" href="#所需头文件"></a> 所需头文件：</h3><p>   <code>#include &lt;unistd.h&gt;</code></p><h3 id="函数原型-2"><a class="markdownIt-Anchor" href="#函数原型-2"></a> 函数原型:</h3><p>   <code>int close(int fd)</code></p><h3 id="参数-2"><a class="markdownIt-Anchor" href="#参数-2"></a> 参数：</h3><p>   <code>fd文件描述符</code><br>###函数返回值：<br>   <code>0</code>成功，<code>-1</code>出错</p><h2 id="read函数"><a class="markdownIt-Anchor" href="#read函数"></a> read()函数</h2><h3 id="功能描述-3"><a class="markdownIt-Anchor" href="#功能描述-3"></a> 功能描述：</h3><p>  从文件读取数据。</p><h3 id="所需头文件-2"><a class="markdownIt-Anchor" href="#所需头文件-2"></a> 所需头文件：</h3><p>   <code>#include &lt;unistd.h&gt;</code></p><h3 id="函数原型-3"><a class="markdownIt-Anchor" href="#函数原型-3"></a> 函数原型：</h3><p>   <code>ssize_t read(int fd, void *buf, size_t count);</code></p><h3 id="参数-3"><a class="markdownIt-Anchor" href="#参数-3"></a> 参数：</h3><ul><li><code>fd</code>： 将要读取数据的文件描述词。</li><li><code>buf</code>：指缓冲区，即读取的数据会被放到这个缓冲区中去。</li><li><code>count</code>： 表示调用一次read操作，应该读多少数量的字符。</li></ul><h3 id="返回值-2"><a class="markdownIt-Anchor" href="#返回值-2"></a> 返回值：</h3><p>  返回所读取的字节数；<code>0</code>（读到<code>EOF</code>）；<code>-1</code>（出错）。<br>  以下几种情况会导致读取到的字节数小于 <code>count</code>：</p><ul><li>A. 读取普通文件时，读到文件末尾还不够 <code>count</code> 字节。例如：如果文件只有 <code>30</code> 字节，而我们想读取 <code>100</code>字节，那么实际读到的只有 <code>30</code> 字节，<code>read</code> 函数返回 <code>30</code> 。此时再使用 <code>read</code> 函数作用于这个文件会导致 <code>read</code> 返回 <code>0</code> 。</li><li>B. 从终端设备（terminal device）读取时，一般情况下每次只能读取一行。</li><li>C. 从网络读取时，网络缓存可能导致读取的字节数小于 <code>count</code>字节。</li><li>D. 读取 pipe 或者 FIFO 时，pipe 或 FIFO 里的字节数可能小于 <code>count</code> 。</li><li>E. 从面向记录（record-oriented）的设备读取时，某些面向记录的设备（如磁带）每次最多只能返回一个记录。</li><li>F. 在读取了部分数据时被信号中断。<br>  读操作始于 <code>cfo</code> 。在成功返回之前，<code>cfo</code> 增加，增量为实际读取到的字节数。</li></ul><h2 id="write函数"><a class="markdownIt-Anchor" href="#write函数"></a> write()函数</h2><h3 id="功能描述-4"><a class="markdownIt-Anchor" href="#功能描述-4"></a> 功能描述：</h3><p>  向文件写入数据。</p><h3 id="所需头文件-3"><a class="markdownIt-Anchor" href="#所需头文件-3"></a> 所需头文件：</h3><p>   <code>#include &lt;unistd.h&gt;</code></p><h3 id="函数原型-4"><a class="markdownIt-Anchor" href="#函数原型-4"></a> 函数原型：</h3><p>   <code>ssize_t write(int fd, void *buf, size_t count);</code></p><h3 id="返回值-3"><a class="markdownIt-Anchor" href="#返回值-3"></a> 返回值：</h3><p>   写入文件的字节数（成功）；<code>-1</code>（出错）</p><h3 id="功能"><a class="markdownIt-Anchor" href="#功能"></a> 功能：</h3><p>   <code>write</code> 函数向 filedes 中写入 <code>count</code>字节数据，数据来源为<code>buf</code> 。返回值一般总是等于 <code>count</code>，否则就是出错了。常见的出错原因是磁盘空间满了或者超过了文件大小限制。<br>对于普通文件，写操作始于 <code>cfo</code> 。如果打开文件时使用了 <code>O_APPEND</code>，则每次写操作都将数据写入文件末尾。成功写入后，<code>cfo</code> 增加，增量为实际写入的字节数。</p><h2 id="lseek函数"><a class="markdownIt-Anchor" href="#lseek函数"></a> lseek()函数</h2><h3 id="功能描述-5"><a class="markdownIt-Anchor" href="#功能描述-5"></a> 功能描述：</h3><p>   用于在指定的文件描述符中将将文件指针定位到相应位置。</p><h3 id="所需头文件-4"><a class="markdownIt-Anchor" href="#所需头文件-4"></a> 所需头文件：</h3><p>    <code>#include &lt;unistd.h&gt;，#include &lt;sys/types.h&gt;</code></p><h3 id="函数原型-5"><a class="markdownIt-Anchor" href="#函数原型-5"></a> 函数原型：</h3><p>    <code>off_t lseek(int fd, off_t offset,int whence);</code></p><h3 id="参数-4"><a class="markdownIt-Anchor" href="#参数-4"></a> 参数：</h3><ul><li><code>fd</code>;文件描述符</li><li><code>offset</code>:偏移量，每一个读写操作所需要移动的距离，单位是字节，可正可负（向前移，向后移）</li><li><code>whence</code>:</li><li><code>SEEK_SET</code>:当前位置为文件的开头，新位置为偏移量的大小</li><li><code>SEEK_CUR</code>:当前位置为指针的位置，新位置为当前位置加上偏移量</li><li><code>SEEK_END</code>:当前位置为文件的结尾，新位置为文件大小加上偏移量的大小</li></ul><h3 id="返回值-4"><a class="markdownIt-Anchor" href="#返回值-4"></a> 返回值：</h3><p><strong>成功</strong>：返回当前位移<br><strong>失败</strong>：返回<code>-1</code></p><h1 id="函数实例"><a class="markdownIt-Anchor" href="#函数实例"></a> 函数实例</h1><p>   功能是从一个文件（源文件）中读取最后的10K数据复制到另一个文件（目标文件）。实例中原文件以只读方式打开，目标文件以只写方式打开。若目标文件不存在，可以创建并设置权限为<code>644</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;      </span><br><span class="line">#include&lt;stdlib.h&gt;</span><br><span class="line">#include&lt;unistd.h&gt;     </span><br><span class="line">#include&lt;sys&#x2F;types.h&gt;</span><br><span class="line">#include&lt;sys&#x2F;stat.h&gt;</span><br><span class="line">#include&lt;fcntl.h&gt;</span><br><span class="line">#define BUFFER_SIZE 1024                      &#x2F;&#x2F;每次读写缓存大小，影响运行效率</span><br><span class="line">#define SRC_FILE_NAME &quot;src_file&quot;              &#x2F;&#x2F;源文件名</span><br><span class="line">#define DEST_FILE_NAME &quot;dest_file&quot;            &#x2F;&#x2F;目标文件名</span><br><span class="line">#define OFFSET 10240                          &#x2F;&#x2F;复制的数据大小</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">  int src_file,dest_file;</span><br><span class="line">  unsigned char buff[BUFFER_SIZE];</span><br><span class="line">  int real_read_len;</span><br><span class="line">  src_file&#x3D;open(SRC_FILE_NAME,O_RDONLY);      &#x2F;&#x2F;以只读方式打开源文件</span><br><span class="line"> </span><br><span class="line">  dest_file&#x3D;open(DEST_FILE_NAME,O_RDWR|O_CREAT,S_IRUSR|S_IWUSR|S_IRGRP|S_IROTH);  if(src_file&lt;0||dest_file&lt;0)</span><br><span class="line">  &#123;</span><br><span class="line">    printf(&quot;open file error!!!\n&quot;);</span><br><span class="line">    exit(1);</span><br><span class="line">  &#125;</span><br><span class="line">  lseek(src_file,-OFFSET,SEEK_END);    &#x2F;&#x2F;将源文件的读写指针移到最后10K的起始位置</span><br><span class="line">  while((real_read_len&#x3D;read(src_file,buff,sizeof(buff)))&gt;0)</span><br><span class="line">  &#123;</span><br><span class="line">    write(dest_file,buff,real_read_len);</span><br><span class="line">  &#125;</span><br><span class="line">  close(src_file);</span><br><span class="line">  close(dest_file);</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="现象分析"><a class="markdownIt-Anchor" href="#现象分析"></a> 现象分析：</h2><h3 id="运行前如果目录下没有src_file会出现以下现象"><a class="markdownIt-Anchor" href="#运行前如果目录下没有src_file会出现以下现象"></a> 运行前如果目录下没有src_file,会出现以下现象：</h3><p><img src="/uncategorized/8275/image.png" alt="No src_file"></p><h3 id="有了源文件但源文件小于10k会把源文件的所有数据复制到目标文件"><a class="markdownIt-Anchor" href="#有了源文件但源文件小于10k会把源文件的所有数据复制到目标文件"></a> 有了源文件，但源文件小于10K，会把源文件的所有数据复制到目标文件：</h3><p><img src="/uncategorized/8275/image-1.png" alt="src_file &lt; 10k"></p><h3 id="如果源文件大于10k则会把源文件最后的10k复制到目标文件中"><a class="markdownIt-Anchor" href="#如果源文件大于10k则会把源文件最后的10k复制到目标文件中"></a> 如果源文件大于10K，则会把源文件最后的10K复制到目标文件中</h3><p><img src="/uncategorized/8275/image-2.png" alt="src_file &gt; 10k"></p><h1 id="linux文件io操作"><a class="markdownIt-Anchor" href="#linux文件io操作"></a> linux文件I/O操作</h1><p>   之前有介绍过关于文件的指针和描述符，这次通过一个练习，熟悉了一下文件的<code>open</code>, <code>close</code>, <code>read</code>, <code>write</code>, <code>sleek</code>, <code>dup</code>等操作，一些主要的注意事项详见代码注释吧。<br><font color="blue">ps：部分代码写的有些龌龊，也和硬要把几个函数都试到有关，应该可以用更好的方法。fighting~~~</font></p><h2 id="功能-2"><a class="markdownIt-Anchor" href="#功能-2"></a> 功能</h2><p>   命令行输入三个参数，将<code>data.dat</code>文件中的内容拷贝到<code>data2.dat</code>中，并搜索<code>data2.dat</code>中<code>hello</code>出现的次数，消息打印重定向到<code>dupfile.dat</code>中。<br>&quot;file.c&quot;文件内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;file.c</span><br><span class="line">#include &lt;fcntl.h&gt;</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">#include &lt;sys&#x2F;stat.h&gt;</span><br><span class="line">#include &lt;sys&#x2F;types.h&gt;</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line">int main(int argc, char* argv[]) &#123;</span><br><span class="line">  int fd1;</span><br><span class="line">  int fd2;</span><br><span class="line">  int fd3;</span><br><span class="line">  char buffer[100];</span><br><span class="line"></span><br><span class="line">  int num;</span><br><span class="line">  int flag &#x3D; 0;</span><br><span class="line">  int len;</span><br><span class="line">  int offset &#x3D; 0;</span><br><span class="line">  if (4 !&#x3D; argc) &#123;</span><br><span class="line">    printf(&quot;Usage:%s source file,dest file,key word.\n&quot;, argv[0]);</span><br><span class="line">    return 1;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; test function :open(),close(),read(),write()</span><br><span class="line">  &#x2F;&#x2F;打开文件，如果文件不存在，允许按照参数给定权限创建，这里文件data.dat为已经存在且写入一定内容的。</span><br><span class="line">  if ((fd1 &#x3D; open(argv[1], O_CREAT | O_RDWR, 0777)) &#x3D;&#x3D; -1) &#123;</span><br><span class="line">    perror(&quot;Can&#39;t open the source file.\n&quot;);</span><br><span class="line">    return 1;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  if ((fd2 &#x3D; open(argv[2], O_CREAT | O_RDWR, 0777)) &#x3D;&#x3D; -1) &#123;</span><br><span class="line">    perror(&quot;Can&#39;t open the dest file.\n&quot;);</span><br><span class="line">    return 1;</span><br><span class="line">  &#125;</span><br><span class="line">  while ((num &#x3D; read(fd1, buffer, 5)) &gt; 0) &#123;</span><br><span class="line">    buffer[num] &#x3D; &#39;\0&#39;;</span><br><span class="line">    &#x2F;&#x2F;防止读出乱码影响结果</span><br><span class="line">    if (write(fd2, buffer, num) &#x3D;&#x3D; -1) &#123;</span><br><span class="line">      perror(&quot;Write to file data2.dat failed.\n&quot;);</span><br><span class="line">      return 1;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  close(fd1);</span><br><span class="line">  close(fd2);</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; test function: lseek()  dup()</span><br><span class="line">  len &#x3D; strlen(argv[3]);</span><br><span class="line">  if ((fd2 &#x3D; open(argv[2], O_RDONLY)) &#x3D;&#x3D; -1) &#123;</span><br><span class="line">    perror(&quot;Can&#39;t open the dest file.\n&quot;);</span><br><span class="line">    return 1;</span><br><span class="line">  &#125;</span><br><span class="line">  while (1) &#123;</span><br><span class="line">    &#x2F;&#x2F; SEEK_SET参数表示每次都是直接用offset做偏移值，即在文件头的位置+offset；此外SEEK_CUR表示在当前位置基础上加offset偏移，SEEK_END表示偏移量为文件大小加offset值。</span><br><span class="line">    if (lseek(fd2, offset, SEEK_SET) &#x3D;&#x3D; -1) &#123;</span><br><span class="line">      perror(&quot;Can&#39;t move the file pointer.\n&quot;);</span><br><span class="line">      return 1;</span><br><span class="line">    &#125;</span><br><span class="line">    if ((num &#x3D; read(fd2, buffer, len)) &lt; len) &#123;</span><br><span class="line">      &#x2F;&#x2F;可读到的字符数小于要搜索的字符串长度，可以跳出</span><br><span class="line">      break;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      buffer[len] &#x3D; &#39;\0&#39;;</span><br><span class="line">      if (strcmp(buffer, argv[3]) &#x3D;&#x3D; 0) &#123;</span><br><span class="line">        &#x2F;&#x2F;找到匹配，计数+1</span><br><span class="line">        flag++;</span><br><span class="line">      &#125;</span><br><span class="line">      &#x2F;&#x2F;无论是否匹配，offset都应该增加1，否则文件指针一直不变，进入死循环</span><br><span class="line">      offset++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  &#x2F;&#x2F;关闭标准输出，并将打开的文件描述符重定向到标准输出</span><br><span class="line">  close(STDOUT_FILENO);</span><br><span class="line">  if ((fd3 &#x3D; open(&quot;dupfile.dat&quot;, O_CREAT | O_RDWR, 0777)) &#x3D;&#x3D; -1) &#123;</span><br><span class="line">    perror(&quot;Can&#39;t creat the dup file.\n&quot;);</span><br><span class="line">    return 1;</span><br><span class="line">  &#125;</span><br><span class="line">  if (dup(fd3) &#x3D;&#x3D; -1) &#123;</span><br><span class="line">    perror(&quot;Can&#39;t reserved the std out fd.\n&quot;);</span><br><span class="line">    return 1;</span><br><span class="line">  &#125;</span><br><span class="line">  if (flag &gt; 0) &#123;</span><br><span class="line">    &#x2F;&#x2F; printf打印的内容实际上已经重定向到dupfile.dat中了</span><br><span class="line">    printf(&quot;Find the string %s in file %s %d times.\n&quot;, argv[3], argv[2], flag);</span><br><span class="line">  &#125;</span><br><span class="line">  close(fd2);</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>   &quot;data.dat&quot;示例文件内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hellohellohellohellohellohellohellohello</span><br></pre></td></tr></table></figure><h2 id="运行结果"><a class="markdownIt-Anchor" href="#运行结果"></a> 运行结果</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">patten@patten-PC:~&#x2F;code&#x2F;workspace&#x2F;cppStudy$ </span><br><span class="line">patten@patten-PC:~&#x2F;code&#x2F;workspace&#x2F;cppStudy$ </span><br><span class="line">patten@patten-PC:~&#x2F;code&#x2F;workspace&#x2F;cppStudy$ gcc -o file file.c</span><br><span class="line">patten@patten-PC:~&#x2F;code&#x2F;workspace&#x2F;cppStudy$ .&#x2F;file data.dat data2.dat hello   &#x2F;&#x2F;带3个参数执行</span><br><span class="line">patten@patten-PC:~&#x2F;code&#x2F;workspace&#x2F;cppStudy$ cat data.dat</span><br><span class="line">hellohellohellohellohellohellohellohello</span><br><span class="line">patten@patten-PC:~&#x2F;code&#x2F;workspace&#x2F;cppStudy$ cat data2.dat &#x2F;&#x2F;从data.dat中拷贝的内容</span><br><span class="line">hellohellohellohellohellohellohellohello</span><br><span class="line">patten@patten-PC:~&#x2F;code&#x2F;workspace&#x2F;cppStudy$ cat dupfile.dat &#x2F;&#x2F;打印hello出现7次重定向到dupfile.dat</span><br><span class="line">Find the string hello in file data2.dat 8 times.</span><br><span class="line">patten@patten-PC:~&#x2F;code&#x2F;workspace&#x2F;cppStudy$</span><br></pre></td></tr></table></figure><p><strong>致谢</strong><br>不知名作者的一篇word文档《文件I/O操作open(),close(),read()和write()函数详解》</p>]]></content>
      
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++11变长参数的宏定义以及&#39; __VA_ARGS__&#39;在Log输出中的应用</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/62941/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/62941/</url>
      
        <content type="html"><![CDATA[<p>  C<ins>自带的常用的“std::cout”和“printf()”之类作为log输出显然不是一个好的方法，笔者在学习《(C</ins>11)深入理解C<ins>11：C</ins>2011新特性解析与应用》的教程中，抽出如下的代码，在轻量级调试中是一个不错的选择。</p><p>  在 C99 标准中，程序员可以使用变长参数的宏定义。变长参数的宏定义是指在宏定义中 参数列表的最后一个参数为省略号，而预定义宏 __VA_ARGS__ 则可以在宏定义的实现部分替换省略号所代表的字符串。比如：</p><pre><code>#define PR(...) printf(__VA_ARGS__)</code></pre><p>  就可以定义一个 printf 的别名 PR。事实上，变长参数宏与 printf 是一对好搭档。我们可以看如下代码清单所示的一个简单的变长参数宏的应用。</p><pre><code>#include &lt;stdio.h&gt;#define LOG(...) &#123;\fprintf(stderr,&quot;%s: Line %d:\t&quot;, __FILE__, __LINE__);\fprintf(stderr, __VA_ARGS__);\fprintf(stderr,&quot;\n&quot;);\&#125;int main() &#123;    int x = 3;    // 一些代码 ...    LOG(&quot;x = %d&quot;, x); // 2-1-5.cpp: Line 12: x = 3&#125;// 编译选项 :g++ -std=c++11 2-1-5.cpp</code></pre><p>  如上代码清单，定义 LOG 宏用于记录代码位置中一些信息。程序员可以根据 stderr 产生的日志追溯到代码中产生这些记录的位置。引入这样的特性，对于轻量级调试，简单的 错误输出都是具有积极意义的。</p><p>  注意在使用“#define”进行的宏定义的过程中，换行符是宏定义结束的标志。</p><p>  宏定义分为<strong><strong>无参数宏定义</strong></strong>和<strong><strong>带参数宏定义</strong></strong>两种。</p><p>  无参数的宏定义的一般形式为：&quot;#define 标识符 字符序列&quot;，比如：</p><pre><code>#define PI 3.1415926</code></pre><p>  则在定义它们的源程序文件中，凡定义之后出现的单词PI将用3.1415926替代之。</p><p>  在宏定义的<code>＃</code>之前可以有若干个空格、制表符，但不允许有其它字符。宏定义在源程序中单独另起一行，<strong>换行符是宏定义的结束标志</strong>。如果一个宏定义太长，一行不够时，可采用续行的方法。<strong>续行是在键人回车符之前先键入符号&quot;<code>\</code>&quot;。注意回车要紧接在符号&quot;<code>\</code>&quot;之后，中间不能插入其它符号。</strong></p><p>  如有必要，宏名可被重复定义。被重复定义后，宏名原先的意义被新意义所代替。</p><p>  通常，无参数的宏定义多用于定义常量。程序中统一用宏名表示常量值，便于程序前后统一，不易出错，也便于修改，能提高程序的可读性和可移植性。特别是给数组元素个数一个宏定义，并用宏名定义数组元素个数能部分弥补数组元素个数固定的不足。<br>  注意：<strong><strong><strong>预处理程序在处理宏定义时</strong></strong></strong>，只作字符序列的替换工作，不作任何语法的检查。如果宏定义不当，错误要到预处理之后的编译阶段才能发现。宏定义以换行结束，不需要分号等符号作分隔符。</p><p><strong>相关文章</strong>：《<a href="https://blog.svenhetin.com/c-shu-ju-lei-xing-ji-ge-chong-xing-shi-de-shu-ru-shu-chu/">C++数据类型及各种形式的输入输出汇总</a>》</p><h1 id="致谢"><a class="markdownIt-Anchor" href="#致谢"></a> 致谢</h1><blockquote><p>（加）Michael Wong IBM XL编译器中国开发团队《(C<ins>11)深入理解C</ins>11：C++ 11新特性解析与应用 迷你》</p></blockquote><blockquote><p><a href="https://blog.csdn.net/pachonghanya">zyc_glboy</a>《<a href="https://blog.csdn.net/pachonghanya/article/details/6972632">宏定义\字符串 多行书写时换行</a>》</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++11 主要的新语言特性（中英文对照）</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/27575/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/27575/</url>
      
        <content type="html"><![CDATA[<p>如果谁说 C<ins>11 只是对 C</ins> 语言做了大幅度的改进，那么他很可能就错过了 C<ins>11 精 彩的地方。事实上，了解 C</ins>11 之后，读者只需要看一眼代码，就可以说出代码究竟是 C<ins>98/03 的，还是 C</ins>11 的。C<ins>11 为程序员创造了很多更有效、更便捷的代码编写方式，程序员可 以用简短的代码来完成 C</ins>98/03 中同样的功能，简单到你惊呼“天哪，怎么能这么简单”。 从一些简单的数据统计上看，比起 C<ins>98/03，C</ins>11 大大缩短了代码编写量，依情况最多可 以将代码缩短 30% ～ 80%。 那么 C<ins>11 相对于 C</ins>98/03 有哪些显著的增强呢？事实上，这包括以下几点：</p><ul><li>❑通过内存模型、线程、原子操作等来支持本地并行编程（Native Concurrency）。</li><li>❑通过统一初始化表达式、auto、declytype、移动语义等来统一对泛型编程的支持。</li><li>❑通过 constexpr、POD（概念）等更好地支持系统编程。</li><li>❑通过内联命名空间、继承构造函数和右值引用等，以更好地支持库的构建。</li></ul><p>下表列出了 C<ins>11 批准通过的语言特性。这是一张相当长的表， 而且一个个陌生的词汇足以让新手不知所措。不过现在还不是了解它们的时候。但看过这张表，读者至少会有这样一种感觉 ：C</ins>11 的确像是一门新的语言。如果我们将 C<ins>98/03 标 准中的特性和 C</ins>11 放到一起，C<ins>11 则像是个恐怖的“编程语言范型联盟”。利用它不仅 仅可以写出面向对象语言的代码，也可以写出过程式编程语言代码、泛型编程语言代码、函 数式编程语言代码、元编程编程语言代码，或者其他。多范型的支持使得 C</ins>11 语言的“硬 能力”几乎在编程语言中“无出其右”。</p><p><cneter><strong>C++11 主要的新语言特性（中英文对照）</strong></cneter></p><table><thead><tr><th>中文</th><th>English</th></tr></thead><tbody><tr><td>_cplusplus宏</td><td>_cplusplus macro</td></tr><tr><td>对齐支持</td><td>alignment support</td></tr><tr><td>通用属性</td><td>general attribute</td></tr><tr><td>原子操作</td><td>atomic operation</td></tr><tr><td>auto类型推导（初始化类型推导）</td><td>auto(type deduction from 18nitialize)</td></tr><tr><td>C99特性</td><td>C99</td></tr><tr><td>强类型枚举</td><td>enum class(scoped and strongly typed enums)</td></tr><tr><td>复制及再抛出异常</td><td>copy and rethrow exception</td></tr><tr><td>常量表达式</td><td>constexpr</td></tr><tr><td>decltype</td><td>decltype</td></tr><tr><td>函数的默认模板参数</td><td>default template parameters for function</td></tr><tr><td>显式默认及删除的函数（默认的控制）</td><td>defaulted and deleted functions(control of defaults)</td></tr><tr><td>委托构造函数</td><td>delegating construtors</td></tr><tr><td>并行动态初始化和析构</td><td>Dynamic Initialization and Destruction with Concurrency</td></tr><tr><td>显式转换操作符</td><td>explicit conversion operators</td></tr><tr><td>扩展的friend语法</td><td>extended friend syntax</td></tr><tr><td>扩展的整型</td><td>extended integer types</td></tr><tr><td>外部模板</td><td>extern templates</td></tr><tr><td>一般的SFINAE规则</td><td>generalized SFINAE rules</td></tr><tr><td>统一的初始化语法和语义</td><td>Uniform initialization syntax and semantics</td></tr><tr><td>非受限联合体</td><td>unrestricted union</td></tr><tr><td>用户定义的自变量</td><td>user-defined literals</td></tr><tr><td>变长模板</td><td>variadic templates</td></tr><tr><td>类成员初始化</td><td>in-class member initializers</td></tr><tr><td>继承构造函数</td><td>inherited constructors</td></tr><tr><td>初始化列表</td><td>initializer lists</td></tr><tr><td>lambda函数</td><td>lambda</td></tr><tr><td>局部类型用作模板参数</td><td>local classes as template arguments</td></tr><tr><td>long long 整型</td><td>long long integers</td></tr><tr><td>内存模型</td><td>memory model</td></tr><tr><td>移动语义（参见右值引用）</td><td>move semantics(see rvalue references)</td></tr><tr><td>内联命名空间</td><td>Inline namespace</td></tr><tr><td>防止类型收窄</td><td>Preventing narrowing</td></tr><tr><td>指针空值</td><td>nullptr</td></tr><tr><td>POD</td><td>POD(plain old data)</td></tr><tr><td>基于范围的for语句</td><td>range-based for statement</td></tr><tr><td>原生字符串字面量</td><td>raw string literals</td></tr><tr><td>右值引用</td><td>rvalue reference</td></tr><tr><td>静态断言</td><td>static assertions</td></tr><tr><td>追踪返回类型语法</td><td>trailing return type syntax</td></tr><tr><td>模板别名</td><td>template alias</td></tr><tr><td>线程本地存储</td><td>thread-local storage</td></tr><tr><td>Unicode</td><td>Unicode</td></tr></tbody></table><p>而从另一个角度看，编程中程序员往往需要将实物、流程、概念等进行抽象描述。但 通常情况下，程序员需要抽象出的不仅仅是对象，还有一些其他的概念，比如类型、类型 的类型、算法，甚至是资源的生命周期，这些实际上都是 C++ 语言可以描述的。在 C<ins>11 中，这些抽象概念常常被实现在库中，其使用将比在 C</ins>98/03 中更加方便，更加好用。从 这个角度上讲，C++11 则是一种所谓的“轻量级抽象编程语言”（Lightweight Abstraction Programming Language）。其好处就是程序员可以将程序设计的重点更多地放在设计、实现， 以及各种抽象概念的运用上。</p><p>总的来说，灵活的静态类型、小的抽象概念、绝佳的时间与空间运行性能，以及与硬件 紧密结合工作的能力都是 C<ins>11 突出的亮点。而反观 C</ins>98/03，其最强大的能力则可能是 体现在能够构建软件基础架构，或构建资源受限及资源不受限的项目上。因此，C<ins>11 也是 C</ins> 在编程语言领域上一次“泛化”与进步。</p><p>要实现表中的各种特性，需要编译器完成大量的工作。对于大多数编译器供应商来 说，只能分阶段地发布若干个编译版本，逐步支持所有特性（罗马从来就不是一天建成的， 对吧）。大多数编译器已经开始了对 C<ins>11 特性的支持。有 3 款编译器甚至从 2008 年前就开 始支持 C</ins>11 了：IBM 的 XL C/C++ 编译器从版本 10.1 开始。GNU 的 GCC 编译器从版本 4.3 开始，英特尔编译器从版本 10.1 开始。而微软则从 Visual Studio 2010 开始。最近，苹果的 clang/llvm 编译器也从 2010 年的版本 2.8 开始支持 C++11 新特性，并且急速追赶其他编译器 供应商。</p><h1 id="致谢"><a class="markdownIt-Anchor" href="#致谢"></a> 致谢</h1><blockquote><p>（加）Michael Wong IBM XL编译器中国开发团队《(C<ins>11)深入理解C</ins>11：C++ 11新特性解析与应用 迷你》</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javascript利用jquery 动态创建 DIV或子DIV</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/45204/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/45204/</url>
      
        <content type="html"><![CDATA[<p>在做音乐列表的时候碰到了这个需求，于是上网搜索相关解决方案，结果是<strong>千篇一律</strong>，几乎都是错的（报错“parentdiv.addClass is not a function(…)”）。后来通过查找资料解决了相关问题。</p><p>首先要记得引入<a href="https://jquery.com/download/">jQuery</a>的文件。</p><h1 id="方法一"><a class="markdownIt-Anchor" href="#方法一"></a> 方法一：</h1><pre><code>var creatediv= function()&#123;    var parentdiv=$('&lt;div&gt;&lt;/div&gt;');        //创建一个父div    parentdiv.attr('id','parent');        //给父div设置id    parentdiv.addClass('parentdiv');    //添加css样式    var childdiv=$('&lt;div&gt;&lt;/div&gt;');        //创建一个子div    childdiv.attr('id','child');            //给子div设置id    childdiv.addClass('childdiv');    //添加css样式    childdiv.appendTo(parentdiv);        //将子div添加到父div中    parentdiv.appendTo('body');            //将父div添加到body中&#125;</code></pre><p><strong>千万注意：Javascript大小写敏感case-sensetive，“addClass”的“c”一定要大写（还有“<strong>appendTo</strong>”），好多教程都抄成了“parentdiv.addclass(‘parentdiv’);”结果会报类似的错误——</strong></p><pre><code>parentdiv.addclass is not a function(…)</code></pre><h1 id="方法二"><a class="markdownIt-Anchor" href="#方法二"></a> 方法二</h1><pre><code>var boarddiv = &quot;&lt;div style='background:white;width:100%;height:100%;z-index:999;position:absolute;top:0;margin-top:100px;'&gt;加载中...&lt;/div&gt;&quot;; $(window).load(function()&#123; //window.alert(&quot;ok&quot;); $(document.body).append(boarddiv); &#125;);</code></pre><p>该方法我还未尝试，仅供参考。</p><p>感谢第一个提出该方法的网友，出处不详。</p><p>个人觉得<code>append</code>比<code>appendTo</code>好用些，可能我对后者的具体用法不太熟悉。</p>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 16.04添加全新硬盘流程步骤</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/47118/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/47118/</url>
      
        <content type="html"><![CDATA[<h2 id="操作环境"><a class="markdownIt-Anchor" href="#操作环境"></a> 操作环境：</h2><pre><code>   系统：Ubuntu 16.04           硬件：硬盘 1T（全新未使用过的WD蓝盘）</code></pre><h2 id="操作过程"><a class="markdownIt-Anchor" href="#操作过程"></a> 操作过程：</h2><p>1.拆开电脑机箱，安装硬盘，具体操作省略。</p><p>2.开机查看系统硬盘分区情况：</p><pre><code>   命令：# sudo  fdisk  -l</code></pre><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/47118/20180228160221652.png" alt></p><p>得到如上图：可以知道第二块硬盘:/dev/sdb</p><pre><code>3.格式化硬盘   命令：# sudo mkfs.ext4  /dev/sdb   还有一种方法是通过Ubuntu系统中搜索框搜索disk软件查看硬盘情况，并通过该软件图形化进行格式化操作</code></pre><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/47118/20180228161021366.png" alt></p><p>鼠标点击两个齿轮的位置，第一选项就是格式化硬盘，或者使用crtl+shift+F进行格式化操作，可以个格式化硬盘设置一个标签，如：code</p><p>4.查看硬盘分区的UUID</p><pre><code>   命令：# sudo blkid</code></pre><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/47118/20180228160719277.png" alt></p><p>从上图可以清楚的看到，该硬盘已经格式化为ext4，标签为code</p><p>5.在已有的user目录下新建一个挂在点</p><p>命令：</p><pre><code># mkdir xxx</code></pre><p>例如：我自己在已有的目录下创建一个code目录挂载新的硬盘分区，如：</p><pre><code># mkdir /home/jason/code</code></pre><p>6.编辑系统挂载配置文件/etc/fstab</p><p>命令：</p><pre><code># sudo  vim etc/fstab</code></pre><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/47118/20180228161505968.png" alt></p><p>按照已有的格式，将新加的硬盘分区信息添加到结尾；</p><p>注：格式为 设备名称 挂载点 分区类型 挂载选项 dump选项 fsck选项<br>dump选项–这一项为0，就表示从不备份。如果上次用dump备份，将显示备份至今的天数。<br>fsck选项 –启动时fsck检查的顺序。为0就表示不检查，（/）分区永远都是1，其它的分区只能从2开始，当数字相同就同时检查（但不能有两1）</p><p>7.修改对应的用户和权限</p><p>命令：</p><pre><code># sudo chown -R jason:jason /home/jason/code# sudo chmod -R 4755 /home/jason/code</code></pre><p>注：chmod使用的数字的意思： 读（r=4），写（w=2），执行（x=1）可读可写为4+2=6 依次内存 755表示的是文件所有者权限7（三者权限之和），与所有者同组用户5（读+执行），其他用户同前一个5，这里的4的意思是（其他）用户执行拥有所有者相同的文件权限（对于其他要使用的文件）</p><p>8.重启电脑</p><p>命令：</p><pre><code>sudo reboot</code></pre><p><strong>致谢：</strong></p><blockquote><p>stoic163《<a href="https://blog.csdn.net/stoic163/article/details/79401739">Ubuntu 16.04添加全新硬盘操作方法</a>》</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++判断某个字串是否有关键字</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1950/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1950/</url>
      
        <content type="html"><![CDATA[<p>“c++判断某个字串是否有关键字”代码示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">std::string&amp; aJSONData&#x3D;&quot;tsddsgsgsgsgsgsdgsgsg&quot;;</span><br><span class="line">std::string json_data &#x3D; aJSONData.c_str();</span><br><span class="line">  std::string::size_type idx_exit_sdl &#x3D; json_data.find(&quot;send_to_exit_sdl_hmi&quot;);</span><br><span class="line">  if(idx_exit_sdl !&#x3D; std::string::npos) &#123;</span><br><span class="line">    &#x2F;&#x2F; Success!!</span><br><span class="line">    std::cout&lt;&lt;&quot;Start to exit sdl app!!&quot;&lt;&lt;std::endl;</span><br><span class="line">    send_exit_sdl_message_to_ivi();</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    &#x2F;&#x2F; Fail!!!!!</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Koenig Editor - Beta Release（Koenig Editor中文快速入门教程）</title>
      <link href="%E7%BF%BB%E8%AF%91/23701/"/>
      <url>%E7%BF%BB%E8%AF%91/23701/</url>
      
        <content type="html"><![CDATA[<hr><p>translated from 《<a href="https://forum.ghost.org/t/koenig-editor-beta-release/1284">Koenig Editor - Beta Release</a>》</p><p>“Koenig”是Ghost未来编辑的代号。您可能在我们的<a href="https://blog.ghost.org/1-0/?_ga=2.191180202.1484287737.1547377455-1696442518.1544852430#letmeexplain">Ghost 1.0公告</a>159中第一次听说过它，现在随着Ghost 1.23.0的发布，它终于可以开始测试了。</p><p>我们为什么要找一个新的编辑器?1.0版的文章总结得很好:</p><blockquote><p>改进Ghost的Markdown编辑器一直是我们优先考虑的事情，但很长一段时间以来，我们一直希望做得更多。现代出版物不只是基于文本，它们还包括从照片到视频的各种动态元素、详细的图表和丰富的嵌入。我们想要构建一些全新的东西，它将支持所有这些用例，并且在未来可以为新类型的内容进行扩展。</p></blockquote><p>这只是我们对编辑器未来计划的皮毛，但目前我们关注的是基础——一个非常好的编辑体验，它提供了比单独标记更大的灵活性，同时使您的内容更接近最终输出。</p><p>要总结Koenig的基本概念，最好将其视为两种类型的内容:富文本和卡片。富文本包括所有文本内容，如标题、段落、列表和一般格式。在丰富的文本中穿插着我们所说的“卡片”。卡片表示非文本内容(图像、嵌入、分隔符等)或其他格式(如代码、标记或HTML)的容器。</p><p>但是!别担心，Markdown 并没有完全消失。我们知道每个人都习惯使用Markdown编写(很多人真的很喜欢它!)，所以我们想通过使用Markdown格式作为执行编辑器操作的快捷方式，将Markdown最好的部分和传统的所见即所得（WYSIWYG）编辑器结合起来。它应该是可能的利用你的标记肌肉记忆来真正流线化你的写作经验，如果感觉有什么不自然或破坏了你的体验，请让我们知道!</p><p>所以，在功能列表上:请通读本文，了解您可以使用Koenig做什么。它有点长，但Koenig仍处于测试阶段，没有应用内帮助或文档，所以我们想展示一切可能的东西。</p><p>如果你渴望开始，就跳到最后。我们将介绍如何启用Koenig，如何向主题添加支持，以及如何报告问题。</p><h1 id="功能概览"><a class="markdownIt-Anchor" href="#功能概览"></a> 功能概览</h1><p>格式化工具栏</p><p><img src="/%E7%BF%BB%E8%AF%91/23701/Feature-overview.gif" alt></p><p>就像其他WYSIWYG编辑器一样，基本的格式化操作可以通过工具栏来执行。选择您想要格式化的文本,然后单击应用所需的格式,希望这些都是不言而喻的:需要注意的一件事是,如果你使用键盘选择文本,你不会看到工具栏,直到你移动鼠标,我们希望UI远离尽可能多的方式。</p><p>可以通过二级链接工具栏/url输入创建链接。如果您的内容中有链接，请将鼠标悬停在该链接上，以获得可单击的版本以及一个edit按钮，以返回url输入。</p><p>许多格式以及其他一些也可以通过键盘快捷键应用:</p><ul><li><code>⌘/Ctrl+B</code> 触发 strong</li><li><code>⌘/Ctrl+I</code> 触发 emphasis</li><li><code>⌘/Ctrl+U</code> 触发 underline</li><li><code>⌘/Ctrl+K</code> 触发 the link input</li><li><code>⌘Shift+Enter</code> 插入一个 分割线 or <code>&lt;br&gt;</code></li></ul><h2 id="markdown下编辑文本扩展"><a class="markdownIt-Anchor" href="#markdown下编辑文本扩展"></a> Markdown下编辑/文本扩展</h2><p><img src="/%E7%BF%BB%E8%AF%91/23701/MarkdownEditing.gif" alt></p><p>我们希望Koenig感觉像是markdown的自然进程，这样您就可以使用典型的markdown标记来创建节、卡片和应用格式。</p><p>以下部分扩展仅在空白段落开头键入时有效，并在输入后置空间时立即触发:</p><ul><li><code>#</code>, <code>##</code>, 等等可用于创建新的标题节或更改现有标题节的标题级别.</li><li><code>&gt;</code> 将创建一个区块引用部分.</li><li><code>-</code> 或者 <code>*</code> 将创建一个无序列表部分.</li><li><code>1.</code> 将创建一个有序列表部分</li></ul><p>一旦输入了终止符，就会触发格式化扩展，不需要尾部空间：</p><ul><li><code>*...*</code> 或 <code>_...</code>_ = 斜体格式</li><li><code>**...**</code> = 加粗格式</li><li><code>[example](https://example.com/)</code> = 创建链接</li></ul><p>还有两种特殊的格式，它们的触发方式与普通的格式展开相同，但之后的编辑方式不同：</p><ul><li><code>~~strike~~</code> = 删除线格式</li><li><code>`test`</code> = 内联代码块格式</li></ul><p>最后两种格式的区别在于如何编辑。如果将光标放在格式化文本的末尾并按 <code>Backspace</code> 键，则markdown展开将撤消，以便在再次完成展开之前添加更多文本以重新应用格式化。</p><p>最后，我们有扩展卡，触发时写为第一件事在一个空白段落:</p><ul><li><code>```</code> 将创建一个代码块卡片</li><li><code>---</code> 将创建一个分隔卡片</li><li><code>![alt text](http://example.com/image.png)</code> 将创建一个使用属性 <code>alt</code> 和 <code>src</code> 的图片卡片 。</li></ul><h1 id="卡片"><a class="markdownIt-Anchor" href="#卡片"></a> 卡片</h1><p>在Koenig中，除了简单的文本之外，还可以添加动态的、可扩展的内容块。我们把这些积木叫做“卡片”。目前Koenig有下列卡片可供选择:</p><p><img src="/%E7%BF%BB%E8%AF%91/23701/KoenigCard.png" alt></p><p>有些卡片，如Markdown、HTML和Code card，将具有“编辑”模式，并且在第一次插入时将处于该模式，您可以将光标置于卡片外部，通过按 <code>Escape</code> 或单击退出该模式。回到编辑模式下你可以双击一个卡片,或选择通过移动鼠标与键盘然后按 <code>⌘/ Ctrl</code> + <code>Enter</code> 。</p><p>还有一种插入卡片的快捷方式，可以在空白段落的开头输入/。您可以继续输入以筛选列表，然后按 <code>Enter</code> 键插入卡片:</p><p><img src="/%E7%BF%BB%E8%AF%91/23701/othercard.gif" alt></p><h2 id="markdown-卡片"><a class="markdownIt-Anchor" href="#markdown-卡片"></a> Markdown 卡片</h2><p>对于那些无法想象完全放弃Markdown的人，可以在Koenig中使用Ghost 1.0中发布的默认Markdown编辑器。</p><p><img src="/%E7%BF%BB%E8%AF%91/23701/markdown.gif" alt></p><p>你现有的所有贴子实际上都已经是Koenig贴子了，只不过它们是由一张贴子卡组成的。打开你现有的帖子，你会明白我们的意思!</p><h2 id="image-卡片"><a class="markdownIt-Anchor" href="#image-卡片"></a> Image 卡片</h2><p>你可以使用图片卡上传图片(惊喜!)我们也知道在Ghost中图像标题是多么频繁地被请求的功能，所以我们很高兴地说图像卡有一个内置的标题功能!这还不是全部，您还可以从三个图像宽度选项中选择:普通、宽和全出血。</p><p><img src="/%E7%BF%BB%E8%AF%91/23701/imagecard.jpg" alt></p><p>请参阅下面的“所需主题更改”一节，以确保您发布的文章符合选定的图像宽度。</p><h2 id="html-卡片"><a class="markdownIt-Anchor" href="#html-卡片"></a> HTML 卡片</h2><p>HTML卡片允许您在文章中添加自定义HTML代码，以防您有特定的HTML，如图像库或标注标记。</p><p>如果你想要嵌入YouTube视频，Twitter卡片，或者类似的东西，通过使用该服务的完整的“嵌入”共享选项和复制/粘贴HTML，它是非常有用的。我们将很快改进嵌入支持与一个独立的嵌入卡。</p><h1 id="其他功能"><a class="markdownIt-Anchor" href="#其他功能"></a> 其他功能</h1><h2 id="html-粘贴"><a class="markdownIt-Anchor" href="#html-粘贴"></a> HTML 粘贴</h2><p>您是否有一些markdown格式的文本，希望能够快速地用Koenig格式化?</p><p>没问题!任何粘贴到Koenig中的文本都将通过Ghost的markdown解析器运行，这样Koenig就可以将其视为富文本粘贴，这意味着您将自动为您创建格式良好的标题、文本、图像卡等。</p><h2 id="富文本粘贴"><a class="markdownIt-Anchor" href="#富文本粘贴"></a> 富文本粘贴</h2><p>如果您从外部源(如网页甚至谷歌文档)复制内容，则将其尽可能保留格式地粘贴到Koenig中。头和基本的文本格式将被复制跨和卡应该自动创建任何支持的内容，如图像。</p><p>然而，这是一个正在进行的过程，以解决任何在这里的扭结。如果您在将内容粘贴到Koenig时发现任何问题，请回复我们，并尽可能详细地说明您试图复制的内容以及失败的原因。如果可能的话，减少你正在复制/粘贴的内容，这样你就可以帮助我们准确地找出哪些是不工作的。</p><h1 id="即将到来的功能"><a class="markdownIt-Anchor" href="#即将到来的功能"></a> 即将到来的功能</h1><ul><li><strong>Unsplash集成</strong> -  选择图像卡中的未启动图像</li><li><strong>图像文件粘贴</strong>  - 复制然后粘贴图像文件到Koenig自动创建图像卡和上传您的图像</li><li>嵌入卡 - 简单的嵌入YouTube视频，Twitter卡，Facebook卡，任何很多很多的卡片，只要粘贴各自的url</li></ul><h1 id="如何去测试"><a class="markdownIt-Anchor" href="#如何去测试"></a> 如何去测试</h1><p>首先，确保您使用的是<strong>Ghost 1.23.0</strong>或更高版本。</p><p>如果通过 Ghost-CLI 安装，可以使用非常快速的 <a href="https://docs.ghost.org/docs/cli-update?_ga=2.236350977.1484287737.1547377455-1696442518.1544852430">ghost update</a> 14命令。Ghost(pro)客户对1。x已经升级到1.23.0。</p><p>(顺便说一句，如果您是Ghost(pro)客户，并且仍然使用Ghost 0.x，按照<a href="https://help.ghost.org/article/59-migrating-to-ghost-1-0?_ga=2.122685707.1484287737.1547377455-1696442518.1544852430">迁移指南</a>11获取最新的热度)</p><h2 id="要求主题的变化"><a class="markdownIt-Anchor" href="#要求主题的变化"></a> 要求主题的变化</h2><p>主题的CSS应该为使用Koenig编辑过的内容做好准备，要查看完整的示例，请查看Casper <a href="https://github.com/TryGhost/Casper/compare/4aaedf69d2fb7cc36934d44a930f202ff4a10d65...master#diff-ce5e030f2e2e2a50f18199464f07ea70">Koenig实现</a>75。</p><h2 id="内容包装"><a class="markdownIt-Anchor" href="#内容包装"></a> 内容包装</h2><ul><li>使用Ghost 1.0 markdown编辑器创建的所有现有文章都呈现在一个包装器元素中，该元素使用 <code>.kg-card-markdown</code> CSS类(此处没有更改，但以后将不推荐使用该类)。</li><li>启用Koenig编辑器编辑或保存的所有文章都包装在一个元素中，该元素使用 <code>.kg-post</code> 类而不是 <code>.kg-card-markdown</code>。</li></ul><h2 id="图像类"><a class="markdownIt-Anchor" href="#图像类"></a> 图像类</h2><ul><li>Koenig允许图像呈现为“宽”或“全宽”，以及向图像添加标题，但是您的主题需要支持这一点，以便在发布的文章中使用样式</li><li>添加对<code>&lt;figure&gt;</code> 和 <code>&lt;figcaption&gt;</code>元素的支持(见下图)</li><li>添加对 <code>.kg-image-wide</code> 和 <code>.kg-image-full</code> 类的支持</li></ul><p>渲染图像卡的完整HTML结构如下:</p><pre><code>&lt;figure class=&quot;kg-image-card&quot;&gt;   &lt;img src=&quot;...&quot; class=&quot;kg-image (kg-image-wide|kg-image-full)&quot;&gt;   &lt;figcaption&gt;...&lt;/figcaption&gt;&lt;/figure&gt;</code></pre><p><strong>Embed classes</strong></p><ul><li><p>添加对 <code>&lt;figure&gt;</code> 元素中嵌入的 <code>&lt;iframe&gt;</code>s 或其他内嵌内容的这支持</p><figure class="kg-embed-card">    <iframe width="480" height="270" src="https://www.youtube.com/embed/JXpyslBvAnQ?feature=oembed" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>   <figcaption>...</figcaption></figure></li></ul><h1 id="在-labs里启用-koenig"><a class="markdownIt-Anchor" href="#在-labs里启用-koenig"></a> 在 labs里启用 Koenig</h1><p>要启用新编辑器，请选中博客管理区域Labs下的“Koenig editor”复选框。</p><p><strong>Note:</strong> 用Koenig编辑过的帖子只能用Koenig编辑，即使你通过实验室禁用了Koenig。唯一的例外是帖子只包含一个标记卡片，没有富文本，它们将在默认的Ghost 1中打开。禁用实验室标志时的1.x编辑器。</p><h2 id="不支持"><a class="markdownIt-Anchor" href="#不支持"></a> 不支持:</h2><ul><li><strong>IE</strong> - 不支持</li><li><strong>Edge</strong> - 不支持 - 最新版本可能在某种程度上有效，但已知存在问题</li><li><strong>Mobile browsers</strong> - 不支持 - 它们可能有用，但是还没有经过测试，而且目前还不是开发的重点领域</li></ul><h2 id="支持"><a class="markdownIt-Anchor" href="#支持"></a> 支持:</h2><ul><li>Chrome 66/67</li><li>Safari 11.0/11.1</li><li>Firefox 60/61</li></ul><p>测试版只在Chrome 66/67中进行了广泛的测试，如果您使用的浏览器在支持列表中，并遇到问题，请按照下面的问题反馈。</p><h1 id="问题反馈"><a class="markdownIt-Anchor" href="#问题反馈"></a> 问题反馈</h1><p>首先，感谢您测试测试版!如果你遇到错误，错误，或奇怪的行为，我们一定想收到它!如果有些东西感觉不自然或不易使用，我们也想收到。</p><p>请<strong>不要打开Github问题</strong>，而是回复这个话题，这样我们可以避免在Github上产生噪音。这里有一个快速检查表，当你报告任何事情时都可以浏览:</p><ul><li>首先检查<a href="https://github.com/TryGhost/Ghost/issues/9623">发布候选问题</a>66，看看它是否是已知的问题，或者只是还没有实现</li><li>检查开发工具控制台的错误-开发工具可以在大多数浏览器上打开，右键单击页面并选择“Inspect”或“Inspect element”-并确保您的文章中包含它们，截屏通常比复制/粘贴更可取</li><li>包括尽可能多的详细复制步骤</li><li>一定要提到您使用的浏览器、浏览器版本和操作系统</li></ul><h1 id="请求"><a class="markdownIt-Anchor" href="#请求"></a> 请求</h1><p><strong>请不要在这里回复</strong>。我们正在寻找已经可用的反馈和bug报告。任何讨论不中心反馈当前编辑器将被删除的主题——这不是个人,我们只有有限的资源,因此如果我们能够保持专注，严格的最初版本的特性集对这个讨论的唯一方法是有用的。</p>]]></content>
      
      
      <categories>
          
          <category> 翻译 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> 翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在Windows10上安装Youtube-DL</title>
      <link href="%E7%BF%BB%E8%AF%91/205/"/>
      <url>%E7%BF%BB%E8%AF%91/205/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>  本文由<a href="https://guopengzhen.com/">郭鹏真</a>于2020/10/31翻译自<a href="https://danclowry.com/">Dan Clowry</a>《<a href="https://danclowry.com/blog/youtube-dl-windows-install/">How to Install Youtube-DL on Windows</a>》，英语水平比较好的可以直接看原文。</p><p>  由于跨境电商运营的过程中，需要剪辑大量的视频用于广告推广，但是市面上搜到的视频下载软件总是难以满足我的需求，于是作为程序猿的我就找到了这种Youtube-DL，非常好用，可以下载几乎所有的视频网站视频，也可以用指令剪辑成自己所需要的视频片段。</p><blockquote><p><strong>注</strong>：这些其他网站包括但不限于如下常用网站：BaiduVideo百度视频、BiliBili、BBC、CCTV央视网、CNN、iqiyi爱奇艺、kuwo酷我音乐、MSN、netease网易云音乐、qqmusicQQ音乐、xiami虾米音乐、ximalaya喜马拉雅FM、Yahoo、youku优酷、youtube等。</p></blockquote><hr><p><strong>原文</strong></p><p>   <code>Youtube-DL</code>是一个很棒的小项目，通过它，你可以从互联网上几乎每个主流的视频网站下载视频。本教程将向您展示如何在Windows上下载、安装、配置和使用<code>Youtube-DL</code>。</p><h2 id="预先准备"><a class="markdownIt-Anchor" href="#预先准备"></a> 预先准备</h2><ul><li>基本了解如何打开和使用Windows下的命令提示符CMD</li><li><a href="https://www.microsoft.com/en-US/download/details.aspx?id=5555">Microsoft Visual C++ 2010 Redistributable Package (x86)</a></li><li>【<strong>译者注</strong>：由于本人的计算机一直处于“科学上网”状态，实际操作是否需要科学上网，自己测试验证。】</li></ul><h2 id="下载和安装"><a class="markdownIt-Anchor" href="#下载和安装"></a> 下载和安装</h2><h3 id="下载-youtube-dl"><a class="markdownIt-Anchor" href="#下载-youtube-dl"></a> 下载 <code>Youtube-DL</code></h3><p>  我们将从下载和安装<code>Youtube-DL</code>开始。进入<code>Youtube-DL</code> Github存储库的发布页面【<strong>译者注</strong>：<code>Youtube-DL</code>的<a href="https://github.com/ytdl-org/youtube-dl/releases/latest">Github仓库</a>由于<code>DMCA takedown notice</code>已经关闭，需要去<a href="https://youtube-dl.org/">官网</a>下载，如果还是没找到，下面评论区留下邮箱，到时候我发你】。 <s>向下滚动，直到找到<code>assets</code>列表，单击名为“youtube-dl”的文件。开始下载Youtube-DL。</s> 您可以将该文件下载到除<code>System32</code>之外的任何位置。我建议为<code>Youtube-DL</code>单独创建一个文件夹，这样以后配置<code>Youtube-DL</code>会更容易。本教程中，我将该文件下载到<code>D:\Programs\Other Programs\Youtube-DL</code>。</p><p>   现在您已经下载了<code>Youtube-DL</code>。您可能已经注意到，当您尝试双击运行程序时，什么也不会发生【<strong>译者注</strong>：现象就是命令窗口闪退】。这是因为<code>Youtube-DL</code>是一个命令行程序，它只能从命令行界面(如命令提示符<code>Command Prompt</code>)中使用。</p><p>   但是，如果您打开命令提示符并尝试使用命令<code>youtube-dl</code>，您仍然会得到一个错误，说明该命令不被识别。要运行<code>Youtube-DL</code>，您需要将其添加到您的计算机路径<code>PATH</code>中，或者将其添加到您下载<code>Youtube-DL</code>的<code>cd</code>目录中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\guopz&gt;youtube-dl</span><br><span class="line">&#39;youtube-dl&#39; 不是内部或外部命令，也不是可运行的程序</span><br><span class="line">或批处理文件。</span><br></pre></td></tr></table></figure><h3 id="将youtube-dl添加到你的全局变量路径推荐"><a class="markdownIt-Anchor" href="#将youtube-dl添加到你的全局变量路径推荐"></a> 将<code>Youtube-DL</code>添加到你的全局变量路径(推荐)</h3><p>   将<code>Youtube-DL</code>添加到您的路径允许您从任何命令行界面(如命令提示符或PowerShell)运行<code>Youtube-dl</code>命令，而无需首先<code>cd</code>到您安装<code>Youtube-DL</code>的目录中。</p><p><strong>将<code>Youtube-DL</code>添加到你的全局变量路径中：</strong></p><h4 id="step-1复制你的youtube-dl下载安装位置的完整路径"><a class="markdownIt-Anchor" href="#step-1复制你的youtube-dl下载安装位置的完整路径"></a> Step 1:复制你的<code>Youtube-DL</code>下载安装位置的完整路径</h4><p>   你可以通过导航到你在Windows资源管理器中下载<code>Youtube-DL</code>的任何地方，点击地址栏并复制文本来显示完整的路径。不要在路径中包含<code>.exe</code>，它应该只包含目录(例如<code>D:\Programs\Other Programs\Youtube-DL</code>，而不是<code>D:\Programs\Other Programs\Youtube-DL\Youtube-DL.exe</code>)。</p><p><img src="/%E7%BF%BB%E8%AF%91/205/add_to_your_path.png" alt="Add to your own Path"></p><h4 id="step-2打开环境变量"><a class="markdownIt-Anchor" href="#step-2打开环境变量"></a> Step 2:打开环境变量</h4><p>   按<code>Win+R</code>键，输入<code>System propertiesadvanced</code>，打开【系统属性】菜单。在此菜单中，按下标签为【环境变量】的按钮。</p><p><img src="/%E7%BF%BB%E8%AF%91/205/environment_variables.png" alt="environment variables"></p><h4 id="step-3选择path变量"><a class="markdownIt-Anchor" href="#step-3选择path变量"></a> Step 3:选择<code>Path</code>变量</h4><p>   您可以将<code>Youtube-DL</code>添加到用户User级别或系统System级别的路径。将其添加到系统路径将允许任何用户运行<code>youtube-dl</code>命令，而无需首先进入安装目录，而用户路径将仅应用于当前登录的用户。注意，在系统路径中设置它需要管理员权限，并且<code>youtube- dll.exe</code>不能位于用户级别下的特定位置(例如桌面或“我的文档”)。对于本教程，我将使用系统路径。</p><p>   如果希望将其添加到用户级别路径中，请滚动上面第一个变量列表【某某的用户变量U】，直到找到一个指定路径<code>Path</code>。双击它，打开编辑器。<br>   如果希望将其添加到系统级别路径中，请滚动下面第二个变量列表【系统变量S】，直到找到一个指定路径<code>Path</code>。双击它以打开编辑器。</p><p>   很可能已经有一些东西在路径<code>Path</code>中了。不要删除任何现有条目。它们很可能是由其他程序或Windows系统设置的，删除它们会导致程序无法工作，甚至会导致Windows无法启动。</p><p><img src="/%E7%BF%BB%E8%AF%91/205/environment_variables.png" alt="environment variables"></p><center>左边是用户和系统变量列表，右边是系统路径的编辑器</center><h4 id="step-4将youtube-dl安装路径添加到你想要添加的级别路径中"><a class="markdownIt-Anchor" href="#step-4将youtube-dl安装路径添加到你想要添加的级别路径中"></a> Step 4:将<code>Youtube-DL</code>安装路径添加到你想要添加的级别路径中</h4><p>   打开变量编辑器，并且您的<code>Youtube-DL</code>安装路径在剪贴板中，按下编辑器右侧的【新建】New按钮。这将在变量栏的底部创建一个新条目。粘贴到你的<code>Youtube-DL</code>路径，然后按enter【回车键】，然后按OK【确定】键，保存更改。</p><p><img src="/%E7%BF%BB%E8%AF%91/205/add_to_all_path.png" alt="add_to_all_path"></p><h4 id="step-5-测试"><a class="markdownIt-Anchor" href="#step-5-测试"></a> Step 5: 测试</h4><p>   现在您已经将<code>Youtube-DL</code>添加到路径<code>Path</code>中，您现在可以打开一个新的命令提示窗口，并运行<code>Youtube-DL</code>。现在您可以转到“<a href="https://guopengzhen.com/%E7%BF%BB%E8%AF%91/205/#%E5%AE%89%E8%A3%85ffmpeg">安装FFmpeg</a>”一节来继续安装!</p><p><img src="/%E7%BF%BB%E8%AF%91/205/test_youtube-dl.png" alt="Test it"></p><p>如果你的CMD窗口仍然不能识别<code>youtube-dl</code>，并有错误提示，试试下面的方法:</p><ul><li>重新启动计算机强制刷新路径。</li><li>请仔细检查Youtube-DL的路径是否正确。确保<code>youtube-dl.exe</code>不包含在路径中。</li><li>如果您将<code>Youtube-DL</code>添加到系统级别路径<code>Path</code>，请尝试将其添加到用户级别路径<code>Path</code>(反之亦然)。</li><li>在路径编辑器中，选择<code>Youtube-DL</code>条目，并尝试使用“上移”和“下移”按钮在路径条目列表中上下移动一下。</li></ul><p>   如果尝试了上面的方法仍然无效，在这篇文章的底部留下评论，看看是否有人可以帮助你。</p><h3 id="安装ffmpeg"><a class="markdownIt-Anchor" href="#安装ffmpeg"></a> 安装<code>FFmpeg</code></h3><p>   虽然<code>FFmpeg</code>不是必需的，但它让您可以扩展<code>Youtube-DL</code>的更多特性。最值得注意的是，它允许您下载高于720p的Youtube视频，并允许您将特定的音频和视频音轨合并为一个文件。</p><p>   安装<code>FFmpeg</code>和安装<code>Youtube-DL</code>非常相似。转到Windows下的<code>FFmpeg</code> <a href="https://ffmpeg.zeranoe.com/builds/">下载页面</a>【<strong>译者注</strong>：该链接已经打不开，现在官网下载链接在<a href="https://ffmpeg.org/download.html">这里</a>，同样，如果找不到，请把邮箱留在下面评论区】，选择您的系统架构和所需的FFmpeg版本，然后按下<code>download</code>。这将开始下载包含<code>FFmpeg</code>文件的zip文件。将此zip文件解压缩到您选择的位置。在本教程中，我将其解压提取到<code>D:\Programs\Other Programs\ffmpeg</code>。</p><p>   解压提取<code>FFmpeg</code>后，现在需要将其添加到您的路径<code>Path</code>中。步骤与<code>Youtube-DL</code>相同。但是，不要复制基本的FFmpeg安装路径，而是从bin文件夹复制路径(例如，<code>D:\Programs\Other Programs\ffmpeg\bin</code>而不是<code>D:\Programs\Other Programs\ffmpeg\</code>)。</p><p><img src="/%E7%BF%BB%E8%AF%91/205/FFmpeg_includes_bin.png" alt="Note that the path for FFmpeg includes the &quot;bin&quot; folder"></p><center>注意，FFmpeg的路径包括“bin”文件夹</center><p>   您可以通过打开命令提示符并运行<code>ffmpeg</code>来验证在路径中设置了<code>FFmpeg</code>。<br><img src="/%E7%BF%BB%E8%AF%91/205/test_ffmpeg.png" alt="Test ffmpeg"></p><h3 id="配置youtube-dl"><a class="markdownIt-Anchor" href="#配置youtube-dl"></a> 配置<code>Youtube-DL</code></h3><p>   既然您已经成功安装了<code>Youtube-DL</code>，那么您可能需要使用<a href="https://github.com/ytdl-org/youtube-dl#options">数百种可用变量</a>【<strong>译者注</strong>：此网页无法打开，官网看样子没人维护，暂时也找不到，找到的伙伴欢迎分享到下面评论区】中的一些来根据自己的喜好定制化。但是每次运行<code>Youtube-DL</code>时输入相同的选项是很乏味的。这就是配置文件的作用。每次运行<code>Youtube-DL</code>时都会运行配置文件中设置的选项。但是，可以在运行时使用<code>--ignore-config</code>标志禁用该配置。在运行时设置的选项也将优先于配置中设置的选项。</p><p>   创建配置文件非常简单。对于Windows，只需在<code>%APPDATA%\youtube-dl\</code>目录下创建一个名为’config.txt’的文件。在配置中设置选项就像在运行时设置选项一样。可以使用哈希符号(#)注释掉行。</p><p>我建议使用下面的配置作为起点:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Set date at current date instead of video&#39;s original date</span><br><span class="line">--no-mtime</span><br><span class="line"></span><br><span class="line"># Save to current user&#39;s videos folder using video title</span><br><span class="line"># See https:&#x2F;&#x2F;github.com&#x2F;ytdl-org&#x2F;youtube-dl#output-template for all naming options</span><br><span class="line">-o &quot;%USERPROFILE%\Videos\Youtube\%(title)s.%(ext)s&quot;</span><br></pre></td></tr></table></figure><p>   查看配置<code>Youtube-DL</code> 的<a href="https://github.com/ytdl-org/youtube-dl#options">选项列表</a>和<a href="https://github.com/ytdl-org/youtube-dl#options">输出选项列表</a>。</p><h3 id="使用ffmpeg"><a class="markdownIt-Anchor" href="#使用ffmpeg"></a> 使用<code>FFmpeg</code></h3><p>   既然您已经按照自己的喜好安装和配置了<code>Youtube-DL</code>，那么您可能想知道如何使用它。本节提供了一些关于如何使用<code>Youtube-DL</code>下载视频的示例和提示。</p><h4 id="基本用法"><a class="markdownIt-Anchor" href="#基本用法"></a> 基本用法</h4><p>   下载视频最简单的方法是调用<code>youtube-dl</code>，然后输入视频URL。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">youtube-dl https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v&#x3D;tO01J-M3g0U</span><br></pre></td></tr></table></figure><p>   这将下载你想要的视频使用最高的可用质量。如果安装了<code>FFmpeg</code>，它将能分别下载最高质量的视频和最高质量的音频，并将它们合并成单个文件。否则，它将尝试下载同时包含视频和音频的最高质量的文件。</p><h4 id="格式选择器"><a class="markdownIt-Anchor" href="#格式选择器"></a> 格式选择器</h4><p>   但是如果你想下载特定质量的视频呢?或者如果你只想下载音频呢?这就是格式选择器的作用。</p><p>   您可以使用<code>-F</code>标识符(注意是大写的<code>F</code>)或<code>--list-formats</code>列出视频的所有可用格式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">240p  182k , av01.0.00M.10.0.110.09.16.09.0, 30fps, video only, 2.27MiB</span><br><span class="line">242          webm       426x240    240p  227k , vp9, 30fps, video only, 3.20MiB</span><br><span class="line">133          mp4        426x240    240p  245k , avc1.4d4015, 30fps, video only, 2.45MiB</span><br><span class="line">330          webm       256x144    144p60 HDR  250k , vp9.2, 60fps, video only, 3.69MiB</span><br><span class="line">396          mp4        640x360    360p  336k , av01.0.01M.10.0.110.09.16.09.0, 30fps, video only, 4.26MiB</span><br><span class="line">243          webm       640x360    360p  420k , vp9, 30fps, video only, 5.97MiB</span><br><span class="line">331          webm       426x240    240p60 HDR  517k , vp9.2, 60fps, video only, 7.98MiB</span><br><span class="line">397          mp4        854x480    480p  623k , av01.0.04M.10.0.110.09.16.09.0, 30fps, video only, 7.92MiB</span><br><span class="line">134          mp4        640x360    360p  634k , avc1.4d401e, 30fps, video only, 6.97MiB</span><br><span class="line">244          webm       854x480    480p  773k , vp9, 30fps, video only, 10.86MiB</span><br><span class="line">332          webm       640x360    360p60 HDR 1094k , vp9.2, 60fps, video only, 17.37MiB</span><br><span class="line">398          mp4        1280x720   720p60 1249k , av01.0.08M.10.0.110.09.16.09.0, 60fps, video only, 17.83MiB</span><br><span class="line">135          mp4        854x480    480p 1297k , avc1.4d401f, 30fps, video only, 14.05MiB</span><br><span class="line">247          webm       1280x720   720p 1545k , vp9, 30fps, video only, 22.19MiB</span><br><span class="line">333          webm       854x480    480p60 HDR 2034k , vp9.2, 60fps, video only, 33.47MiB</span><br><span class="line">136          mp4        1280x720   720p 2657k , avc1.4d401f, 30fps, video only, 27.20MiB</span><br><span class="line">248          webm       1920x1080  1080p 2702k , vp9, 30fps, video only, 39.80MiB</span><br><span class="line">302          webm       1280x720   720p60 2710k , vp9, 60fps, video only, 36.54MiB</span><br><span class="line">298          mp4        1280x720   720p60 4071k , avc1.4d4020, 60fps, video only, 45.17MiB</span><br><span class="line">303          webm       1920x1080  1080p60 4622k , vp9, 60fps, video only, 63.87MiB</span><br><span class="line">334          webm       1280x720   720p60 HDR 4790k , vp9.2, 60fps, video only, 80.74MiB</span><br><span class="line">137          mp4        1920x1080  1080p 4985k , avc1.640028, 30fps, video only, 49.39MiB</span><br><span class="line">299          mp4        1920x1080  1080p60 6761k , avc1.64002a, 60fps, video only, 80.25MiB</span><br><span class="line">335          webm       1920x1080  1080p60 HDR 7277k , vp9.2, 60fps, video only, 123.60MiB</span><br><span class="line">271          webm       2560x1440  1440p 8874k , vp9, 30fps, video only, 119.07MiB</span><br><span class="line">308          webm       2560x1440  1440p60 13422k , vp9, 60fps, video only, 181.85MiB</span><br><span class="line">336          webm       2560x1440  1440p60 HDR 16900k , vp9.2, 60fps, video only, 297.56MiB</span><br><span class="line">313          webm       3840x2160  2160p 18006k , vp9, 30fps, video only, 287.61MiB</span><br><span class="line">315          webm       3840x2160  2160p60 26847k , vp9, 60fps, video only, 436.24MiB</span><br><span class="line">337          webm       3840x2160  2160p60 HDR 29609k , vp9.2, 60fps, video only, 528.73MiB</span><br><span class="line">43           webm       640x360    360p , vp8.0, vorbis@128k, 15.53MiB</span><br><span class="line">18           mp4        640x360    360p  609k , avc1.42001E, mp4a.40.2@ 96k (44100Hz), 11.23MiB</span><br><span class="line">22           mp4        1280x720   720p 1605k , avc1.64001F, mp4a.40.2@192k (44100Hz) (best)</span><br></pre></td></tr></table></figure><p>   Youtube-DL返回很多信息，但一旦你将其拆分，就更容易管理了。信息以表格式返回，表中有7列，每行有一种格式。只有音频的格式首先出现，然后是只有视频的格式，在底部是音频+视频格式。格式按比特率升序列出。表中的各列细分如下:</p><ul><li><strong>Format code</strong> - 下载指定格式时使用的代码</li><li><strong>Extension</strong> - 下载指定格式的扩展</li><li><strong>Resolution</strong> - 分辨率、帧率和其他信息，如HDR</li><li><strong>Bitrate</strong> - 以千比特/秒表示的格式的比特率</li><li><strong>Codec</strong> - 编解码器信息，格式帧率和格式是否仅为视频/音频</li><li><strong>Size</strong> - 该格式的大小</li></ul><table><thead><tr><th>Format Code</th><th>Extension</th><th>Resolution</th><th>Bitrate</th><th>Codec</th><th>Size</th></tr></thead><tbody><tr><td><code>337</code></td><td><code>webm</code></td><td><code>3840x2160 2160p60 HDR</code></td><td><code>29609k</code></td><td><code>vp9.2, 60fps, video only</code></td><td><code>528.73MiB</code></td></tr></tbody></table><p>   要下载指定格式的视频，请使用<code>-f</code>(注意小写<code>f</code>)或<code>--format</code>标志符。您可以指定仅视频、仅音频或视频+音频格式。使用使用<code>--list-formats</code>标志符返回的格式代码来选择格式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">youtube-dl https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v&#x3D;tO01J-M3g0U -f 299+251</span><br><span class="line"></span><br><span class="line">[youtube] tO01J-M3g0U: Downloading webpage</span><br><span class="line">[youtube] tO01J-M3g0U: Downloading video info webpage</span><br><span class="line">WARNING: Requested formats are incompatible for merge and will be merged into mkv.</span><br><span class="line">[download] Destination: C:\Users\Dan\Videos\Youtube\The World in HDR in 4K (ULTRA HD).f299.mp4</span><br><span class="line">[download] 100% of 80.89MiB in 00:28</span><br><span class="line">[download] Destination: C:\Users\Dan\Videos\The World in HDR in 4K (ULTRA HD).f251.webm</span><br><span class="line">[download] 100% of 2.37MiB in 00:01</span><br><span class="line">[ffmpeg] Merging formats into &quot;C:\Users\Dan\Videos\Youtube\The World in HDR in 4K (ULTRA HD).mkv&quot;</span><br><span class="line">Deleting original file C:\Users\Dan\Videos\Youtube\The World in HDR in 4K (ULTRA HD).f299.mp4 (pass -k to keep)</span><br><span class="line">Deleting original file C:\Users\Dan\Videos\Youtube\The World in HDR in 4K (ULTRA HD).f251.webm (pass -k to keep)</span><br></pre></td></tr></table></figure><p>   上面的示例将下载与代码<code>299</code>和<code>251</code>匹配的格式。这相当于<em>1080p 60FP</em>S视频和<em>140kb/s Opus</em>音频流。然后使用<code>FFmpeg</code>将这些文件合并到单个MKV文件中。</p><p>   下载音频或视频的过程与此相同。只需指定音频或视频格式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">youtube-dl https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v&#x3D;tO01J-M3g0U -f 299</span><br></pre></td></tr></table></figure><center>只下载影片(格式代码299)</center><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">youtube-dl https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v&#x3D;tO01J-M3g0U -f 251</span><br></pre></td></tr></table></figure><center>只下载音频文件(格式代码251)</center><p>   <code>Youtube-DL</code>也有一些预设格式来下载最好或最差的音频/视频。这些可以用来代替精确的格式代码。</p><ul><li><strong>best</strong> - Downloads the highest quality file containing both audio and video</li><li><strong>worst</strong> - Downloads the lowest quality file containing both audio and video</li><li><strong>bestvideo</strong> - 下载最高质量的视频文件</li><li><strong>worstvideo</strong> - 下载最低质量的视频文件</li><li><strong>bestaudio</strong> - 下载最高质量的音频文件</li><li><strong>worstaudio</strong> - 下载最低质量的音频文件</li></ul><h2 id="结论"><a class="markdownIt-Anchor" href="#结论"></a> 结论</h2><p>   <code>Youtube-DL</code> 是一个让人难以置信的程序，它允许你从数百个网站上下载媒体文件。虽然我希望本教程已经让您开始使用<code>Youtube-DL</code>，但我强烈建议您再看一下<code>Youtube-DL</code>的<code>README</code>文件，其中包含关于使用和配置<code>Youtube-DL</code>可用选项的更详细信息。</p>]]></content>
      
      
      <categories>
          
          <category> 翻译 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> 翻译 </tag>
            
            <tag> 工具 </tag>
            
            <tag> 跨境电商 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>string中c_str()、data()、copy(p,n)函数的用法及区别</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/47557/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/47557/</url>
      
        <content type="html"><![CDATA[<p>C中没有string，所以标准库的string类提供了3个成员函数来从一个string得到c类型的字符数组：c_str()、data()、copy(p,n)。</p><h1 id="1-c_str"><a class="markdownIt-Anchor" href="#1-c_str"></a> 1. c_str()：</h1><p>生成一个const char*指针常量，指向以空字符终止的数组的首地址，该指针保证指向一个 size() + 1 长度的空间，而且最后一个字符肯定是 “\0 ”；<br><em>注意：一定要使用strcpy()函数 等来操作方法cstr()返回的指针</em>。</p><p><strong>①这个数组的数据是临时的，当有一个改变这些数据的成员函数被调用后，其中的数据就会失效。因此要么现用现转换，要么把它的数据复制到用户自己可以管理的内存中。</strong><br>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">const char* c;</span><br><span class="line">string s&#x3D;&quot;1234&quot;;</span><br><span class="line">c &#x3D; s.c_str(); </span><br><span class="line">cout&lt;&lt;c&lt;&lt;endl; &#x2F;&#x2F;输出：1234</span><br><span class="line">s&#x3D;&quot;abcd&quot;;</span><br><span class="line">cout&lt;&lt;c&lt;&lt;endl; &#x2F;&#x2F;输出：abcd</span><br></pre></td></tr></table></figure><p>上面如果继续用c指针的话，导致的错误将是不可想象的。就如：1234变为abcd</p><p>其实上面的c = s.c_str(); 不是一个好习惯。既然c指针指向的内容容易失效，我们就应该按照上面的方法，那怎么把数据复制出来呢？这就要用到strcpy等函数（推荐）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;&#x2F;const char* c; &#x2F;&#x2F;①</span><br><span class="line">&#x2F;&#x2F;char* c;       &#x2F;&#x2F;②</span><br><span class="line">&#x2F;&#x2F;char c[20]; </span><br><span class="line">char* c&#x3D;new char[20];</span><br><span class="line">string s&#x3D;&quot;1234&quot;;</span><br><span class="line">&#x2F;&#x2F;c &#x3D; s.c_str(); </span><br><span class="line">strcpy(c,s.c_str());</span><br><span class="line">cout&lt;&lt;c&lt;&lt;endl; &#x2F;&#x2F;输出：1234</span><br><span class="line">s&#x3D;&quot;abcd&quot;;</span><br><span class="line">cout&lt;&lt;c&lt;&lt;endl; &#x2F;&#x2F;输出：1234</span><br></pre></td></tr></table></figure><p>注意：不能再像上面一样①所示了，const还怎么向里面写入值啊；也不能②所示，使用了未初始化的局部变量“c”，运行会出错的 。</p><p><strong>② c_str()返回一个客户程序可读不可改的指向字符数组的指针，不需要手动释放或删除这个指针。</strong></p><h1 id="2-data"><a class="markdownIt-Anchor" href="#2-data"></a> 2. data():</h1><p>与c_str()类似，但是返回的数组不以空字符终止。返回的指针则保证指向一个size()长度的空间，不保证有没有null-terminate，可能有，可能没有，看库的实现了。</p><p>有的STL的实现中，与c_str()是完全一样的，如vs7.1，两个函数的源码中，data()函数内部调用的是c_str()：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">const _Elem *c_str() const</span><br><span class="line">&#123; &#x2F;&#x2F; return pointer to null-terminated nonmutable array</span><br><span class="line">    return (_Myptr());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const _Elem *data() const</span><br><span class="line">&#123; &#x2F;&#x2F; return pointer to nonmutable array</span><br><span class="line">    return (c_str());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-copypnsize_type-_off-0"><a class="markdownIt-Anchor" href="#3-copypnsize_type-_off-0"></a> 3. copy(p,n,size_type _Off = 0)：</h1><p>从string类型对象中至多复制n个字符到字符指针p指向的空间中。默认从首字符开始，但是也可以指定，开始的位置（记住从0开始）。返回真正从对象中复制的字符。------<strong>用户要确保p指向的空间足够保存n个字符。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; basic_string_copy.cpp</span><br><span class="line">&#x2F;&#x2F; compile with: &#x2F;EHsc &#x2F;W3</span><br><span class="line">#include &lt;string&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line"> </span><br><span class="line">int main( )</span><br><span class="line">&#123;</span><br><span class="line">    using namespace std;</span><br><span class="line">    string str1 ( &quot;1234567890&quot; );</span><br><span class="line">    basic_string &lt;char&gt;::iterator str_Iter;</span><br><span class="line">    char array1 [ 20 ] &#x3D; &#123; 0 &#125;;</span><br><span class="line">    char array2 [ 10 ] &#x3D; &#123; 0 &#125;;</span><br><span class="line">    basic_string &lt;char&gt;:: pointer array1Ptr &#x3D; array1;</span><br><span class="line">    basic_string &lt;char&gt;:: value_type *array2Ptr &#x3D; array2;</span><br><span class="line"> </span><br><span class="line">    cout &lt;&lt; &quot;The original string str1 is: &quot;;</span><br><span class="line">    for ( str_Iter &#x3D; str1.begin( ); str_Iter !&#x3D; str1.end( ); str_Iter++ )</span><br><span class="line">        cout &lt;&lt; *str_Iter;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"> </span><br><span class="line">    basic_string &lt;char&gt;:: size_type nArray1;</span><br><span class="line">    &#x2F;&#x2F; Note: string::copy is potentially unsafe, consider</span><br><span class="line">    &#x2F;&#x2F; using string::_Copy_s instead.</span><br><span class="line">    nArray1 &#x3D; str1.copy ( array1Ptr , 12 );  &#x2F;&#x2F; C4996</span><br><span class="line">    cout &lt;&lt; &quot;The number of copied characters in array1 is: &quot;</span><br><span class="line">        &lt;&lt; nArray1 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; &quot;The copied characters array1 is: &quot; &lt;&lt; array1Ptr &lt;&lt; endl;</span><br><span class="line"> </span><br><span class="line">    basic_string &lt;char&gt;:: size_type nArray2;</span><br><span class="line">    &#x2F;&#x2F; Note: string::copy is potentially unsafe, consider</span><br><span class="line">    &#x2F;&#x2F; using string::_Copy_s instead.</span><br><span class="line">    nArray2 &#x3D; str1.copy ( array2Ptr , 5 , 6  );  &#x2F;&#x2F; C4996</span><br><span class="line">    cout &lt;&lt; &quot;The number of copied characters in array2 is: &quot;</span><br><span class="line">        &lt;&lt; nArray2 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; &quot;The copied characters array2 is: &quot; &lt;&lt; array2Ptr &lt;&lt; endl;</span><br><span class="line">     </span><br><span class="line">    &#x2F;&#x2F;&#x2F;&#x2F;注意一定要使array3有足够的空间</span><br><span class="line">    &#x2F;&#x2F;char array3[5]&#x3D;&#123;0&#125;;</span><br><span class="line">    &#x2F;&#x2F;basic_string&lt;char&gt;::pointer array3Ptr&#x3D;array3;</span><br><span class="line">    &#x2F;&#x2F;basic_string&lt;char&gt;::size_type nArray3;</span><br><span class="line">    &#x2F;&#x2F;nArray3 &#x3D; str1.copy(array3,9); &#x2F;&#x2F;错误！！！！</span><br><span class="line">    &#x2F;&#x2F;cout&lt;&lt;&quot;The number of copied characters in array3 is: &quot;</span><br><span class="line">    &#x2F;&#x2F;  &lt;&lt;nArray3&lt;&lt;endl;</span><br><span class="line">    &#x2F;&#x2F;cout&lt;&lt;&quot;The copied characters array3 is: &quot;&lt;&lt;array3Ptr&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面最后注释掉的部分，虽然编译没有错误，但是运行时会产生错误：Stack around the variable ‘array3’ was corrupted.</p><p><strong>致谢</strong></p><blockquote><p>csqlwy《<a href="https://www.cnblogs.com/qlwy/archive/2012/03/25/2416937.html">string中c_str()、data()、copy(p,n)函数的用法</a>》<br>ls_6468的博客《<a href="https://blog.csdn.net/ls_6468/article/details/79312585">c_str()的用法</a>》<br>Love流浪的猪《<a href="https://www.cnblogs.com/pjl1119/p/8892399.html">std::string 的方法c_str() 和 data() 有什么区别</a>》<br>Makefilehoon的博客《<a href="https://blog.csdn.net/Makefilehoon/article/details/80687087">string中c_str()的用法</a>》</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++传参时 const string&amp; 相对 const string 有哪些优势？</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/58597/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/58597/</url>
      
        <content type="html"><![CDATA[<p>C<ins>中值传递和引用传递的方式。<br>C</ins>的值传递（pass-by-value）,是从调用的地方把值复制一遍传给函数，这样做有两个问题，第一，需要将实参拷贝到形参处，形成实参的副本，有时间和空间的开销，若实参为结构体或者类的话,那么时空开销将会非常大；第二、函数中对实参副本的修改并不会影响到函数调用位置实参的值。<br>C<ins>的引用传递（pass-by-reference）,一方面，参数传递的是把实参的地址拷贝到形参，这样形参和实参对应的是同一块儿内存地址，那么对形参的修改自然会反映到实参上；另一方面，C</ins>中指针或者引用只占4字节，所以时空开销也能接受。</p><p>好了，我们现在来看一下const string &amp; parameter 和 const string parameter的比较</p><p>参数声明中const，const string parameter表明复制出来的副本（也就是形参）你不会修改。const string &amp; parameter表明你不会对调用函数的实参进行修改</p><p>另一方面：</p><p>因为 C++ 规定引用不能为空，所以一个函数传进来引用你就可以直接用，而传进来指针你还需要判断指针是否为空<br>如果直接传值的话，对于对象就要新建一个临时对象——这个步骤需要调用复制构造函数，如果对象本身比较大的话就会造成很严重的资源浪费。而传引用就可以避免这一点——如果我们需要只读地访问一个对象的话使用常引用可以有效避免资源浪费</p><p><strong>致谢：</strong><br><a href="https://blog.csdn.net/xiongchengluo1129">爱妃的博客</a>《<a href="https://blog.csdn.net/xiongchengluo1129/article/details/79123487">传参时 const string&amp; 相对 const string 有哪些优势？</a>》</p>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5之Javascript多线程</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2853/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2853/</url>
      
        <content type="html"><![CDATA[<h1 id="javascript执行机制"><a class="markdownIt-Anchor" href="#javascript执行机制"></a> Javascript执行机制</h1><p>在HTML5之前，浏览器中JavaScript的运行都是以单线程的方式工作的，虽然有多种方式实现了对多线程的模拟（例如：Javascript 中的 setinterval 方法，setTimeout 方法等），但是在本质上程序的运行仍然是由 JavaScript 引擎以单线程调度的方式进行的。在 HTML5 中引入的工作线程使得浏览器端的 Javascript 引擎可以并发地执行 Javascript 代码，从而实现了对浏览器端多线程编程的良好支持。</p><h1 id="javascript中的多线程-webworker"><a class="markdownIt-Anchor" href="#javascript中的多线程-webworker"></a> Javascript中的多线程 - WebWorker</h1><p>HTML5 中的 Web Worker 可以分为两种不同线程类型，一个是专用线程 Dedicated Worker，一个是共享线程 Shared Worker。两种类型的线程各有不同的用途。</p><h1 id="专用型web-worker"><a class="markdownIt-Anchor" href="#专用型web-worker"></a> 专用型web worker</h1><p>专用型worker与创建它的脚本连接在一起，它可以与其他的worker或是浏览器组件通信，但是他不能与DOM通信。专用的含义，就是这个线程一次只处理一个需求。专用线程在除了IE外的各种主流浏览器中都实现了，可以放心使用。<br><strong>创建线程</strong></p><p>创建worker很简单，只要把需要在线程中执行的JavaScript文件的文件名传给构造函数就可以了。</p><p><strong>线程通信</strong></p><p>在主线程与子线程间进行通信，使用的是线程对象的postMessage和onmessage方法。不管是谁向谁发数据，发送方使用的都是postMessage方法，接收方都是使用onmessage方法接收数据。postMessage只有一个参数，那就是传递的数据，onmessage也只有一个参数，假设为event，则通过event.data获取收到的数据。</p><p><strong>发送JSON数据</strong></p><p>JSON是JS原生支持的东西，不用白不用，复杂的数据就用JSON传送吧。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">postMessage(&#123;&#39;cmd&#39;: &#39;init&#39;, &#39;timestamp&#39;: Date.now()&#125;);</span><br></pre></td></tr></table></figure><p><strong>处理错误</strong></p><p>当线程发生错误的时候，它的onerror事件回调会被调用。所以处理错误的方式很简单，就是挂接线程实例的onerror事件。这个回调函数有一个参数error，这个参数有3个字段：message - 错误消息；filename - 发生错误的脚本文件；lineno - 发生错误的行。</p><p><strong>销毁线程</strong></p><p>在线程内部，使用close方法线程自己销毁自己。在线程外部的主线程中，使用线程实例的terminate方法销毁线程。</p><p>HTML代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">  onload &#x3D; function()&#123;</span><br><span class="line">      var worker &#x3D; new Worker(&#39;fibonacci.js&#39;);  </span><br><span class="line">      worker.onmessage &#x3D; function(event) &#123;</span><br><span class="line">        console.log(&quot;Result:&quot; + event.data);</span><br><span class="line">      &#125;;</span><br><span class="line">      worker.onerror &#x3D; function(error) &#123;</span><br><span class="line">        console.log(&quot;Error:&quot; + error.message);</span><br><span class="line">      &#125;;</span><br><span class="line">      worker.postMessage(40);</span><br><span class="line">  &#125;  </span><br><span class="line">  &lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>脚本文件fibonacci.js代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;fibonacci.js</span><br><span class="line">var fibonacci &#x3D; function(n) &#123;</span><br><span class="line">    return n &lt; 2 ? n : arguments.callee(n - 1) + arguments.callee(n - 2);</span><br><span class="line">&#125;;</span><br><span class="line">onmessage &#x3D; function(event) &#123;</span><br><span class="line">    var n &#x3D; parseInt(event.data, 10);</span><br><span class="line">    postMessage(fibonacci(n));</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>把它们放到相同的目录，运行页面文件，查看控制台，可以看到运行的结果。<br>这里还有一点，在主线程中，onmessage事件可以使用另外一种方式挂接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">worker.addEventListener(&#39;message&#39;, function(event) &#123;</span><br><span class="line">   console.log(&quot;Result:&quot; + event.data);</span><br><span class="line">&#125;, false);</span><br></pre></td></tr></table></figure><p>个人觉得很麻烦，不如用onmessage直接。</p><p><strong>使用其他脚本文件</strong></p><p>工作线程可以使用全局方法importScripts来加载和使用其他的域内脚本文件或者类库。例如下面都是合法的使用方式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">importScripts();                        </span><br><span class="line">importScripts(&#39;foo.js&#39;);                </span><br><span class="line">importScripts(&#39;foo.js&#39;, &#39;bar.js&#39;);      </span><br></pre></td></tr></table></figure><p>导入以后，可以直接使用这些文件中的方法。看一个网上的小例子：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">importScripts(&#39;math_utilities.js&#39;); </span><br><span class="line"></span><br><span class="line">onmessage &#x3D; function (event) </span><br><span class="line">&#123; </span><br><span class="line">  var first &#x3D; event.data.first; </span><br><span class="line">  var second &#x3D; event.data.second; </span><br><span class="line">  calculate(first,second); </span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line">function calculate(first,second) &#123; </span><br><span class="line">   &#x2F;&#x2F;do the calculation work </span><br><span class="line">  var common_divisor&#x3D;divisor(first,second); </span><br><span class="line">  var common_multiple&#x3D;multiple(first,second); </span><br><span class="line">  postMessage(&quot;Work done! &quot; + </span><br><span class="line">     &quot;The least common multiple is &quot; + common_divisor  +</span><br><span class="line">     &quot; and the greatest common divisor is &quot;+common_multiple); </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>网上也有网友想到了利用这里的importScripts方法解决资源预加载的问题(浏览器预先加载资源，而不会对资源进行解析和执行)，道理也很简单。</p><p><strong>线程嵌套</strong></p><p>在工作线程中还可以在创建子线程，各种操作还是一样的。</p><p><strong>同步问题</strong></p><p>Worker没有锁的机制，多线程的同步问题只能靠代码来解决（比如定义信号变量）。</p><h1 id="共享型sharedwebworker"><a class="markdownIt-Anchor" href="#共享型sharedwebworker"></a> 共享型SharedWebWorker</h1><p>共享型web worker主要适用于多连接并发的问题。因为要处理多连接，所以它的API与专用型worker稍微有点区别。除了这一点，共享型web worker和专用型worker一样，不能访问DOM，并且对窗体属性的访问也受到限制。共享型web worker也不能跨越通信。<br>　　页面脚本可以与共享型web worker通信，然而，与专用型web worker(使用了一个隐式的端口通信)稍微有点不同的是，通信是显式的通过使用一个端口(port)对象并附加上一个消息事件处理程序来进行的。</p><p>在收到web worker脚本的首个消息之后，共享型web worker把一个事件处理程序附加到激活的端口上。一般情况下，处理程序会运行自己的postMessage()方法来把一个消息返回给调用代码，接着端口的start()方法生成一个有效的消息进程。<br>看网上能找到的的唯一个例子：创建一个共享线程用于接收从不同连接发送过来的指令，然后实现自己的指令处理逻辑，指令处理完成后将结果返回到各个不同的连接用户。</p><p>HTML代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt; </span><br><span class="line">  var worker &#x3D; new SharedWorker(&#39;sharedworker.js&#39;); </span><br><span class="line">  var log &#x3D; document.getElementByIdx_x_x_x_x(&#39;response_from_worker&#39;); </span><br><span class="line">  worker.port.addEventListener(&#39;message&#39;, function(e) &#123; </span><br><span class="line">  &#x2F;&#x2F;log the response data in web page </span><br><span class="line">  log.textContent &#x3D;e.data; </span><br><span class="line">  &#125;, false); </span><br><span class="line">  worker.port.start(); </span><br><span class="line">  worker.port.postMessage(&#39;ping from user web page..&#39;); </span><br><span class="line">  </span><br><span class="line">  &#x2F;&#x2F;following method will send user input to sharedworker </span><br><span class="line">  function postMessageToSharedWorker(input) </span><br><span class="line">  &#123; </span><br><span class="line">  &#x2F;&#x2F;define a json object to construct the request </span><br><span class="line">  var instructions&#x3D;&#123;instruction:input.value&#125;; </span><br><span class="line">  worker.port.postMessage(instructions); </span><br><span class="line">  &#125; </span><br><span class="line">  &lt;&#x2F;script&gt; </span><br></pre></td></tr></table></figure><p>脚本文件代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 创建一个共享线程用于接收从不同连接发送过来的指令，指令处理完成后将结果返回到各个不同的连接用户。</span><br><span class="line">var connect_number &#x3D; 0; </span><br><span class="line"></span><br><span class="line">onconnect &#x3D; function(e) &#123; </span><br><span class="line"> connect_number &#x3D;connect_number+ 1; </span><br><span class="line"> &#x2F;&#x2F;get the first port here </span><br><span class="line"> var port &#x3D; e.ports[0]; </span><br><span class="line"> port.postMessage(&#39;A new connection! The current connection number is &#39; </span><br><span class="line"> + connect_number); </span><br><span class="line"> port.onmessage &#x3D; function(e) &#123; </span><br><span class="line">  &#x2F;&#x2F;get instructions from requester </span><br><span class="line">  var instruction&#x3D;e.data.instruction; </span><br><span class="line">  var results&#x3D;execute_instruction(instruction); </span><br><span class="line">   port.postMessage(&#39;Request: &#39;+instruction+&#39; Response &#39;+results </span><br><span class="line">     +&#39; from shared worker...&#39;); </span><br><span class="line"> &#125;; </span><br><span class="line">&#125;; </span><br><span class="line">function execute_instruction(instruction) </span><br><span class="line">&#123; </span><br><span class="line">var result_value; </span><br><span class="line">&#x2F;&#x2F;implement your logic here </span><br><span class="line">&#x2F;&#x2F;execute the instruction... </span><br><span class="line">return result_value；</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>在上面的共享线程例子中，在主页面即各个用户连接页面构造出一个共享线程对象，然后定义了一个方法 postMessageToSharedWorker 向共享线程发送来之用户的指令。同时，在共享线程的实现代码片段中定义 connect_number 用来记录连接到这个共享线程的总数。之后，用 onconnect 事件处理器接受来自不同用户的连接，解析它们传递过来的指令。最后，定义一个了方法 execute_instruction 用于执行用户的指令，指令执行完成后将结果返回给各个用户。</p><p>这里我们并没有跟前面的例子一样使用到了工作线程的 onmessage 事件处理器，而是使用了另外一种方式 addEventListener。实际上，前面已经说过，这两种的实现原理基本一致，只是在这里有些稍微的差别，如果使用到了 addEventListener 来接受来自共享线程的消息，那么就要先使用 worker.port.start() 方法来启动这个端口。之后就可以像工作线程的使用方式一样正常的接收和发送消息。</p><h1 id="线程中能做的事"><a class="markdownIt-Anchor" href="#线程中能做的事"></a> 线程中能做的事：</h1><p>1.能使用setTimeout(), clearTimeout(),setInterval(),clearInterval()等函数。<br>2.能使用navigator对象。<br>3.能使用XMLHttpRequest来发送请求。<br>4.可以在线程中使用Web Storage。<br>5.线程中可以用self获取本线程的作用域。</p><h1 id="线程中不能做的事"><a class="markdownIt-Anchor" href="#线程中不能做的事"></a> 线程中不能做的事：</h1><p>1.线程中是不能使用除navigator外的DOM/BOM对象，例如window,document（想要操作的话只能发送消息给worker创建者，通过回调函数操作）。<br>2.线程中不能使用主线程中的变量和函数。<br>3.线程中不能使用有&quot;挂起&quot;效果的操作命令，例如alert等。<br>4.线程中不能跨域加载JS。</p><p><em>线程也是需要消耗资源的，而且使用线程也会带来一定的复杂性，所以如果没有充足的理由来使用额外的线程的话，那么就不要用它。</em></p><p><strong>致谢</strong></p><blockquote><p>郑文亮《<a href="http://www.cnblogs.com/zhwl/p/4667470.html">HTML5之Javascript多线程</a>》</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Alexa avs-device-sdk Ubuntu Linux快速入门指南／Ubuntu Linux Quick Start Guide</title>
      <link href="%E7%BF%BB%E8%AF%91/59837/"/>
      <url>%E7%BF%BB%E8%AF%91/59837/</url>
      
        <content type="html"><![CDATA[<p>Translate from <a href="https://github.com/alexa/avs-device-sdk/wiki/Ubuntu-Linux-Quick-Start-Guide">Ubuntu Linux Quick Start Guide</a></p><p>这些说明将帮助您在运行Ubuntu Linux 16.04 LTS的机器上快速启动和运行。对于所有其他发行版，请检查依赖项、构建选项和为通用Linux创建命令。</p><h1 id="配置要求"><a class="markdownIt-Anchor" href="#配置要求"></a> 配置要求</h1><p>该教程假定：</p><ul><li>您正在使用Ubuntu Linux 16.04 LTS</li><li>你有一个麦克风</li><li>你的Ubuntu装置可以通过耳机或扬声器进行音频输出</li></ul><h1 id="注册一个产品"><a class="markdownIt-Anchor" href="#注册一个产品"></a> 注册一个产品</h1><p>按照<a href="https://developer.amazon.com/zh/docs/alexa-voice-service/register-a-product.html">STEP 1 Raspberry Pi原教程 </a>注册一个产品和一个安全配置文件。在这个过程中，你将下载一个“config.json”文件到本地，本文件将用来完成sample app的配置。</p><p><em>提示：如果您已经有了可以用于测试的注册产品，那么您可以使用它，但是必须启用它才能与基于代码的链接(Code Based Linking ，CBL)一起使用。</em></p><p>这里是如何为您的设备启用 CBL的教程。</p><h1 id="设置"><a class="markdownIt-Anchor" href="#设置"></a> 设置：</h1><p>a. 第一步是确保您的计算机有最新的包列表，然后安装该列表中每个包的最新版本:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  sudo apt-get update &amp;&amp; sudo apt-get upgrade -y</span><br></pre></td></tr></table></figure><p>b. 我们需要一个地方放所有东西，所以让我们创建一些文件夹。本指南假定所有内容都构建在{home}中，我们假定它是您的主目录。如果您选择使用不同的文件夹名称，请在本指南中相应地更新以下命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$  mkdir sdk-folder</span><br><span class="line">$  cd sdk-folder</span><br><span class="line">$  mkdir sdk-build sdk-source third-party application-necessities</span><br></pre></td></tr></table></figure><p>c. 现在，让我们设置工具链（tool chain）:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  sudo apt-get install -y git gcc cmake openssl clang-format</span><br></pre></td></tr></table></figure><p>d. 接下来，我们需要通过apt-get去下载一些可用的依赖:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  sudo apt-get install -y openssl libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev gstreamer1.0-plugins-good libgstreamer-plugins-good1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-libav pulseaudio doxygen libsqlite3-dev repo libasound2-dev</span><br></pre></td></tr></table></figure><p>e. AVS Device SDK依赖HTTP2 与Alexa服务连接。为了满足这个需求，我们将使用nghttp2和openssl构建curl。如果您更喜欢使用mbed TLS进行构建，请单击此处获取说明:</p><ul><li>开始安装nghttp2。提示：这个命令将会下载并安装nghttp2的依赖:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  sudo apt-get install -y g++ make binutils autoconf automake autotools-dev libtool pkg-config zlib1g-dev libcunit1-dev libssl-dev libxml2-dev libev-dev libevent-dev libjansson-dev libjemalloc-dev cython python3-dev python-setuptools </span><br></pre></td></tr></table></figure><ul><li>现在让我们从source构建nghttp2:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$  cd ~&#x2F;sdk-folder&#x2F;third-party</span><br><span class="line">$  git clone https:&#x2F;&#x2F;github.com&#x2F;tatsuhiro-t&#x2F;nghttp2.git</span><br><span class="line">$  cd nghttp2</span><br><span class="line">$  autoreconf -i</span><br><span class="line">$  automake</span><br><span class="line">$  autoconf</span><br><span class="line">$  cd nghttp2</span><br><span class="line">$  .&#x2F;configure</span><br><span class="line">$  make</span><br><span class="line">$  sudo make install</span><br></pre></td></tr></table></figure><ul><li>现下载curl的最新版本，并配置支持nghttp2和openssl:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$  cd ~&#x2F;sdk-folder&#x2F;third-party</span><br><span class="line">$  wget http:&#x2F;&#x2F;curl.haxx.se&#x2F;download&#x2F;curl-7.54.0.tar.bz2</span><br><span class="line">$  tar -xvjf curl-7.54.0.tar.bz2</span><br><span class="line">$  cd curl-7.54.0</span><br><span class="line">$  .&#x2F;configure --with-nghttp2&#x3D;&#x2F;usr&#x2F;local --with-ssl</span><br><span class="line">$  make</span><br><span class="line">$  sudo make install</span><br><span class="line">$ sudo ldconfig</span><br></pre></td></tr></table></figure><ul><li>测试curl:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  curl -I https:&#x2F;&#x2F;nghttp2.org&#x2F;</span><br></pre></td></tr></table></figure><p>如果请求成功，你将会看到如下的一条信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">HTTP&#x2F;2 200</span><br><span class="line">date: Fri, 15 Dec 2017 18:13:26 GMT</span><br><span class="line">content-type: text&#x2F;html</span><br><span class="line">last-modified: Sat, 25 Nov 2017 14:02:51 GMT</span><br><span class="line">etag: &quot;5a19780b-19e1&quot;</span><br><span class="line">accept-ranges: bytes</span><br><span class="line">content-length: 6625</span><br><span class="line">x-backend-header-rtt: 0.001021</span><br><span class="line">strict-transport-security: max-age&#x3D;31536000</span><br><span class="line">server: nghttpx</span><br><span class="line">via: 2 nghttpx</span><br><span class="line">x-frame-options: SAMEORIGIN</span><br><span class="line">x-xss-protection: 1; mode&#x3D;block</span><br><span class="line">x-content-type-options: nosniff</span><br></pre></td></tr></table></figure><p>f. 需要PortAudio来记录麦克风数据。运行此命令安装和配置PortAudio:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$  cd ~&#x2F;sdk-folder&#x2F;third-party</span><br><span class="line">$ wget -c http:&#x2F;&#x2F;www.portaudio.com&#x2F;archives&#x2F;pa_stable_v190600_20161030.tgz</span><br><span class="line">$  tar zxf pa_stable_v190600_20161030.tgz</span><br><span class="line">$  cd portaudio</span><br><span class="line">$  .&#x2F;configure --without-jack &amp;&amp; make</span><br></pre></td></tr></table></figure><p>g. 现在是克隆AVS Device SDK的时候了。导航到您的sdk源文件夹并运行以下命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$  cd ~&#x2F;sdk-folder&#x2F;sdk-source</span><br><span class="line">$ git clone git:&#x2F;&#x2F;github.com&#x2F;alexa&#x2F;avs-device-sdk.git</span><br></pre></td></tr></table></figure><p>h. 假设下载成功，下一步是构建SDK。这个命令做了一些事情:</p><ul><li>它声明PortAudio用于捕获麦克风数据，并指向它的lib路径和包含目录</li><li>它声明安装了gstreamer，并将在构建SampleApp时使用它</li><li>它声明唤醒字检测器处于“OFF”状态<ul><li>非Linux支持来自Sensory和Kitt.ai的唤醒词检测器。每一个都需要提供商的许可。有关使用唤醒字检测器进行构建的说明，请参见构建选项。</li></ul></li></ul><p><em><strong>重要提示：将{home}替换为您的主目录的完整路径(不要使用~/):</strong></em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$  cd &#x2F;&#123;home&#125;&#x2F;sdk-folder&#x2F;sdk-build</span><br><span class="line">$  cmake &#x2F;&#123;home&#125;&#x2F;sdk-folder&#x2F;sdk-source&#x2F;avs-device-sdk -DSENSORY_KEY_WORD_DETECTOR&#x3D;OFF -DGSTREAMER_MEDIA_PLAYER&#x3D;ON -DPORTAUDIO&#x3D;ON -DPORTAUDIO_LIB_PATH&#x3D;&#x2F;&#123;home&#125;&#x2F;sdk-folder&#x2F;third-party&#x2F;portaudio&#x2F;lib&#x2F;.libs&#x2F;libportaudio.a -DPORTAUDIO_INCLUDE_DIR&#x3D;&#x2F;&#123;home&#125;&#x2F;sdk-folder&#x2F;third-party&#x2F;portaudio&#x2F;include</span><br><span class="line">$  make</span><br></pre></td></tr></table></figure><h1 id="设置配置文件avs-device-sdkintegrationalexaclientsdkconfigjson"><a class="markdownIt-Anchor" href="#设置配置文件avs-device-sdkintegrationalexaclientsdkconfigjson"></a> 设置配置文件（avs-device-sdk/Integration/AlexaClientSDKConfig.json）：</h1><p>参考配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line"> &#123;</span><br><span class="line">    &quot;cblAuthDelegate&quot;:&#123;</span><br><span class="line">        &#x2F;&#x2F; Path to CBLAuthDelegate&#39;s database file. e.g. &#x2F;home&#x2F;ubuntu&#x2F;Build&#x2F;cblAuthDelegate.db</span><br><span class="line">        &#x2F;&#x2F; Note: The directory specified must be valid.</span><br><span class="line">        &#x2F;&#x2F; The database file (cblAuthDelegate.db) will be created by SampleApp, do not create it yourself.</span><br><span class="line">        &#x2F;&#x2F; The database file should only be used for CBLAuthDelegate (don&#39;t use it for other components of SDK)</span><br><span class="line">        &quot;databaseFilePath&quot;:&quot;&#x2F;home&#x2F;patten&#x2F;workspace&#x2F;alexa&#x2F;sdk-folder&#x2F;application-necessities&#x2F;cblAuthDelegate.db&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;deviceInfo&quot;:&#123;</span><br><span class="line">        &#x2F;&#x2F; Unique device serial number. e.g. 123456</span><br><span class="line">        &quot;deviceSerialNumber&quot;:&quot;12345678&quot;,</span><br><span class="line">        &#x2F;&#x2F; The Client ID of the Product from developer.amazon.com</span><br><span class="line">        &quot;clientId&quot;: &quot;amzn1.application-oa2-client.c4d72a06*************d75948a72dd&quot;,</span><br><span class="line">        &#x2F;&#x2F; Product ID from developer.amazon.com</span><br><span class="line">        &quot;productId&quot;: &quot;austin_alexa&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;capabilitiesDelegate&quot;:&#123;</span><br><span class="line">        &#x2F;&#x2F; The endpoint to connect in order to send device capabilities.</span><br><span class="line">        &#x2F;&#x2F; This will only be used in DEBUG builds.</span><br><span class="line">        &#x2F;&#x2F; e.g. &quot;endpoint&quot;: &quot;https:&#x2F;&#x2F;api.amazonalexa.com&quot;</span><br><span class="line">        &#x2F;&#x2F; Override the message to be sent out to the Capabilities API.</span><br><span class="line">        &#x2F;&#x2F; This will only be used in DEBUG builds.</span><br><span class="line">        &#x2F;&#x2F; e.g. &quot;overridenCapabilitiesPublishMessageBody&quot;: &#123;</span><br><span class="line">        &#x2F;&#x2F;          &quot;envelopeVersion&quot;:&quot;20160207&quot;,</span><br><span class="line">        &#x2F;&#x2F;          &quot;capabilities&quot;:[</span><br><span class="line">        &#x2F;&#x2F;              &#123;</span><br><span class="line">        &#x2F;&#x2F;                &quot;type&quot;:&quot;AlexaInterface&quot;,</span><br><span class="line">        &#x2F;&#x2F;                &quot;interface&quot;:&quot;Alerts&quot;,</span><br><span class="line">        &#x2F;&#x2F;                &quot;version&quot;:&quot;1.1&quot;</span><br><span class="line">        &#x2F;&#x2F;              &#125;</span><br><span class="line">        &#x2F;&#x2F;          ]</span><br><span class="line">        &#x2F;&#x2F;      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;miscDatabase&quot;:&#123;</span><br><span class="line">        &#x2F;&#x2F; Path to misc database file. e.g. &#x2F;home&#x2F;ubuntu&#x2F;Build&#x2F;miscDatabase.db</span><br><span class="line">        &#x2F;&#x2F; Note: The directory specified must be valid.</span><br><span class="line">        &#x2F;&#x2F; The database file (miscDatabase.db) will be created by SampleApp, do not create it yourself.</span><br><span class="line">        &quot;databaseFilePath&quot;:&quot;&#x2F;home&#x2F;patten&#x2F;workspace&#x2F;alexa&#x2F;sdk-folder&#x2F;application-necessities&#x2F;miscDatabase.db&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;alertsCapabilityAgent&quot;:&#123;</span><br><span class="line">        &#x2F;&#x2F; Path to Alerts database file. e.g. &#x2F;home&#x2F;ubuntu&#x2F;Build&#x2F;alerts.db</span><br><span class="line">        &#x2F;&#x2F; Note: The directory specified must be valid.</span><br><span class="line">        &#x2F;&#x2F; The database file (alerts.db) will be created by SampleApp, do not create it yourself.</span><br><span class="line">        &#x2F;&#x2F; The database file should only be used for alerts (don&#39;t use it for other components of SDK)</span><br><span class="line">        &quot;databaseFilePath&quot;:&quot;&#x2F;home&#x2F;patten&#x2F;workspace&#x2F;alexa&#x2F;sdk-folder&#x2F;application-necessities&#x2F;alerts.db&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;settings&quot;:&#123;</span><br><span class="line">        &#x2F;&#x2F; Path to Settings database file. e.g. &#x2F;home&#x2F;ubuntu&#x2F;Build&#x2F;settings.db</span><br><span class="line">        &#x2F;&#x2F; Note: The directory specified must be valid.</span><br><span class="line">        &#x2F;&#x2F; The database file (settings.db) will be created by SampleApp, do not create it yourself.</span><br><span class="line">        &#x2F;&#x2F; The database file should only be used for settings (don&#39;t use it for other components of SDK)</span><br><span class="line">        &quot;databaseFilePath&quot;:&quot;&#x2F;home&#x2F;patten&#x2F;workspace&#x2F;alexa&#x2F;sdk-folder&#x2F;application-necessities&#x2F;settings.db&quot;,</span><br><span class="line">        &quot;defaultAVSClientSettings&quot;:&#123;</span><br><span class="line">            &#x2F;&#x2F; Default language for Alexa.</span><br><span class="line">            &#x2F;&#x2F; See https:&#x2F;&#x2F;developer.amazon.com&#x2F;docs&#x2F;alexa-voice-service&#x2F;settings.html#settingsupdated for valid values.</span><br><span class="line">            &quot;locale&quot;:&quot;en-US&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;bluetooth&quot; : &#123;</span><br><span class="line">        &#x2F;&#x2F; Path to Bluetooth database file. e.g. &#x2F;home&#x2F;ubuntu&#x2F;Build&#x2F;bluetooth.db</span><br><span class="line">        &#x2F;&#x2F; Note: The directory specified must be valid.</span><br><span class="line">        &#x2F;&#x2F; The database file (bluetooth.db) will be created by SampleApp, do not create it yourself.</span><br><span class="line">        &#x2F;&#x2F; The database file should only be used for bluetooth (don&#39;t use it for other components of SDK)</span><br><span class="line">        &quot;databaseFilePath&quot;:&quot;&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;certifiedSender&quot;:&#123;</span><br><span class="line">        &#x2F;&#x2F; Path to Certified Sender database file. e.g. &#x2F;home&#x2F;ubuntu&#x2F;Build&#x2F;certifiedsender.db</span><br><span class="line">        &#x2F;&#x2F; Note: The directory specified must be valid.</span><br><span class="line">        &#x2F;&#x2F; The database file (certifiedsender.db) will be created by SampleApp, do not create it yourself.</span><br><span class="line">        &#x2F;&#x2F; The database file should only be used for certifiedSender (don&#39;t use it for other components of SDK)</span><br><span class="line">        &quot;databaseFilePath&quot;:&quot;&#x2F;home&#x2F;patten&#x2F;workspace&#x2F;alexa&#x2F;sdk-folder&#x2F;application-necessities&#x2F;certifiedSender.db&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;notifications&quot;:&#123; </span><br><span class="line">        &#x2F;&#x2F; Path to Notifications database file. e.g. &#x2F;home&#x2F;ubuntu&#x2F;Build&#x2F;notifications.db</span><br><span class="line">        &#x2F;&#x2F; Note: The directory specified must be valid.</span><br><span class="line">        &#x2F;&#x2F; The database file (notifications.db) will be created by SampleApp, do not create it yourself.</span><br><span class="line">        &#x2F;&#x2F; The database file should only be used for notifications (don&#39;t use it for other components of SDK)</span><br><span class="line">        &quot;databaseFilePath&quot;:&quot;&#x2F;home&#x2F;patten&#x2F;workspace&#x2F;alexa&#x2F;sdk-folder&#x2F;application-necessities&#x2F;notifications.db&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;sampleApp&quot;:&#123;</span><br><span class="line">        &#x2F;&#x2F; To specify if the SampleApp supports display cards.</span><br><span class="line">        &quot;displayCardsSupported&quot;:true</span><br><span class="line">        &#x2F;&#x2F; The firmware version of the device to send in SoftwareInfo event.</span><br><span class="line">        &#x2F;&#x2F; Note: The firmware version should be a positive 32-bit integer in the range [1-2147483647].</span><br><span class="line">        &#x2F;&#x2F; e.g. &quot;firmwareVersion&quot;: 123</span><br><span class="line">        &#x2F;&#x2F; The default endpoint to connect to.</span><br><span class="line">        &#x2F;&#x2F; See https:&#x2F;&#x2F;developer.amazon.com&#x2F;docs&#x2F;alexa-voice-service&#x2F;api-overview.html#endpoints for regions and values</span><br><span class="line">        &#x2F;&#x2F; e.g. &quot;endpoint&quot;: &quot;https:&#x2F;&#x2F;avs-alexa-na.amazon.com&quot;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; Example of specifying suggested latency in seconds when openning PortAudio stream. By default,</span><br><span class="line">        &#x2F;&#x2F; when this paramater isn&#39;t specified, SampleApp calls Pa_OpenDefaultStream to use the default value.</span><br><span class="line">        &#x2F;&#x2F; See http:&#x2F;&#x2F;portaudio.com&#x2F;docs&#x2F;v19-doxydocs&#x2F;structPaStreamParameters.html for further explanation</span><br><span class="line">        &#x2F;&#x2F; on this parameter.</span><br><span class="line">        &#x2F;&#x2F;&quot;portAudio&quot;:&#123;</span><br><span class="line">        &#x2F;&#x2F;    &quot;suggestedLatency&quot;: 0.150</span><br><span class="line">        &#x2F;&#x2F;&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; Example of specifying output format and the audioSink for the gstreamer-based MediaPlayer bundled with the SDK.</span><br><span class="line">    &#x2F;&#x2F; Many platforms will automatically set the output format correctly, but in some cases where the hardware requires</span><br><span class="line">    &#x2F;&#x2F; a specific format and the software stack is not automatically setting it correctly, these parameters can be used</span><br><span class="line">    &#x2F;&#x2F; to manually specify the output format.  Supported rate&#x2F;format&#x2F;channels values are documented in detail here:</span><br><span class="line">    &#x2F;&#x2F; https:&#x2F;&#x2F;gstreamer.freedesktop.org&#x2F;documentation&#x2F;design&#x2F;mediatype-audio-raw.html</span><br><span class="line">    &#x2F;&#x2F;</span><br><span class="line">    &#x2F;&#x2F; By default the &quot;autoaudiosink&quot; element is used in the pipeline.  This element automatically selects the best sink</span><br><span class="line">    &#x2F;&#x2F; to use based on the configuration in the system.  But sometimes the wrong sink is selected and that prevented sound</span><br><span class="line">    &#x2F;&#x2F; from being played.  A new configuration is added where the audio sink can be specified for their system.</span><br><span class="line">    &#x2F;&#x2F; &quot;gstreamerMediaPlayer&quot;:&#123;</span><br><span class="line">    &#x2F;&#x2F;     &quot;outputConversion&quot;:&#123;</span><br><span class="line">    &#x2F;&#x2F;         &quot;rate&quot;:16000,</span><br><span class="line">    &#x2F;&#x2F;         &quot;format&quot;:&quot;S16LE&quot;,</span><br><span class="line">    &#x2F;&#x2F;         &quot;channels&quot;:1</span><br><span class="line">    &#x2F;&#x2F;     &#125;,</span><br><span class="line">    &#x2F;&#x2F;     &quot;audioSink&quot;:&quot;autoaudiosink&quot;</span><br><span class="line">    &#x2F;&#x2F; &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; Example of specifiying curl options that is different from the default values used by libcurl.</span><br><span class="line">    &#x2F;&#x2F; &quot;libcurlUtils&quot;:&#123;</span><br><span class="line">    &#x2F;&#x2F;</span><br><span class="line">    &#x2F;&#x2F;     By default libcurl is built with paths to a CA bundle and a directory containing CA certificates. You can</span><br><span class="line">    &#x2F;&#x2F;     direct the AVS Device SDK to configure libcurl to use an additional path to directories containing CA</span><br><span class="line">    &#x2F;&#x2F;     certificates via the CURLOPT_CAPATH setting.  Additional details of this curl option can be found in:</span><br><span class="line">    &#x2F;&#x2F;     https:&#x2F;&#x2F;curl.haxx.se&#x2F;libcurl&#x2F;c&#x2F;CURLOPT_CAPATH.html</span><br><span class="line">    &#x2F;&#x2F;     &quot;CURLOPT_CAPATH&quot;:&quot;INSERT_YOUR_CA_CERTIFICATE_PATH_HERE&quot;,</span><br><span class="line">    &#x2F;&#x2F;</span><br><span class="line">    &#x2F;&#x2F;     You can specify the AVS Device SDK to use a specific outgoing network interface.  More information of</span><br><span class="line">    &#x2F;&#x2F;     this curl option can be found here:</span><br><span class="line">    &#x2F;&#x2F;     https:&#x2F;&#x2F;curl.haxx.se&#x2F;libcurl&#x2F;c&#x2F;CURLOPT_INTERFACE.html</span><br><span class="line">    &#x2F;&#x2F;     &quot;CURLOPT_INTERFACE&quot;:&quot;INSERT_YOUR_INTERFACE_HERE&quot;</span><br><span class="line">    &#x2F;&#x2F; &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; Example of specifying a default log level for all ModuleLoggers.  If not specified, ModuleLoggers get</span><br><span class="line">    &#x2F;&#x2F; their log level from the sink logger.</span><br><span class="line">    &#x2F;&#x2F; &quot;logging&quot;:&#123;</span><br><span class="line">    &#x2F;&#x2F;     &quot;logLevel&quot;:&quot;INFO&quot;</span><br><span class="line">    &#x2F;&#x2F; &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; Example of overriding a specific ModuleLogger&#39;s log level whether it was specified by the default value</span><br><span class="line">    &#x2F;&#x2F; provided by the logging.logLevel value (as in the above example) or the log level of the sink logger.</span><br><span class="line">    &#x2F;&#x2F; &quot;acl&quot;:&#123;</span><br><span class="line">    &#x2F;&#x2F;     &quot;logLevel&quot;:&quot;DEBUG9&quot;</span><br><span class="line">    &#x2F;&#x2F; &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Notes for logging</span><br><span class="line">&#x2F;&#x2F; The log levels are supported to debug when SampleApp is not working as expected.</span><br><span class="line">&#x2F;&#x2F; There are 14 levels of logging with DEBUG9 providing the highest level of logging and CRITICAL providing</span><br><span class="line">&#x2F;&#x2F; the lowest level of logging i.e. if DEBUG9 is specified while running the SampleApp, all the logs at DEBUG9 and</span><br><span class="line">&#x2F;&#x2F; below are displayed, whereas if CRITICAL is specified, only logs of CRITICAL are displayed.</span><br><span class="line">&#x2F;&#x2F; The 14 levels are:</span><br><span class="line">&#x2F;&#x2F; DEBUG9, DEBUG8, DEBUG7, DEBUG6, DEBUG5, DEBUG4, DEBUG3, DEBUG2, DEBUG1, DEBUG0, INFO, WARN, ERROR, CRITICAL.</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; To selectively see the logging for a particular module, you can specify logging level in this json file.</span><br><span class="line">&#x2F;&#x2F; Some examples are:</span><br><span class="line">&#x2F;&#x2F; To only see logs of level INFO and below for ACL and MediaPlayer modules,</span><br><span class="line">&#x2F;&#x2F; -  grep for ACSDK_LOG_MODULE in source folder. Find the log module for ACL and MediaPlayer.</span><br><span class="line">&#x2F;&#x2F; -  Put the following in json:</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; &quot;acl&quot;:&#123;</span><br><span class="line">&#x2F;&#x2F;  &quot;logLevel&quot;:&quot;INFO&quot;</span><br><span class="line">&#x2F;&#x2F; &#125;,</span><br><span class="line">&#x2F;&#x2F; &quot;mediaPlayer&quot;:&#123;</span><br><span class="line">&#x2F;&#x2F;  &quot;logLevel&quot;:&quot;INFO&quot;</span><br><span class="line">&#x2F;&#x2F; &#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; To enable DEBUG, build with cmake option -DCMAKE_BUILD_TYPE&#x3D;DEBUG. By default it is built with RELEASE build.</span><br><span class="line">&#x2F;&#x2F; And run the SampleApp similar to the following command.</span><br><span class="line">&#x2F;&#x2F; e.g. .&#x2F;SampleApp &#x2F;home&#x2F;ubuntu&#x2F;...&#x2F;AlexaClientSDKConfig.json &#x2F;home&#x2F;ubuntu&#x2F;KittAiModels&#x2F; DEBUG9&quot;</span><br></pre></td></tr></table></figure><h1 id="运行并授权"><a class="markdownIt-Anchor" href="#运行并授权"></a> 运行并授权：</h1><p>导航到您的构建文件夹(~/sdk-folder/sdk-build)，然后:<br>a. 启动示例应用程序:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  .&#x2F;SampleApp&#x2F;src&#x2F;SampleApp Integration&#x2F;AlexaClientSDKConfig.json</span><br></pre></td></tr></table></figure><p>b. 等待示例应用程序显示如下消息:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">##################################</span><br><span class="line">#       NOT YET AUTHORIZED       #</span><br><span class="line">##################################</span><br><span class="line">################################################################################################</span><br><span class="line">#       To authorize, browse to: &#39;https:&#x2F;&#x2F;amazon.com&#x2F;us&#x2F;code&#39; and enter the code: &#123;XXXX&#125;       #</span><br><span class="line">################################################################################################</span><br></pre></td></tr></table></figure><p>c. 使用浏览器导航到来自示例应用程序的消息中指定的URL（此处为<a href="https://amazon.com/us/code">https://amazon.com/us/code</a>）。<br>d. 如果需要这样做，请使用Amazon用户凭证进行身份验证。<br>e. 输入来自示例应用程序的消息中指定的代码。<br>f. 选择“<strong>Allow</strong>”。<br>g. 等待CBLAuthDelegate从Amazon (LWA)登录成功获取访问令牌和刷新令牌。此时，示例应用程序将打印如下消息:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">########################################</span><br><span class="line">#       Alexa is currently idle!       #</span><br><span class="line">########################################</span><br></pre></td></tr></table></figure><p>h. 您现在可以使用样例应用程序了。下一次启动样例应用程序时，您不需要进行授权过程。</p><p><strong>更多细节:</strong></p><ul><li>如果您通过“k”命令退出示例应用程序，CBLAuthDelegate数据库将被清除，您需要重新授权您的客户机。</li><li>如果您想将此授权移动到另一个示例应用程序安装，则需要在AlexaClientSDKConfig.json中复制deviceInfo对象到新安装的应用程序。您还需要复制文件“/{home}/sdk-folder/application- necessary /cblAuthDelegate”到新的安装，并更新新安装中的AlexaClientSDKConfig.json，以便cblAuthDelegate的databaseFilePath属性指向它。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 翻译 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> 翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++中的overload重载&amp;&amp;override覆盖&amp;&amp;overwrite隐藏</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/35988/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/35988/</url>
      
        <content type="html"><![CDATA[<p>浅谈C++中对于函数的overload（重载）、override（覆盖）、overwrite（重写，也有翻译为隐藏、重定义、屏蔽、隐藏）的理解。</p><p>这三个概念很容易混淆，面试题常见题目，也是本人面试百度过程中被问到的一个题目。但是我认为overload和overwrite是虚假的概念。在Java和Scala中，甚至不存在overwrite的概念。overload可以看作是普通函数，唯一特别的是普通函数具有相同的函数名。所有这些都是在编译时确定的。</p><p>而override对于多态性非常有用。被调用的方法是在运行时确定的。我认为overwrite的概念可能来自于c++中关键字virtual的使用。当使用virtual分配基类方法时，override将取得调用后期绑定的效果。或者这些方法将被早期绑定，并且不存在多态行为。</p><h2 id="英文定义"><a class="markdownIt-Anchor" href="#英文定义"></a> 英文定义：</h2><ol><li><em>override</em>: subclass method overrides base class method means:</li></ol><ul><li>in different range (in derived class and base class)</li><li>the same function name</li><li>the same function signature</li><li>the return type conforms covariance</li><li>the base class method is virtual</li></ul><ol start="2"><li><em>overload</em>: function overloading means:</li></ol><ul><li>the same range (in the same class)</li><li>the same function name</li><li>different function signature</li></ul><ol start="3"><li><em>overwrite</em>: subclass method hides base class method means:</li></ol><ul><li>in different range (in derived class and base class)</li><li>the same function name</li><li>two cases on parameters ( signature? ):<ul><li><em>the same parameters, the base class method is not virtual</em></li><li><em>different parameters</em></li></ul></li></ul><h2 id="翻译为中文定义"><a class="markdownIt-Anchor" href="#翻译为中文定义"></a> 翻译为中文定义</h2><ol><li><em>overload</em>：是指同一可访问区内被声明的几个具有不同参数列（参数的类型、个数、顺序不同）的同名函数，根据参数列表确定调用哪个函数，重载解析中不考虑返回类型，而且在不同的作用域里声明的函数也不算是重载。</li></ol><p>特点：<br>1）同名不同参：两个同名同参的函数绝不是重载，注意参数有无const也视为不同；<br>2）仅仅返回值不同，不构成重载；<br>3）相同作用域：同一文件域/全局域/namespace域内的同名不同参函数可以构成重载；而对于类成员函数，重载必须发生在同一类域中，分属于基类与派生类的函数不能直接构成重载（派生类函数重载基类函数的说法错误）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;示例代码</span><br><span class="line">class A&#123;</span><br><span class="line">public:</span><br><span class="line">  void func(int i);</span><br><span class="line">  void func(double i);&#x2F;&#x2F;overload</span><br><span class="line">  void func(int i, double j);&#x2F;&#x2F;overload</span><br><span class="line">  void func(double i, int j);&#x2F;&#x2F;overload</span><br><span class="line">  int func(int i);         &#x2F;&#x2F;非重载。注意重载考虑函数返回类型。</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ol start="2"><li><em>override</em>：是指派生类中存在重新定义的函数。其函数名、参数列表、返回值类型，所有都必须同基类中被重写的函数一致。只有函数体不同（花括号内），派生类调用时会调用派生类的重写函数，不会调用被重写函数。重写的基类中被重写的函数必须有virtual修饰。</li></ol><p>特点：<br>1）不同作用域（分别位于派生类与基类）；<br>2）基类函数须为virtual函数，而派生类重新实现的函数需与基类虚函数同名同参。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;示例代码</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">class Base</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">    virtual void fun(int i)&#123; cout &lt;&lt; &quot;Base::fun(int) : &quot; &lt;&lt; i &lt;&lt; endl;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">class Derived : public Base</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">    virtual void fun(int i)&#123; cout &lt;&lt; &quot;Derived::fun(int) : &quot; &lt;&lt; i &lt;&lt; endl;&#125;</span><br><span class="line">&#125;;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    Base b;</span><br><span class="line">    Base * pb &#x3D; new Derived();   &#x2F;&#x2F;向上造型</span><br><span class="line">    pb-&gt;fun(3);                  &#x2F;&#x2F;Derived::fun(int)</span><br><span class="line"></span><br><span class="line">    delete pb;</span><br><span class="line">    system(&quot;pause&quot;);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li><em>overwrite</em>：指派生类的函数屏蔽与其同名的基类函数，发生在不同类域（派生类与基类之间），具体情形包括：<br>1）派生类与基类函数同名但不同参，此时不论基类函数是否virtual，其都将被派生类函数隐藏。（不要与重载混淆，重载发生在同一类域）<br>2）派生类函数与基类非virtual函数同名同参，此时基类函数被隐藏（不要与override混淆，override特指基类函数为virtual的情况)</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;示例代码</span><br><span class="line">class Base&#123;</span><br><span class="line">public:</span><br><span class="line">    virtual int fcn();</span><br><span class="line">&#125;;</span><br><span class="line">class D1:public Base&#123;</span><br><span class="line">public:</span><br><span class="line">    &#x2F;&#x2F;隐藏基类的fcn，这个fcn不是虚函数</span><br><span class="line">    &#x2F;&#x2F;D1继承了Base::fcn()的定义</span><br><span class="line">    int fcn(int);         &#x2F;&#x2F;形参类别与Base中的fcn不一样</span><br><span class="line">    virtual void f2();    &#x2F;&#x2F;是一个新的虚函数，在Base中不存在</span><br><span class="line">&#125;;</span><br><span class="line">class D2:public D1&#123;</span><br><span class="line">public：</span><br><span class="line">    int fcn(int);        &#x2F;&#x2F;是一个非虚函数，隐藏了D1::fcn(int)</span><br><span class="line">    int fcn();           &#x2F;&#x2F;覆盖了Base的虚函数fcn</span><br><span class="line">    void f2();           &#x2F;&#x2F;覆盖了D1的虚函数f2</span><br><span class="line">    </span><br></pre></td></tr></table></figure><h2 id="梳理后的逻辑"><a class="markdownIt-Anchor" href="#梳理后的逻辑"></a> 梳理后的逻辑：</h2><p>类public派生时，基类成员全部继承到派生类，除非派生类有同名；当派生类与基类成员有同名，除了基类成员为virtual函数时属于覆盖(override)，其他情况都是隐藏（overwrite）。</p><h2 id="覆盖与隐藏的区别"><a class="markdownIt-Anchor" href="#覆盖与隐藏的区别"></a> 覆盖与隐藏的区别：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">class Base</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">virtual void a(int x)&#123; cout &lt;&lt; &quot;Base::a(int) &quot;&lt;&lt; x &lt;&lt; endl;&#125;</span><br><span class="line"></span><br><span class="line">void b(int x)&#123; cout &lt;&lt; &quot;Base::b(int) &quot;&lt;&lt; x &lt;&lt; endl; &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">class Drv0 : public Base</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"> virtual void a(int x)&#123; cout &lt;&lt; &quot;Drv0::a(int) &quot;&lt;&lt; x &lt;&lt; endl; &#125;</span><br><span class="line"></span><br><span class="line">void b(int x)&#123; cout &lt;&lt; &quot;Drv0::b(int) &quot;&lt;&lt; x &lt;&lt; endl; &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">void main()</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  Drv0 d;</span><br><span class="line"></span><br><span class="line">  Base *pbase &#x3D; &amp;d;</span><br><span class="line"></span><br><span class="line">  Drv0 *pdrv &#x3D; &amp;d;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  pbase-&gt;a(3); &#x2F;&#x2F;输出Drv0::a(int) 3</span><br><span class="line"></span><br><span class="line">  pdrv-&gt;a(3);  &#x2F;&#x2F; 输出Drv0::a(int) 3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  pdrv-&gt;b(3); &#x2F;&#x2F; 输出Drv0::b(int) 3</span><br><span class="line"></span><br><span class="line">  pbase-&gt;b(3); &#x2F;&#x2F; 输出Base::b(int) 3</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例中Drv0::a(int)覆盖（override）了Base::a(int)，因此不管是通过基类指针调用pbase-&gt;a(3)，还是通过派生类指针调用pdrv-&gt;a(3)，最终都是根据对象类型（Drv0 d;）选择调用函数，结果都为Drv0::a(int) 3</p><p>而Drv0::b(int)则隐藏（overwrite）了Base::b(int)，外在表现就是根据指针类型（Base* pbase和Drv0* pdrv）决定调用函数，即pdrv-&gt;b(3)输出Drv0::b(int) 3，而pbase-&gt;b(3)输出Base::b(int) 3。因此隐藏（overwrite）相当于对于某一功能派生类另起炉灶，基类和派生类各干各的。</p><p>所以覆盖（override）的结果是根据对象类型决定调用哪个函数（多态）；而隐藏（overwrite）则表现为根据指针类型决定调用哪个函数，这是覆盖和隐藏最直观的区别。</p><p>隐藏（overwrite）是对函数继承的破坏，多数情况没有必要，因为基类中非virtual型成员函数本就代表类的功能中不变的部分，派生类 应该直接继承使用而不需修改，发生overwrite多数说明设计不完善。</p><p>实际上很多时候是不小心把override实现成了overwrite，即本该把基类函数设计为virtual以实现可变功能，却忘了写virtual，结果当在派生类中重写同名函数时就成了overwrite隐藏。</p><p><strong>致谢</strong></p><blockquote><p>《<a href="https://wuciawe.github.io/object%20oriented/2014/08/29/override-overload-overwrite.html">Override Overload Overwrite</a>》<br><a href="https://blog.csdn.net/ipmux">半山茶馆</a>《<a href="https://blog.csdn.net/ipmux/article/details/45038869">C<ins>基础篇–overload重载&amp;override覆盖&amp;overwrite隐藏</ins></a>》<br><a href="https://blog.csdn.net/qq_30366449">一首小夜曲</a>《<a href="https://blog.csdn.net/qq_30366449/article/details/76038802">C overload、override、overwrite</a>》</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu16.04仿Mac美化教程</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/21597/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/21597/</url>
      
        <content type="html"><![CDATA[<p>全部替换为Mac风格需要改动的东西太多，大致分为一下几个步骤：<br>1.分别安装Mac主题，光标，图标，壁纸，Dock,LOGO以及字体。<br>2.安装支持更改主题的相应软件。<br>3.配置并启用Mac主题。</p><h2 id="step1"><a class="markdownIt-Anchor" href="#step1"></a> STEP1：</h2><hr><p><strong>添加：</strong></p><pre><code>sudo add-apt-repository ppa:noobslab/macbuntu</code></pre><p><strong>刷新：</strong></p><pre><code>sudo apt-get update</code></pre><p><strong>安装图标：</strong></p><pre><code>sudo apt-get install macbuntu-os-icons-lts-v7</code></pre><p><strong>安装主题：</strong></p><pre><code>sudo apt-get install macbuntu-os-ithemes-lts-v7</code></pre><h2 id="step2"><a class="markdownIt-Anchor" href="#step2"></a> STEP2</h2><hr><p><strong>安装Slingscold</strong></p><pre><code>sudo add-apt-repository ppa:noobslab/macbuntu  sudo apt-get update  sudo apt-get install slingscold  </code></pre><p><strong>安装Tweak Tool</strong></p><pre><code>sudo apt-get install unity-tweak-tool  sudo apt-get install gnome-tweak-tool </code></pre><p><em>tips：如果出现依赖可进行强制安装（sudo apt-get -f install）</em></p><p><strong>安装Albert Spotlight</strong></p><pre><code>sudo add-apt-repository ppa:noobslab/macbuntu  sudo apt-get update  sudo apt-get install albert </code></pre><p><strong>安装 Plank Dock</strong></p><pre><code>sudo apt-get install plank</code></pre><p><strong>安装Dock主题</strong></p><pre><code>sudo add-apt-repository ppa:noobslab/macbuntu  sudo apt-get update  sudo apt-get install macbuntu-os-plank-theme-lts-v7  </code></pre><h2 id="step3"><a class="markdownIt-Anchor" href="#step3"></a> STEP3</h2><hr><p>**配置Mac **</p><pre><code>cd &amp;&amp; wget -O Mac.po http://drive.noobslab.com/data/Mac/change-name-on-panel/mac.pocd /usr/share/locale/en/LC_MESSAGES; sudo msgfmt -o unity.mo ~/Mac.po;rm ~/Mac.po;cd  </code></pre><p><strong>配置Logo</strong></p><pre><code>wget -O launcher_bfb.png http://drive.noobslab.com/data/Mac/launcher-logo/apple/launcher_bfb.png  sudo mv launcher_bfb.png /usr/share/unity/icons/</code></pre><p><strong>配置字体</strong></p><pre><code>wget -O mac-fonts.zip http://drive.noobslab.com/data/Mac/macfonts.zip  sudo unzip mac-fonts.zip -d /usr/share/fonts; rm mac-fonts.zip  sudo fc-cache -f -v  </code></pre><p><strong>配置启动</strong></p><pre><code>sudo add-apt-repository ppa:noobslab/themes  sudo apt-get update  sudo apt-get install macbuntu-os-bscreen-lts-v7sudo add-apt-repository ppa:noobslab/themes  sudo apt-get update  sudo apt-get install macbuntu-os-lightdm-lts-v7  </code></pre><p><strong>自动更换壁纸：</strong></p><pre><code>sudo add-apt-repository ppa:ubuntu-wine/ppa  sudo apt-get update  </code></pre><p>然后设置开机启动。<br>最后在Unity里更改Mac主题：</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/21597/mac1.JPG" alt="mac1"></p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/21597/mac2.JPG" alt="mac2"></p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/21597/mac3.JPG" alt="mac3"></p><h2 id="致谢"><a class="markdownIt-Anchor" href="#致谢"></a> 致谢</h2><p><a href="http://www.linuxdiyf.com/">红联</a>《<a href="http://www.linuxdiyf.com/linux/28587.html">Ubuntu16.04仿Mac美化教程</a>》</p>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++序列式容器（STL序列式容器）是什么</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/61932/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/61932/</url>
      
        <content type="html"><![CDATA[<p>序列容器以线性序列的方式存储元素。它没有对元素进行排序，元素的顺序和存储它们的顺序相同。以下有 5 种标准的序列容器，每种容器都具有不同的特性：</p><ul><li>array&lt;T,N&gt;(数组容器)是一个长度固定的序列，有 N 个 T 类型的对象，不能增加或删除元素。</li><li>vector<T>(向量容器)是一个长度可变的序列，用来存放 T 类型的对象。必要时，可以自动增加容量，但只能在序列的末尾高效地增加或删除元素。</T></li><li>deque<T>(双向队列容器)是一个长度可变的、可以自动增长的序列，在序列的两端都不能高效地增加或删除元素。</T></li><li>list<T>(链表容器)是一个长度可变的、由 T 类型对象组成的序列，它以双向链表的形式组织元素，在这个序列的任何地方都可以高效地增加或删除元素。访问容器中任意元素的速度要比前三种容器慢，这是因为 list<T> 必须从第一个元素或最后一个元素开始访问，需要沿着链表移动，直到到达想要的元素。</T></T></li><li>forward list<T>(正向链表容器)是一个长度可变的、由 T 类型对象组成的序列，它以单链表的形式组织元素，是一类比链表容器快、更节省内存的容器，但是它内部的元素只能从第一个元素开始访问。</T></li></ul><p>图 1 说明了可供使用的序列容器以及它们之间的区别。</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/61932/stlContainer.jpg" alt><br>图 1 标准的序列容器</p><p>图 1 中每种类型容器的操作都可以高效执行，但其他示例中的操作可能会慢一些。</p><h2 id="容器中常见的函数成员"><a class="markdownIt-Anchor" href="#容器中常见的函数成员"></a> 容器中常见的函数成员</h2><p>在本章的剩余部分，会详细介绍每一类序列容器的用法。序列容器包含一些相同的成员函数，它们的功能也相同。本教程会在某个容器的上下文中详细介绍下面的每个函数，但对于每种类型的容器不会重复介绍它们的细节。</p><p>表 2 展示了 array、vector 和 deque 容器的函数成员，它们中至少有两个容器实现了同样的函数成员。</p><table><caption>表 2 array、vector 和 deque 容器的函数成员</caption><tbody><tr><th>函数成员</th><th>array&lt;T,N&gt;</th><th>vector&lt;T&gt;</th><th>deque&lt;T&gt;</th></tr><tr><td>begin() -&nbsp;返回幵始迭代器</td><td>是</td><td>是</td><td>是</td></tr><tr><td>end() -&nbsp;返回结束迭代器</td><td>是</td><td>是</td><td>是</td></tr><tr><td>rbegin() -&nbsp;返回反向'开始迭代器</td><td>是</td><td>是</td><td>是</td></tr><tr><td>rend() -&nbsp;返回反向结束迭代器</td><td>是</td><td>是</td><td>是</td></tr><tr><td>cbegin() -&nbsp;返M const开始迭代器</td><td>是</td><td>是</td><td>是</td></tr><tr><td>cend() -&nbsp;返回const结束迭代器</td><td>是</td><td>是</td><td>是</td></tr><tr><td>crbegin() -&nbsp;返回const反向开始迭代器</td><td>是</td><td>是</td><td>是</td></tr><tr><td>crend() -&nbsp;返回const反向结束迭代器</td><td>是</td><td>是</td><td>是</td></tr><tr><td>assign() -&nbsp;用新元素替换原有内容</td><td>-</td><td>是</td><td>是</td></tr><tr><td>operator=() -&nbsp;复制同类型容器的元素，或者用初始化列表替换 现有内容</td><td>是</td><td>是</td><td>是</td></tr><tr><td>size() -&nbsp;返回实际元素个数</td><td>是</td><td>是</td><td>是</td></tr><tr><td>max_size() -&nbsp;返回元素个数的设大值</td><td>是</td><td>是</td><td>是</td></tr><tr><td>capacity() -&nbsp;返回当前容量</td><td>-</td><td>是</td><td>-</td></tr><tr><td>empty() -&nbsp;返回true,如果容器中没有元素的话</td><td>是</td><td>是</td><td>是</td></tr><tr><td>resize() -&nbsp;改变实际元素的个数</td><td>-</td><td>是</td><td>是</td></tr><tr><td>shrink _to_fit() -&nbsp;将内存减少到等于当前元素实际所使用的大小</td><td>-</td><td>是</td><td>是</td></tr><tr><td>front()&nbsp;- 返回第一个元素的引用</td><td>是</td><td>是</td><td>是</td></tr><tr><td>back()&nbsp;- 返回铖后一个元素的引用</td><td>是</td><td>是</td><td>是</td></tr><tr><td>operator[]() -&nbsp;使用索弓丨访问元素</td><td>是</td><td>是</td><td>是</td></tr><tr><td>at()&nbsp;- 使用经过边界检査的索引访问元素</td><td>是</td><td>是</td><td>是</td></tr><tr><td>push_back() -&nbsp;在序列的尾部添加一个元素</td><td>-</td><td>是</td><td>是</td></tr><tr><td>insert()&nbsp;- 在指定的位置插入一个或多个元素</td><td>-</td><td>是</td><td>是</td></tr><tr><td>emplace() -&nbsp;在指定的位置直接生成一个元素</td><td>-</td><td>是</td><td>是</td></tr><tr><td>emplace_back() -&nbsp;在序列尾部生成一个元素</td><td>-</td><td>是</td><td>是</td></tr><tr><td>pop_back()&nbsp;- 移出序列尾部的元素</td><td>-</td><td>是</td><td>是</td></tr><tr><td>erase()&nbsp;- 移出一个元素或一段元素</td><td>-</td><td>是</td><td>是</td></tr><tr><td>clear() - 移出所苻的元素，容器大小变为 0</td><td>-</td><td>是</td><td>是</td></tr><tr><td>swap() - 交换两个容器的所有元素</td><td>是</td><td>是</td><td>是</td></tr><tr><td>data() - 返回包含元素的内部数组的<a href="/c/pointer/" target="_blank">指针</a></td><td>是</td><td>是</td><td>-</td></tr></tbody></table><p>所有序列容器的函数成员 max_size() 都会返回它能存储的元素个数的最大值。这通常是一个很大的值，一般是 232-1,所以我们很少会用到这个函数。</p><p><strong>致谢：</strong></p><blockquote><p><a href="http://c.biancheng.net/">C 语言中文网</a>《<a href="http://c.biancheng.net/view/409.html">C++序列式容器（STL 序列式容器）是什么）</a>》</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一篇文章说清浏览器解析和CSS（GPU）动画优化</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/6865/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/6865/</url>
      
        <content type="html"><![CDATA[<p>相信不少人在做移动端动画的时候遇到了卡顿的问题，这篇文章尝试从浏览器渲染的角度；一点一点告诉你动画优化的原理及其技巧，作为你工作中优化动画的参考。文末有优化技巧的总结。</p><p>因为GPU合成没有官方规范，每个浏览器的问题和解决方式也不同；所以文章内容仅供参考。</p><h2 id="浏览器渲染"><a class="markdownIt-Anchor" href="#浏览器渲染"></a> 浏览器渲染</h2><p>提高动画的优化不得不提及浏览器是如何渲染一个页面。在从服务器中拿到数据后，浏览器会先做解析三类东西：</p><ul><li><p>解析html,xhtml,svg这三类文档，形成dom树。</p></li><li><p>解析css，产生css rule tree。</p></li><li><p>解析js，js会通过api来操作dom tree和css rule tree。</p></li></ul><p>解析完成之后，浏览器引擎会通过dom tree和css rule tree来构建rendering tree：</p><ul><li><p>rendering tree和dom tree并不完全相同，例如：<head></head>或display:none的东西就不会放在渲染树中。</p></li><li><p>css rule tree主要是完成匹配，并把css rule附加给rendering tree的每个element。</p></li></ul><p>在渲染树构建完成后，</p><ul><li><p>浏览器会对这些元素进行定位和布局，这一步也叫做reflow或者layout。</p></li><li><p>浏览器绘制这些元素的样式，颜色，背景，大小及边框等，这一步也叫做repaint。</p></li><li><p>然后浏览器会将各层的信息发送给GPU，GPU会将各层合成；显示在屏幕上。</p></li></ul><h2 id="渲染优化原理"><a class="markdownIt-Anchor" href="#渲染优化原理"></a> 渲染优化原理</h2><p>如上所说，渲染树构建完成后；浏览器要做的步骤：</p><p>reflow——》repaint——》composite</p><h3 id="reflow和repaint"><a class="markdownIt-Anchor" href="#reflow和repaint"></a> reflow和repaint</h3><p>reflow和repaint都是耗费浏览器性能的操作，这两者尤以reflow为甚；因为每次reflow，浏览器都要重新计算每个元素的形状和位置。</p><p>由于reflow和repaint都是非常消耗性能的，我们的浏览器为此做了一些优化。浏览器会将reflow和repaint的操作积攒一批，然后做一次reflow。但是有些时候，你的代码会强制浏览器做多次reflow。例如：</p><pre><code>var content = document.getElementById('content');content.style.width = 700px;var contentWidth = content.offsetWidth;content.style.backgound = 'red';</code></pre><p>以上第三行代码，需要浏览器reflow后；再获取值，所以会导致浏览器多做一次reflow。</p><p>下面是一些针对reflow和repaint的最佳实践：</p><ul><li><p>不要一条一条地修改dom的样式，尽量使用className一次修改。</p></li><li><p>将dom离线后修改</p><ul><li><p>使用documentFragment对象在内存里操作dom。</p></li><li><p>先把dom节点display:none;（会触发一次reflow）。然后做大量的修改后，再把它显示出来。</p></li><li><p>clone一个dom节点在内存里，修改之后；与在线的节点相替换。</p></li></ul></li><li><p>不要使用table布局，一个小改动会造成整个table的重新布局。</p></li><li><p>transform和opacity只会引起合成，不会引起布局和重绘。</p></li></ul><p>从上述的最佳实践中你可能发现，动画优化一般都是<strong>尽可能地减少reflow、repaint的发生</strong>。关于哪些属性会引起reflow、repaint及composite，你可以在这个网站找到<a href="https://csstriggers.com/">https://csstriggers.com/</a>。</p><h3 id="composite"><a class="markdownIt-Anchor" href="#composite"></a> composite</h3><p>在reflow和repaint之后，浏览器会将多个复合层传入GPU；进行合成工作，那么合成是如何工作的呢？</p><p>假设我们的页面中有A和B两个元素，它们有absolute和z-index属性；浏览器会重绘它们，然后将图像发送给GPU；然后GPU将会把多个图像合成展示在屏幕上。</p><pre><code>&lt;style&gt;#a, #b &#123; position: absolute;&#125;#a &#123; left: 30px; top: 30px; z-index: 2;&#125;#b &#123; z-index: 1;&#125;&lt;/style&gt;&lt;div id=&quot;#a&quot;&gt;A&lt;/div&gt;&lt;div id=&quot;#b&quot;&gt;B&lt;/div&gt;</code></pre><p><img src="https://www.guopengzhen.com/content/images/2018/12/1861898982-586c5a0d3a1c9_articlex.png" alt="clipboard.png" title="clipboard.png"></p><p>我们将A元素使用left属性，做一个移动动画：</p><pre><code>&lt;style&gt;#a, #b &#123; position: absolute;&#125;#a &#123; left: 10px; top: 10px; z-index: 2; animation: move 1s linear;&#125;#b &#123; left: 50px; top: 50px; z-index: 1;&#125;@keyframes move &#123; from &#123; left: 30px; &#125; to &#123; left: 100px; &#125;&#125;&lt;/style&gt;&lt;div id=&quot;#a&quot;&gt;A&lt;/div&gt;&lt;div id=&quot;#b&quot;&gt;B&lt;/div&gt;</code></pre><p>在这个例子中，对于动画的每一帧；浏览器会计算元素的几何形状，渲染新状态的图像；并把它们发送给GPU。（你没看错，position也会引起浏览器重排的）尽管浏览器做了优化，在repaint时，只会repaint部分区域；但是我们的动画仍然不够流畅。</p><p>因为重排和重绘发生在动画的每一帧，一个有效避免reflow和repaint的方式是我们仅仅画两个图像；一个是a元素，一个是b元素及整个页面；我们将这两张图片发送给GPU，然后动画发生的时候；只做两张图片相对对方的平移。也就是说，仅仅合成缓存的图片将会很快；这也是GPU的优势——它能非常快地以亚像素精度地合成图片，并给动画带来平滑的曲线。</p><p>为了仅发生composite，我们做动画的css property必须满足以下三个条件：</p><ul><li><p>不影响文档流。</p></li><li><p>不依赖文档流。</p></li><li><p>不会造成重绘。</p></li></ul><p>满足以上以上条件的css property只有transform和opacity。你可能以为position也满足以上条件，但事实不是这样，举个例子left属性可以使用百分比的值，依赖于它的offset parent。还有em、vh等其他单位也依赖于他们的环境。</p><p>我们使用translate来代替left</p><pre><code>&lt;style&gt;#a, #b &#123; position: absolute;&#125;#a &#123; left: 10px; top: 10px; z-index: 2; animation: move 1s linear;&#125;#b &#123; left: 50px; top: 50px; z-index: 1;&#125;@keyframes move &#123; from &#123; transform: translateX(0); &#125; to &#123; transform: translateX(70px); &#125;&#125;&lt;/style&gt;&lt;div id=&quot;#a&quot;&gt;A&lt;/div&gt;&lt;div id=&quot;#b&quot;&gt;B&lt;/div&gt;</code></pre><p>浏览器在动画执行之前就知道动画如何开始和结束，因为浏览器没有看到需要reflow和repaint的操作；浏览器就会画两张图像作为复合层，并将它们传入GPU。</p><p>这样做有两个优势：</p><ul><li><p>动画将会非常流畅</p></li><li><p>动画不在绑定到CPU，即使js执行大量的工作；动画依然流畅。</p></li></ul><p>看起来性能问题好像已经解决了？在下文你会看到GPU动画的一些问题。</p><h3 id="gpu是如何合成图像的"><a class="markdownIt-Anchor" href="#gpu是如何合成图像的"></a> GPU是如何合成图像的</h3><p>GPU实际上可以看作一个独立的计算机，它有自己的处理器和存储器及数据处理模型。当浏览器向GPU发送消息的时候，就像向一个外部设备发送消息。</p><p>你可以把浏览器向GPU发送数据的过程，与使用ajax向服务器发送消息非常类似。想一下，你用ajax向服务器发送数据，服务器是不会直接接受浏览器的存储的信息的。你需要收集页面上的数据，把它们放进一个载体里面（例如JSON），然后发送数据到远程服务器。</p><p>同样的，浏览器向GPU发送数据也需要先创建一个载体；只不过GPU距离CPU很近，不会像远程服务器那样可能几千里那么远。但是对于远程服务器，2秒的延迟是可以接受的；但是对于GPU，几毫秒的延迟都会造成动画的卡顿。</p><p>浏览器向GPU发送的数据载体是什么样？这里给出一个简单的制作载体，并把它们发送到GPU的过程。</p><ul><li><p>画每个复合层的图像</p></li><li><p>准备图层的数据</p></li><li><p>准备动画的着色器（如果需要）</p></li><li><p>向GPU发送数据</p></li></ul><p>所以你可以看到，每次当你添加<code>transform:translateZ(0)</code>或<code>will-change：transform</code>给一个元素，你都会做同样的工作。重绘是非常消耗性能的，在这里它尤其缓慢。在大多数情况，浏览器不能增量重绘。它不得不重绘先前被复合层覆盖的区域。</p><h3 id="隐式合成"><a class="markdownIt-Anchor" href="#隐式合成"></a> 隐式合成</h3><p>还记得刚才a元素和b元素动画的例子吗？现在我们将b元素做动画，a元素静止不动。</p><p><img src="https://www.guopengzhen.com/content/images/2018/12/4036726279-586cb0712d519_articlex.png" alt="clipboard.png" title="clipboard.png"></p><p>和刚才的例子不同，现在b元素将拥有一个独立复合层；然后它们将被GPU合成。但是因为a元素要在b元素的上面（因为a元素的z-index比b元素高），那么浏览器会做什么？浏览器会将a元素也单独做一个复合层！</p><p>所以我们现在有三个复合层a元素所在的复合层、b元素所在的复合层、其他内容及背景层。</p><p>一个或多个没有自己复合层的元素要出现在有复合层元素的上方，它就会拥有自己的复合层；这种情况被称为隐式合成。</p><p>浏览器将a元素提升为一个复合层有很多种原因，下面列举了一些：</p><ul><li><p>3d或透视变换css属性，例如translate3d,translateZ等等（js一般通过这种方式，使元素获得复合层）</p></li><li><p><video><iframe><canvas><webgl>等元素。</webgl></canvas></iframe></video></p></li><li><p>混合插件（如flash）。</p></li><li><p>元素自身的 opacity和transform 做 CSS 动画。</p></li><li><p>拥有css过滤器的元素。</p></li><li><p>使用will-change属性。</p></li><li><p>position:fixed。</p></li><li><p>元素有一个 z-index 较低且包含一个复合层的兄弟元素(换句话说就是该元素在复合层上面渲染)</p></li></ul><p>这看起来css动画的性能瓶颈是在重绘上，但是真实的问题是在内存上：</p><h3 id="内存占用"><a class="markdownIt-Anchor" href="#内存占用"></a> 内存占用</h3><p>使用GPU动画需要发送多张渲染层的图像给GPU，GPU也需要缓存它们以便于后续动画的使用。</p><p>一个渲染层，需要多少内存占用？为了便于理解，举一个简单的例子；一个宽、高都是300px的纯色图像需要多少内存？</p><p>300 <em>300</em> 4 = 360000字节，即360kb。这里乘以4是因为，每个像素需要四个字节计算机内存来描述。</p><p>假设我们做一个轮播图组件，轮播图有10张图片；为了实现图片间平滑过渡的交互；为每个图像添加了will-change:transform。这将提升图像为复合层，它将多需要19mb的空间。800 <em>600</em> 4 * 10 = 1920000。</p><p>仅仅是一个轮播图组件就需要19m的额外空间！</p><p>在chrome的开发者工具中打开setting——》Experiments——》layers可以看到每个层的内存占用。如图所示：</p><p><img src="https://www.guopengzhen.com/content/images/2018/12/layer1.png" alt="clipboard.png" title="clipboard.png"></p><p><img src="https://www.guopengzhen.com/content/images/2018/12/layer2.png" alt="clipboard.png" title="clipboard.png"></p><h3 id="gpu动画的优点和缺点"><a class="markdownIt-Anchor" href="#gpu动画的优点和缺点"></a> GPU动画的优点和缺点</h3><p>现在我们可以总结一下GPU动画的优点和缺点：</p><ul><li><p>每秒60帧，动画平滑、流畅。</p></li><li><p>一个合适的动画工作在一个单独的线程，它不会被大量的js计算阻塞。</p></li><li><p>3D“变换”是便宜的。</p></li></ul><p>缺点：</p><ul><li><p>提升一个元素到复合层需要额外的重绘，有时这是慢的。（即我们得到的是一个全层重绘，而不是一个增量）</p></li><li><p>绘图层必须传输到GPU。取决于层的数量和传输可能会非常缓慢。这可能让一个元素在中低档设备上闪烁。</p></li><li><p>每个复合层都需要消耗额外的内存，过多的内存可能导致浏览器的崩溃。</p></li><li><p>如果你不考虑隐式合成，而使用重绘；会导致额外的内存占用，并且浏览器崩溃的概率是非常高的。</p></li><li><p>我们会有视觉假象，例如在Safari中的文本渲染，在某些情况下页面内容将消失或变形。</p></li></ul><h2 id="优化技巧"><a class="markdownIt-Anchor" href="#优化技巧"></a> 优化技巧</h2><h3 id="避免隐式合成"><a class="markdownIt-Anchor" href="#避免隐式合成"></a> 避免隐式合成</h3><ul><li><p>保持动画的对象的z-index尽可能的高。理想的，这些元素应该是body元素的直接子元素。当然，这不是总可能的。所以你可以克隆一个元素，把它放在body元素下仅仅是为了做动画。</p></li><li><p>将元素上设置will-change CSS属性，元素上有了这个属性，浏览器会提升这个元素成为一个复合层（不是总是）。这样动画就可以平滑的开始和结束。但是不要滥用这个属性，否则会大大增加内存消耗。</p></li></ul><h3 id="动画中只使用transform和opacity"><a class="markdownIt-Anchor" href="#动画中只使用transform和opacity"></a> 动画中只使用transform和opacity</h3><p>如上所说，transform和opacity保证了元素属性的变化不影响文档流、也不受文档流影响；并且不会造成repaint。<br>有些时候你可能想要改变其他的css属性，作为动画。例如：你可能想使用background属性改变背景：</p><pre><code>&lt;div class=&quot;bg-change&quot;&gt;&lt;/div&gt;.bg-change &#123;  width: 100px;  height: 100px;  background: red;  transition: opacity 2s;&#125;.bg-change:hover &#123;  background: blue;&#125;</code></pre><p>在这个例子中，在动画的每一步；浏览器都会进行一次重绘。我们可以使用一个复层在这个元素上面，并且仅仅变换opacity属性：</p><pre><code>&lt;div class=&quot;bg-change&quot;&gt;&lt;/div&gt;&lt;style&gt;.bg-change &#123;  width: 100px;  height: 100px;  background: red;&#125;.bg-change::before &#123;  content: '';  display: block;  width: 100%;  height: 100%;  background: blue;  opacity: 0;  transition: opacity 20s;&#125;.bg-change:hover::before &#123;  opacity: 1;&#125;&lt;/style&gt;</code></pre><h3 id="减小复合层的尺寸"><a class="markdownIt-Anchor" href="#减小复合层的尺寸"></a> 减小复合层的尺寸</h3><p>看一下两张图片，有什么不同吗？</p><p><img src="https://www.guopengzhen.com/content/images/2018/12/2942097818-586cc556bf0c1_articlex.png" alt="clipboard.png" title="clipboard.png"></p><p>这两张图片视觉上是一样的，但是它们的尺寸一个是39kb；另外一个是400b。不同之处在于，第二个纯色层是通过scale放大10倍做到的。</p><pre><code>&lt;div id=&quot;a&quot;&gt;&lt;/div&gt;&lt;div id=&quot;b&quot;&gt;&lt;/div&gt;&lt;style&gt;#a, #b &#123; will-change: transform;&#125;#a &#123; width: 100px; height: 100px;&#125;#b &#123; width: 10px; height: 10px; transform: scale(10);&#125;&lt;/style&gt;</code></pre><p>对于图片，你要怎么做呢？你可以将图片的尺寸减少5%——10%，然后使用scale将它们放大；用户不会看到什么区别，但是你可以减少大量的存储空间。</p><h3 id="用css动画而不是js动画"><a class="markdownIt-Anchor" href="#用css动画而不是js动画"></a> 用css动画而不是js动画</h3><p>css动画有一个重要的特性，它是完全工作在GPU上。因为你声明了一个动画如何开始和如何结束，浏览器会在动画开始前准备好所有需要的指令；并把它们发送给GPU。而如果使用js动画，浏览器必须计算每一帧的状态；为了保证平滑的动画，我们必须在浏览器主线程计算新状态；把它们发送给GPU至少60次每秒。除了计算和发送数据比css动画要慢，主线程的负载也会影响动画； 当主线程的计算任务过多时，会造成动画的延迟、卡顿。</p><p>所以尽可能地使用基于css的动画，不仅仅更快；也不会被大量的js计算所阻塞。</p><h2 id="优化技巧总结"><a class="markdownIt-Anchor" href="#优化技巧总结"></a> 优化技巧总结</h2><ul><li><p>减少浏览器的重排和重绘的发生。</p></li><li><p>不要使用table布局。</p></li><li><p>css动画中尽量只使用transform和opacity，这不会发生重排和重绘。</p></li><li><p>尽可能地只使用css做动画。</p></li><li><p>避免浏览器的隐式合成。</p></li><li><p>改变复合层的尺寸。</p></li></ul><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><p>GPU合成主要参考：</p><p><a href="https://www.smashingmagazine.com/2016/12/gpu-animation-doing-it-right/">https://www.smashingmagazine…</a></p><p>哪些属性会引起reflow、repaint及composite，你可以在这个网站找到：</p><p><a href="https://csstriggers.com/">https://csstriggers.com/</a>。</p><p>**致谢** &gt; [黑色的影子](<a href="https://segmentfault.com/u/527990618">https://segmentfault.com/u/527990618</a>) ——《[一篇文章说清浏览器解析和CSS（GPU）动画优化](<a href="https://segmentfault.com/a/1190000008015671">https://segmentfault.com/a/1190000008015671</a>)》</p>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端性能优化（CSS动画篇）</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/48919/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/48919/</url>
      
        <content type="html"><![CDATA[<p>最近拜读了一下<a href="http://www.html5rocks.com/">html5rocks</a>上几位大神写的一篇关于CSS3动画性能优化的文章，学到了很多，在这里记录一下，其中的知识都是来源于这俩篇文章，我只是截取了其中比较关注的内容出来，原文地址<a href="http://www.html5rocks.com/en/tutorials/speed/high-performance-animations/">High Performance Animations</a>及<a href="http://www.html5rocks.com/zh/tutorials/speed/layers/">Accelerated Rendering in Chrome</a></p><h2 id="原理"><a class="markdownIt-Anchor" href="#原理"></a> 原理</h2><p>现代浏览器在使用CSS3动画时，以下四种情形绘制的效率较高，分别是：<br>* 改变位置<br>* 改变大小<br>* 旋转<br>* 改变透明度</p><h3 id="层重绘回流和重布局图层重组"><a class="markdownIt-Anchor" href="#层重绘回流和重布局图层重组"></a> 层？重绘？回流和重布局？图层重组？</h3><p>首先要了解CSS的图层的概念（Chrome浏览器）</p><p>浏览器在渲染一个页面时，会将页面分为很多个图层，图层有大有小，每个图层上有一个或多个节点。在渲染DOM的时候，浏览器所做的工作实际上是：<br>1. 获取DOM后分割为多个图层<br>2. 对每个图层的节点计算样式结果（Recalculate style–样式重计算）<br>3. 为每个节点生成图形和位置（Layout–回流和重布局）<br>4. 将每个节点绘制填充到图层位图中（Paint Setup和Paint–重绘）<br>5. 图层作为纹理上传至GPU<br>6. 符合多个图层到页面上生成最终屏幕图像（Composite Layers–图层重组）</p><p>Chrome中满足以下任意情况就会创建图层：<br>* 3D或透视变换（perspective transform）CSS属性<br>* 使用加速视频解码的<code>&lt;video&gt;</code>节点<br>* 拥有3D（WebGL）上下文或加速的2D上下文的<code>&lt;canvas&gt;</code>节点<br>* 混合插件（如Flash）<br>* 对自己的opacity做CSS动画或使用一个动画webkit变换的元素<br>* 拥有加速CSS过滤器的元素<br>* 元素有一个包含复合层的后代节点（一个元素拥有一个子元素，该子元素在自己的层里）<br>* 元素有一个<code>z-index</code>较低且包含一个复合层的兄弟元素（换句话说就是该元素在复合层上面渲染）</p><p>需要注意的是，如果图层中某个元素需要重绘，那么整个图层都需要重绘。比如一个图层包含很多节点，其中有个gif图，gif图的每一帧，都会重回整个图层的其他节点，然后生成最终的图层位图。所以这需要通过特殊的方式来强制gif图属于自己一个图层（<code>translateZ(0)</code>或者<code>translate3d(0,0,0)</code>），CSS3的动画也是一样（好在绝大部分情况浏览器自己会为CSS3动画的节点创建图层）</p><h3 id="层和css动画"><a class="markdownIt-Anchor" href="#层和css动画"></a> 层和CSS动画</h3><p>简化一下上述过程，每一帧动画浏览器可能需要做如下工作：<br>1. 计算需要被加载到节点上的样式结果（Recalculate style–样式重计算）<br>2. 为每个节点生成图形和位置（Layout–回流和重布局）<br>3. 将每个节点填充到图层中（Paint Setup和Paint–重绘）<br>4. 组合图层到页面上（Composite Layers–图层重组）</p><p>如果我们需要使得动画的性能提高，需要做的就是减少浏览器在动画运行时所需要做的工作。最好的情况是，改变的属性仅仅印象图层的组合，变换（<code>transform</code>）和透明度（<code>opacity</code>）就属于这种情况</p><p>现代浏览器如Chrome，Firefox，Safari和Opera都对变换和透明度采用硬件加速，但IE10+不是很确定是否硬件加速</p><h2 id="触发重布局的属性"><a class="markdownIt-Anchor" href="#触发重布局的属性"></a> 触发重布局的属性</h2><p>有些节点，当你改变他时，会需要重新布局（这也意味着需要重新计算其他被影响的节点的位置和大小）。这种情况下，被影响的DOM树越大（可见节点），重绘所需要的时间就会越长，而渲染一帧动画的时间也相应变长。所以需要尽力避免这些属性</p><p>一些常用的改变时会触发重布局的属性：<br>盒子模型相关属性会触发重布局：<br>* width<br>* height<br>* padding<br>* margin<br>* display<br>* border-width<br>* border<br>* min-height</p><p>定位属性及浮动也会触发重布局：<br>* top<br>* bottom<br>* left<br>* right<br>* position<br>* float<br>* clear</p><p>改变节点内部文字结构也会触发重布局：<br>* text-align<br>* overflow-y<br>* font-weight<br>* overflow<br>* font-family<br>* line-height<br>* vertival-align<br>* white-space<br>* font-size</p><p>这么多常用属性都会触发重布局，可以看到，他们的特点就是可能修改整个节点的大小或位置，所以会触发重布局</p><h3 id="别使用css类名做状态标记"><a class="markdownIt-Anchor" href="#别使用css类名做状态标记"></a> 别使用CSS类名做状态标记</h3><p>如果在网页中使用CSS的类来对节点做状态标记，当这些节点的状态标记类修改时，将会触发节点的重绘和重布局。所以在节点上使用CSS类来做状态比较是代价很昂贵的</p><h2 id="触发重绘的属性"><a class="markdownIt-Anchor" href="#触发重绘的属性"></a> 触发重绘的属性</h2><p>修改时只触发重绘的属性有：<br>* color<br>* border-style<br>* border-radius<br>* visibility<br>* text-decoration<br>* background<br>* background-image<br>* background-position<br>* background-repeat<br>* background-size<br>* outline-color<br>* outline<br>* outline-style<br>* outline-width<br>* box-shadow</p><p>这样可以看到，这些属性都不会修改节点的大小和位置，自然不会触发重布局，但是节点内部的渲染效果进行了改变，所以只需要重绘就可以了</p><h3 id="手机就算重绘也很慢"><a class="markdownIt-Anchor" href="#手机就算重绘也很慢"></a> 手机就算重绘也很慢</h3><p>在重绘时，这些节点会被加载到GPU中进行重绘，这对移动设备如手机的影响还是很大的。因为CPU不如台式机或笔记本电脑，所以绘画巫妖的时间更长。而且CPU与GPU之间的有较大的带宽限制，所以纹理的上传需要一定时间</p><h2 id="触发图层重组的属性"><a class="markdownIt-Anchor" href="#触发图层重组的属性"></a> 触发图层重组的属性</h2><h3 id="透明度竟然不会触发重绘"><a class="markdownIt-Anchor" href="#透明度竟然不会触发重绘"></a> 透明度竟然不会触发重绘？</h3><p>需要注意的是，上面那些触发重绘的属性里面没有<code>opacity</code>（透明度），很奇怪不是吗？实际上透明度的改变后，GPU在绘画时只是简单的降低之前已经画好的纹理的alpha值来达到效果，并不需要整体的重绘。不过这个前提是这个被修改<code>opacity</code>本身必须是一个图层，如果图层下还有其他节点，GPU也会将他们透明化</p><h3 id="强迫浏览器创建图层"><a class="markdownIt-Anchor" href="#强迫浏览器创建图层"></a> 强迫浏览器创建图层</h3><p>在Blink和WebKit的浏览器中，一当一个节点被设定了透明度的相关过渡效果或动画时，浏览器会将其作为一个单独的图层，但很多开发者使用<code>translateZ(0)</code>或者<code>translate3d(0,0,0)</code>去使浏览器创建图层。这种方式可以消除在动画开始之前的图层创建时间，使得动画尽快开始（创建图层和绘制图层还是比较慢的），而且不会随着抗锯齿而导出突变。不过这种方法需要节制，否则会因为创建过多的图层导致崩溃</p><h3 id="chrome中的抗锯齿"><a class="markdownIt-Anchor" href="#chrome中的抗锯齿"></a> Chrome中的抗锯齿</h3><p>Chrome中，非根图层以及透明图层使用grayscale antialiasing而不是subpixel antialiasing，如果抗锯齿方法变化，这个效果将会非常显著。如果你打算预处理一个节点而不打算等到动画开始，可以通过这种强迫浏览器创建图层的方式进行</p><h3 id="transform变换是你的选择"><a class="markdownIt-Anchor" href="#transform变换是你的选择"></a> transform变换是你的选择</h3><p>我们通过节点的<code>transform</code>可以修改节点的位置、旋转、大小等。我们平常会使用<code>left</code>和<code>top</code>属性来修改节点的位置，但正如上面所述，<code>left</code>和<code>top</code>会触发重布局，修改时的代价相当大。取而代之的更好方法是使用<code>translate</code>，这个不会触发重布局</p><h2 id="js动画和css3动画的比较"><a class="markdownIt-Anchor" href="#js动画和css3动画的比较"></a> JS动画和CSS3动画的比较</h2><p>我们经常面临一个抉择：是使用JavaScript的动画还是使用CSS的动画，下面将对比一下这两种方式</p><h3 id="js动画"><a class="markdownIt-Anchor" href="#js动画"></a> JS动画</h3><p>缺点：JavaScript在浏览器的主线程中运行，而其中还有很多其他需要运行的JavaScript、样式计算、布局、绘制等对其干扰。这也就导致了线程可能出现阻塞，从而造成丢帧的情况。</p><p>优点：JavaScript的动画与CSS预先定义好的动画不同，可以在其动画过程中对其进行控制：开始、暂停、回放、中止、取消都是可以做到的。而且一些动画效果，比如视差滚动效果，只有JavaScript能够完成</p><h3 id="css动画"><a class="markdownIt-Anchor" href="#css动画"></a> CSS动画</h3><p>缺点：缺乏强大的控制能力。而且很难以有意义的方式结合到一起，使得动画变得复杂且易于出问题。<br>优点：浏览器可以对动画进行优化。它必要时可以创建图层，然后在主线程之外运行。</p><h2 id="前瞻"><a class="markdownIt-Anchor" href="#前瞻"></a> 前瞻</h2><p>Google目前正在探究通过JS的多线程（Web Workers）来提供更好的动画效果，而不会触发重布局及样式重计算</p><h2 id="结论"><a class="markdownIt-Anchor" href="#结论"></a> 结论</h2><p>动画给予了页面丰富的视觉体验。我们应该尽力避免使用会触发重布局和重绘的属性，以免失帧。最好提前申明动画，这样能让浏览器提前对动画进行优化。由于GPU的参与，现在用来做动画的最好属性是如下几个：<br>* opacity<br>* translate<br>* rotate<br>* scale</p><p>也许会有一些新的方式使得可以使用JavaScript做出更好的没有限制的动画，而且不用担心主线程的阻塞问题。但在那之前，还是好好考虑下如何做出流畅的动画吧</p><p><strong>致谢：</strong><br>《<a href="https://segmentfault.com/u/lingyucoder">天镶</a>》<br>《<a href="https://segmentfault.com/a/1190000000490328">前端性能优化（CSS动画篇）</a>》</p>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++ string类成员函数汇总（超全）</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/21600/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/21600/</url>
      
        <content type="html"><![CDATA[<p>在定义 string 类对象时，string 类自身可以管理内存，程序员不必关注内存的分配细节。</p><p>string 类提供的各种操作函数大致分为八类：构造器和析构器、大小和容量、元素存取、字 符串比较、字符串修改、字符串接合、I/O 操作以及搜索和查找。</p><p>下表列出了 string 类的所有成员函数及它们的功能。</p><table><caption>表 1 string 类的所有成员函数</caption><tbody><tr><th>函数名称</th><th>功能</th></tr><tr><td>构造函数</td><td>产生或复制字符串</td></tr><tr><td>析构函数</td><td>销毁字符串</td></tr><tr><td>=，assign</td><td>赋以新值</td></tr><tr><td>Swap</td><td>交换两个字符串的内容</td></tr><tr><td>+ =，append( )，push_back()</td><td>添加字符</td></tr><tr><td>insert ()</td><td>插入字符</td></tr><tr><td>erase()</td><td>删除字符</td></tr><tr><td>clear ()</td><td>移除全部字符</td></tr><tr><td>resize ()</td><td>改变字符数量</td></tr><tr><td>replace()</td><td>替换字符</td></tr><tr><td>+</td><td>串联字符串</td></tr><tr><td>==，！&nbsp;=，&lt;，&lt;=，&gt;，&gt;=，compare()</td><td>比较字符串内容</td></tr><tr><td>size()，length()</td><td>返回字符数量</td></tr><tr><td>max_size ()</td><td>返回字符的最大可能个数</td></tr><tr><td>empty ()</td><td>判断字符串是否为空</td></tr><tr><td>capacity ()</td><td>返回重新分配之前的字符容量</td></tr><tr><td>reserve()</td><td>保留内存以存储一定数量的字符</td></tr><tr><td>[],at()</td><td>存取单一字符</td></tr><tr><td>&gt;&gt;，getline()</td><td>从 stream 中读取某值</td></tr><tr><td>&lt;&lt;</td><td>将值写入 stream</td></tr><tr><td>copy()</td><td>将内容复制为一个 C - string</td></tr><tr><td>c_str()</td><td>将内容以 C - string 形式返回</td></tr><tr><td>data()</td><td>将内容以字符数组形式返回</td></tr><tr><td>substr()</td><td>返回子字符串</td></tr><tr><td>find()</td><td>搜寻某子字符串或字符</td></tr><tr><td>begin( )，end()</td><td>提供正向迭代器支持</td></tr><tr><td>rbegin()，rend()</td><td>提供逆向迭代器支持</td></tr><tr><td>get_allocator()</td><td>返回配置器</td></tr></tbody></table><p><strong>致谢：</strong></p><blockquote><p><a href="http://c.biancheng.net/">C语言中文网</a>《<a href="http://c.biancheng.net/view/1441.html">C++ string类成员函数汇总（超全）</a>》</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>fatal: Cannot get https:// gerrit.googlesource.com /git-repo/clone.bundle</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/36453/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/36453/</url>
      
        <content type="html"><![CDATA[<p>在执行如下命令时</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">repo init -u  ssh:&#x2F;&#x2F;username@*****your address*******</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>出现如下错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">fatal: Cannot get https:&#x2F;&#x2F;gerrit.googlesource.com&#x2F;git-repo&#x2F;clone.bundle</span><br><span class="line">fatal: error [Errno 101] Network is unreachable</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>经过排查发现，基于repo的自更新机制，是TG的防火墙限制问题，repo无法访问到<code>https://gerrit.googlesource.com/git-repo/clone.bundle</code> 通过<code>sync</code>更新</p><h1 id="解决方案"><a class="markdownIt-Anchor" href="#解决方案"></a> 解决方案</h1><p>翻过去，自然就OK了（<strong>我采用的方案</strong>）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Get https:&#x2F;&#x2F;gerrit.googlesource.com&#x2F;git-repo&#x2F;clone.bundle</span><br><span class="line">Get https:&#x2F;&#x2F;gerrit.googlesource.com&#x2F;git-repo</span><br><span class="line">Get ssh:&#x2F;&#x2F;*************************-manifest</span><br><span class="line">remote: Counting objects: 62, done        </span><br><span class="line">remote: Finding sources: 100% (62&#x2F;62)           </span><br><span class="line">remote: Total 62 (delta 26), reused 60 (delta 26)        </span><br><span class="line">来自 ssh:&#x2F;&#x2F;192.168.*********************manifest</span><br><span class="line"> * [新分支]          master     -&gt; origin&#x2F;master</span><br><span class="line"></span><br><span class="line">Your identity is: ***************************</span><br><span class="line">If you want to change this, please re-run &#39;repo init&#39; with --config-name</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>另外一种方案（2018年12月13日尝试，成功解决），找到repo安装目录，更改<code>https://gerrit.googlesource.com/git-repo/clone.bundle</code>相关路径为国内清华源镜像即可。</p><p><code>--repo-url=https://gerrit-google.tuna.tsinghua.edu.cn/git-repo</code></p><p>即</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">leo@leo-weng:~$repo init-uXXXX.xml --repo-url:https:&#x2F;&#x2F;gerrit-google.tuna.tsinghua.edu.cn&#x2F;git-repo</span><br></pre></td></tr></table></figure><p>最终的repo文件内容为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line"></span><br><span class="line">## repo default configuration</span><br><span class="line">##</span><br><span class="line">REPO_URL &#x3D; &#39;https:&#x2F;&#x2F;aosp.tuna.tsinghua.edu.cn&#x2F;git-repo&#39;</span><br><span class="line">REPO_REV &#x3D; &#39;stable&#39;</span><br><span class="line"></span><br><span class="line"># Copyright (C) 2008 Google Inc.</span><br><span class="line">#</span><br><span class="line"># Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span><br><span class="line"># you may not use this file except in compliance with the License.</span><br><span class="line"># You may obtain a copy of the License at</span><br><span class="line">#</span><br><span class="line">#      http:&#x2F;&#x2F;www.apache.org&#x2F;licenses&#x2F;LICENSE-2.0</span><br><span class="line">#</span><br><span class="line"># Unless required by applicable law or agreed to in writing, software</span><br><span class="line"># distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="line"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="line"># See the License for the specific language governing permissions and</span><br><span class="line"># limitations under the License.</span><br><span class="line"></span><br><span class="line"># increment this whenever we make important changes to this script</span><br><span class="line">VERSION &#x3D; (1, 22)</span><br><span class="line"></span><br><span class="line"># increment this if the MAINTAINER_KEYS block is modified</span><br><span class="line">KEYRING_VERSION &#x3D; (1, 2)</span><br><span class="line">MAINTAINER_KEYS &#x3D; &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">     Repo Maintainer &lt;repo@android.kernel.org&gt;</span><br><span class="line">-----BEGIN PGP PUBLIC KEY BLOCK-----</span><br><span class="line">Version: GnuPG v1.4.2.2 (GNU&#x2F;Linux)</span><br><span class="line"></span><br><span class="line">mQGiBEj3ugERBACrLJh&#x2F;ZPyVSKeClMuznFIrsQ+hpNnmJGw1a9GXKYKk8qHPhAZf</span><br><span class="line">WKtrBqAVMNRLhL85oSlekRz98u41H5si5zcuv+IXJDF5MJYcB8f22wAy15lUqPWi</span><br><span class="line">VCkk1l8qqLiuW0fo+ZkPY5qOgrvc0HW1SmdH649uNwqCbcKb6CxaTxzhOwCgj3AP</span><br><span class="line">xI1WfzLqdJjsm1Nq98L0cLcD&#x2F;iNsILCuw44PRds3J75YP0pze7YF&#x2F;6WFMB6QSFGu</span><br><span class="line">aUX1FsTTztKNXGms8i5b2l1B8JaLRWq&#x2F;jOnZzyl1zrUJhkc0JgyZW5oNLGyWGhKD</span><br><span class="line">Fxp5YpHuIuMImopWEMFIRQNrvlg+YVK8t3FpdI1RY0LYqha8pPzANhEYgSfoVzOb</span><br><span class="line">fbfbA&#x2F;4ioOrxy8ifSoga7ITyZMA+XbW8bx33WXutO9N7SPKS&#x2F;AK2JpasSEVLZcON</span><br><span class="line">ae5hvAEGVXKxVPDjJBmIc2cOe7kOKSi3OxLzBqrjS2rnjiP4o0ekhZIe4+ocwVOg</span><br><span class="line">e0PLlH5avCqihGRhpoqDRsmpzSHzJIxtoeb+GgGEX8KkUsVAhbQpUmVwbyBNYWlu</span><br><span class="line">dGFpbmVyIDxyZXBvQGFuZHJvaWQua2VybmVsLm9yZz6IYAQTEQIAIAUCSPe6AQIb</span><br><span class="line">AwYLCQgHAwIEFQIIAwQWAgMBAh4BAheAAAoJEBZTDV6SD1xl1GEAn0x&#x2F;OKQpy7qI</span><br><span class="line">6G73NJviU0IUMtftAKCFMUhGb&#x2F;0bZvQ8Rm3QCUpWHyEIu7kEDQRI97ogEBAA2wI6</span><br><span class="line">5fs9y&#x2F;rMwD6dkD&#x2F;vK9v4C9mOn1IL5JCPYMJBVSci+9ED4ChzYvfq7wOcj9qIvaE0</span><br><span class="line">GwCt2ar7Q56me5J+byhSb32Rqsw&#x2F;r3Vo5cZMH80N4cjesGuSXOGyEWTe4HYoxnHv</span><br><span class="line">gF4EKI2LK7xfTUcxMtlyn52sUpkfKsCpUhFvdmbAiJE+jCkQZr1Z8u2KphV79Ou+</span><br><span class="line">P1N5IXY&#x2F;XWOlq48Qf4MWCYlJFrB07xjUjLKMPDNDnm58L5byDrP&#x2F;eHysKexpbakL</span><br><span class="line">xCmYyfT6DV1SWLblpd2hie0sL3YejdtuBMYMS2rI7Yxb8kGuqkz+9l1qhwJtei94</span><br><span class="line">5MaretDy&#x2F;d&#x2F;JH&#x2F;pRYkRf7L+ke7dpzrP+aJmcz9P1e6gq4NJsWejaALVASBiioqNf</span><br><span class="line">QmtqSVzF1wkR5avZkFHuYvj6V&#x2F;t1RrOZTXxkSk18KFMJRBZrdHFCWbc5qrVxUB6e</span><br><span class="line">N5pja0NFIUCigLBV1c6I2DwiuboMNh18VtJJh+nwWeez&#x2F;RueN4ig59gRTtkcc0PR</span><br><span class="line">35tX2DR8+xCCFVW&#x2F;NcJ4PSePYzCuuLvp1vEDHnj41R52Fz51hgddT4rBsp0nL+5I</span><br><span class="line">socSOIIezw8T9vVzMY4ArCKFAVu2IVyBcahTfBS8q5EM63mONU6UVJEozfGljiMw</span><br><span class="line">xuQ7JwKcw0AUEKTKG7aBgBaTAgT8TOevpvlw91cAAwUP&#x2F;jRkyVi&#x2F;0WAb0qlEaq&#x2F;S</span><br><span class="line">ouWxX1faR+vU3b+Y2&#x2F;DGjtXQMzG0qpetaTHC&#x2F;AxxHpgt&#x2F;dCkWI6ljYDnxgPLwG0a</span><br><span class="line">Oasm94BjZc6vZwf1opFZUKsjOAAxRxNZyjUJKe4UZVuMTk6zo27Nt3LMnc0FO47v</span><br><span class="line">FcOjRyquvgNOS818irVHUf12waDx8gszKxQTTtFxU5&#x2F;ePB2jZmhP6oXSe4K&#x2F;LG5T</span><br><span class="line">+WBRPDrHiGPhCzJRzm9BP0lTnGCAj3o9W90STZa65RK7IaYpC8TB35JTBEbrrNCp</span><br><span class="line">w6lzd74LnNEp5eMlKDnXzUAgAH0yzCQeMl7t33QCdYx2hRs2wtTQSjGfAiNmj&#x2F;WW</span><br><span class="line">Vl5Jn+2jCDnRLenKHwVRFsBX2e0BiRWt&#x2F;i9Y8fjorLCXVj4z+7yW6DawdLkJorEo</span><br><span class="line">p3v5ILwfC7hVx4jHSnOgZ65L9s8EQdVr1ckN9243yta7rNgwfcqb60ILMFF1BRk&#x2F;</span><br><span class="line">0V7wCL+68UwwiQDvyMOQuqkysKLSDCLb7BFcyA7j6KG+5hpsREstFX2wK1yKeraz</span><br><span class="line">5xGrFy8tfAaeBMIQ17gvFSp&#x2F;suc9DYO0ICK2BISzq+F+ZiAKsjMYOBNdH&#x2F;h0zobQ</span><br><span class="line">HTHs37+&#x2F;QLMomGEGKZMWi0dShU2J5mNRQu3Hhxl3hHDVbt5CeJBb26aQcQrFz69W</span><br><span class="line">zE3GNvmJosh6leayjtI9P2A6iEkEGBECAAkFAkj3uiACGwwACgkQFlMNXpIPXGWp</span><br><span class="line">TACbBS+Up3RpfYVfd63c1cDdlru13pQAn3NQy&#x2F;SN858MkxN+zym86UBgOad2</span><br><span class="line">&#x3D;CMiZ</span><br><span class="line">-----END PGP PUBLIC KEY BLOCK-----</span><br><span class="line"></span><br><span class="line">     Conley Owens &lt;cco3@android.com&gt;</span><br><span class="line">-----BEGIN PGP PUBLIC KEY BLOCK-----</span><br><span class="line">Version: GnuPG v1.4.11 (GNU&#x2F;Linux)</span><br><span class="line"></span><br><span class="line">mQENBFHRvc8BCADFg45Xx&#x2F;y6QDC+T7Y&#x2F;gGc7vx0ww7qfOwIKlAZ9xG3qKunMxo+S</span><br><span class="line">hPCnzEl3cq+6I1Ww&#x2F;ndop&#x2F;HB3N3toPXRCoN8Vs4&#x2F;Hc7by+SnaLFnacrm+tV5&#x2F;OgT</span><br><span class="line">V37Lzt8lhay1Kl+YfpFwHYYpIEBLFV9knyfRXS&#x2F;428W2qhdzYfvB15&#x2F;AasRmwmor</span><br><span class="line">py4NIzSs8UD&#x2F;SPr1ihqNCdZM76+MQyN5HMYXW&#x2F;ALZXUFG0pwluHFA7hrfPG74i8C</span><br><span class="line">zMiP7qvMWIl&#x2F;r&#x2F;jtzHioH1dRKgbod+LZsrDJ8mBaqsZaDmNJMhss9g76XvfMyLra</span><br><span class="line">9DI9&#x2F;iFuBpGzeqBv0hwOGQspLRrEoyTeR6n1ABEBAAG0H0NvbmxleSBPd2VucyA8</span><br><span class="line">Y2NvM0BhbmRyb2lkLmNvbT6JATgEEwECACIFAlHRvc8CGwMGCwkIBwMCBhUIAgkK</span><br><span class="line">CwQWAgMBAh4BAheAAAoJEGe35EhpKzgsP6AIAJKJmNtn4l7hkYHKHFSo3egb6RjQ</span><br><span class="line">zEIP3MFTcu8HFX1kF1ZFbrp7xqurLaE53kEkKuAAvjJDAgI8mcZHP1JyplubqjQA</span><br><span class="line">xvv84gK+OGP3Xk+QK1ZjUQSbjOpjEiSZpRhWcHci3dgOUH4blJfByHw25hlgHowd</span><br><span class="line">a&#x2F;2PrNKZVcJ92YienaxxGjcXEUcd0uYEG2+rwllQigFcnMFDhr9B71MfalRHjFKE</span><br><span class="line">fmdoypqLrri61YBc59P88Rw2&#x2F;WUpTQjgNubSqa3A2+CKdaRyaRw+2fdF4TdR0h8W</span><br><span class="line">zbg+lbaPtJHsV+3mJC7fq26MiJDRJa5ZztpMn8su20gbLgi2ShBOaHAYDDi5AQ0E</span><br><span class="line">UdG9zwEIAMoOBq+QLNozAhxOOl5GL3StTStGRgPRXINfmViTsihrqGCWBBUfXlUE</span><br><span class="line">OytC0mYcrDUQev&#x2F;8ToVoyqw+iGSwDkcSXkrEUCKFtHV&#x2F;GECWtk1keyHgR10YKI1R</span><br><span class="line">mquSXoubWGqPeG1PAI74XWaRx8UrL8uCXUtmD8Q5J7mDjKR5NpxaXrwlA0bKsf2E</span><br><span class="line">Gp9tu1kKauuToZhWHMRMqYSOGikQJwWSFYKT1KdNcOXLQF6+bfoJ6sjVYdwfmNQL</span><br><span class="line">Ixn8QVhoTDedcqClSWB17VDEFDFa7MmqXZz2qtM3X1R&#x2F;MUMHqPtegQzBGNhRdnI2</span><br><span class="line">V45+1Nnx&#x2F;uuCxDbeI4RbHzujnxDiq70AEQEAAYkBHwQYAQIACQUCUdG9zwIbDAAK</span><br><span class="line">CRBnt+RIaSs4LNVeB&#x2F;0Y2pZ8I7gAAcEM0Xw8drr4omg2fUoK1J33ozlA&#x2F;RxeA&#x2F;lJ</span><br><span class="line">I3KnyCDTpXuIeBKPGkdL8uMATC9Z8DnBBajRlftNDVZS3Hz4G09G9QpMojvJkFJV</span><br><span class="line">By+01Flw&#x2F;X+eeN8NpqSuLV4W+AjEO8at&#x2F;VvgKr1AFvBRdZ7GkpI1o6DgPe7ZqX+1</span><br><span class="line">dzQZt3e13W0rVBb&#x2F;bUgx9iSLoeWP3aq&#x2F;k+&#x2F;GRGOR+S6F6BBSl0SQ2EF2+dIywb1x</span><br><span class="line">JuinEP+AwLAUZ1Bsx9ISC0Agpk2VeHXPL3FGhroEmoMvBzO0kTFGyoeT7PR&#x2F;BfKv</span><br><span class="line">+H&#x2F;g3HsL2LOB9uoIm8&#x2F;5p2TTU5ttYCXMHhQZ81AY</span><br><span class="line">&#x3D;AUp4</span><br><span class="line">-----END PGP PUBLIC KEY BLOCK-----</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">GIT &#x3D; &#39;git&#39;                     # our git command</span><br><span class="line">MIN_GIT_VERSION &#x3D; (1, 7, 2)     # minimum supported git version</span><br><span class="line">repodir &#x3D; &#39;.repo&#39;               # name of repo&#39;s private directory</span><br><span class="line">S_repo &#x3D; &#39;repo&#39;                 # special repo repository</span><br><span class="line">S_manifests &#x3D; &#39;manifests&#39;       # special manifest repository</span><br><span class="line">REPO_MAIN &#x3D; S_repo + &#39;&#x2F;main.py&#39; # main script</span><br><span class="line">MIN_PYTHON_VERSION &#x3D; (2, 6)     # minimum supported python version</span><br><span class="line">GITC_CONFIG_FILE &#x3D; &#39;&#x2F;gitc&#x2F;.config&#39;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import errno</span><br><span class="line">import optparse</span><br><span class="line">import os</span><br><span class="line">import re</span><br><span class="line">import shutil</span><br><span class="line">import stat</span><br><span class="line">import subprocess</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line">if sys.version_info[0] &#x3D;&#x3D; 3:</span><br><span class="line">  import urllib.request</span><br><span class="line">  import urllib.error</span><br><span class="line">else:</span><br><span class="line">  import imp</span><br><span class="line">  import urllib2</span><br><span class="line">  urllib &#x3D; imp.new_module(&#39;urllib&#39;)</span><br><span class="line">  urllib.request &#x3D; urllib2</span><br><span class="line">  urllib.error &#x3D; urllib2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def _print(*objects, **kwargs):</span><br><span class="line">  sep &#x3D; kwargs.get(&#39;sep&#39;, &#39; &#39;)</span><br><span class="line">  end &#x3D; kwargs.get(&#39;end&#39;, &#39;\n&#39;)</span><br><span class="line">  out &#x3D; kwargs.get(&#39;file&#39;, sys.stdout)</span><br><span class="line">  out.write(sep.join(objects) + end)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Python version check</span><br><span class="line">ver &#x3D; sys.version_info</span><br><span class="line">if (ver[0], ver[1]) &lt; MIN_PYTHON_VERSION:</span><br><span class="line">  _print(&#39;error: Python version %s unsupported.\n&#39;</span><br><span class="line">         &#39;Please use Python 2.6 - 2.7 instead.&#39;</span><br><span class="line">         % sys.version.split(&#39; &#39;)[0], file&#x3D;sys.stderr)</span><br><span class="line">  sys.exit(1)</span><br><span class="line"></span><br><span class="line">home_dot_repo &#x3D; os.path.expanduser(&#39;~&#x2F;.repoconfig&#39;)</span><br><span class="line">gpg_dir &#x3D; os.path.join(home_dot_repo, &#39;gnupg&#39;)</span><br><span class="line"></span><br><span class="line">extra_args &#x3D; []</span><br><span class="line">init_optparse &#x3D; optparse.OptionParser(usage&#x3D;&quot;repo init -u url [options]&quot;)</span><br><span class="line"></span><br><span class="line"># Logging</span><br><span class="line">group &#x3D; init_optparse.add_option_group(&#39;Logging options&#39;)</span><br><span class="line">group.add_option(&#39;-q&#39;, &#39;--quiet&#39;,</span><br><span class="line">                 dest&#x3D;&quot;quiet&quot;, action&#x3D;&quot;store_true&quot;, default&#x3D;False,</span><br><span class="line">                 help&#x3D;&quot;be quiet&quot;)</span><br><span class="line"></span><br><span class="line"># Manifest</span><br><span class="line">group &#x3D; init_optparse.add_option_group(&#39;Manifest options&#39;)</span><br><span class="line">group.add_option(&#39;-u&#39;, &#39;--manifest-url&#39;,</span><br><span class="line">                 dest&#x3D;&#39;manifest_url&#39;,</span><br><span class="line">                 help&#x3D;&#39;manifest repository location&#39;, metavar&#x3D;&#39;URL&#39;)</span><br><span class="line">group.add_option(&#39;-b&#39;, &#39;--manifest-branch&#39;,</span><br><span class="line">                 dest&#x3D;&#39;manifest_branch&#39;,</span><br><span class="line">                 help&#x3D;&#39;manifest branch or revision&#39;, metavar&#x3D;&#39;REVISION&#39;)</span><br><span class="line">group.add_option(&#39;-m&#39;, &#39;--manifest-name&#39;,</span><br><span class="line">                 dest&#x3D;&#39;manifest_name&#39;,</span><br><span class="line">                 help&#x3D;&#39;initial manifest file&#39;, metavar&#x3D;&#39;NAME.xml&#39;)</span><br><span class="line">group.add_option(&#39;--mirror&#39;,</span><br><span class="line">                 dest&#x3D;&#39;mirror&#39;, action&#x3D;&#39;store_true&#39;,</span><br><span class="line">                 help&#x3D;&#39;create a replica of the remote repositories &#39;</span><br><span class="line">                      &#39;rather than a client working directory&#39;)</span><br><span class="line">group.add_option(&#39;--reference&#39;,</span><br><span class="line">                 dest&#x3D;&#39;reference&#39;,</span><br><span class="line">                 help&#x3D;&#39;location of mirror directory&#39;, metavar&#x3D;&#39;DIR&#39;)</span><br><span class="line">group.add_option(&#39;--depth&#39;, type&#x3D;&#39;int&#39;, default&#x3D;None,</span><br><span class="line">                 dest&#x3D;&#39;depth&#39;,</span><br><span class="line">                 help&#x3D;&#39;create a shallow clone with given depth; see git clone&#39;)</span><br><span class="line">group.add_option(&#39;--archive&#39;,</span><br><span class="line">                 dest&#x3D;&#39;archive&#39;, action&#x3D;&#39;store_true&#39;,</span><br><span class="line">                 help&#x3D;&#39;checkout an archive instead of a git repository for &#39;</span><br><span class="line">                      &#39;each project. See git archive.&#39;)</span><br><span class="line">group.add_option(&#39;-g&#39;, &#39;--groups&#39;,</span><br><span class="line">                 dest&#x3D;&#39;groups&#39;, default&#x3D;&#39;default&#39;,</span><br><span class="line">                 help&#x3D;&#39;restrict manifest projects to ones with specified &#39;</span><br><span class="line">                      &#39;group(s) [default|all|G1,G2,G3|G4,-G5,-G6]&#39;,</span><br><span class="line">                 metavar&#x3D;&#39;GROUP&#39;)</span><br><span class="line">group.add_option(&#39;-p&#39;, &#39;--platform&#39;,</span><br><span class="line">                 dest&#x3D;&#39;platform&#39;, default&#x3D;&quot;auto&quot;,</span><br><span class="line">                 help&#x3D;&#39;restrict manifest projects to ones with a specified &#39;</span><br><span class="line">                      &#39;platform group [auto|all|none|linux|darwin|...]&#39;,</span><br><span class="line">                 metavar&#x3D;&#39;PLATFORM&#39;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Tool</span><br><span class="line">group &#x3D; init_optparse.add_option_group(&#39;repo Version options&#39;)</span><br><span class="line">group.add_option(&#39;--repo-url&#39;,</span><br><span class="line">                 dest&#x3D;&#39;repo_url&#39;,</span><br><span class="line">                 help&#x3D;&#39;repo repository location&#39;, metavar&#x3D;&#39;URL&#39;)</span><br><span class="line">group.add_option(&#39;--repo-branch&#39;,</span><br><span class="line">                 dest&#x3D;&#39;repo_branch&#39;,</span><br><span class="line">                 help&#x3D;&#39;repo branch or revision&#39;, metavar&#x3D;&#39;REVISION&#39;)</span><br><span class="line">group.add_option(&#39;--no-repo-verify&#39;,</span><br><span class="line">                 dest&#x3D;&#39;no_repo_verify&#39;, action&#x3D;&#39;store_true&#39;,</span><br><span class="line">                 help&#x3D;&#39;do not verify repo source code&#39;)</span><br><span class="line"></span><br><span class="line"># Other</span><br><span class="line">group &#x3D; init_optparse.add_option_group(&#39;Other options&#39;)</span><br><span class="line">group.add_option(&#39;--config-name&#39;,</span><br><span class="line">                 dest&#x3D;&#39;config_name&#39;, action&#x3D;&quot;store_true&quot;, default&#x3D;False,</span><br><span class="line">                 help&#x3D;&#39;Always prompt for name&#x2F;e-mail&#39;)</span><br><span class="line"></span><br><span class="line">def _GitcInitOptions(init_optparse):</span><br><span class="line">  init_optparse.set_usage(&quot;repo gitc-init -u url -c client [options]&quot;)</span><br><span class="line">  g &#x3D; init_optparse.add_option_group(&#39;GITC options&#39;)</span><br><span class="line">  g.add_option(&#39;-f&#39;, &#39;--manifest-file&#39;,</span><br><span class="line">               dest&#x3D;&#39;manifest_file&#39;,</span><br><span class="line">               help&#x3D;&#39;Optional manifest file to use for this GITC client.&#39;)</span><br><span class="line">  g.add_option(&#39;-c&#39;, &#39;--gitc-client&#39;,</span><br><span class="line">               dest&#x3D;&#39;gitc_client&#39;,</span><br><span class="line">               help&#x3D;&#39;The name for the new gitc_client instance.&#39;)</span><br><span class="line"></span><br><span class="line">_gitc_manifest_dir &#x3D; None</span><br><span class="line">def get_gitc_manifest_dir():</span><br><span class="line">  global _gitc_manifest_dir</span><br><span class="line">  if _gitc_manifest_dir is None:</span><br><span class="line">    _gitc_manifest_dir &#x3D; &#39;&#39;</span><br><span class="line">    try:</span><br><span class="line">      with open(GITC_CONFIG_FILE, &#39;r&#39;) as gitc_config:</span><br><span class="line">        for line in gitc_config:</span><br><span class="line">          match &#x3D; re.match(&#39;gitc_dir&#x3D;(?P&lt;gitc_manifest_dir&gt;.*)&#39;, line)</span><br><span class="line">          if match:</span><br><span class="line">            _gitc_manifest_dir &#x3D; match.group(&#39;gitc_manifest_dir&#39;)</span><br><span class="line">    except IOError:</span><br><span class="line">      pass</span><br><span class="line">  return _gitc_manifest_dir</span><br><span class="line"></span><br><span class="line">class CloneFailure(Exception):</span><br><span class="line">  &quot;&quot;&quot;Indicate the remote clone of repo itself failed.</span><br><span class="line">  &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def _Init(args, gitc_init&#x3D;False):</span><br><span class="line">  &quot;&quot;&quot;Installs repo by cloning it over the network.</span><br><span class="line">  &quot;&quot;&quot;</span><br><span class="line">  if gitc_init:</span><br><span class="line">    _GitcInitOptions(init_optparse)</span><br><span class="line">  opt, args &#x3D; init_optparse.parse_args(args)</span><br><span class="line">  if args:</span><br><span class="line">    init_optparse.print_usage()</span><br><span class="line">    sys.exit(1)</span><br><span class="line"></span><br><span class="line">  url &#x3D; opt.repo_url</span><br><span class="line">  if not url:</span><br><span class="line">    url &#x3D; REPO_URL</span><br><span class="line">    extra_args.append(&#39;--repo-url&#x3D;%s&#39; % url)</span><br><span class="line"></span><br><span class="line">  branch &#x3D; opt.repo_branch</span><br><span class="line">  if not branch:</span><br><span class="line">    branch &#x3D; REPO_REV</span><br><span class="line">    extra_args.append(&#39;--repo-branch&#x3D;%s&#39; % branch)</span><br><span class="line"></span><br><span class="line">  if branch.startswith(&#39;refs&#x2F;heads&#x2F;&#39;):</span><br><span class="line">    branch &#x3D; branch[len(&#39;refs&#x2F;heads&#x2F;&#39;):]</span><br><span class="line">  if branch.startswith(&#39;refs&#x2F;&#39;):</span><br><span class="line">    _print(&quot;fatal: invalid branch name &#39;%s&#39;&quot; % branch, file&#x3D;sys.stderr)</span><br><span class="line">    raise CloneFailure()</span><br><span class="line"></span><br><span class="line">  try:</span><br><span class="line">    if gitc_init:</span><br><span class="line">      gitc_manifest_dir &#x3D; get_gitc_manifest_dir()</span><br><span class="line">      if not gitc_manifest_dir:</span><br><span class="line">        _print(&#39;fatal: GITC filesystem is not available. Exiting...&#39;,</span><br><span class="line">               file&#x3D;sys.stderr)</span><br><span class="line">        sys.exit(1)</span><br><span class="line">      if not opt.gitc_client:</span><br><span class="line">        _print(&#39;fatal: GITC client (-c) is required.&#39;, file&#x3D;sys.stderr)</span><br><span class="line">        sys.exit(1)</span><br><span class="line">      client_dir &#x3D; os.path.join(gitc_manifest_dir, opt.gitc_client)</span><br><span class="line">      if not os.path.exists(client_dir):</span><br><span class="line">        os.makedirs(client_dir)</span><br><span class="line">      os.chdir(client_dir)</span><br><span class="line">      if os.path.exists(repodir):</span><br><span class="line">        # This GITC Client has already initialized repo so continue.</span><br><span class="line">        return</span><br><span class="line"></span><br><span class="line">    os.mkdir(repodir)</span><br><span class="line">  except OSError as e:</span><br><span class="line">    if e.errno !&#x3D; errno.EEXIST:</span><br><span class="line">      _print(&#39;fatal: cannot make %s directory: %s&#39;</span><br><span class="line">             % (repodir, e.strerror), file&#x3D;sys.stderr)</span><br><span class="line">      # Don&#39;t raise CloneFailure; that would delete the</span><br><span class="line">      # name. Instead exit immediately.</span><br><span class="line">      #</span><br><span class="line">      sys.exit(1)</span><br><span class="line"></span><br><span class="line">  _CheckGitVersion()</span><br><span class="line">  try:</span><br><span class="line">    if NeedSetupGnuPG():</span><br><span class="line">      can_verify &#x3D; SetupGnuPG(opt.quiet)</span><br><span class="line">    else:</span><br><span class="line">      can_verify &#x3D; True</span><br><span class="line"></span><br><span class="line">    dst &#x3D; os.path.abspath(os.path.join(repodir, S_repo))</span><br><span class="line">    _Clone(url, dst, opt.quiet)</span><br><span class="line"></span><br><span class="line">    if can_verify and not opt.no_repo_verify:</span><br><span class="line">      rev &#x3D; _Verify(dst, branch, opt.quiet)</span><br><span class="line">    else:</span><br><span class="line">      rev &#x3D; &#39;refs&#x2F;remotes&#x2F;origin&#x2F;%s^0&#39; % branch</span><br><span class="line"></span><br><span class="line">    _Checkout(dst, branch, rev, opt.quiet)</span><br><span class="line">  except CloneFailure:</span><br><span class="line">    if opt.quiet:</span><br><span class="line">      _print(&#39;fatal: repo init failed; run without --quiet to see why&#39;,</span><br><span class="line">             file&#x3D;sys.stderr)</span><br><span class="line">    raise</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def ParseGitVersion(ver_str):</span><br><span class="line">  if not ver_str.startswith(&#39;git version &#39;):</span><br><span class="line">    return None</span><br><span class="line"></span><br><span class="line">  num_ver_str &#x3D; ver_str[len(&#39;git version &#39;):].strip().split(&#39;-&#39;)[0]</span><br><span class="line">  to_tuple &#x3D; []</span><br><span class="line">  for num_str in num_ver_str.split(&#39;.&#39;)[:3]:</span><br><span class="line">    if num_str.isdigit():</span><br><span class="line">      to_tuple.append(int(num_str))</span><br><span class="line">    else:</span><br><span class="line">      to_tuple.append(0)</span><br><span class="line">  return tuple(to_tuple)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def _CheckGitVersion():</span><br><span class="line">  cmd &#x3D; [GIT, &#39;--version&#39;]</span><br><span class="line">  try:</span><br><span class="line">    proc &#x3D; subprocess.Popen(cmd, stdout&#x3D;subprocess.PIPE)</span><br><span class="line">  except OSError as e:</span><br><span class="line">    _print(file&#x3D;sys.stderr)</span><br><span class="line">    _print(&quot;fatal: &#39;%s&#39; is not available&quot; % GIT, file&#x3D;sys.stderr)</span><br><span class="line">    _print(&#39;fatal: %s&#39; % e, file&#x3D;sys.stderr)</span><br><span class="line">    _print(file&#x3D;sys.stderr)</span><br><span class="line">    _print(&#39;Please make sure %s is installed and in your path.&#39; % GIT,</span><br><span class="line">           file&#x3D;sys.stderr)</span><br><span class="line">    raise CloneFailure()</span><br><span class="line"></span><br><span class="line">  ver_str &#x3D; proc.stdout.read().strip()</span><br><span class="line">  proc.stdout.close()</span><br><span class="line">  proc.wait()</span><br><span class="line"></span><br><span class="line">  ver_act &#x3D; ParseGitVersion(ver_str)</span><br><span class="line">  if ver_act is None:</span><br><span class="line">    _print(&#39;error: &quot;%s&quot; unsupported&#39; % ver_str, file&#x3D;sys.stderr)</span><br><span class="line">    raise CloneFailure()</span><br><span class="line"></span><br><span class="line">  if ver_act &lt; MIN_GIT_VERSION:</span><br><span class="line">    need &#x3D; &#39;.&#39;.join(map(str, MIN_GIT_VERSION))</span><br><span class="line">    _print(&#39;fatal: git %s or later required&#39; % need, file&#x3D;sys.stderr)</span><br><span class="line">    raise CloneFailure()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def NeedSetupGnuPG():</span><br><span class="line">  if not os.path.isdir(home_dot_repo):</span><br><span class="line">    return True</span><br><span class="line"></span><br><span class="line">  kv &#x3D; os.path.join(home_dot_repo, &#39;keyring-version&#39;)</span><br><span class="line">  if not os.path.exists(kv):</span><br><span class="line">    return True</span><br><span class="line"></span><br><span class="line">  kv &#x3D; open(kv).read()</span><br><span class="line">  if not kv:</span><br><span class="line">    return True</span><br><span class="line"></span><br><span class="line">  kv &#x3D; tuple(map(int, kv.split(&#39;.&#39;)))</span><br><span class="line">  if kv &lt; KEYRING_VERSION:</span><br><span class="line">    return True</span><br><span class="line">  return False</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def SetupGnuPG(quiet):</span><br><span class="line">  try:</span><br><span class="line">    os.mkdir(home_dot_repo)</span><br><span class="line">  except OSError as e:</span><br><span class="line">    if e.errno !&#x3D; errno.EEXIST:</span><br><span class="line">      _print(&#39;fatal: cannot make %s directory: %s&#39;</span><br><span class="line">             % (home_dot_repo, e.strerror), file&#x3D;sys.stderr)</span><br><span class="line">      sys.exit(1)</span><br><span class="line"></span><br><span class="line">  try:</span><br><span class="line">    os.mkdir(gpg_dir, stat.S_IRWXU)</span><br><span class="line">  except OSError as e:</span><br><span class="line">    if e.errno !&#x3D; errno.EEXIST:</span><br><span class="line">      _print(&#39;fatal: cannot make %s directory: %s&#39; % (gpg_dir, e.strerror),</span><br><span class="line">             file&#x3D;sys.stderr)</span><br><span class="line">      sys.exit(1)</span><br><span class="line"></span><br><span class="line">  env &#x3D; os.environ.copy()</span><br><span class="line">  env[&#39;GNUPGHOME&#39;] &#x3D; gpg_dir.encode()</span><br><span class="line"></span><br><span class="line">  cmd &#x3D; [&#39;gpg&#39;, &#39;--import&#39;]</span><br><span class="line">  try:</span><br><span class="line">    proc &#x3D; subprocess.Popen(cmd,</span><br><span class="line">                            env &#x3D; env,</span><br><span class="line">                            stdin &#x3D; subprocess.PIPE)</span><br><span class="line">  except OSError as e:</span><br><span class="line">    if not quiet:</span><br><span class="line">      _print(&#39;warning: gpg (GnuPG) is not available.&#39;, file&#x3D;sys.stderr)</span><br><span class="line">      _print(&#39;warning: Installing it is strongly encouraged.&#39;, file&#x3D;sys.stderr)</span><br><span class="line">      _print(file&#x3D;sys.stderr)</span><br><span class="line">    return False</span><br><span class="line"></span><br><span class="line">  proc.stdin.write(MAINTAINER_KEYS)</span><br><span class="line">  proc.stdin.close()</span><br><span class="line"></span><br><span class="line">  if proc.wait() !&#x3D; 0:</span><br><span class="line">    _print(&#39;fatal: registering repo maintainer keys failed&#39;, file&#x3D;sys.stderr)</span><br><span class="line">    sys.exit(1)</span><br><span class="line">  _print()</span><br><span class="line"></span><br><span class="line">  fd &#x3D; open(os.path.join(home_dot_repo, &#39;keyring-version&#39;), &#39;w&#39;)</span><br><span class="line">  fd.write(&#39;.&#39;.join(map(str, KEYRING_VERSION)) + &#39;\n&#39;)</span><br><span class="line">  fd.close()</span><br><span class="line">  return True</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def _SetConfig(local, name, value):</span><br><span class="line">  &quot;&quot;&quot;Set a git configuration option to the specified value.</span><br><span class="line">  &quot;&quot;&quot;</span><br><span class="line">  cmd &#x3D; [GIT, &#39;config&#39;, name, value]</span><br><span class="line">  if subprocess.Popen(cmd, cwd &#x3D; local).wait() !&#x3D; 0:</span><br><span class="line">    raise CloneFailure()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def _InitHttp():</span><br><span class="line">  handlers &#x3D; []</span><br><span class="line"></span><br><span class="line">  mgr &#x3D; urllib.request.HTTPPasswordMgrWithDefaultRealm()</span><br><span class="line">  try:</span><br><span class="line">    import netrc</span><br><span class="line">    n &#x3D; netrc.netrc()</span><br><span class="line">    for host in n.hosts:</span><br><span class="line">      p &#x3D; n.hosts[host]</span><br><span class="line">      mgr.add_password(p[1], &#39;http:&#x2F;&#x2F;%s&#x2F;&#39;  % host, p[0], p[2])</span><br><span class="line">      mgr.add_password(p[1], &#39;https:&#x2F;&#x2F;%s&#x2F;&#39; % host, p[0], p[2])</span><br><span class="line">  except:</span><br><span class="line">    pass</span><br><span class="line">  handlers.append(urllib.request.HTTPBasicAuthHandler(mgr))</span><br><span class="line">  handlers.append(urllib.request.HTTPDigestAuthHandler(mgr))</span><br><span class="line"></span><br><span class="line">  if &#39;http_proxy&#39; in os.environ:</span><br><span class="line">    url &#x3D; os.environ[&#39;http_proxy&#39;]</span><br><span class="line">    handlers.append(urllib.request.ProxyHandler(&#123;&#39;http&#39;: url, &#39;https&#39;: url&#125;))</span><br><span class="line">  if &#39;REPO_CURL_VERBOSE&#39; in os.environ:</span><br><span class="line">    handlers.append(urllib.request.HTTPHandler(debuglevel&#x3D;1))</span><br><span class="line">    handlers.append(urllib.request.HTTPSHandler(debuglevel&#x3D;1))</span><br><span class="line">  urllib.request.install_opener(urllib.request.build_opener(*handlers))</span><br><span class="line"></span><br><span class="line">def _Fetch(url, local, src, quiet):</span><br><span class="line">  if not quiet:</span><br><span class="line">    _print(&#39;Get %s&#39; % url, file&#x3D;sys.stderr)</span><br><span class="line"></span><br><span class="line">  cmd &#x3D; [GIT, &#39;fetch&#39;]</span><br><span class="line">  if quiet:</span><br><span class="line">    cmd.append(&#39;--quiet&#39;)</span><br><span class="line">    err &#x3D; subprocess.PIPE</span><br><span class="line">  else:</span><br><span class="line">    err &#x3D; None</span><br><span class="line">  cmd.append(src)</span><br><span class="line">  cmd.append(&#39;+refs&#x2F;heads&#x2F;*:refs&#x2F;remotes&#x2F;origin&#x2F;*&#39;)</span><br><span class="line">  cmd.append(&#39;refs&#x2F;tags&#x2F;*:refs&#x2F;tags&#x2F;*&#39;)</span><br><span class="line"></span><br><span class="line">  proc &#x3D; subprocess.Popen(cmd, cwd &#x3D; local, stderr &#x3D; err)</span><br><span class="line">  if err:</span><br><span class="line">    proc.stderr.read()</span><br><span class="line">    proc.stderr.close()</span><br><span class="line">  if proc.wait() !&#x3D; 0:</span><br><span class="line">    raise CloneFailure()</span><br><span class="line"></span><br><span class="line">def _DownloadBundle(url, local, quiet):</span><br><span class="line">  if not url.endswith(&#39;&#x2F;&#39;):</span><br><span class="line">    url +&#x3D; &#39;&#x2F;&#39;</span><br><span class="line">  url +&#x3D; &#39;clone.bundle&#39;</span><br><span class="line"></span><br><span class="line">  proc &#x3D; subprocess.Popen(</span><br><span class="line">    [GIT, &#39;config&#39;, &#39;--get-regexp&#39;, &#39;url.*.insteadof&#39;],</span><br><span class="line">    cwd &#x3D; local,</span><br><span class="line">    stdout &#x3D; subprocess.PIPE)</span><br><span class="line">  for line in proc.stdout:</span><br><span class="line">    m &#x3D; re.compile(r&#39;^url\.(.*)\.insteadof (.*)$&#39;).match(line)</span><br><span class="line">    if m:</span><br><span class="line">      new_url &#x3D; m.group(1)</span><br><span class="line">      old_url &#x3D; m.group(2)</span><br><span class="line">      if url.startswith(old_url):</span><br><span class="line">        url &#x3D; new_url + url[len(old_url):]</span><br><span class="line">        break</span><br><span class="line">  proc.stdout.close()</span><br><span class="line">  proc.wait()</span><br><span class="line"></span><br><span class="line">  if not url.startswith(&#39;http:&#39;) and not url.startswith(&#39;https:&#39;):</span><br><span class="line">    return False</span><br><span class="line"></span><br><span class="line">  dest &#x3D; open(os.path.join(local, &#39;.git&#39;, &#39;clone.bundle&#39;), &#39;w+b&#39;)</span><br><span class="line">  try:</span><br><span class="line">    try:</span><br><span class="line">      r &#x3D; urllib.request.urlopen(url)</span><br><span class="line">    except urllib.error.HTTPError as e:</span><br><span class="line">      if e.code in [401, 403, 404]:</span><br><span class="line">        return False</span><br><span class="line">      _print(&#39;fatal: Cannot get %s&#39; % url, file&#x3D;sys.stderr)</span><br><span class="line">      _print(&#39;fatal: HTTP error %s&#39; % e.code, file&#x3D;sys.stderr)</span><br><span class="line">      raise CloneFailure()</span><br><span class="line">    except urllib.error.URLError as e:</span><br><span class="line">      _print(&#39;fatal: Cannot get %s&#39; % url, file&#x3D;sys.stderr)</span><br><span class="line">      _print(&#39;fatal: error %s&#39; % e.reason, file&#x3D;sys.stderr)</span><br><span class="line">      raise CloneFailure()</span><br><span class="line">    try:</span><br><span class="line">      if not quiet:</span><br><span class="line">        _print(&#39;Get %s&#39; % url, file&#x3D;sys.stderr)</span><br><span class="line">      while True:</span><br><span class="line">        buf &#x3D; r.read(8192)</span><br><span class="line">        if buf &#x3D;&#x3D; &#39;&#39;:</span><br><span class="line">          return True</span><br><span class="line">        dest.write(buf)</span><br><span class="line">    finally:</span><br><span class="line">      r.close()</span><br><span class="line">  finally:</span><br><span class="line">    dest.close()</span><br><span class="line"></span><br><span class="line">def _ImportBundle(local):</span><br><span class="line">  path &#x3D; os.path.join(local, &#39;.git&#39;, &#39;clone.bundle&#39;)</span><br><span class="line">  try:</span><br><span class="line">    _Fetch(local, local, path, True)</span><br><span class="line">  finally:</span><br><span class="line">    os.remove(path)</span><br><span class="line"></span><br><span class="line">def _Clone(url, local, quiet):</span><br><span class="line">  &quot;&quot;&quot;Clones a git repository to a new subdirectory of repodir</span><br><span class="line">  &quot;&quot;&quot;</span><br><span class="line">  try:</span><br><span class="line">    os.mkdir(local)</span><br><span class="line">  except OSError as e:</span><br><span class="line">    _print(&#39;fatal: cannot make %s directory: %s&#39; % (local, e.strerror),</span><br><span class="line">           file&#x3D;sys.stderr)</span><br><span class="line">    raise CloneFailure()</span><br><span class="line"></span><br><span class="line">  cmd &#x3D; [GIT, &#39;init&#39;, &#39;--quiet&#39;]</span><br><span class="line">  try:</span><br><span class="line">    proc &#x3D; subprocess.Popen(cmd, cwd &#x3D; local)</span><br><span class="line">  except OSError as e:</span><br><span class="line">    _print(file&#x3D;sys.stderr)</span><br><span class="line">    _print(&quot;fatal: &#39;%s&#39; is not available&quot; % GIT, file&#x3D;sys.stderr)</span><br><span class="line">    _print(&#39;fatal: %s&#39; % e, file&#x3D;sys.stderr)</span><br><span class="line">    _print(file&#x3D;sys.stderr)</span><br><span class="line">    _print(&#39;Please make sure %s is installed and in your path.&#39; % GIT,</span><br><span class="line">          file&#x3D;sys.stderr)</span><br><span class="line">    raise CloneFailure()</span><br><span class="line">  if proc.wait() !&#x3D; 0:</span><br><span class="line">    _print(&#39;fatal: could not create %s&#39; % local, file&#x3D;sys.stderr)</span><br><span class="line">    raise CloneFailure()</span><br><span class="line"></span><br><span class="line">  _InitHttp()</span><br><span class="line">  _SetConfig(local, &#39;remote.origin.url&#39;, url)</span><br><span class="line">  _SetConfig(local, &#39;remote.origin.fetch&#39;,</span><br><span class="line">                    &#39;+refs&#x2F;heads&#x2F;*:refs&#x2F;remotes&#x2F;origin&#x2F;*&#39;)</span><br><span class="line">  if _DownloadBundle(url, local, quiet):</span><br><span class="line">    _ImportBundle(local)</span><br><span class="line">  _Fetch(url, local, &#39;origin&#39;, quiet)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def _Verify(cwd, branch, quiet):</span><br><span class="line">  &quot;&quot;&quot;Verify the branch has been signed by a tag.</span><br><span class="line">  &quot;&quot;&quot;</span><br><span class="line">  cmd &#x3D; [GIT, &#39;describe&#39;, &#39;origin&#x2F;%s&#39; % branch]</span><br><span class="line">  proc &#x3D; subprocess.Popen(cmd,</span><br><span class="line">                          stdout&#x3D;subprocess.PIPE,</span><br><span class="line">                          stderr&#x3D;subprocess.PIPE,</span><br><span class="line">                          cwd &#x3D; cwd)</span><br><span class="line">  cur &#x3D; proc.stdout.read().strip()</span><br><span class="line">  proc.stdout.close()</span><br><span class="line"></span><br><span class="line">  proc.stderr.read()</span><br><span class="line">  proc.stderr.close()</span><br><span class="line"></span><br><span class="line">  if proc.wait() !&#x3D; 0 or not cur:</span><br><span class="line">    _print(file&#x3D;sys.stderr)</span><br><span class="line">    _print(&quot;fatal: branch &#39;%s&#39; has not been signed&quot; % branch, file&#x3D;sys.stderr)</span><br><span class="line">    raise CloneFailure()</span><br><span class="line"></span><br><span class="line">  m &#x3D; re.compile(r&#39;^(.*)-[0-9]&#123;1,&#125;-g[0-9a-f]&#123;1,&#125;$&#39;).match(cur)</span><br><span class="line">  if m:</span><br><span class="line">    cur &#x3D; m.group(1)</span><br><span class="line">    if not quiet:</span><br><span class="line">      _print(file&#x3D;sys.stderr)</span><br><span class="line">      _print(&quot;info: Ignoring branch &#39;%s&#39;; using tagged release &#39;%s&#39;&quot;</span><br><span class="line">            % (branch, cur), file&#x3D;sys.stderr)</span><br><span class="line">      _print(file&#x3D;sys.stderr)</span><br><span class="line"></span><br><span class="line">  env &#x3D; os.environ.copy()</span><br><span class="line">  env[&#39;GNUPGHOME&#39;] &#x3D; gpg_dir.encode()</span><br><span class="line"></span><br><span class="line">  cmd &#x3D; [GIT, &#39;tag&#39;, &#39;-v&#39;, cur]</span><br><span class="line">  proc &#x3D; subprocess.Popen(cmd,</span><br><span class="line">                          stdout &#x3D; subprocess.PIPE,</span><br><span class="line">                          stderr &#x3D; subprocess.PIPE,</span><br><span class="line">                          cwd &#x3D; cwd,</span><br><span class="line">                          env &#x3D; env)</span><br><span class="line">  out &#x3D; proc.stdout.read()</span><br><span class="line">  proc.stdout.close()</span><br><span class="line"></span><br><span class="line">  err &#x3D; proc.stderr.read()</span><br><span class="line">  proc.stderr.close()</span><br><span class="line"></span><br><span class="line">  if proc.wait() !&#x3D; 0:</span><br><span class="line">    _print(file&#x3D;sys.stderr)</span><br><span class="line">    _print(out, file&#x3D;sys.stderr)</span><br><span class="line">    _print(err, file&#x3D;sys.stderr)</span><br><span class="line">    _print(file&#x3D;sys.stderr)</span><br><span class="line">    raise CloneFailure()</span><br><span class="line">  return &#39;%s^0&#39; % cur</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def _Checkout(cwd, branch, rev, quiet):</span><br><span class="line">  &quot;&quot;&quot;Checkout an upstream branch into the repository and track it.</span><br><span class="line">  &quot;&quot;&quot;</span><br><span class="line">  cmd &#x3D; [GIT, &#39;update-ref&#39;, &#39;refs&#x2F;heads&#x2F;default&#39;, rev]</span><br><span class="line">  if subprocess.Popen(cmd, cwd &#x3D; cwd).wait() !&#x3D; 0:</span><br><span class="line">    raise CloneFailure()</span><br><span class="line"></span><br><span class="line">  _SetConfig(cwd, &#39;branch.default.remote&#39;, &#39;origin&#39;)</span><br><span class="line">  _SetConfig(cwd, &#39;branch.default.merge&#39;, &#39;refs&#x2F;heads&#x2F;%s&#39; % branch)</span><br><span class="line"></span><br><span class="line">  cmd &#x3D; [GIT, &#39;symbolic-ref&#39;, &#39;HEAD&#39;, &#39;refs&#x2F;heads&#x2F;default&#39;]</span><br><span class="line">  if subprocess.Popen(cmd, cwd &#x3D; cwd).wait() !&#x3D; 0:</span><br><span class="line">    raise CloneFailure()</span><br><span class="line"></span><br><span class="line">  cmd &#x3D; [GIT, &#39;read-tree&#39;, &#39;--reset&#39;, &#39;-u&#39;]</span><br><span class="line">  if not quiet:</span><br><span class="line">    cmd.append(&#39;-v&#39;)</span><br><span class="line">  cmd.append(&#39;HEAD&#39;)</span><br><span class="line">  if subprocess.Popen(cmd, cwd &#x3D; cwd).wait() !&#x3D; 0:</span><br><span class="line">    raise CloneFailure()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def _FindRepo():</span><br><span class="line">  &quot;&quot;&quot;Look for a repo installation, starting at the current directory.</span><br><span class="line">  &quot;&quot;&quot;</span><br><span class="line">  curdir &#x3D; os.getcwd()</span><br><span class="line">  repo &#x3D; None</span><br><span class="line"></span><br><span class="line">  olddir &#x3D; None</span><br><span class="line">  while curdir !&#x3D; &#39;&#x2F;&#39; \</span><br><span class="line">    and curdir !&#x3D; olddir \</span><br><span class="line">    and not repo:</span><br><span class="line">    repo &#x3D; os.path.join(curdir, repodir, REPO_MAIN)</span><br><span class="line">    if not os.path.isfile(repo):</span><br><span class="line">      repo &#x3D; None</span><br><span class="line">      olddir &#x3D; curdir</span><br><span class="line">      curdir &#x3D; os.path.dirname(curdir)</span><br><span class="line">  return (repo, os.path.join(curdir, repodir))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class _Options:</span><br><span class="line">  help &#x3D; False</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def _ParseArguments(args):</span><br><span class="line">  cmd &#x3D; None</span><br><span class="line">  opt &#x3D; _Options()</span><br><span class="line">  arg &#x3D; []</span><br><span class="line"></span><br><span class="line">  for i in range(len(args)):</span><br><span class="line">    a &#x3D; args[i]</span><br><span class="line">    if a &#x3D;&#x3D; &#39;-h&#39; or a &#x3D;&#x3D; &#39;--help&#39;:</span><br><span class="line">      opt.help &#x3D; True</span><br><span class="line"></span><br><span class="line">    elif not a.startswith(&#39;-&#39;):</span><br><span class="line">      cmd &#x3D; a</span><br><span class="line">      arg &#x3D; args[i + 1:]</span><br><span class="line">      break</span><br><span class="line">  return cmd, opt, arg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def _Usage():</span><br><span class="line">  gitc_usage &#x3D; &quot;&quot;</span><br><span class="line">  if get_gitc_manifest_dir():</span><br><span class="line">    gitc_usage &#x3D; &quot;  gitc-init Initialize a GITC Client.\n&quot;</span><br><span class="line"></span><br><span class="line">  _print(</span><br><span class="line">&quot;&quot;&quot;usage: repo COMMAND [ARGS]</span><br><span class="line"></span><br><span class="line">repo is not yet installed.  Use &quot;repo init&quot; to install it here.</span><br><span class="line"></span><br><span class="line">The most commonly used repo commands are:</span><br><span class="line"></span><br><span class="line">  init      Install repo in the current working directory</span><br><span class="line">&quot;&quot;&quot; + gitc_usage +</span><br><span class="line">&quot;&quot;&quot;  help      Display detailed help on a command</span><br><span class="line"></span><br><span class="line">For access to the full online help, install repo (&quot;repo init&quot;).</span><br><span class="line">&quot;&quot;&quot;, file&#x3D;sys.stderr)</span><br><span class="line">  sys.exit(1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def _Help(args):</span><br><span class="line">  if args:</span><br><span class="line">    if args[0] &#x3D;&#x3D; &#39;init&#39;:</span><br><span class="line">      init_optparse.print_help()</span><br><span class="line">      sys.exit(0)</span><br><span class="line">    elif args[0] &#x3D;&#x3D; &#39;gitc-init&#39;:</span><br><span class="line">      _GitcInitOptions(init_optparse)</span><br><span class="line">      init_optparse.print_help()</span><br><span class="line">      sys.exit(0)</span><br><span class="line">    else:</span><br><span class="line">      _print(&quot;error: &#39;%s&#39; is not a bootstrap command.\n&quot;</span><br><span class="line">             &#39;        For access to online help, install repo (&quot;repo init&quot;).&#39;</span><br><span class="line">             % args[0], file&#x3D;sys.stderr)</span><br><span class="line">  else:</span><br><span class="line">    _Usage()</span><br><span class="line">  sys.exit(1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def _NotInstalled():</span><br><span class="line">  _print(&#39;error: repo is not installed.  Use &quot;repo init&quot; to install it here.&#39;,</span><br><span class="line">         file&#x3D;sys.stderr)</span><br><span class="line">  sys.exit(1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def _NoCommands(cmd):</span><br><span class="line">  _print(&quot;&quot;&quot;error: command &#39;%s&#39; requires repo to be installed first.</span><br><span class="line">         Use &quot;repo init&quot; to install it here.&quot;&quot;&quot; % cmd, file&#x3D;sys.stderr)</span><br><span class="line">  sys.exit(1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def _RunSelf(wrapper_path):</span><br><span class="line">  my_dir &#x3D; os.path.dirname(wrapper_path)</span><br><span class="line">  my_main &#x3D; os.path.join(my_dir, &#39;main.py&#39;)</span><br><span class="line">  my_git &#x3D; os.path.join(my_dir, &#39;.git&#39;)</span><br><span class="line"></span><br><span class="line">  if os.path.isfile(my_main) and os.path.isdir(my_git):</span><br><span class="line">    for name in [&#39;git_config.py&#39;,</span><br><span class="line">                 &#39;project.py&#39;,</span><br><span class="line">                 &#39;subcmds&#39;]:</span><br><span class="line">      if not os.path.exists(os.path.join(my_dir, name)):</span><br><span class="line">        return None, None</span><br><span class="line">    return my_main, my_git</span><br><span class="line">  return None, None</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def _SetDefaultsTo(gitdir):</span><br><span class="line">  global REPO_URL</span><br><span class="line">  global REPO_REV</span><br><span class="line"></span><br><span class="line">  REPO_URL &#x3D; gitdir</span><br><span class="line">  proc &#x3D; subprocess.Popen([GIT,</span><br><span class="line">                           &#39;--git-dir&#x3D;%s&#39; % gitdir,</span><br><span class="line">                           &#39;symbolic-ref&#39;,</span><br><span class="line">                           &#39;HEAD&#39;],</span><br><span class="line">                          stdout &#x3D; subprocess.PIPE,</span><br><span class="line">                          stderr &#x3D; subprocess.PIPE)</span><br><span class="line">  REPO_REV &#x3D; proc.stdout.read().strip()</span><br><span class="line">  proc.stdout.close()</span><br><span class="line"></span><br><span class="line">  proc.stderr.read()</span><br><span class="line">  proc.stderr.close()</span><br><span class="line"></span><br><span class="line">  if proc.wait() !&#x3D; 0:</span><br><span class="line">    _print(&#39;fatal: %s has no current branch&#39; % gitdir, file&#x3D;sys.stderr)</span><br><span class="line">    sys.exit(1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main(orig_args):</span><br><span class="line">  repo_main, rel_repo_dir &#x3D; _FindRepo()</span><br><span class="line">  cmd, opt, args &#x3D; _ParseArguments(orig_args)</span><br><span class="line"></span><br><span class="line">  wrapper_path &#x3D; os.path.abspath(__file__)</span><br><span class="line">  my_main, my_git &#x3D; _RunSelf(wrapper_path)</span><br><span class="line"></span><br><span class="line">  cwd &#x3D; os.getcwd()</span><br><span class="line">  if get_gitc_manifest_dir() and cwd.startswith(get_gitc_manifest_dir()):</span><br><span class="line">    _print(&#39;error: repo cannot be used in the GITC local manifest directory.&#39;</span><br><span class="line">           &#39;\nIf you want to work on this GITC client please rerun this &#39;</span><br><span class="line">           &#39;command from the corresponding client under &#x2F;gitc&#x2F;&#39;, file&#x3D;sys.stderr)</span><br><span class="line">    sys.exit(1)</span><br><span class="line">  if not repo_main:</span><br><span class="line">    if opt.help:</span><br><span class="line">      _Usage()</span><br><span class="line">    if cmd &#x3D;&#x3D; &#39;help&#39;:</span><br><span class="line">      _Help(args)</span><br><span class="line">    if not cmd:</span><br><span class="line">      _NotInstalled()</span><br><span class="line">    if cmd &#x3D;&#x3D; &#39;init&#39; or cmd &#x3D;&#x3D; &#39;gitc-init&#39;:</span><br><span class="line">      if my_git:</span><br><span class="line">        _SetDefaultsTo(my_git)</span><br><span class="line">      try:</span><br><span class="line">        _Init(args, gitc_init&#x3D;(cmd &#x3D;&#x3D; &#39;gitc-init&#39;))</span><br><span class="line">      except CloneFailure:</span><br><span class="line">        shutil.rmtree(os.path.join(repodir, S_repo), ignore_errors&#x3D;True)</span><br><span class="line">        sys.exit(1)</span><br><span class="line">      repo_main, rel_repo_dir &#x3D; _FindRepo()</span><br><span class="line">    else:</span><br><span class="line">      _NoCommands(cmd)</span><br><span class="line"></span><br><span class="line">  if my_main:</span><br><span class="line">    repo_main &#x3D; my_main</span><br><span class="line"></span><br><span class="line">  ver_str &#x3D; &#39;.&#39;.join(map(str, VERSION))</span><br><span class="line">  me &#x3D; [sys.executable, repo_main,</span><br><span class="line">        &#39;--repo-dir&#x3D;%s&#39; % rel_repo_dir,</span><br><span class="line">        &#39;--wrapper-version&#x3D;%s&#39; % ver_str,</span><br><span class="line">        &#39;--wrapper-path&#x3D;%s&#39; % wrapper_path,</span><br><span class="line">        &#39;--&#39;]</span><br><span class="line">  me.extend(orig_args)</span><br><span class="line">  me.extend(extra_args)</span><br><span class="line">  try:</span><br><span class="line">    os.execv(sys.executable, me)</span><br><span class="line">  except OSError as e:</span><br><span class="line">    _print(&quot;fatal: unable to start %s&quot; % repo_main, file&#x3D;sys.stderr)</span><br><span class="line">    _print(&quot;fatal: %s&quot; % e, file&#x3D;sys.stderr)</span><br><span class="line">    sys.exit(148)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">  if ver[0] &#x3D;&#x3D; 3:</span><br><span class="line">    _print(&#39;warning: Python 3 support is currently experimental. YMMV.\n&#39;</span><br><span class="line">           &#39;Please use Python 2.6 - 2.7 instead.&#39;,</span><br><span class="line">           file&#x3D;sys.stderr)</span><br><span class="line">  main(sys.argv[1:])</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="致谢"><a class="markdownIt-Anchor" href="#致谢"></a> 致谢</h1><blockquote><p><a href="https://blog.csdn.net/xiaokeweng/article/details/46743409/">完美解决repo init 错误 fatal: Cannot get https://gerrit.googlesource.com/git-repo/clone.bundle</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> Bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>websocket断开重连解决方案初探和实现websocket心跳重连</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/19770/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/19770/</url>
      
        <content type="html"><![CDATA[<h1 id="心跳重连缘由"><a class="markdownIt-Anchor" href="#心跳重连缘由"></a> 心跳重连缘由</h1><p>websocket是前后端交互的长连接，前后端也都可能因为一些情况导致连接失效并且相互之间没有反馈提醒。因此为了保证连接的可持续性和稳定性，websocket心跳重连就应运而生。</p><p>在使用原生websocket的时候，如果设备网络断开，不会触发websocket的任何事件函数，前端程序无法得知当前连接已经断开。这个时候如果调用websocket.send方法，浏览器就会发现消息发不出去，便会立刻或者一定短时间后（不同浏览器或者浏览器版本可能表现不同）触发onclose函数。</p><p>后端websocket服务也可能出现异常，连接断开后前端也并没有收到通知，因此需要前端定时发送心跳消息ping，后端收到ping类型的消息，立马返回pong消息，告知前端连接正常。如果一定时间没收到pong消息，就说明连接不正常，前端便会执行重连。</p><p>为了解决以上两个问题，以前端作为主动方，定时发送ping消息，用于检测网络和前后端连接问题。一旦发现异常，前端持续执行重连逻辑，直到重连成功。</p><h1 id="如何实现"><a class="markdownIt-Anchor" href="#如何实现"></a> 如何实现</h1><p>在websocket实例化的时候，我们会绑定一些事件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var ws &#x3D; new WebSocket(url);</span><br><span class="line">ws.onclose &#x3D; function () &#123;</span><br><span class="line">    &#x2F;&#x2F;something</span><br><span class="line">&#125;;</span><br><span class="line">ws.onerror &#x3D; function () &#123;</span><br><span class="line">    &#x2F;&#x2F;something</span><br><span class="line">&#125;;</span><br><span class="line">        </span><br><span class="line">ws.onopen &#x3D; function () &#123;</span><br><span class="line">   &#x2F;&#x2F;something</span><br><span class="line">&#125;;</span><br><span class="line">ws.onmessage &#x3D; function (event) &#123;</span><br><span class="line">   &#x2F;&#x2F;something</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果希望websocket连接一直保持，我们会在close或者error上绑定重新连接方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ws.onclose &#x3D; function () &#123;</span><br><span class="line">    reconnect();</span><br><span class="line">&#125;;</span><br><span class="line">ws.onerror &#x3D; function () &#123;</span><br><span class="line">    reconnect();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这样一般正常情况下失去连接时，触发onclose方法，我们就能执行重连了。</p><p>那么针对断网的情况的心跳重连，怎么实现呢。</p><p>简单的实现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">var heartCheck &#x3D; &#123;</span><br><span class="line">    timeout: 60000,&#x2F;&#x2F;60s</span><br><span class="line">    timeoutObj: null,</span><br><span class="line">    reset: function()&#123;</span><br><span class="line">        clearTimeout(this.timeoutObj);</span><br><span class="line">　　　　 this.start();</span><br><span class="line">    &#125;,</span><br><span class="line">    start: function()&#123;</span><br><span class="line">        this.timeoutObj &#x3D; setTimeout(function()&#123;</span><br><span class="line">            ws.send(&quot;HeartBeat&quot;);</span><br><span class="line">        &#125;, this.timeout)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ws.onopen &#x3D; function () &#123;</span><br><span class="line">   heartCheck.start();</span><br><span class="line">&#125;;</span><br><span class="line">ws.onmessage &#x3D; function (event) &#123;</span><br><span class="line">    heartCheck.reset();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如上代码，heartCheck 的 reset和start方法主要用来控制心跳的定时。</p><p><strong>什么条件下执行心跳：</strong><br>当onopen也就是连接上时，我们便开始start计时，如果在定时时间范围内，onmessage获取到了后端的消息，我们就重置倒计时，</p><p>距离上次从后端获取到消息超过60秒之后，执行心跳检测，看是不是断连了，这个检测时间可以自己根据自身情况设定。</p><p><strong>判断前端ws断开(断网但不限于断网的情况）：</strong><br>当心跳检测send方法执行之后，如果当前websocket是断开状态(或者说断网了)，发送超时之后，浏览器的ws会自动触发onclose方法，重连也执行了（onclose方法体绑定了重连事件），如果当前一直是断网状态，重连会2秒（时间是自己代码设置的）执行一次直到网络正常后连接成功。</p><p>如此一来，我们判断前端主动断开ws的心跳检测就实现了。为什么说是前端主动断开，因为当前这种情况主要是通过前端ws的事件来判断的，后面说后端主动断开的情况。</p><p>我本想测试websocket超时时间，又发现了一些新的问题</p><ol><li><p>在chrome中，如果心跳检测 也就是websocket实例执行send之后，15秒内没发送到另一接收端，onclose便会执行。那么超时时间是15秒。</p></li><li><p>我又打开了Firefox ，Firefox在断网7秒之后，直接执行onclose。说明在Firefox中不需要心跳检测便能自动onclose。</p></li><li><p>同一代码， reconnect方法 在chrome 执行了一次，Firefox执行了两次。当然我们在几处地方（代码逻辑处和websocket事件处）绑定了reconnect()，</p></li></ol><p>所以保险起见，我们还是给reconnect()方法加上一个锁，保证只执行一次</p><p>目前来看不同的浏览器，有不同的机制，无论浏览器websocket自身会不会在断网情况下执行onclose，加上心跳重连后，已经能保证onclose的正常触发。</p><p><strong>判断后端断开：</strong><br>如果后端因为一些情况断开了ws，是可控情况下的话，会下发一个断连的消息通知，之后才会断开，我们便会重连。</p><p>如果因为一些异常断开了连接，我们是不会感应到的，所以如果我们发送了心跳一定时间之后，后端既没有返回心跳响应消息，前端又没有收到任何其他消息的话，我们就能断定后端主动断开了。</p><p>一点特别重要的发送心跳到后端，后端收到消息之后必须返回消息，否则超过60秒之后会判定后端主动断开了。再改造下代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">var heartCheck &#x3D; &#123;</span><br><span class="line">    timeout: 60000,&#x2F;&#x2F;60s</span><br><span class="line">    timeoutObj: null,</span><br><span class="line">    serverTimeoutObj: null,</span><br><span class="line">    reset: function()&#123;</span><br><span class="line">        clearTimeout(this.timeoutObj);</span><br><span class="line">        clearTimeout(this.serverTimeoutObj);</span><br><span class="line">　　　　 this.start();</span><br><span class="line">    &#125;,</span><br><span class="line">    start: function()&#123;</span><br><span class="line">        var self &#x3D; this;</span><br><span class="line">        this.timeoutObj &#x3D; setTimeout(function()&#123;</span><br><span class="line">            ws.send(&quot;HeartBeat&quot;);</span><br><span class="line">            self.serverTimeoutObj &#x3D; setTimeout(function()&#123;</span><br><span class="line">                ws.close();&#x2F;&#x2F;如果onclose会执行reconnect，我们执行ws.close()就行了.如果直接执行reconnect 会触发onclose导致重连两次</span><br><span class="line">            &#125;, self.timeout)</span><br><span class="line">        &#125;, this.timeout)</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ws.onopen &#x3D; function () &#123;</span><br><span class="line">   heartCheck.start();</span><br><span class="line">&#125;;</span><br><span class="line">ws.onmessage &#x3D; function (event) &#123;</span><br><span class="line">    heartCheck.reset();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ws.onclose &#x3D; function () &#123;</span><br><span class="line">    reconnect();</span><br><span class="line">&#125;;</span><br><span class="line">ws.onerror &#x3D; function () &#123;</span><br><span class="line">    reconnect();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>PS：</strong><br>因为目前我们这种方式会一直重连如果没连接上或者断连的话，如果有两个设备同时登陆并且会踢另一端下线，一定要发送一个踢下线的消息类型，这边接收到这种类型的消息，逻辑判断后就不再执行reconnect，否则会出现一只相互挤下线的死循环。</p><h1 id="封装了一个npm包欢迎使用"><a class="markdownIt-Anchor" href="#封装了一个npm包欢迎使用"></a> 封装了一个npm包，欢迎使用</h1><blockquote><p>websocket-heartbeat-js（<a href="https://github.com/zimv/websocket-heartbeat-js">github</a>）<br>websocket-heartbeat-js(<a href="https://www.npmjs.com/package/websocket-heartbeat-js">npm</a>)</p></blockquote><h1 id="altaba"><a class="markdownIt-Anchor" href="#altaba"></a> <a href="https://blog.csdn.net/Altaba">Altaba</a>强化版</h1><p>相信随着H5的演进，我们越来越多接触到websocket的使用，本身就使用此技术并不难，但是在开发中会遇到各种无法预测的原因，有浏览器兼容问题，有后台的意外断开，状态百出。</p><p>本人前端开发遇到这样的问题：websocket部分使用了nginx服务，默认配置是60s，就是60s，如果一直没有数据传输，连接会在过了这个时间之后自动关闭。</p><p>解决：nginx配置改为600s，前端在onclose 函数体加入判断 然后重连</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;2017年11月27日  修改websocket连接</span><br><span class="line">        var ws;&#x2F;&#x2F;websocket实例</span><br><span class="line">        var lockReconnect &#x3D; false;&#x2F;&#x2F;避免重复连接</span><br><span class="line">        var wsUrl &#x3D; &quot;ws:&#x2F;&#x2F;&quot;+&#39;xxxxxxx&#39;;</span><br><span class="line"> </span><br><span class="line">        function createWebSocket(url) &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                if (&#39;WebSocket&#39; in window) &#123;</span><br><span class="line">                    ws &#x3D; new WebSocket(url);</span><br><span class="line">                &#125; else if (&#39;MozWebSocket&#39; in window) &#123;</span><br><span class="line">                    ws &#x3D; new MozWebSocket(url);</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    url &#x3D; &quot;http:&#x2F;&#x2F;&quot; + &#39;xxxxxxx&#39;;</span><br><span class="line">                    ws &#x3D; new SockJS(url);</span><br><span class="line">                &#125;</span><br><span class="line"> </span><br><span class="line">                initEventHandle();</span><br><span class="line">            &#125; catch (e) &#123;</span><br><span class="line">                reconnect(url);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        function initEventHandle() &#123;</span><br><span class="line">            ws.onclose &#x3D; function (evnt) &#123;</span><br><span class="line">                &#x2F;&#x2F;console.log(&#39;websocket服务关闭了&#39;);</span><br><span class="line">                reconnect(wsUrl);</span><br><span class="line">            &#125;;</span><br><span class="line">            ws.onerror &#x3D; function (evnt) &#123;</span><br><span class="line">                &#x2F;&#x2F;console.log(&#39;websocket服务出错了&#39;);</span><br><span class="line">                reconnect(wsUrl);</span><br><span class="line">            &#125;;</span><br><span class="line">            ws.onopen &#x3D; function (evnt) &#123;</span><br><span class="line">                &#x2F;&#x2F;心跳检测重置</span><br><span class="line">                heartCheck.reset().start();</span><br><span class="line">            &#125;;</span><br><span class="line">            ws.onmessage &#x3D; function (evnt) &#123;</span><br><span class="line">                &#x2F;&#x2F;如果获取到消息，心跳检测重置</span><br><span class="line">                &#x2F;&#x2F;拿到任何消息都说明当前连接是正常的</span><br><span class="line">                &#x2F;&#x2F;console.log(&#39;websocket服务获得数据了&#39;);</span><br><span class="line"> </span><br><span class="line">                &#x2F;&#x2F;接受消息后的UI变化</span><br><span class="line">                doWithMsg(evnt.data);</span><br><span class="line">                heartCheck.reset().start();</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            &#x2F;&#x2F;收到消息推送</span><br><span class="line">            function doWithMsg(msg) &#123;</span><br><span class="line">                &#x2F;&#x2F;......</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        function reconnect(url) &#123;</span><br><span class="line">            if(lockReconnect) return;</span><br><span class="line">            lockReconnect &#x3D; true;</span><br><span class="line">            &#x2F;&#x2F;没连接上会一直重连，设置延迟避免请求过多</span><br><span class="line">            setTimeout(function () &#123;</span><br><span class="line">                createWebSocket(url);</span><br><span class="line">                lockReconnect &#x3D; false;</span><br><span class="line">            &#125;, 2000);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        &#x2F;&#x2F;心跳检测</span><br><span class="line">        var heartCheck &#x3D; &#123;</span><br><span class="line">            timeout: 60000,&#x2F;&#x2F;60秒</span><br><span class="line">            timeoutObj: null,</span><br><span class="line">            serverTimeoutObj: null,</span><br><span class="line">            reset: function()&#123;</span><br><span class="line">                clearTimeout(this.timeoutObj);</span><br><span class="line">                clearTimeout(this.serverTimeoutObj);</span><br><span class="line">                return this;</span><br><span class="line">            &#125;,</span><br><span class="line">            start: function()&#123;</span><br><span class="line">                var self &#x3D; this;</span><br><span class="line">                this.timeoutObj &#x3D; setTimeout(function()&#123;</span><br><span class="line">                    &#x2F;&#x2F;这里发送一个心跳，后端收到后，返回一个心跳消息，</span><br><span class="line">                    &#x2F;&#x2F;onmessage拿到返回的心跳就说明连接正常</span><br><span class="line">                    ws.send(&quot;HeartBeat&quot;);</span><br><span class="line">                    self.serverTimeoutObj &#x3D; setTimeout(function()&#123;&#x2F;&#x2F;如果超过一定时间还没重置，说明后端主动断开了</span><br><span class="line">                        ws.close();&#x2F;&#x2F;如果onclose会执行reconnect，我们执行ws.close()就行了.如果直接执行reconnect 会触发onclose导致重连两次</span><br><span class="line">                    &#125;, self.timeout)</span><br><span class="line">                &#125;, this.timeout)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        &#x2F;&#x2F;初始化websocket</span><br><span class="line">        createWebSocket(wsUrl);</span><br></pre></td></tr></table></figure><h1 id="致谢"><a class="markdownIt-Anchor" href="#致谢"></a> 致谢</h1><blockquote><p><a href="https://www.cnblogs.com/1wen/p/5808276.html">初探和实现websocket心跳重连</a><br><a href="https://blog.csdn.net/altaba/article/details/78644697">websocket断开重连解决方案，基于子慕大诗人博客修改 健壮强化版</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu16.04串口minicom安装、配置及实现串口通讯</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/32967/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/32967/</url>
      
        <content type="html"><![CDATA[<h1 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt update</span><br><span class="line">$ sudo apt upgrade</span><br><span class="line">$ sudo apt install minicom</span><br></pre></td></tr></table></figure><h1 id="检查串口设备确认你的串口设备名"><a class="markdownIt-Anchor" href="#检查串口设备确认你的串口设备名"></a> 检查串口设备（确认你的串口设备名）</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls &#x2F;dev</span><br></pre></td></tr></table></figure><p><em>注意：两次执行该命令：比较拔插前后<code>ls /dev</code>多出来的串口名，本人多出来的是<code>ttyUSB0</code>,记住，后面还有用。</em></p><h1 id="配置minicom"><a class="markdownIt-Anchor" href="#配置minicom"></a> 配置minicom</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo minicom -s</span><br></pre></td></tr></table></figure><p>选择<strong>Serial port setup</strong>，并回车，设置好相关参数如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">A -    Serial Device      : &#x2F;dev&#x2F;ttyUSB0                              |   &#x2F;&#x2F;我的是ttyUSB0，更改为你的</span><br><span class="line">   | B - Lockfile Location     : &#x2F;var&#x2F;lock                                 |</span><br><span class="line">   | C -   Callin Program      :                                           |</span><br><span class="line">   | D -  Callout Program      :                                           |</span><br><span class="line">   | E -    Bps&#x2F;Par&#x2F;Bits       : 115200 8N1                                |</span><br><span class="line">   | F - Hardware Flow Control : No                                        |</span><br><span class="line">   | G - Software Flow Control : No   </span><br></pre></td></tr></table></figure><p>选择<strong>Save setup as dfl</strong><br>选择<strong>Exit</strong>或者<strong>Exit from Minicom</strong></p><h1 id="启动minicom"><a class="markdownIt-Anchor" href="#启动minicom"></a> 启动minicom</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo minicom</span><br></pre></td></tr></table></figure><p><strong>如果有进不去的情况重启一下设备试试</strong></p><p>致谢：</p><blockquote><p>IT-Why《<a href="https://blog.csdn.net/why19940926/article/details/53612992/">Ubuntu使用minicom连接设备</a>》</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> Linux </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML学习笔记：HTML速查列表</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/49759/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/49759/</url>
      
        <content type="html"><![CDATA[<p>转载于<a href="http://www.runoob.com/html/html-quicklist.html">HTML 速查列表 | 菜鸟教程</a>，做为备忘录使用，特此感谢。</p><h1 id="html-基本文档"><a class="markdownIt-Anchor" href="#html-基本文档"></a> HTML 基本文档</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;文档标题&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">可见文本...</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h1 id="基本标签basic-tags"><a class="markdownIt-Anchor" href="#基本标签basic-tags"></a> 基本标签（Basic Tags）</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;最大的标题&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;h2&gt; . . . &lt;&#x2F;h2&gt;</span><br><span class="line">&lt;h3&gt; . . . &lt;&#x2F;h3&gt;</span><br><span class="line">&lt;h4&gt; . . . &lt;&#x2F;h4&gt;</span><br><span class="line">&lt;h5&gt; . . . &lt;&#x2F;h5&gt;</span><br><span class="line">&lt;h6&gt;最小的标题&lt;&#x2F;h6&gt;</span><br><span class="line"> </span><br><span class="line">&lt;p&gt;这是一个段落。&lt;&#x2F;p&gt;</span><br><span class="line">&lt;br&gt; （换行）</span><br><span class="line">&lt;hr&gt; （水平线）</span><br><span class="line">&lt;!-- 这是注释 --&gt;</span><br></pre></td></tr></table></figure><h1 id="文本格式化formatting"><a class="markdownIt-Anchor" href="#文本格式化formatting"></a> 文本格式化（Formatting）</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;b&gt;粗体文本&lt;&#x2F;b&gt;</span><br><span class="line">&lt;code&gt;计算机代码&lt;&#x2F;code&gt;</span><br><span class="line">&lt;em&gt;强调文本&lt;&#x2F;em&gt;</span><br><span class="line">&lt;i&gt;斜体文本&lt;&#x2F;i&gt;</span><br><span class="line">&lt;kbd&gt;键盘输入&lt;&#x2F;kbd&gt; </span><br><span class="line">&lt;pre&gt;预格式化文本&lt;&#x2F;pre&gt;</span><br><span class="line">&lt;small&gt;更小的文本&lt;&#x2F;small&gt;</span><br><span class="line">&lt;strong&gt;重要的文本&lt;&#x2F;strong&gt;</span><br><span class="line"> </span><br><span class="line">&lt;abbr&gt; （缩写）</span><br><span class="line">&lt;address&gt; （联系信息）</span><br><span class="line">&lt;bdo&gt; （文字方向）</span><br><span class="line">&lt;blockquote&gt; （从另一个源引用的部分）</span><br><span class="line">&lt;cite&gt; （工作的名称）</span><br><span class="line">&lt;del&gt; （删除的文本）</span><br><span class="line">&lt;ins&gt; （插入的文本）</span><br><span class="line">&lt;sub&gt; （下标文本）</span><br><span class="line">&lt;sup&gt; （上标文本）</span><br></pre></td></tr></table></figure><h1 id="链接links"><a class="markdownIt-Anchor" href="#链接links"></a> 链接（Links）</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">普通的链接：&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;www.example.com&#x2F;&quot;&gt;链接文本&lt;&#x2F;a&gt;</span><br><span class="line">图像链接： &lt;a href&#x3D;&quot;http:&#x2F;&#x2F;www.example.com&#x2F;&quot;&gt;&lt;img src&#x3D;&quot;URL&quot; alt&#x3D;&quot;替换文本&quot;&gt;&lt;&#x2F;a&gt;</span><br><span class="line">邮件链接： &lt;a href&#x3D;&quot;mailto:webmaster@example.com&quot;&gt;发送e-mail&lt;&#x2F;a&gt;</span><br><span class="line">书签：</span><br><span class="line">&lt;a id&#x3D;&quot;tips&quot;&gt;提示部分&lt;&#x2F;a&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;#tips&quot;&gt;跳到提示部分&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><h1 id="图片images"><a class="markdownIt-Anchor" href="#图片images"></a> 图片（Images）</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src&#x3D;&quot;URL&quot; alt&#x3D;&quot;替换文本&quot; height&#x3D;&quot;42&quot; width&#x3D;&quot;42&quot;&gt;</span><br></pre></td></tr></table></figure><h1 id="样式区块stylessections"><a class="markdownIt-Anchor" href="#样式区块stylessections"></a> 样式/区块（Styles/Sections）</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class="line">h1 &#123;color:red;&#125;</span><br><span class="line">p &#123;color:blue;&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;div&gt;文档中的块级元素&lt;&#x2F;div&gt;</span><br><span class="line">&lt;span&gt;文档中的内联元素&lt;&#x2F;span&gt;</span><br></pre></td></tr></table></figure><h1 id="无序列表"><a class="markdownIt-Anchor" href="#无序列表"></a> 无序列表</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">    &lt;li&gt;项目&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;li&gt;项目&lt;&#x2F;li&gt;</span><br><span class="line">&lt;&#x2F;ul&gt;</span><br></pre></td></tr></table></figure><h1 id="有序列表"><a class="markdownIt-Anchor" href="#有序列表"></a> 有序列表</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;ol&gt;</span><br><span class="line">    &lt;li&gt;第一项&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;li&gt;第二项&lt;&#x2F;li&gt;</span><br><span class="line">&lt;&#x2F;ol&gt;</span><br></pre></td></tr></table></figure><h1 id="定义列表"><a class="markdownIt-Anchor" href="#定义列表"></a> 定义列表</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;dl&gt;</span><br><span class="line">  &lt;dt&gt;项目 1&lt;&#x2F;dt&gt;</span><br><span class="line">    &lt;dd&gt;描述项目 1&lt;&#x2F;dd&gt;</span><br><span class="line">  &lt;dt&gt;项目 2&lt;&#x2F;dt&gt;</span><br><span class="line">    &lt;dd&gt;描述项目 2&lt;&#x2F;dd&gt;</span><br><span class="line">&lt;&#x2F;dl&gt;</span><br></pre></td></tr></table></figure><h1 id="表格tables"><a class="markdownIt-Anchor" href="#表格tables"></a> 表格（Tables）</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action&#x3D;&quot;demo_form.php&quot; method&#x3D;&quot;post&#x2F;get&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;email&quot; size&#x3D;&quot;40&quot; maxlength&#x3D;&quot;50&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;password&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;checkbox&quot; checked&#x3D;&quot;checked&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;radio&quot; checked&#x3D;&quot;checked&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;Send&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;reset&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;hidden&quot;&gt;</span><br><span class="line">&lt;select&gt;</span><br><span class="line">&lt;option&gt;苹果&lt;&#x2F;option&gt;</span><br><span class="line">&lt;option selected&#x3D;&quot;selected&quot;&gt;香蕉&lt;&#x2F;option&gt;</span><br><span class="line">&lt;option&gt;樱桃&lt;&#x2F;option&gt;</span><br><span class="line">&lt;&#x2F;select&gt;</span><br><span class="line">&lt;textarea name&#x3D;&quot;comment&quot; rows&#x3D;&quot;60&quot; cols&#x3D;&quot;20&quot;&gt;&lt;&#x2F;textarea&gt;</span><br><span class="line"> </span><br><span class="line">&lt;&#x2F;form&gt;</span><br></pre></td></tr></table></figure><h1 id="实体entities"><a class="markdownIt-Anchor" href="#实体entities"></a> 实体（Entities）</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt; 等同于 &lt;</span><br><span class="line">&gt; 等同于 &gt;</span><br><span class="line">&amp;#169; 等同于 ©</span><br></pre></td></tr></table></figure><h1 id="其他标签"><a class="markdownIt-Anchor" href="#其他标签"></a> 其他标签</h1><p><strong>HTML abbr 标签</strong><br>被标记的缩写词如下：</p>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The&lt;abbr title&#x3D;&quot;World Health Organization&quot;&gt;WHO&lt;&#x2F;abbr&gt; was founded in 1948.</span><br></pre></td></tr></table></figure><p><strong>HTML area 标签</strong><br>带有可点击区域的图像映射：</p>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  &lt;img src&#x3D;&quot;planets.gif&quot; width&#x3D;&quot;145&quot; height&#x3D;&quot;126&quot; alt&#x3D;&quot;Planets&quot; usemap&#x3D;&quot;#planetmap&quot;&gt;</span><br><span class="line"> </span><br><span class="line">&lt;map name&#x3D;&quot;planetmap&quot;&gt;</span><br><span class="line">  &lt;area shape&#x3D;&quot;rect&quot; coords&#x3D;&quot;0,0,82,126&quot; alt&#x3D;&quot;Sun&quot; href&#x3D;&quot;sun.htm&quot;&gt;</span><br><span class="line">  &lt;area shape&#x3D;&quot;circle&quot; coords&#x3D;&quot;90,58,3&quot; alt&#x3D;&quot;Mercury&quot; href&#x3D;&quot;mercur.htm&quot;&gt;</span><br><span class="line">  &lt;area shape&#x3D;&quot;circle&quot; coords&#x3D;&quot;124,58,8&quot; alt&#x3D;&quot;Venus&quot; href&#x3D;&quot;venus.htm&quot;&gt;</span><br><span class="line">&lt;&#x2F;map&gt;</span><br></pre></td></tr></table></figure><p><strong>HTML base 标签</strong><br>规定页面上所有链接的默认 URL 和默认目标：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  &lt;head&gt;</span><br><span class="line">&lt;base href&#x3D;&quot;http:&#x2F;&#x2F;www.runoob.com&#x2F;images&#x2F;&quot; target&#x3D;&quot;_blank&quot;&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"> </span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;img src&#x3D;&quot;logo.png&quot; width&#x3D;&quot;24&quot; height&#x3D;&quot;39&quot; alt&#x3D;&quot;Stickman&quot;&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;www.runoob.com&quot;&gt;runoob.com&lt;&#x2F;a&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure><p><strong>HTML cite 标签</strong><br>使用 cite 标签来定义作品的标题：</p>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;&lt;cite&gt;The Scream&lt;&#x2F;cite&gt; by Edward Munch. Painted in 1893.&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure><p>**** HTML datalist 标签****<br>下面是一个 input 元素，datalist 中描述了其可能的值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;input list&#x3D;&quot;browsers&quot;&gt;</span><br><span class="line"> </span><br><span class="line">&lt;datalist id&#x3D;&quot;browsers&quot;&gt;</span><br><span class="line">  &lt;option value&#x3D;&quot;Internet Explorer&quot;&gt;</span><br><span class="line">  &lt;option value&#x3D;&quot;Firefox&quot;&gt;</span><br><span class="line">  &lt;option value&#x3D;&quot;Chrome&quot;&gt;</span><br><span class="line">  &lt;option value&#x3D;&quot;Opera&quot;&gt;</span><br><span class="line">  &lt;option value&#x3D;&quot;Safari&quot;&gt;</span><br><span class="line">&lt;&#x2F;datalist&gt;</span><br></pre></td></tr></table></figure><p><strong>HTML embed 标签</strong><br>被嵌入的 flash 动画片：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;embed src&#x3D;&quot;helloworld.swf&quot;&gt;</span><br></pre></td></tr></table></figure><p><strong>HTML fieldset 标签</strong><br>对表单中的相关元素进行分组：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;form&gt;</span><br><span class="line">  &lt;fieldset&gt;</span><br><span class="line">    &lt;legend&gt;Personalia:&lt;&#x2F;legend&gt;</span><br><span class="line">    Name: &lt;input type&#x3D;&quot;text&quot;&gt;&lt;br&gt;</span><br><span class="line">    Email: &lt;input type&#x3D;&quot;text&quot;&gt;&lt;br&gt;</span><br><span class="line">    Date of birth: &lt;input type&#x3D;&quot;text&quot;&gt;</span><br><span class="line">  &lt;&#x2F;fieldset&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br></pre></td></tr></table></figure><p><strong>HTML figcaption 标签</strong><br>使用 figure 元素标记文档中的一个图像。figure 元素带有一个标题：</p>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> &lt;figure&gt;</span><br><span class="line">  &lt;img src&#x3D;&quot;img_pulpit.jpg&quot; alt&#x3D;&quot;The Pulpit Rock&quot; width&#x3D;&quot;304&quot; height&#x3D;&quot;228&quot;&gt;</span><br><span class="line">  &lt;figcaption&gt;Fig1. - A view of the pulpit rock in Norway.&lt;&#x2F;figcaption&gt;</span><br><span class="line">&lt;&#x2F;figure&gt;</span><br></pre></td></tr></table></figure><p><strong>HTML meter 标签</strong><br>使用 meter 元素展示给定的数据范围：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;meter value&#x3D;&quot;2&quot; min&#x3D;&quot;0&quot; max&#x3D;&quot;10&quot;&gt;2 out of 10&lt;&#x2F;meter&gt;&lt;br&gt;</span><br><span class="line">&lt;meter value&#x3D;&quot;0.6&quot;&gt;60%&lt;&#x2F;meter&gt;</span><br></pre></td></tr></table></figure><p><strong>HTML object 标签</strong><br>使用object 元素在 HTML 加入 Flash 文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;object width&#x3D;&quot;400&quot; height&#x3D;&quot;400&quot; data&#x3D;&quot;helloworld.swf&quot;&gt;&lt;&#x2F;object&gt;</span><br></pre></td></tr></table></figure><p><strong>HTML optgroup 标签</strong><br>通过 optgroup 标签把相关的选项组合在一起：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt; </span><br><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot;&gt; </span><br><span class="line">&lt;title&gt;菜鸟教程(runoob.com)&lt;&#x2F;title&gt; </span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;select&gt;</span><br><span class="line">  &lt;optgroup label&#x3D;&quot;Swedish Cars&quot;&gt;</span><br><span class="line">    &lt;option value&#x3D;&quot;volvo&quot;&gt;Volvo&lt;&#x2F;option&gt;</span><br><span class="line">    &lt;option value&#x3D;&quot;saab&quot;&gt;Saab&lt;&#x2F;option&gt;</span><br><span class="line">  &lt;&#x2F;optgroup&gt;</span><br><span class="line">  &lt;optgroup label&#x3D;&quot;German Cars&quot;&gt;</span><br><span class="line">    &lt;option value&#x3D;&quot;mercedes&quot;&gt;Mercedes&lt;&#x2F;option&gt;</span><br><span class="line">    &lt;option value&#x3D;&quot;audi&quot;&gt;Audi&lt;&#x2F;option&gt;</span><br><span class="line">  &lt;&#x2F;optgroup&gt;</span><br><span class="line">&lt;&#x2F;select&gt;</span><br><span class="line"> </span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p><strong>HTML output 标签</strong><br>将计算结果显示在 output 元素中：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt; </span><br><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot;&gt; </span><br><span class="line">&lt;title&gt;菜鸟教程(runoob.com)&lt;&#x2F;title&gt; </span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;form oninput&#x3D;&quot;x.value&#x3D;parseInt(a.value)+parseInt(b.value)&quot;&gt;0</span><br><span class="line">&lt;input type&#x3D;&quot;range&quot; id&#x3D;&quot;a&quot; value&#x3D;&quot;50&quot;&gt;100</span><br><span class="line">+&lt;input type&#x3D;&quot;number&quot; id&#x3D;&quot;b&quot; value&#x3D;&quot;50&quot;&gt;</span><br><span class="line">&#x3D;&lt;output name&#x3D;&quot;x&quot; for&#x3D;&quot;a b&quot;&gt;&lt;&#x2F;output&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;&lt;strong&gt;注意:&lt;&#x2F;strong&gt;  Internet Explorer 不支持 output 标签。&lt;&#x2F;p&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p><strong>HTML5 progress 标签</strong><br>标记&quot;下载进度&quot;：</p>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">   &lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt; </span><br><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot;&gt; </span><br><span class="line">&lt;title&gt;菜鸟教程(runoob.com)&lt;&#x2F;title&gt; </span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">下载进度：</span><br><span class="line">&lt;progress value&#x3D;&quot;22&quot; max&#x3D;&quot;100&quot;&gt;</span><br><span class="line">&lt;&#x2F;progress&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;&lt;strong&gt;注意：&lt;&#x2F;strong&gt; IE 9 或者更早版本的 IE 浏览器不支持 progress 标签。&lt;&#x2F;p&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p><strong>HTML rp 标签</strong><br>一个 ruby 注释：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt; </span><br><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot;&gt; </span><br><span class="line">&lt;title&gt;菜鸟教程(runoob.com)&lt;&#x2F;title&gt; </span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;ruby&gt;</span><br><span class="line">  漢 &lt;rp&gt;(&lt;&#x2F;rp&gt;&lt;rt&gt;han&lt;&#x2F;rt&gt;&lt;rp&gt;)&lt;&#x2F;rp&gt;</span><br><span class="line">  字 &lt;rp&gt;(&lt;&#x2F;rp&gt;&lt;rt&gt;zi&lt;&#x2F;rt&gt;&lt;rp&gt;)&lt;&#x2F;rp&gt;</span><br><span class="line">&lt;&#x2F;ruby&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p><strong>HTML sub 标签</strong><br>下标文本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt; </span><br><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot;&gt; </span><br><span class="line">&lt;title&gt;菜鸟教程(runoob.com)&lt;&#x2F;title&gt; </span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;这个文本包含 &lt;sub&gt;下标&lt;&#x2F;sub&gt;文本。&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p&gt;这个文本包含 &lt;sup&gt;上标&lt;&#x2F;sup&gt; 文本。&lt;&#x2F;p&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p><strong>HTML accesskey 属性</strong><br>带有指定快捷键的超链接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt; </span><br><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot;&gt; </span><br><span class="line">&lt;title&gt;菜鸟教程(runoob.com)&lt;&#x2F;title&gt; </span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;www.runoob.com&#x2F;html&#x2F;html-tutorial.html&quot; accesskey&#x3D;&quot;h&quot;&gt;HTML 教程&lt;&#x2F;a&gt;&lt;br&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;www.runoob.com&#x2F;css&#x2F;css-tutorial.html&quot; accesskey&#x3D;&quot;c&quot;&gt;CSS 教程&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt; accesskey 属性规定了激活元素的快捷键。&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p&gt;&lt;strong&gt;注意：&lt;&#x2F;strong&gt; 不同浏览器使用的快捷键方法不同：&lt;&#x2F;p&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li&gt;IE, Chrome, Safari, Opera 15+: [ALT] + &lt;em&gt;accesskey&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;</span><br><span class="line">&lt;li&gt;Opera prior version 15: [SHIFT] [ESC] + &lt;em&gt;accesskey&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;</span><br><span class="line">&lt;li&gt;Firefox: [ALT] [SHIFT] + &lt;em&gt;accesskey&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;</span><br><span class="line">&lt;&#x2F;ul&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Termius入门教程初探(Getting started with Termius)</title>
      <link href="%E7%BF%BB%E8%AF%91/14555/"/>
      <url>%E7%BF%BB%E8%AF%91/14555/</url>
      
        <content type="html"><![CDATA[<p>翻译自<a href="https://blog.termius.com/getting-started-with-termius-96b5c27bf63b">Getting started with Termius</a></p><p>——习立风（2018/11/28）</p><p>In the age of I-can-control-everything-I-own-from-my-phone, it’s taken for granted that you can control your television, stereo, temperature, lights, and your car’s engine from a device that you hold in your hand. But it’s easy to forget that our computers — whether they’re at home, at the office, at school, or hosted in the cloud — are no different. It’s easy to control them, remotely and securely, using Termius.<br>在这个我可以通过手机控制一切（I-can-control-everything-I-own-from-my-phone）的时代，人们想当然地认为，你可以通过手中的设备来控制电视、音响、温度、灯光和汽车引擎。但我们很容易忘记，我们的电脑——无论是在家里、在办公室、在学校，还是托管在云端——和以前都是一样的没什么不同。使用Termius很容易远程和安全地控制它们。</p><p>Termius is an app for Android, iOS, Windows, and Linux that provides a convenient, consistent interface for all things SSH. It offers improved performance on mobile using Mosh, a companion protocol that maintains sessions when signals are lost, your Wi-Fi network changes, or your device happens to shut down.<br>Termius是一个适用于Android、iOS、Windows和Linux的应用程序，它为所有SSH提供了方便、一致的界面。它在移动设备上使用Mosh提供了更好的性能，Mosh是一种配套协议，当信号丢失、Wi-Fi网络发生变化或设备碰巧关机时，Mosh可以维护会话。</p><p>Let’s go over how to set up a basic SSH connection using Termius.<br>让我们看一下如何使用Termius建立一个基本的SSH连接。</p><p>Install Termius:</p><ul><li>iOS: get it on the <a href="https://itunes.apple.com/us/app/termius-ssh-mosh-and-telnet-client/id549039908?mt=8">App Store</a>.</li><li>Android: get it on the <a href="https://play.google.com/store/apps/details?id=com.server.auditor.ssh.client">Play Store</a>.</li><li>Windows: download the installer from <a href="https://www.termius.com/#download">Termius.com</a>.</li><li>Linux: install <a href="https://github.com/snapcore/snapd">snap</a> (e.g. <code>sudo apt update &amp;&amp; sudo apt install snapd</code>), then install Termius with <code>sudo snap install termius-app</code>.</li></ul><p>安装Termius:</p><ul><li>iOS: 从 <a href="https://itunes.apple.com/us/app/termius-ssh-mosh-and-telnet-client/id549039908?mt=8">App Store</a>获取.</li><li>Android: 从 <a href="https://play.google.com/store/apps/details?id=com.server.auditor.ssh.client">Play Store</a>获取.</li><li>Windows: 从 <a href="https://www.termius.com/#download">Termius.com</a>下载.</li><li>Linux: 安装 <a href="https://github.com/snapcore/snapd">snap</a> (e.g. <code>sudo apt update &amp;&amp; sudo apt install snapd</code>),然后用<code>sudo snap install termius-app</code>安装Termius.</li></ul><p>Launch Termius. In the <strong>Hosts</strong> section, select <strong>+New Host</strong>.<br>加载运行Termius。在<strong>Hosts</strong>部分中，选择**+New Host**。</p><p><img src="/%E7%BF%BB%E8%AF%91/14555/termius.png" alt="termius"></p><p>Enter a <strong>Label</strong> for your new host — whatever you’d like. This is how your connection will appear in the Termius host list.<br>为您的新主机输入一个<strong>Label</strong>——任何您想要的。这就是您的连接在Termius主机列表中的显示方式。</p><p>Then, enter the <strong>Address</strong> and <strong>Port</strong> of your host computer. The address can be a FQDN, the host’s ID on your local network, the IP address, etc. The port number for SSH is <strong>22</strong> by default.<br>然后，输入主机的<strong>Address</strong>和<strong>Port</strong>。该地址可以是FQDN、本地网络上主机的ID、IP地址等。SSH的端口号默认为<strong>22</strong>。</p><p>Enter your <strong>Username</strong> or <strong>Password</strong> now if you’d like to store those credentials, or leave the fields blank to be prompted at every login. Termius also allows you to define custom <strong>Groups</strong> and <strong>Tags</strong> for each host. You can edit these later if you’d like.<br>如果您想存储这些凭据，请立即输入您的<strong>Username</strong>或<strong>Password</strong>，或者将字段留空，以便在每次登录时提示。Termius还允许您为每个主机定义自定义<strong>Groups</strong>和<strong>Tags</strong>。如果您愿意，您可以稍后编辑这些内容。</p><p><img src="/%E7%BF%BB%E8%AF%91/14555/termiusHost.gif" alt="termiusHost"></p><p>When you’re finished, select <strong>Save</strong>.<br>To connect to your host, select it in the Hosts list, and choose <strong>Connect</strong>.<br>完成后，选择<strong>Save</strong>。<br>要连接到主机，请在Hosts列表中选择它，并选择<strong>connect</strong>。</p><p><img src="/%E7%BF%BB%E8%AF%91/14555/termiusConnect.png" alt="termiusConnect"></p><p>You’ll be asked to verify the RSA fingerprint of your remote computer, and to supply login credentials if necessary.<br>And voilà: your remote computer’s command line, in the palm of your hand. You’ll find lots of little conveniences in Termius: for instance, using the Terminal Touch feature for mobile, you can swipe up to access your command history.<br>您将被要求验证远程计算机的RSA指纹，并在必要时提供登录凭证。<br>瞧，你的远程计算机的命令行，就在你的手掌上。在Termius中，您会发现许多小的便捷操作:例如，使用<a href="http://support.termius.com/knowledgebase/articles/943924--getting-started-terminal-touch">移动终端触摸</a>功能，您可以向上滑动以访问命令历史记录。</p><p><img src="/%E7%BF%BB%E8%AF%91/14555/bianjie.gif" alt="bianjie"></p><p>There are tons of cool ways to control your computers remotely, from any of your devices, using Termius. We’ll cover a few of these in our next article.</p><p>有很多很酷的方法可以远程控制你的电脑，从你的任何设备，使用Termius。我们将在下一篇文章中介绍其中的一些。</p>]]></content>
      
      
      <categories>
          
          <category> 翻译 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> 翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nodejs 请求Alexa报错：&#39;error_description&#39;: &#39;The request is missing a required parameter :  Content-Type&#39;,&#39; error&#39;: &#39;invalid_request&#39;</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/13851/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/13851/</url>
      
        <content type="html"><![CDATA[<h1 id="错误一"><a class="markdownIt-Anchor" href="#错误一"></a> 错误一：</h1><p><strong>代码如下——</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">app.get(&#39;&#x2F;connect&#39;, function(req, res)&#123;</span><br><span class="line">    payload &#x3D; &#123;&quot;client_id&quot; : config.Client_ID, </span><br><span class="line">               &quot;client_secret&quot; : config.Client_Secret, </span><br><span class="line">               &quot;refresh_token&quot; : &#39;https:&#x2F;&#x2F;localhost&#x2F;connect&#39;, </span><br><span class="line">               &quot;speech&quot;: &quot;lalallalalalala&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    url &#x3D; &quot;https:&#x2F;&#x2F;api.amazon.com&#x2F;auth&#x2F;o2&#x2F;token&#x2F;?grant_type&#x3D;refresh_token&amp;client_id&#x3D;&quot; + config.Client_ID +</span><br><span class="line">    &quot;&amp;client_secret&#x3D;&quot; + config.Client_Secret;</span><br><span class="line">    request.post(&#123;</span><br><span class="line">            url:url, </span><br><span class="line">            headers: &#123;</span><br><span class="line">            &#125;,</span><br><span class="line">            formData: payload</span><br><span class="line">    &#125;, function optionalCallback(err, httpResponse, body) &#123;</span><br><span class="line">    if (err) &#123;</span><br><span class="line">        return console.error(&#39;upload failed:&#39;, err);</span><br><span class="line">    &#125;</span><br><span class="line">        res.end(body);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>报错<code>&quot;error_description&quot;:&quot;The request is missing a required parameter : Content-Type&quot;,&quot;error&quot;:&quot;invalid_request&quot;</code></p><p>**解决方案:**在<code>headers</code>　里添加——</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">headers: &#123;</span><br><span class="line">         &quot; Accept&quot;: &quot;application&#x2F;x-www-form-urlencoded&quot;,</span><br><span class="line">         &quot;Content-Type&quot;:&quot;application&#x2F;x-www-form-urlencoded&quot;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h1 id="错误二"><a class="markdownIt-Anchor" href="#错误二"></a> 错误二:</h1><p><strong>报错如下——</strong><br><code>&quot;error_description&quot;:&quot;Malformed request&quot;,&quot;error&quot;:&quot;invalid_request&quot;</code></p><p>解决方案，使用<code>request</code>中<code>request.post</code> 函数体内请求<code>url</code>错误，更改如下即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">url &#x3D; &quot;https:&#x2F;&#x2F;api.amazon.com&#x2F;auth&#x2F;o2&#x2F;token&#x2F;?grant_type&#x3D;refresh_token&amp;client_id&#x3D;&quot; + config.Client_ID +</span><br><span class="line">&quot;&amp;client_secret&#x3D;&quot; + config.Client_Secret;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> Bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Agl编译html＋Alexa的Qt项目手记</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/55115/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/55115/</url>
      
        <content type="html"><![CDATA[<p>一、新建文件夹并进入<code>Alexa_hmi_demo</code>目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ cd &#x2F;home&#x2F;pattenkuo&#x2F;AGL&#x2F;meta-agl-demo&#x2F;recipes-demo-hmi</span><br><span class="line">$ mkdir Alexa_hmi_demo</span><br><span class="line">$ cd Alexa_hmi_demo</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>二、新建<code>Alexa_hmi_demo.bb</code>文件和<code>Alexa_hmi_demo</code>文件夹。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir Alexa_hmi_demo</span><br><span class="line">$ vi Alexa_hmi_demo.bb</span><br></pre></td></tr></table></figure><p><code>Alexa_hmi_demo.bb</code>文件内容如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">SUMMARY     &#x3D; &quot;AGL Reference Alexa_hmi_demo HMI application.&quot;</span><br><span class="line">DESCRIPTION &#x3D; &quot;This application provides the HMI part of the SmartDeviceLink (SDL).  It uses Generic HMI provided by SDL project.&quot;</span><br><span class="line"></span><br><span class="line">SECTION     &#x3D; &quot;apps&quot;</span><br><span class="line"></span><br><span class="line">#LICENSE          &#x3D; &quot;GPLv2&quot;</span><br><span class="line">#LIC_FILES_CHKSUM &#x3D; &quot;file:&#x2F;&#x2F;COPYING;md5&#x3D;947b2d60ca3872e172034438e9801200&quot;</span><br><span class="line">LICENSE          &#x3D; &quot;CLOSED&quot;</span><br><span class="line">#LIC_FILES_CHKSUM &#x3D; &quot;&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DEPENDS +&#x3D; &quot;libqtappfw qtquickcontrols2 qtwebsockets qtbase qtwebview qtwebengine&quot;</span><br><span class="line">DEPENDS +&#x3D; &quot;virtual&#x2F;libhomescreen qlibwindowmanager qtvirtualkeyboard&quot;</span><br><span class="line"></span><br><span class="line">inherit qmake5 pkgconfig aglwgt systemd</span><br><span class="line"></span><br><span class="line"># Refer local subdirectory for now</span><br><span class="line"></span><br><span class="line">#SRCREV  &#x3D; &quot;&quot;</span><br><span class="line"></span><br><span class="line">#SRC_URI &#x3D; &quot;&quot;</span><br><span class="line">SRC_URI +&#x3D; &quot; \</span><br><span class="line">  file:&#x2F;&#x2F;*;subdir&#x3D;git \</span><br><span class="line">&quot;</span><br><span class="line">PN&#x3D;&quot;Alexa_hmi_demo&quot;</span><br><span class="line">S &#x3D; &quot;$&#123;WORKDIR&#125;&#x2F;git&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Explicitly specify hmi content and runtime dependencies.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">do_install() &#123;</span><br><span class="line">    install -d $&#123;D&#125;&#x2F;usr&#x2F;share&#x2F;$&#123;PN&#125;</span><br><span class="line"></span><br><span class="line">    cp -r -f $&#123;WORKDIR&#125;&#x2F;git&#x2F;Alexa_hmi&#x2F;* $&#123;D&#125;&#x2F;usr&#x2F;share&#x2F;$&#123;PN&#125;&#x2F;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PATH_prepend &#x3D; &quot;$&#123;STAGING_DIR_NATIVE&#125;$&#123;OE_QMAKE_PATH_QT_BINS&#125;:&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>三、进入<code>Alexa_hmi_demo</code>目录下，并新建<code>app</code>、<code>package</code>、<code>Alexa_hmi_demo</code>三个文件夹和<code>Alexa_hmi_demo.pro</code>文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ cd Alexa_hmi_demo</span><br><span class="line">$ mkdir app package Alexa_hmi_demo</span><br><span class="line">$ vi Alexa_hmi_demo.pro</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>Alexa_hmi_demo.pro</code>文件内容如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">TEMPLATE &#x3D; subdirs</span><br><span class="line">SUBDIRS &#x3D; app package</span><br><span class="line">package.depends +&#x3D; app</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>四、进入<code>package</code>目录下，并新建<code>config.xml</code>、<code>package.pro</code>两个文件并把应用图标<code>icon.svg</code>文件拖入，以下仅演示前两个文件内容，应用图标自己拖入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ cd package</span><br><span class="line">$ vi config.xml</span><br><span class="line">$ vi package.pro</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>config.xml</code>文件内容如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;widget xmlns&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;ns&#x2F;widgets&quot; id&#x3D;&quot;Alexa_hmi_demo&quot; version&#x3D;&quot;1.0&quot;&gt;</span><br><span class="line">  &lt;name&gt;Alexa_hmi_demo&lt;&#x2F;name&gt;</span><br><span class="line">  &lt;icon src&#x3D;&quot;icon.svg&quot;&#x2F;&gt;</span><br><span class="line">  &lt;content src&#x3D;&quot;bin&#x2F;Alexa_hmi_demo&quot; type&#x3D;&quot;application&#x2F;vnd.agl.native&quot;&#x2F;&gt;</span><br><span class="line">  &lt;description&gt;This is a Alexa_hmi demo application for homescreen&lt;&#x2F;description&gt;</span><br><span class="line">  &lt;author&gt;junma&lt;&#x2F;author&gt;</span><br><span class="line">  &lt;license&gt;APL 2.0&lt;&#x2F;license&gt;</span><br><span class="line">  &lt;feature name&#x3D;&quot;urn:AGL:widget:required-api&quot;&gt;</span><br><span class="line">    &lt;param name&#x3D;&quot;homescreen&quot; value&#x3D;&quot;ws&quot; &#x2F;&gt;</span><br><span class="line">    &lt;param name&#x3D;&quot;windowmanager&quot; value&#x3D;&quot;ws&quot; &#x2F;&gt;</span><br><span class="line">  &lt;&#x2F;feature&gt;</span><br><span class="line">  &lt;feature name&#x3D;&quot;urn:AGL:widget:required-permission&quot;&gt;</span><br><span class="line">    &lt;param name&#x3D;&quot;urn:AGL:permission::public:no-htdocs&quot; value&#x3D;&quot;required&quot; &#x2F;&gt;</span><br><span class="line">  &lt;&#x2F;feature&gt;</span><br><span class="line">&lt;&#x2F;widget&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>package.pro</code>文件内容如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">DISTFILES &#x3D; icon.svg config.xml</span><br><span class="line"></span><br><span class="line">copy_icon.target &#x3D; $$OUT_PWD&#x2F;root&#x2F;icon.svg</span><br><span class="line">copy_icon.depends &#x3D; $$_PRO_FILE_PWD_&#x2F;icon.svg</span><br><span class="line">copy_icon.commands &#x3D; $(COPY_FILE) \&quot;$$replace(copy_icon.depends, &#x2F;, $$QMAKE_DIR_SEP)\&quot; \&quot;$$replace(copy_icon.target, &#x2F;, $$QMAKE_DIR_SEP)\&quot;</span><br><span class="line">QMAKE_EXTRA_TARGETS +&#x3D; copy_icon</span><br><span class="line">PRE_TARGETDEPS +&#x3D; $$copy_icon.target</span><br><span class="line"></span><br><span class="line">copy_config.target &#x3D; $$OUT_PWD&#x2F;root&#x2F;config.xml</span><br><span class="line">copy_config.depends &#x3D; $$_PRO_FILE_PWD_&#x2F;config.xml</span><br><span class="line">copy_config.commands &#x3D; $(COPY_FILE) \&quot;$$replace(copy_config.depends, &#x2F;, $$QMAKE_DIR_SEP)\&quot; \&quot;$$replace(copy_config.target, &#x2F;, $$QMAKE_DIR_SEP)\&quot;</span><br><span class="line">QMAKE_EXTRA_TARGETS +&#x3D; copy_config</span><br><span class="line">PRE_TARGETDEPS +&#x3D; $$copy_config.target</span><br><span class="line"></span><br><span class="line">wgt.target &#x3D; package</span><br><span class="line">wgt.commands &#x3D; wgtpkg-pack -f -o Alexa_hmi_demo.wgt root</span><br><span class="line"></span><br><span class="line">QMAKE_EXTRA_TARGETS +&#x3D; wgt</span><br><span class="line"></span><br><span class="line">deploy.files &#x3D; Alexa_hmi_demo.wgt</span><br><span class="line">deploy.path &#x3D; &#x2F;usr&#x2F;AGL&#x2F;apps&#x2F;autoinstall</span><br><span class="line">INSTALLS +&#x3D; deploy</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>五、进入<code>app</code>目录下，并新建<code>app.pri</code>、<code>app.pro</code>、<code>deployment.pri</code>、<code>TestWebEngine.pri</code>四个文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ cd ..&#x2F;app</span><br><span class="line">$ vi app.pri</span><br><span class="line">$ vi app.pro</span><br><span class="line">$ vi deployment.pri</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>app.pri</code>文件内容如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">TEMPLATE &#x3D; app</span><br><span class="line">QMAKE_LFLAGS +&#x3D; &quot;-Wl,--hash-style&#x3D;gnu -Wl,--as-needed&quot;</span><br><span class="line">load(configure)</span><br><span class="line">qtCompileTest(libhomescreen)</span><br><span class="line"></span><br><span class="line">config_libhomescreen &#123;</span><br><span class="line">    CONFIG +&#x3D; link_pkgconfig</span><br><span class="line">    PKGCONFIG +&#x3D; homescreen</span><br><span class="line">    DEFINES +&#x3D; HAVE_LIBHOMESCREEN</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DESTDIR &#x3D; $$&#123;OUT_PWD&#125;&#x2F;..&#x2F;package&#x2F;root&#x2F;bin</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>app.pro</code>文件内容如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">TARGET &#x3D; Alexa_hmi_demo</span><br><span class="line">QT &#x3D; quickcontrols2 websockets dbus qml quick  webview webengine webenginewidgets</span><br><span class="line"></span><br><span class="line">SOURCES &#x3D; main.cpp</span><br><span class="line"></span><br><span class="line">CONFIG +&#x3D; link_pkgconfig</span><br><span class="line">PKGCONFIG +&#x3D; libhomescreen qlibwindowmanager qtappfw</span><br><span class="line"></span><br><span class="line">RESOURCES +&#x3D; qml.qrc</span><br><span class="line"></span><br><span class="line"># Additional import path used to resolve QML modules in Qt Creator&#39;s code model</span><br><span class="line">QML_IMPORT_PATH &#x3D;</span><br><span class="line"></span><br><span class="line"># Default rules for deployment.</span><br><span class="line">include(app.pri)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>deployment.pri</code>文件内容如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">unix:!android &#123;</span><br><span class="line">    isEmpty(target.path) &#123;</span><br><span class="line">        qnx &#123;</span><br><span class="line">            target.path &#x3D; &#x2F;tmp&#x2F;$$&#123;TARGET&#125;&#x2F;bin</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            target.path &#x3D; &#x2F;opt&#x2F;$$&#123;TARGET&#125;&#x2F;bin</span><br><span class="line">        &#125;</span><br><span class="line">        export(target.path)</span><br><span class="line">    &#125;</span><br><span class="line">    INSTALLS +&#x3D; target</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export(INSTALLS)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>六、拖入你已写好的Qt项目三个文件<code>main.cpp</code>、<code>main.qml</code>、<code>qml.qrc</code>到当前<code>app</code>目录下,代码保密需要，这里不再演示文件内容。</p><p>七、把你的网页文件拖进与<code>app</code>同级的<code>Alexa_hmi_demo</code>文件夹下。</p><p>八、现在终于可以编译了！进入AGL下的build文件夹下，开始编译吧！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ bitbake -c compile -f -v sdl-hmi-demo     &#x2F;&#x2F;如kernel是 “linux-renesas”</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>九、成功生成<code>sdl-hmi-demo.wgt</code>安装包，到<code>/home/pattenkuo/AGL/build/tmp/work/aarch64-agl-linux/Alexa_hmi_demo/hmi-demo/build/package</code>目录下可以看到。</p>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 程序猿的学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Alexa cmake /usr/bin/cmake:  /usr/local/lib/libcurl.so.4:  no version information available  (required by /usr/bin/cmake)</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/40686/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/40686/</url>
      
        <content type="html"><![CDATA[<p>补充20181112：我在安装Alexa的过程中，follow this guidence “<a href="https://github.com/alexa/avs-device-sdk/wiki/Ubuntu-Linux-Quick-Start-Guide">Ubuntu Linux Quick Start Guide</a>”,this error occured。</p><p>但是按照下面修复了之后才发现出现了另一个错误，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C SampleApplication:Failed to initialize SampleApplication</span><br><span class="line">Failed to create to SampleApplication!</span><br></pre></td></tr></table></figure><p>最后试了好多次才发现，由于之前<code>git clone https://github.com/tatsuhiro-t/nghttp2.git</code><br>和<br><code>git clone git://github.com/alexa/avs-device-sdk.git</code><br>速度太慢了，几k／s，所以用了同事前段时间下载的包。最后我把这两个包换成最新的包，Alexa就成功运行Sample了——</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">$ .&#x2F;SampleApp&#x2F;src&#x2F;SampleApp Integration&#x2F;AlexaClientSDKConfig.json</span><br><span class="line"></span><br><span class="line">2018-11-13 03:41:10.454 [  1] I sdkVersion: 1.10.0</span><br><span class="line">configFile Integration&#x2F;AlexaClientSDKConfig.json</span><br><span class="line">#################################################</span><br><span class="line">#       NOTIFICATION INDICATOR STATE: OFF       #</span><br><span class="line">#################################################</span><br><span class="line"></span><br><span class="line">##################################</span><br><span class="line">#       NOT YET AUTHORIZED       #</span><br><span class="line">##################################</span><br><span class="line"></span><br><span class="line">################################################################################################</span><br><span class="line">#       To authorize, browse to: &#39;https:&#x2F;&#x2F;amazon.com&#x2F;us&#x2F;code&#39; and enter the code: AMCEMH       #</span><br><span class="line">################################################################################################</span><br><span class="line"></span><br><span class="line">#################################################</span><br><span class="line">#       Checking for authorization (1)...       #</span><br><span class="line">#################################################</span><br><span class="line"></span><br><span class="line">ALSA lib pcm.c:2266:(snd_pcm_open_noupdate) Unknown PCM cards.pcm.rear</span><br><span class="line">ALSA lib pcm.c:2266:(snd_pcm_open_noupdate) Unknown PCM cards.pcm.center_lfe</span><br><span class="line">ALSA lib pcm.c:2266:(snd_pcm_open_noupdate) Unknown PCM cards.pcm.side</span><br><span class="line">ALSA lib pcm_route.c:867:(find_matching_chmap) Found no matching channel map</span><br><span class="line">ALSA lib pcm_route.c:867:(find_matching_chmap) Found no matching channel map</span><br><span class="line">ALSA lib pcm_route.c:867:(find_matching_chmap) Found no matching channel map</span><br><span class="line">ALSA lib pcm_route.c:867:(find_matching_chmap) Found no matching channel map</span><br><span class="line">                  #    #     #  #####      #####  ######  #    #              </span><br><span class="line">                 # #   #     # #     #    #     # #     # #   #               </span><br><span class="line">                #   #  #     # #          #       #     # #  #                </span><br><span class="line">               #     # #     #  #####      #####  #     # ###                 </span><br><span class="line">               #######  #   #        #          # #     # #  #                </span><br><span class="line">               #     #   # #   #     #    #     # #     # #   #               </span><br><span class="line">               #     #    #     #####      #####  ######  #    #              </span><br><span class="line">                                                                              </span><br><span class="line">       #####                                           #                      </span><br><span class="line">      #     #   ##   #    # #####  #      ######      # #   #####  #####      </span><br><span class="line">      #        #  #  ##  ## #    # #      #          #   #  #    # #    #     </span><br><span class="line">       #####  #    # # ## # #    # #      #####     #     # #    # #    #     </span><br><span class="line">            # ###### #    # #####  #      #         ####### #####  #####      </span><br><span class="line">      #     # #    # #    # #      #      #         #     # #      #          </span><br><span class="line">       #####  #    # #    # #      ###### ######    #     # #      #          </span><br><span class="line"></span><br><span class="line">       SDK Version 1.10.0</span><br><span class="line"></span><br><span class="line">+----------------------------------------------------------------------------+</span><br><span class="line">|                                  Options:                                  |</span><br><span class="line">| Tap to talk:                                                               |</span><br><span class="line">|       Press &#39;t&#39; and Enter followed by your query (no need for the &#39;Alexa&#39;).|</span><br><span class="line">| Hold to talk:                                                              |</span><br><span class="line">|       Press &#39;h&#39; followed by Enter to simulate holding a button.            |</span><br><span class="line">|       Then say your query (no need for the &#39;Alexa&#39;).                       |</span><br><span class="line">|       Press &#39;h&#39; followed by Enter to simulate releasing a button.          |</span><br><span class="line">| Stop an interaction:                                                       |</span><br><span class="line">|       Press &#39;s&#39; and Enter to stop an ongoing interaction.                  |</span><br><span class="line">| Playback Controls:                                                         |</span><br><span class="line">|       Press &#39;1&#39; for a &#39;PLAY&#39; button press.                                 |</span><br><span class="line">|       Press &#39;2&#39; for a &#39;PAUSE&#39; button press.                                |</span><br><span class="line">|       Press &#39;3&#39; for a &#39;NEXT&#39; button press.                                 |</span><br><span class="line">|       Press &#39;4&#39; for a &#39;PREVIOUS&#39; button press.                             |</span><br><span class="line">| Settings:                                                                  |</span><br><span class="line">|       Press &#39;c&#39; followed by Enter at any time to see the settings screen.  |</span><br><span class="line">| Speaker Control:                                                           |</span><br><span class="line">|       Press &#39;p&#39; followed by Enter at any time to adjust speaker settings.  |</span><br><span class="line">| Firmware Version:                                                          |</span><br><span class="line">|       Press &#39;f&#39; followed by Enter at any time to report a different        |</span><br><span class="line">|       firmware version.                                                    |</span><br><span class="line">| Info:                                                                      |</span><br><span class="line">|       Press &#39;i&#39; followed by Enter at any time to see the help screen.      |</span><br><span class="line">| Reset device:                                                              |</span><br><span class="line">|       Press &#39;k&#39; followed by Enter at any time to reset your device. This   |</span><br><span class="line">|       will erase any data stored in the device and you will have to        |</span><br><span class="line">|       re-register your device.                                             |</span><br><span class="line">|       This option will also exit the application.                          |</span><br><span class="line">| Reauthorize device:                                                        |</span><br><span class="line">|       Press &#39;z&#39; followed by Enter at any time to re-authorize your device. |</span><br><span class="line">|       This will erase any data stored in the device and initiate           |</span><br><span class="line">|       re-authorization.                                                    |</span><br><span class="line">| Quit:                                                                      |</span><br><span class="line">|       Press &#39;q&#39; followed by Enter at any time to quit the application.     |</span><br><span class="line">+----------------------------------------------------------------------------+</span><br><span class="line"></span><br><span class="line">#################################################</span><br><span class="line">#       Checking for authorization (2)...       #</span><br><span class="line">#################################################</span><br><span class="line"></span><br><span class="line">#################################################</span><br><span class="line">#       Checking for authorization (3)...       #</span><br><span class="line">#################################################</span><br><span class="line"></span><br><span class="line">#################################################</span><br><span class="line">#       Checking for authorization (4)...       #</span><br><span class="line">#################################################</span><br><span class="line"></span><br><span class="line">#################################################</span><br><span class="line">#       Checking for authorization (5)...       #</span><br><span class="line">#################################################</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><p>----------------华丽的分割线----------------------</p><hr><p>原文2018111１——</p><p>get help from <a href="https://stackoverflow.com/questions/30017397/error-curl-usr-local-lib-libcurl-so-4-no-version-information-available-requ/38896967">error: curl: /usr/local/lib/libcurl.so.4: no version information available (required by curl)</a></p><p>I also had such problem in installing CMAKE, I type cmake, the output is:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cmake: &#x2F;usr&#x2F;local&#x2F;lib&#x2F;libcurl.so.4: no version information available     (required by cmake)</span><br><span class="line">Segmentation fault (core dumped)&#96;</span><br></pre></td></tr></table></figure><p>Something like yours.<br>First,I locate the path of libcurl.so.4:<br><code>locate libcurl.so.4</code></p><p>the result is:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;home&#x2F;chenjian&#x2F;software&#x2F;curl-7.20.0&#x2F;lib&#x2F;.libs&#x2F;libcurl.so.4</span><br><span class="line">&#x2F;home&#x2F;chenjian&#x2F;software&#x2F;curl-7.20.0&#x2F;lib&#x2F;.libs&#x2F;libcurl.so.4.2.0</span><br><span class="line">&#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libcurl.so.4</span><br><span class="line">&#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libcurl.so.4.3.0</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;lib&#x2F;libcurl.so.4</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;lib&#x2F;libcurl.so.4.2.0</span><br></pre></td></tr></table></figure><p>Second, find the link of libcurl.so.4,type:<br><code>ls -l /usr/local/lib/libcurl.so.4</code></p><p>the result:<br><code>lrwxrwxrwx 1 root root 16 Aug 16 21:15 /usr/local/lib/libcurl.so.4 -&gt; libcurl.so.4.2.0</code></p><p>Third, remove it and rebuild the link to libcurl.so.4.3.0:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -rf &#x2F;usr&#x2F;local&#x2F;lib&#x2F;libcurl.so.4</span><br><span class="line">sudo ln -s &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libcurl.so.4.3.0 &#x2F;usr&#x2F;local&#x2F;lib&#x2F;libcurl.so.4</span><br></pre></td></tr></table></figure><p>Next, check it:<br><code>ls -l /usr/local/lib/libcurl.so.4</code></p><p>well, the output is:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lrwxrwxrwx 1 root root 42 Aug 24 09:23 &#x2F;usr&#x2F;local&#x2F;lib&#x2F;libcurl.so.4 -&gt; &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libcurl.so.4.3.0</span><br></pre></td></tr></table></figure><p>Then, I type<code>cmake -version</code>, and the result is</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cmake version 3.2.2</span><br><span class="line"></span><br><span class="line">CMake suite maintained and supported by Kitware (kitware.com&#x2F;cmake).</span><br></pre></td></tr></table></figure><p>After fixing the bug, I think it may be caused by multi-version of curl, like me, the origin ubuntu environment had one, but I install another one.</p><p>Thx for <a href="https://stackoverflow.com/users/6355684/chenjian">CHENJIAN</a></p>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> Bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Could NOT find GTest (missing:  GTEST_LIBRARY GTEST_MAIN_LIBRARY)  on Ubuntu16.04</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/7730/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/7730/</url>
      
        <content type="html"><![CDATA[<p>get the solution from <a href="https://stackoverflow.com/questions/24295876/cmake-cannot-find-googletest-required-library-in-ubuntu">CMake cannot find GoogleTest required library in Ubuntu</a></p><p>Google test was probably not properly installed (libgtest-dev may install only source files that needed to be compiled). I had the same problem and I followed the instructions from <a href="http://www.eriksmistad.no/getting-started-with-google-test-on-ubuntu/">http://www.eriksmistad.no/getting-started-with-google-test-on-ubuntu/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libgtest-dev</span><br><span class="line">sudo apt-get install cmake # install cmake</span><br><span class="line">cd &#x2F;usr&#x2F;src&#x2F;gtest</span><br><span class="line">sudo cmake CMakeLists.txt</span><br><span class="line">sudo make</span><br><span class="line"></span><br><span class="line">#copy or symlink libgtest.a and libgtest_main.a to your &#x2F;usr&#x2F;lib folder</span><br><span class="line">sudo cp *.a &#x2F;usr&#x2F;lib</span><br></pre></td></tr></table></figure><p>This worked for me.</p><p>Thanks for <a href="https://stackoverflow.com/users/1433373/ivan-kush">Ivan Kush</a></p>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> Bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>avs-device-sdk Alexa是什么?</title>
      <link href="%E7%BF%BB%E8%AF%91/61546/"/>
      <url>%E7%BF%BB%E8%AF%91/61546/</url>
      
        <content type="html"><![CDATA[<p>translated from <a href="https://github.com/alexa/avs-device-sdk">avs-device-sdk</a> By PattenKuo（习立风）　2018/11/12</p><h3 id="what-is-the-alexa-voice-service-avs"><a class="markdownIt-Anchor" href="#what-is-the-alexa-voice-service-avs"></a> What is the Alexa Voice Service (AVS)?</h3><h3 id="什么是alexa语音服务avs"><a class="markdownIt-Anchor" href="#什么是alexa语音服务avs"></a> 什么是Alexa语音服务(AVS)?</h3><p>The Alexa Voice Service (AVS) enables developers to integrate Alexa directly into their products, bringing the convenience of voice control to any connected device. AVS provides developers with access to a suite of resources to quickly and easily build Alexa-enabled products, including APIs, hardware development kits, software development kits, and documentation.</p><p><a href="https://developer.amazon.com/alexa-voice-service">Learn more »</a></p><p>Alexa Voice Service (AVS)允许开发人员将Alexa直接集成到他们的产品中，为任何连接设备带来语音控制的便利。AVS为开发人员提供了一套资源，可以快速轻松地构建支持alexa的产品，包括api、硬件开发工具包、软件开发工具包和文档。</p><p><a href="https://developer.amazon.com/alexa-voice-service">更多 »</a></p><h3 id="overview-of-the-avs-device-sdk"><a class="markdownIt-Anchor" href="#overview-of-the-avs-device-sdk"></a> Overview of the AVS Device SDK</h3><h3 id="avs设备sdk的概述"><a class="markdownIt-Anchor" href="#avs设备sdk的概述"></a> AVS设备SDK的概述</h3><p>The AVS Device SDK provides C+±based (11 or later) libraries that leverage the AVS API to create device software for Alexa-enabled products. It is modular and abstracted, providing components for handling discrete functions such as speech capture, audio processing, and communications, with each component exposing the APIs that you can use and customize for your integration. It also includes a sample app, which demonstrates the interactions with AVS.</p><p>AVS设备SDK提供基于c++(11或更高版本)的库，它们利用AVS API为支持alexa的产品创建设备软件。它是模块化和抽象的，提供用于处理离散功能(如语音捕获、音频处理和通信)的组件，每个组件都公开可用于集成并自定义的api。它还包括一个演示与AVS的交互示例的应用程序。</p><h3 id="get-started"><a class="markdownIt-Anchor" href="#get-started"></a> Get Started</h3><h3 id="开始"><a class="markdownIt-Anchor" href="#开始"></a> 开始</h3><p>You can set up the SDK on the following platforms:<br>您可以在以下平台上设置SDK:</p><ul><li><a href="https://github.com/alexa/avs-device-sdk/wiki/Ubuntu-Linux-Quick-Start-Guide">Ubuntu Linux</a></li><li><a href="https://github.com/alexa/avs-device-sdk/wiki/Raspberry-Pi-Quick-Start-Guide-with-Script">Raspberry Pi</a> (Raspbian Stretch)</li><li><a href="https://github.com/alexa/avs-device-sdk/wiki/macOS-Quick-Start-Guide">macOS</a></li><li><a href="https://github.com/alexa/avs-device-sdk/wiki/Windows-Quick-Start-Guide-with-Script">Windows 64-bit</a></li><li><a href="https://github.com/alexa/avs-device-sdk/wiki/Linux-Reference-Guide">Generic Linux</a></li><li><a href="https://github.com/alexa/avs-device-sdk/wiki/Android-Quick-Start-Guide">Android</a></li></ul><p>You can also prototype with a third party development kit:<br>您还可以使用第三方开发工具包作为原型:</p><ul><li><a href="https://github.com/xmos/vocalfusion-avs-setup">XMOS VocalFusion 4-Mic Kit</a> - Learn More <a href="https://developer.amazon.com/alexa-voice-service/dev-kits/xmos-vocal-fusion">Here</a></li><li><a href="https://www.nxp.com/docs/en/user-guide/Quick-Start-Guide-for-Arrow-AVS-kit.pdf">Synaptics AudioSmart 2-Mic Dev Kit for Amazon AVS with NXP SoC</a> - Learn More <a href="https://developer.amazon.com/alexa-voice-service/dev-kits/synaptics-2-mic">Here</a></li><li><a href="https://avs-dvk-workshop.github.io">Intel Speech Enabling Developer Kit</a> - Learn More <a href="https://developer.amazon.com/alexa-voice-service/dev-kits/intel-speech-enabling/">Here</a></li><li><a href="http://openlinux2.amlogic.com/download/doc/A113X1_Usermanual.pdf">Amlogic A113X1 Far-Field Dev Kit for Amazon AVS</a> - Learn More <a href="https://developer.amazon.com/alexa-voice-service/dev-kits/amlogic-6-mic">Here</a></li><li><a href="http://www.banana-pi.org/images/r18avs/AVS-quickstartguide.pdf">Allwinner SoC-Only 3-Mic Far-Field Dev Kit for Amazon AVS</a> - Learn More <a href="https://developer.amazon.com/alexa-voice-service/dev-kits/allwinner-3-mic">Here</a></li><li><a href="https://www.dspg.com/dspg-hdclear-3-mic-development-kit-for-amazon-avs/#documentation">DSPG HDClear 3-Mic Development Kit for Amazon AVS</a> - Learn More <a href="https://developer.amazon.com/alexa-voice-service/dev-kits/dspg-3-mic">Here</a></li></ul><p>Or if you prefer, you can start with our <a href="https://alexa.github.io/avs-device-sdk/">SDK API Documentation</a>.<br>或者，如果您愿意，您可以从我们的<a href="https://alexa.github.io/avs-device-sdk/">SDK API文档</a>开始 。</p><h3 id="learn-more-about-the-avs-device-sdk"><a class="markdownIt-Anchor" href="#learn-more-about-the-avs-device-sdk"></a> Learn More About The AVS Device SDK</h3><h3 id="了解更多关于avs设备sdk的信息"><a class="markdownIt-Anchor" href="#了解更多关于avs设备sdk的信息"></a> 了解更多关于AVS设备SDK的信息</h3><p><a href="https://youtu.be/F5DixCPJYo8">Watch this tutorial</a> to learn about the how this SDK works and the set up process.<br><a href="https://youtu.be/F5DixCPJYo8">观看本教程</a>了解这个SDK的工作原理和设置过程。</p><p><a href="https://www.youtube.com/watch?v=F5DixCPJYo8"><img src="https://img.youtube.com/vi/F5DixCPJYo8/0.jpg" alt="Tutorial"></a></p><h3 id="sdk-architecture"><a class="markdownIt-Anchor" href="#sdk-architecture"></a> SDK Architecture</h3><h3 id="sdk架构"><a class="markdownIt-Anchor" href="#sdk架构"></a> SDK架构</h3><p>This diagram illustrates the data flows between components that comprise the AVS Device SDK for C++.</p><p><img src="https://m.media-amazon.com/images/G/01/mobile-apps/dex/avs/Alexa_Device_SDK_Architecture.png" alt="SDK Architecture Diagram"></p><p>这个图表说明了组成c++ AVS设备SDK的组件之间的数据流。<br><img src="https://m.media-amazon.com/images/G/01/mobile-apps/dex/avs/Alexa_Device_SDK_Architecture.png" alt="SDK架构图"></p><p><strong>Audio Signal Processor (ASP)</strong> - Third-party software that applies signal processing algorithms to both input and output audio channels. The applied algorithms are designed to produce clean audio data and include, but are not limited to acoustic echo cancellation (AEC), beam forming (fixed or adaptive), voice activity detection (VAD), and dynamic range compression (DRC). If a multi-microphone array is present, the ASP constructs and outputs a single audio stream for the array.</p><p><strong>音频信号处理器(ASP)</strong> -将信号处理算法应用于输入和输出音频通道的第三方软件。应用的算法是为了产生纯净的音频数据，包括但不限于回声消除(AEC)、波束形成(固定或自适应)、语音活动检测(VAD)和动态范围压缩(DRC)。如果存在一个多麦克风阵列，ASP将为阵列构造并输出一个音频流。</p><p><strong>Shared Data Stream (SDS)</strong> - A single producer, multi-consumer buffer that allows for the transport of any type of data between a single writer and one or more readers. SDS performs two key tasks:<br><strong>共享数据流(SDS)</strong> -一个单一的生产者，多消费者缓冲区，允许在一个写入器和一个或多个写入器之间传输任何类型的数据。SDS执行两个关键任务:</p><ol><li>It passes audio data between the audio front end (or Audio Signal Processor), the wake word engine, and the Alexa Communications Library (ACL) before sending to AVS</li><li>It passes data attachments sent by AVS to specific capability agents via the ACL</li><li>在发送至AVS之前，它在音频前端(或音频信号处理器)、唤醒词引擎和Alexa通信库(ACL)之间传递音频数据</li><li>它通过ACL将AVS发送的数据附件传递给特定的功能代理</li></ol><p>SDS is implemented atop a ring buffer on a product-specific memory segment (or user-specified), which allows it to be used for in-process or interprocess communication. Keep in mind, the writer and reader(s) may be in different threads or processes.<br>SDS是在特定于产品的内存段(或用户指定的段)上的环形缓冲区上实现的，这允许它用于进程内或进程间通信。记住，写入器和读取器可能处于不同的线程或进程中。</p><p><strong>Wake Word Engine (WWE)</strong> - Software that spots wake words in an input stream. It is comprised of two binary interfaces. The first handles wake word spotting (or detection), and the second handles specific wake word models (in this case “Alexa”). Depending on your implementation, the WWE may run on the system on a chip (SOC) or dedicated chip, like a digital signal processor (DSP).<br><strong>唤醒词引擎(WWE)</strong> - 在输入流中发现唤醒词的软件。它由两个二进制接口组成。第一个处理唤醒词发现(或检测)，第二个处理特定的唤醒词模型(在本例中为“Alexa”)。根据您的实现，WWE可能在系统上运行在芯片(SOC)或专用芯片上，比如数字信号处理器(DSP)。</p><p><strong>Audio Input Processor (AIP)</strong> - Handles audio input that is sent to AVS via the ACL. These include on-device microphones, remote microphones, an other audio input sources.<br><strong>音频输入处理器 (AIP)</strong> - 处理通过ACL发送到AVS的音频输入。这些包括设备上的麦克风，远程麦克风，其他音频输入源。</p><p>The AIP also includes the logic to switch between different audio input sources. Only one audio input source can be sent to AVS at a given time.<br>AIP还包括在不同音频输入源之间切换的逻辑。在给定的时间内只能向AVS发送一个音频输入源。</p><p><strong>Alexa通信库 (ACL)</strong> - Serves as the main communications channel between a client and AVS. The ACL performs two key functions:<br>** (ACL)** - 作为客户与AVS之间的主要通信通道。ACL执行两个关键功能:</p><ol><li><p>Establishes and maintains long-lived persistent connections with AVS. ACL adheres to the messaging specification detailed in <a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/docs/managing-an-http-2-connection">Managing an HTTP/2 Connection with AVS</a>.</p></li><li><p>Provides message sending and receiving capabilities, which includes support JSON-formatted text, and binary audio content. For additional information, see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/docs/avs-http2-requests">Structuring an HTTP/2 Request to AVS</a>.</p></li><li><p>与AVS建立并保持长时间的持久连接。ACL遵循<a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/docs/managing-an-http-2-connection">使用AVS管理HTTP/2连接</a>中详细描述的消息传递规范.</p></li><li><p>提供消息发送和接收功能，包括支持json格式的文本和二进制音频内容。有关更多信息，请参见<a href="https://developer.amazon.com/public/solutions/alexa/alex-service/docs/avs-http2%E8%AF%B7%E6%B1%82">向AVS构造一个HTTP/2请求</a>。</p></li></ol><p><strong>Alexa Directive Sequencer Library (ADSL)</strong>: Manages the order and sequence of directives from AVS, as detailed in the <a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/reference/interaction-model#channels">AVS Interaction Model</a>. This component manages the lifecycle of each directive, and informs the Directive Handler (which may or may not be a Capability Agent) to handle the message.<br><strong>Alexa指令序列库 (ADSL)</strong>: 管理AVS指令的规则和顺序，详见<a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/reference/interaction-model#channels">AVS交互模型</a>。该组件管理每个指令的生命周期，并通知指令处理程序(它可能是也可能不是功能代理)处理消息。</p><p><strong>Activity Focus Manager Library (AFML)</strong>: Provides centralized management of audiovisual focus for the device. Focus is based on channels, as detailed in the <a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/reference/interaction-model#channels">AVS Interaction Model</a>, which are used to govern the prioritization of audiovisual inputs and outputs.<br><strong>活动焦点管理器库(AFML)</strong>: 为设备提供集中的视听焦点管理。焦点是基于通道的，如<a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/reference/interaction-model#channels">AVS交互模型</a>中详细介绍的，这些通道用于控制视听输入和输出的优先级。</p><p>Channels can either be in the foreground or background. At any given time, only one channel can be in the foreground and have focus. If multiple channels are active, you need to respect the following priority order: Dialog &gt; Alerts &gt; Content. When a channel that is in the foreground becomes inactive, the next active channel in the priority order moves into the foreground.<br>通道可以位于前台或后台。在任何给定的时间，只有一个频道可以在前台和有焦点。如果多个通道处于活动状态，则需要遵循以下优先顺序:对话框&gt;警告&gt;内容。当位于前台的通道变为非活动状态时，优先级顺序中的下一个活动通道将移动到前台。</p><p>Focus management is not specific to Capability Agents or Directive Handlers, and can be used by non-Alexa related agents as well. This allows all agents using the AFML to have a consistent focus across a device.<br>焦点管理并不特定于功能代理或指令处理程序，也可以被非alexa相关代理使用。这允许所有使用AFML的代理在设备上具有一致的焦点。</p><p><strong>Capability Agents</strong>: Handle Alexa-driven interactions; specifically directives and events. Each capability agent corresponds to a specific interface exposed by the AVS API. These interfaces include:</p><ul><li><a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/reference/speechrecognizer">SpeechRecognizer</a> - The interface for speech capture.</li><li><a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/reference/speechsynthesizer">SpeechSynthesizer</a> - The interface for Alexa speech output.</li><li><a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/reference/alerts">Alerts</a> - The interface for setting, stopping, and deleting timers and alarms.</li><li><a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/reference/audioplayer">AudioPlayer</a> - The interface for managing and controlling audio playback.</li><li><a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/reference/notifications">Notifications</a> - The interface for displaying notifications indicators.</li><li><a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/reference/playbackcontroller">PlaybackController</a> - The interface for navigating a playback queue via GUI or buttons.</li><li><a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/reference/speaker">Speaker</a> - The interface for volume control, including mute and unmute.</li><li><a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/reference/system">System</a> - The interface for communicating product status/state to AVS.</li><li><a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/reference/templateruntime">TemplateRuntime</a> - The interface for rendering visual metadata.</li><li><a href="https://developer.amazon.com/docs/alexa-voice-service/bluetooth.html">Bluetooth</a> - The interface for managing Bluetooth connections between peer devices and Alexa-enabled products.</li><li><a href="https://developer.amazon.com/docs/alexa-voice-service/equalizercontroller.html">EqualizerController</a> - The interface for adjusting equalizer settings, such as decibel (dB) levels and modes.</li></ul><p><strong>代理能力</strong>:处理Alexa-driven交互;具体的指令和事件。每个功能代理对应于AVS API公开的特定接口。这些接口包括:</p><ul><li><a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/reference/speechrecognizer">语音识别</a> - 语音捕捉接口。</li><li><a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/reference/speechsynthesizer">语音合成</a> - 用于Alexa语音输出的接口。</li><li><a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/reference/alerts">警报</a> - 用于设置、停止和删除计时器和警报的接口。</li><li><a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/reference/audioplayer">音频播放器</a> - 管理和控制音频播放的接口。</li><li><a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/reference/notifications">通知</a> - 显示通知指示器的接口。</li><li><a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/reference/playbackcontroller">播放控制器</a> - 通过GUI或按钮导航回放列表的接口.</li><li><a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/reference/speaker">扬声器</a> - 音量控制界面，包括静音和非静音。</li><li><a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/reference/system">系统</a> -　用于向AVS传递产品状况/状态的接口。</li><li><a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/reference/templateruntime">模板运行</a> - 用于呈现可视化元数据的接口。</li><li><a href="https://developer.amazon.com/docs/alexa-voice-service/bluetooth.html">蓝牙</a> - 管理对等设备和支持alexa的产品之间的蓝牙连接的接口。</li><li><a href="https://developer.amazon.com/docs/alexa-voice-service/equalizercontroller.html">均衡控制器</a> - 用于调整均衡器设置的接口，如分贝(dB)级别和模式。</li></ul><h3 id="security-best-practices"><a class="markdownIt-Anchor" href="#security-best-practices"></a> Security Best Practices</h3><h3 id="最佳安全实践"><a class="markdownIt-Anchor" href="#最佳安全实践"></a> 最佳安全实践</h3><p>In addition to adopting the <a href="https://developer.amazon.com/docs/alexa-voice-service/security-best-practices.html">Security Best Practices for Alexa</a>, when building the SDK:</p><ul><li>Protect configuration parameters, such as those found in the AlexaClientSDKCOnfig.json file, from tampering and inspection.</li><li>Protect executable files and processes from tampering and inspection.</li><li>Protect storage of the SDK’s persistent states from tampering and inspection.</li><li>Your C++ implementation of AVS Device SDK interfaces must not retain locks, crash, hang, or throw exceptions.</li><li>Use exploit mitigation flags and memory randomization techniques when you compile your source code, in order to prevent vulnerabilities from exploiting buffer overflows and memory corruptions.</li></ul><p>在构建SDK时，除了采用<a href="https://developer.amazon.com/docs/alexa-voicservice/securit-bestes.html">Alexa的安全最佳实践</a>之外:</p><ul><li>保护配置参数(如json文件AlexaClientSDKCOnfig.json中的配置参数)不受篡改和检查。</li><li>保护可执行文件和过程不受篡改和检查。</li><li>保护SDK持久状态的存储不受篡改和检查。</li><li>AVS设备SDK接口的c++实现不能保留锁、崩溃、挂起或抛出异常。</li><li>在编译源代码时，使用抗攻击标志和内存随机化技术，以防止漏洞利用缓冲区溢出和内存损坏。</li></ul><h3 id="important-considerations"><a class="markdownIt-Anchor" href="#important-considerations"></a> Important Considerations</h3><h3 id="需要考虑的重要事项"><a class="markdownIt-Anchor" href="#需要考虑的重要事项"></a> 需要考虑的重要事项</h3><ul><li><p>Review the AVS <a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/support/terms-and-agreements">Terms &amp; Agreements</a>.</p></li><li><p>The earcons associated with the sample project are for <strong>prototyping purposes</strong> only. For implementation and design guidance for commercial products, please see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/content/designing-for-the-alexa-voice-service">Designing for AVS</a> and <a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/content/alexa-voice-service-ux-design-guidelines">AVS UX Guidelines</a>.</p></li><li><p>Please use the contact information below to-</p><ul><li><a href="http://www.sensory.com/support/contact/us-sales/">Contact Sensory</a> for information on TrulyHandsFree licensing.</li><li><a href="mailto:snowboy@kitt.ai">Contact KITT.AI</a> for information on SnowBoy licensing.</li></ul></li><li><p><strong>IMPORTANT</strong>: The Sensory wake word engine referenced in this document is time-limited: code linked against it will stop working when the library expires. The library included in this repository will, at all times, have an expiration date that is at least 120 days in the future. See <a href="https://github.com/Sensory/alexa-rpi#license">Sensory’s GitHub </a>page for more information.</p></li><li><p>回顾AVS[条款和协议](<a href="https://developer.amazon.com/public/solutions/alexa/alex-voicservice/support/termand">https://developer.amazon.com/public/solutions/alexa/alex-voicservice/support/termand</a> -agreement)。</p></li><li><p>与示例项目相关的耳机仅用于<strong>原型设计目的</strong>。 用于商业产品的实施和设计指导, 请看 <a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/content/designing-for-the-alexa-voice-service">AVS设计</a> and <a href="https://developer.amazon.com/public/solutions/alexa/alexa-voice-service/content/alexa-voice-service-ux-design-guidelines">AVS UX 指导方针</a>.</p></li><li><p>请使用下面的联系方式-</p><ul><li><a href="http://www.sensory.com/support/contact/us-sales/">联系　Sensor</a> 有关免费试用许可证的信息。</li><li><a href="mailto:snowboy@kitt.ai">联系 KITT.AI</a> 获取有关“雪人”许可证的信息。</li></ul></li><li><p><strong>注意</strong>: 本文中引用的感觉唤醒词引擎是有时间限制的:与之链接的代码将在库过期时停止工作。这个存储库中包含的库在任何时候都有一个过期日期，至少是120天后。有关更多信息，请参阅<a href="https://github.com/Sensory/alexa-rpi#license">Sensory’s GitHub</a>页面。</p></li></ul><h3 id="release-notes-and-known-issues"><a class="markdownIt-Anchor" href="#release-notes-and-known-issues"></a> Release Notes and Known Issues</h3><h3 id="发布记录和已知问题"><a class="markdownIt-Anchor" href="#发布记录和已知问题"></a> 发布记录和已知问题</h3><p><strong>Note</strong>: Feature enhancements, updates, and resolved issues from previous releases are available to view in <a href="https://github.com/alexa/alexa-client-sdk/blob/master/CHANGELOG.md">CHANGELOG.md</a>.<br><strong>注意</strong>:在<a href="https://github.com/alexa/alex-clientsdk/blob/master/changelog.md">CHANGELOG.md</a>中可以查看到以前版本的特性增强、更新和解决的问题。</p><p>v1.10.0 released 10/24/2018:</p><p><strong>Enhancements</strong></p><ul><li>New optional configuration for <a href="https://github.com/alexa/avs-device-sdk/blob/v1.10.0/Integration/AlexaClientSDKConfig.json#L154">EqualizerController</a>. The EqualizerController interface allows you to adjust equalizer settings on your product, such as decibel (dB) levels and modes.</li><li>Added reference implementation of the EqualizerController for GStreamer-based (MacOS, Linux, and Raspberry Pi) and OpenSL ES-based (Android) MediaPlayers. Note: In order to use with Android, it must support OpenSL ES.</li><li>New optional configuration for the <a href="https://github.com/alexa/avs-device-sdk/blob/v1.10.0/Integration/AlexaClientSDKConfig.json#L144">TemplateRuntime display card value</a>.</li><li>A configuration file generator script, <code>genConfig.sh</code> is now included with the SDK in the <strong>tools/Install</strong> directory. <code>genConfig.sh</code> and it’s associated arguments populate <code>AlexaClientSDKConfig.json</code> with the data required to authorize with LWA.</li><li>Added Bluetooth A2DP source and AVRCP target support for Linux.</li><li>Added Alexa for Business (A4B) support, which includes support for handling the new <a href="https://developer.amazon.com/docs/alexa-voice-service/system.html#revokeauth">RevokeAuthorization</a> directive in the Settings interface. A new CMake option has been added to enable A4B within the SDK, <code>-DA4B</code>.</li><li>Added locale support for IT and ES.</li><li>The Alexa Communication Library (ACL), <code>CBLAUthDelegate</code>, and sample app have been enhanced to detect de-authorization using the new <code>z</code> command.</li><li>Added <code>ExternalMediaPlayerObserver</code>, which receives notification of player state, track, and username changes.</li><li><code>HTTP2ConnectionInterface</code> was factored out of <code>HTTP2Transport</code> to enable unit testing of <code>HTTP2Transport</code> and re-use of <code>HTTP2Connection</code> logic.</li></ul><p><strong>约束</strong></p><ul><li>新的可选配置<a href="https://github.com/alexa/avs-device-sdk/blob/v1.10.0/Integration/AlexaClientSDKConfig.json#L154">均衡器控制器</a>。EqualizerController接口允许您调整产品上的均衡器设置，比如分贝(dB)级别和模式。</li><li>为基于gstreamerbased (MacOS, Linux，和树莓Pi)和基于OpenSL (Android)的mediaplayer添加了EqualizerController的参考实现。注意:要使用Android，它必须支持OpenSL ES。</li><li>[TemplateRuntime显示卡值]<a href="https://github.com/alexa/avs-device-sdk/blob/v1.10.0/Integration/AlexaClientSDKConfig.json#L144">https://github.com/alexa/avs-device-sdk/blob/v1.10.0/Integration/AlexaClientSDKConfig.json#L144</a>)的新可选配置(.<br>*配置文件生成器脚本, <code>genConfig.sh</code> 现在包含在 <strong>tools/Install</strong> 路径. <code>genConfig.sh</code> 并且它的关联参数填充’ AlexaClientSDKConfig。json '与数据需要授权与LWA。</li><li>增加了对Linux的蓝牙A2DP源和AVRCP目标支持。</li><li>添加了Alexa for Business (A4B)支持，其中包括在设置接口中处理新的[revokeauth授权](<a href="https://developer.amazon.com/docs/alexa-voicservice/system.html">https://developer.amazon.com/docs/alexa-voicservice/system.html</a> #revokeauth)指令的支持。添加了一个新的CMake选项来在SDK中启用A4B, <code>-DA4B</code>.</li><li>为它和ES添加了区域设置支持。</li><li>通过增强Alexa通信库(ACL)、“CBLAUthDelegate”和示例应用程序，可以使用新的“z”命令检测取消授权。</li><li>添加了“ExternalMediaPlayerObserver”，它接收到播放器状态、跟踪和用户名更改的通知。</li><li><code>HTTP2ConnectionInterface</code> 从 <code>HTTP2Transport</code> 去支持 <code>HTTP2Transport</code>单元测试 和 <code>HTTP2Connection</code> 逻辑重用.</li></ul><p><strong>Bug Fixes</strong></p><ul><li>Fixed a bug in which <code>ExternalMediaPlayer</code> adapter playback wasn’t being recognized by AVS.</li><li><a href="https://github.com/alexa/avs-device-sdk/issues/973">Issue 973</a> - Fixed issues related to <code>AudioPlayer</code> where progress reports were being sent out of order or with incorrect offsets.</li><li>An <code>EXPECTING</code>, state has been added to <code>DialogUXState</code> in order to handle <code>EXPECT_SPEECH</code> state for hold-to-talk devices.</li><li><a href="https://github.com/alexa/avs-device-sdk/issues/948">Issue 948</a> - Fixed a bug in which the sample app was stuck in a listening state.</li><li>Fixed a bug where there was a delay between receiving a <code>DeleteAlert</code> directive, and deleting the alert.</li><li><a href="https://github.com/alexa/avs-device-sdk/issues/839">Issue 839</a> - Fixed an issue where speech was being truncated due to the <code>DialogUXStateAggregator</code> transitioning between a <code>THINKING</code> and <code>IDLE</code> state.</li><li>Fixed a bug in which the <code>AudioPlayer</code> attempted to play when it wasn’t in the <code>FOREGROUND</code> focus.</li><li><code>CapabilitiesDelegateTest</code> now works on Android.</li><li><a href="https://github.com/alexa/avs-device-sdk/issues/950">Issue 950</a> - Improved Android Media Player audio quality.</li><li><a href="https://github.com/alexa/avs-device-sdk/issues/908">Issue 908</a> - Fixed compile error on g++ 7.x in which includes were missing.</li></ul><p><strong>Bug 修复</strong></p><ul><li>修正了一个“ExternalMediaPlayer”适配器回放无法被AVS识别的错误。</li><li><a href="https://github.com/alexa/avs-device-sdk/issues/973">Issue 973</a> - 修正了与“AudioPlayer”有关的问题，在那里进度报告被错误发送或者有错误的偏移量。</li><li>一个“期望”状态已经被添加到“对话状态”中，以处理“等待语音”设备的“预期语音”状态。</li><li><a href="https://github.com/alexa/avs-device-sdk/issues/948">Issue 948</a> - 修正了一个bug，在这个bug中，示例应用程序被卡在一个监听状态。</li><li>修正了接收“DeleteAlert”指令和删除警告之间存在延迟的错误。</li><li><a href="https://github.com/alexa/avs-device-sdk/issues/839">Issue 839</a> - 修正了“DialogUXStateAggregator”在“THINKING”和“IDLE”状态之间转换的问题。</li><li></li><li><code>CapabilitiesDelegateTest</code> 现在可以在Android上运行。</li><li><a href="https://github.com/alexa/avs-device-sdk/issues/950">Issue 950</a> - 改进了Android媒体播放器的音频质量。</li><li><a href="https://github.com/alexa/avs-device-sdk/issues/908">Issue 908</a> - 修正了g++　7.x上包括丢失的编译错误。</li></ul><p><strong>Known Issues</strong></p><ul><li>On GCC 8+, issues related to <code>-Wclass-memaccess</code> will trigger warnings. However, this won’t cause the build to fail, and these warnings can be ignored.</li><li>In order to use Bluetooth source and sink PulseAudio, you must manually load and unload PulseAudio modules after the SDK starts.</li><li>When connecting a new device to AVS, <em>currently connected devices must be manually disconnected</em>. For example, if a user says “Alexa, connect my phone”, and an Alexa-enabled speaker is already connected, there is no indication to the user a device is already connected.</li><li>The <code>ACL</code> may encounter issues if audio attachments are received but not consumed.</li><li><code>SpeechSynthesizerState</code> currently uses <code>GAINING_FOCUS</code> and <code>LOSING_FOCUS</code> as a workaround for handling intermediate state. These states may be removed in a future release.</li><li>The Alexa app doesn’t always indicate when a device is successfully connected via Bluetooth.</li><li>Connecting a product to streaming media via Bluetooth will sometimes stop media playback within the source application. Resuming playback through the source application or toggling next/previous will correct playback.</li><li>When a source device is streaming silence via Bluetooth, the Alexa app indicates that audio content is streaming.</li><li>The Bluetooth agent assumes that the Bluetooth adapter is always connected to a power source. Disconnecting from a power source during operation is not yet supported.</li><li>On some products, interrupted Bluetooth playback may not resume if other content is locally streamed.</li><li><code>make integration</code> is currently not available for Android. In order to run integration tests on Android, you’ll need to manually upload the test binary file along with any input file. At that point, the adb can be used to run the integration tests.</li><li>On Raspberry Pi running Android Things with HDMI output audio, beginning of speech is truncated when Alexa responds to user TTS.</li><li>When the sample app is restarted and network connection is lost, Alerts don’t play.</li><li>When network connection is lost, lost connection status is not returned via local TTS.</li></ul><p><strong>已知问题</strong></p><ul><li>在GCC 8+上，与’ -Wclass-memaccess '相关的问题将触发警告。但是，这不会导致构建失败，这些警告可以忽略。</li><li>为了使用蓝牙源和sink PulseAudio，您必须在SDK启动后手动加载和卸载PulseAudio模块。</li><li>当将新设备连接到AVS时，<em>当前连接的设备必须手动断开</em>。例如，如果用户说“Alexa，连接我的手机”，并且启用了Alexa的扬声器已经连接，那么没有迹象表明用户已经连接了设备。</li><li>如果接收到但未使用音频附件，“ACL”可能会遇到问题。</li><li>“speech synzerstate”当前使用“GAINING_FOCUS”和“LOSING_FOCUS”作为处理中间状态的变通方法。这些状态可能在将来的版本中被删除。</li><li>Alexa应用程序并不总是指示设备何时通过蓝牙成功连接。</li><li>通过蓝牙将产品连接到流媒体有时会停止源应用程序中的媒体回放。通过源应用程序恢复回放或切换next/previous将纠正回放。<br>*　当源设备通过蓝牙流静音时，Alexa应用程序指示音频内容流。<br>*　蓝牙代理假定蓝牙适配器始终连接到电源。还不支持在运行期间断开电源。</li><li>在某些产品上，如果其他内容是本地流，中断的蓝牙回放可能无法恢复。</li><li><code>make integration</code> 目前Android无法使用。为了在Android上运行集成测试，您需要手动上载测试二进制文件以及任何输入文件。至此，可以使用adb运行集成测试。</li><li>在Raspberry Pi上运行带有HDMI输出音频的Android应用，当Alexa响应用户TTS时，开始的语音就会被截断。</li><li>当示例应用程序重新启动且网络连接丢失时，警报不会播放。</li><li>当网络连接丢失时，丢失的连接状态不会通过本地TTS返回。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 翻译 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> 翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AGL(Automotive Grade Linux)系统架构简介</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/3282/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/3282/</url>
      
        <content type="html"><![CDATA[<h2 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h2><p><a href="https://www.automotivelinux.org/">AGL</a>(Automotive Grade Linux，汽车级Linux)是一个致力于为汽车应用创造开源的软件解决方案的<a href="http://www.linuxfoundation.org/">Linux 基金会</a>工作组。尽管AGL最初的目的是IVI（In-Vehicle-Infotainment，车载信息娱乐系统），但最终将支持诸如仪表组和远程信息处理系统的其他用例。AGL有来自汽车，通信和半导体行业的参与者，并欢迎个人开发者的参与贡献。</p><p>通过利用Linux内核和其他开源软件项目的超过<a href="https://www.linuxfoundation.org/sites/main/files/publications/estimatinglinux.html">10亿美元的投资</a>，AGL工作组：</p><ul><li>为汽车供应商提供高效的软件创新，以满足消费者对更好的IVI体验的需求。</li><li>汇集数千名开源软件开发人员的才能，致力于在Linux内核，网络和连接等领域维护核心软件，应用于众多行业的系统。</li></ul><p>汽车级Linux工作组的目标是提供：</p><blockquote><p>以汽车为中心的核心Linux操作系统堆栈，可满足汽车生态系统的公共和共享需求，并有广泛的社区支持，其中包括个人开发人员、学术组织和公司。</p></blockquote><blockquote><p>为汽车原始设备制造商、一级供应商及其半导体和软件供应商提供一个透明、协作和开放的环境，以创建令人惊叹的车载软件。</p></blockquote><blockquote><p>一个与其他开源项目合作和开发新的开源解决方案的集体诉求。</p></blockquote><blockquote><p>一种嵌入式Linux发行版，可以为Linux新手或拥有开源经验的团队提供高效的原型设计</p></blockquote><p>产品团队通过启动在多个硬件平台上运行的参考应用程序，可以更快地投入市场。</p><h2 id="适用范围"><a class="markdownIt-Anchor" href="#适用范围"></a> 适用范围</h2><p>本文档的范围是定义汽车级Linux软件平台的体系结构。需求被分解为体系结构的概述和体系结构中每个层的描述，然后是各个层中每个模块的规范。体系结构图和规范的布局考虑了IVI系统所需的所有组件;然而，对于单个模块来说规范求并不全面。随着规范的不断发展，将继续补充这些部分。<br>本文的主要目标是定义构建应用程序的核心软件平台。因此，除了在单一情况下(主屏幕)，本文档不定义应用程序规范。应用规范将由使用AGL平台的各种项目开发。这些应用程序规范可用于将新的或修订的规范引入平台。<br>目前还没有计划使用此规范来创建遵从性或认证程序。该规范被用作指导AGL整体工作的蓝图，并为公司和个人制定工作包，以完成AGL工作组的目标。</p><h2 id="术语表"><a class="markdownIt-Anchor" href="#术语表"></a> 术语表</h2><table><thead><tr><th>术语</th><th>定义</th></tr></thead><tbody><tr><td>A2DP</td><td>进阶播音设定档</td></tr><tr><td>AGL</td><td>汽车级Linux</td></tr><tr><td>AVRCP</td><td>音频视频远程配置文件</td></tr><tr><td>FS</td><td>文件系统</td></tr><tr><td>GPS</td><td>全球定位系统</td></tr><tr><td>GPU</td><td>图形处理器</td></tr><tr><td>HFP</td><td>免提配置文件</td></tr><tr><td>IBOC</td><td>带内同频</td></tr><tr><td>LTSI</td><td>长期支持计划</td></tr><tr><td>NTP</td><td>网络定时协议</td></tr><tr><td>OEM</td><td>原始设备制造商</td></tr><tr><td>OS</td><td>操作系统</td></tr><tr><td>OSS</td><td>开源软件</td></tr><tr><td>SDL</td><td>智能设备连接（Smart Device Link）</td></tr><tr><td>STT</td><td>语音识别</td></tr><tr><td>TTS</td><td>语音合成</td></tr></tbody></table><hr><p>下面是汽车级Linux软件架构图。该体系结构由五个层组成。应用/HMI层包含应用程序及其相关的业务逻辑和HMI。一般来说，应用程序超出了本文的范围，因为它们是针对开发基于AGL的系统的OEM的特定产品。<br>应用程序框架层提供了在AGL系统上创建管理和运行应用程序的APIs。服务层包含所有应用程序都可以访问的用户空间服务。操作系统(OS)层提供Linux内核和设备驱动程序以及标准OS实用程序。</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/3282/Agl----.png" alt="Agl----"></p>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Qt＋QtwebEngine＋QML新建内嵌html网页项目手顺教程</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16286/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16286/</url>
      
        <content type="html"><![CDATA[<p>  最近项目需要用到<a href="https://doc.qt.io/qt-5.11/qtwebengine-overview.html">QtwebEngine</a>加载自建网页，整理手顺教程如下：<br>  Ｑt安装就不讲了，我这里是ubuntu16.04 + Qt Creator 4.6.2(Based on Qt 5.9.6 (GCC 5.3.1 20160406 (Red Hat 5.3.1-6), 64 bit))</p><h2 id="第一步-新建项目"><a class="markdownIt-Anchor" href="#第一步-新建项目"></a> 第一步、新建项目：</h2><p>１、“new project” -&gt; “Application” -&gt; “Qt Widgets Application” -&gt;“Choose”</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16286/--_001.png" alt="--_001"></p><p>2、输入项目名称 -&gt; “浏览…&quot;(选择项目存储路径，尽量不包含中文）-&gt; “下一步”</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16286/--_002.png" alt="--_002"></p><p>３、“下一步”（Debug\Release\Profile的路径默认即可，区别自己搜索）</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16286/--_003.png" alt="--_003"></p><p>4、类信息默认即可，基类选择为QMainWindow,单击&quot;下一步&quot;</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16286/--_004.png" alt="--_004"></p><p>5、项目管理，单击&quot;完成&quot;即可（如果采用了版本控制系统，添加即可，这里演示不添加）</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16286/--_005.png" alt="--_005"></p><p>6、默认生成目录如图所示：</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16286/--_006.png" alt="--_006"></p><p>７、　”Ctrl + R“执行一下，显示一个空白的窗口</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16286/--_010.png" alt="--_010"></p><h2 id="第二步-配置speechtotextwavepro文件添加一句qt-webenginewidgets如下"><a class="markdownIt-Anchor" href="#第二步-配置speechtotextwavepro文件添加一句qt-webenginewidgets如下"></a> 第二步、配置&quot;<a href="http://speechToTextWave.pro">speechToTextWave.pro</a>&quot;文件,添加一句”QT       += webenginewidgets“如下：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#-------------------------------------------------</span><br><span class="line">#</span><br><span class="line"># Project created by QtCreator 2018-11-08T09:26:56</span><br><span class="line">#</span><br><span class="line">#-------------------------------------------------</span><br><span class="line"></span><br><span class="line">QT       +&#x3D; core gui</span><br><span class="line">QT       +&#x3D; webenginewidgets　　　&#x2F;&#x2F;添加此行</span><br><span class="line"></span><br><span class="line">greaterThan(QT_MAJOR_VERSION, 4): QT +&#x3D; widgets</span><br><span class="line"></span><br><span class="line">TARGET &#x3D; speechToTextWave</span><br><span class="line">TEMPLATE &#x3D; app</span><br><span class="line"></span><br><span class="line"># The following define makes your compiler emit warnings if you use</span><br><span class="line"># any feature of Qt which has been marked as deprecated (the exact warnings</span><br><span class="line"># depend on your compiler). Please consult the documentation of the</span><br><span class="line"># deprecated API in order to know how to port your code away from it.</span><br><span class="line">DEFINES +&#x3D; QT_DEPRECATED_WARNINGS</span><br><span class="line"></span><br><span class="line"># You can also make your code fail to compile if you use deprecated APIs.</span><br><span class="line"># In order to do so, uncomment the following line.</span><br><span class="line"># You can also select to disable deprecated APIs only up to a certain version of Qt.</span><br><span class="line">#DEFINES +&#x3D; QT_DISABLE_DEPRECATED_BEFORE&#x3D;0x060000    # disables all the APIs deprecated before Qt 6.0.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SOURCES +&#x3D; \</span><br><span class="line">        main.cpp \</span><br><span class="line">        mainwindow.cpp</span><br><span class="line"></span><br><span class="line">HEADERS +&#x3D; \</span><br><span class="line">        mainwindow.h</span><br><span class="line"></span><br><span class="line">FORMS +&#x3D; \</span><br><span class="line">        mainwindow.ui</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="第三步-添加qml文件和html路径及文件"><a class="markdownIt-Anchor" href="#第三步-添加qml文件和html路径及文件"></a> 第三步、添加qml文件和html路径及文件</h2><p>１、添加添加qml文件<br>鼠标放在项目名称&quot;speechToTextWave&quot;上,右键单击-&gt;“添加新文件…” -&gt;Qt -&gt; QML File(Qt Quick2) -&gt; Choose<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16286/--_007.png" alt="--_007"></p><p>填写文件名　-&gt; “下一步”　-&gt; “完成”　即可</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16286/--_008.png" alt="--_008"><br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16286/--_009.png" alt="--_009"></p><p>2、添加index.html文件，我放在项目同级目录”html“文件夹下：<br>项目同级目录新建”html“文件夹，并创建index.html文件：</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16286/--_011.png" alt="--_011"></p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16286/--_012.png" alt="--_012"></p><p>我所编写index.html文件如下所示，你需要自己编写，我这里引用了图片。</p><p>index.html</p>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">   </span><br><span class="line">   &lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot;&#x2F;&gt;</span><br><span class="line">&lt;meta name&#x3D;&quot;Generator&quot; content&#x3D;&quot;sublimeText&quot;&gt;   &lt;!--编辑器的名称--&gt;</span><br><span class="line">  &lt;meta name&#x3D;&quot;Author&quot; content&#x3D;&quot;PattenKuo&quot;&gt;       </span><br><span class="line">  &lt;meta name&#x3D;&quot;Keywords&quot; content&#x3D;&quot;Austin&quot;&gt;</span><br><span class="line">  &lt;meta name&#x3D;&quot;Description&quot; content&#x3D;&quot;DialogWindow&quot;&gt;</span><br><span class="line">&lt;title&gt;Voice Assistant&lt;&#x2F;title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">    .content &#123;</span><br><span class="line">        height: document.body.clientHeight;</span><br><span class="line">        width: document.body.clientWidth;</span><br><span class="line">        background-repeat: no-repeat;</span><br><span class="line">        background-image: url(.&#x2F;images&#x2F;cover.png);</span><br><span class="line">    &#125;</span><br><span class="line">    .ButtonArea&#123;</span><br><span class="line">    display: flex;</span><br><span class="line">        justify-content: center; &#x2F;* 水平居中 *&#x2F;</span><br><span class="line">        align-items: center;     &#x2F;* 垂直居中 *&#x2F;</span><br><span class="line">        flex-direction: column;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    .recordButton&#123;</span><br><span class="line">    height: 350px;</span><br><span class="line">    width: 350px;</span><br><span class="line">    margin-top: 100px;</span><br><span class="line">    animation:play 1s infinite alternate;</span><br><span class="line">    animation-play-state: paused | running; </span><br><span class="line">    &#125;</span><br><span class="line">    .UserWords&#123;</span><br><span class="line">    margin-top: 120px;</span><br><span class="line">    font-weight: bold;</span><br><span class="line">    font-size: 40px;</span><br><span class="line">    color: white;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;*注意要在动画的时候，可能会导致覆盖，这个时候也是需要去将其进行旋转处理的*&#x2F;</span><br><span class="line">    @-webkit-keyframes play &#123;</span><br><span class="line">      25%&#123;transform: scale(1.2) &#125;</span><br><span class="line">      50%&#123;transform: scale(1.3) &#125;</span><br><span class="line">      75%&#123;transform: scale(1.2) &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &lt;&#x2F;style&gt;</span><br><span class="line">    &lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line"></span><br><span class="line">    window.onload&#x3D;function()&#123;&#x2F;&#x2F;let animation paused</span><br><span class="line">      let UserWords &#x3D; document.querySelector(&#39;.UserWords&#39;); </span><br><span class="line">  let elem &#x3D; document.querySelector(&#39;.recordButton&#39;);</span><br><span class="line">      let state &#x3D; elem.style[&#39;animationPlayState&#39;];</span><br><span class="line">      elem.style[&#39;animationPlayState&#39;] &#x3D; &#39;paused&#39;; </span><br><span class="line">      UserWords.innerText &#x3D; &#39;Start&#39;; </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    function StartRecord()&#123;&#x2F;&#x2F;to fetch the words from users</span><br><span class="line">    &#x2F;&#x2F;window.open(&quot;https:&#x2F;&#x2F;www.baidu.com&quot;);</span><br><span class="line">    let UserWords &#x3D; document.querySelector(&#39;.UserWords&#39;); </span><br><span class="line">    let elem &#x3D; document.querySelector(&#39;.recordButton&#39;);</span><br><span class="line">    let state &#x3D; elem.style[&#39;animationPlayState&#39;]; </span><br><span class="line">     if(state &#x3D;&#x3D;&#x3D; &#39;paused&#39;) &#123; </span><br><span class="line">        elem.style[&#39;animationPlayState&#39;] &#x3D; &#39;running&#39;; </span><br><span class="line">        UserWords.innerText &#x3D; &#39;stop&#39;; </span><br><span class="line">    &#125; else &#123; </span><br><span class="line">        elem.style[&#39;animationPlayState&#39;] &#x3D; &#39;paused&#39;; </span><br><span class="line">        UserWords.innerText &#x3D; &#39;Start&#39;; </span><br><span class="line">    &#125;  </span><br><span class="line">    &#125;</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body class&#x3D;&quot;content&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;ButtonArea&quot;&gt;</span><br><span class="line"> &lt;div class&#x3D;&quot;recordButton&quot; id&#x3D;&quot;recordButton&quot; onclick&#x3D;&quot;StartRecord()&quot;&gt;</span><br><span class="line"> &lt;img src&#x3D;&quot;.&#x2F;images&#x2F;recordButton.png&quot; &gt;</span><br><span class="line"> &lt;&#x2F;div&gt;</span><br><span class="line"> &lt;div class&#x3D;&quot;UserWords&quot;&gt;</span><br><span class="line"> &lt;text &gt; Start &lt;&#x2F;text&gt;</span><br><span class="line"> &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line">   </span><br><span class="line">   </span><br></pre></td></tr></table></figure><p>3、创建qrc资源路径：<br>鼠标放在项目名称&quot;speechToTextWave&quot;上,右键单击-&gt;“添加新文件…” -&gt;Qt -&gt; Qt Resource File -&gt; Choose</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16286/--_019.png" alt="--_019"></p><p>填写文件名　-&gt; “下一步”　-&gt; “完成”　即可</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16286/--_020.png" alt="--_020"></p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16286/--_021.png" alt="--_021"></p><p>４、添加html路径到qrcresource.qrc：<br>鼠标放在名称&quot;qrcresource.qrc&quot;上,右键单击-&gt;“Add Existing Directory…” -&gt; “浏览…” -&gt; 选择刚刚新建的”Html“文件夹　-&gt; “Open”</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16286/--_022.png" alt="--_022"></p><p>单击&quot;Start Parsing&quot; -&gt; 选择当前文件夹　-&gt; “OK”</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16286/--_014.png" alt="--_014"></p><p>4、如图所示，项目文件目录和&quot;<a href="http://speechToTextWave.pro">speechToTextWave.pro</a>&quot;变化为：</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16286/--_017.png" alt="--_017"></p><p>5、添加刚刚新建的qml.qml文件到qrcresource.qrc:<br>鼠标放在名称&quot;qrcresource.qrc&quot;上,右键单击-&gt;“添加现有文件” -&gt;　选择”qml.qml“文件　-&gt; “Open”<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16286/--_023.png" alt="--_023"><br>qrcresource.qrc目录文件如下图所示：<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16286/--_024.png" alt="--_024"></p><h2 id="第四步-编写文件实现功能"><a class="markdownIt-Anchor" href="#第四步-编写文件实现功能"></a> 第四步、编写文件实现功能</h2><p>main.cpp</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"> #include &quot;mainwindow.h&quot;</span><br><span class="line">#include &lt;QApplication&gt;</span><br><span class="line">#include&lt;QtWebEngineWidgets&gt;</span><br><span class="line">#include&lt;QWebEngineView&gt;</span><br><span class="line"></span><br><span class="line">int main(int argc, char *argv[])</span><br><span class="line">&#123;</span><br><span class="line">    QApplication a(argc, argv);</span><br><span class="line">&#x2F;&#x2F;    MainWindow w;</span><br><span class="line">&#x2F;&#x2F;    w.show();</span><br><span class="line"></span><br><span class="line">    QQmlApplicationEngine engine;</span><br><span class="line">    engine.load(QUrl(QStringLiteral(&quot;qrc:&#x2F;qml.qml&quot;)));</span><br><span class="line"></span><br><span class="line">    return a.exec();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>qml.qml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import QtQuick 2.0</span><br><span class="line">import QtQuick.Controls 2.2</span><br><span class="line">import QtQuick.Window 2.3</span><br><span class="line">import QtWebEngine 1.1</span><br><span class="line"></span><br><span class="line">ApplicationWindow &#123;</span><br><span class="line">    width: 800</span><br><span class="line">    height: 800</span><br><span class="line">    visible: true</span><br><span class="line">    x:100</span><br><span class="line">    y:100</span><br><span class="line">    flags: Qt.WindowFullScreen | Qt.FramelessWindowHint</span><br><span class="line">    WebEngineView &#123;</span><br><span class="line">        url: &quot;qrc:&#x2F;..&#x2F;..&#x2F;speechToTextWave&#x2F;Html&#x2F;index.html&quot;</span><br><span class="line">        anchors.fill: parent</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="第五步-大功告成调试及bug"><a class="markdownIt-Anchor" href="#第五步-大功告成调试及bug"></a> 第五步、大功告成，调试及BUG</h2><p>若出现<br><code>file:///home/pattenkuo/AllTest/speechToTextWave/build-speechToTextWave-Desktop_Qt_5_9_6_GCC_64bit-Debug/qml.qml:-1 No such file or directory</code></p><p>与编译调试目录有关</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16286/--_018.png" alt="--_018"></p><p>只需把qml.qml文件cpoy到指定的文件夹目录，比如我需要放置在目录”build-speechToTextWave-Desktop_Qt_5_9_6_GCC_64bit-Debug“下即可</p><h2 id="知识补充"><a class="markdownIt-Anchor" href="#知识补充"></a> 知识补充：</h2><p>致谢原文：<a href="https://blog.csdn.net/qq_23836283/article/details/52688722">QT中 No such file or directory 问题解决</a></p><p>.pro文件中各变量意义：</p><p>HEADERS 指定工程的 C<ins>头文件（.h）。<br>◆ SOURCES 指定工程的Ｃ</ins>实现文件（.cpp）。<br>◆ FORMS 指定需要 uic 处理的由 Qt 设计师生成的.ui 文件。<br>◆ RESOURCES 指定需要 rcc 处理的.qrc 文件。<br>◆ DEFINES 指定预定义的 C<ins>预处理符号。<br>◆ INCLUDEPATH 指定 C</ins>编译器搜索全局头文件的路径。<br>◆ LIBS 指定工程要链接的库。库既可以通过绝对路径指定，也可以使用源自 Unix 的-L 和-l 标识符来指定（例如，-L/usr/local/lib 和-ldb_cxx）。<br>◆ CONFIG 指定各种用于工程配置和编译的参数。<br>◆ QT 指定所要使用的 Qt 模块（默认是 core gui，对应于 QtCore 和 QtGui 模块）。<br>◆ VERSION 指定目标库的版本号。<br>◆ TARGET 指定可执行文件或库的基本文件名，其中不包含任何的扩展、前缀或版本<br>号（默认的是当前的目录名）。<br>◆ DESTDIR 指定可执行文件放置的目录（默认值是平台相关的。<br>例如，在 Linux 上，指当前目录；在 Windows 上，则是指 debug 或 release 子目<br>录）。<br>◆ DLLDESTDIR 指定目标库文件放置的目录（默认路径与 DESTDIR 相同）。<br>CONFIG 变量用来控制编译过程中的各个方面。它支持下面这些参数：<br>◆ debug 是指具有调试信息的可执行文件或者库，链接 Qt 库的调试版。<br>◆ release 是指编译不具有调试信息的可执行文件或者库，链接发行版的 Qt 库。如果<br>同时指定 debug 和 release，则 debug 有效。<br>◆ warn_off 会关闭大量的警告。默认情况下，警告的状态是打开的。<br>◆ qt 是指应用程序或者库使用 Qt。这一选项是默认包括的。<br>◆ dll 是指动态编译库。<br>◆ staticlib 是指静态编译库。<br>◆ plugin 是指编译一个插件。插件总是动态库，因此这一参数暗含 dll 参数。<br>◆ console 是指应用程序需要写控制台（使用 cout、cerr、qWarning()，等等）。<br>◆ app_bundle 只适用于 Mac OS X 编译，是指可执行文件被放到束中，这是 Mac OS X<br>的默认情况。<br>◆ lib_bundle 只适用于 Mac OS X 编译，指库被放到框架中。</p>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 程序猿的学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>跨平台系统图／流程图／架构图编辑器　Dia for linux(ubuntu etc.) Windows Mac OS</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/58048/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/58048/</url>
      
        <content type="html"><![CDATA[<p>最近在ubuntu 16.04上找一个架构图编辑软件，找到了一个超好用而且跨平台的制图软件<a href="http://dia-installer.de/">Dia</a>。</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/58048/--_031.png" alt="--_031"></p><h1 id="需求"><a class="markdownIt-Anchor" href="#需求"></a> 需求</h1><p>目前的Dia版本已经在Windows 8.1,8,7，Windows Vista和Windows XP，Linux和Mac OS X上成功测试过。</p><p><a href="http://dia-installer.de/download/index.html">下载页面</a>提供了Mac OS X和Linux的下载包以及有关旧版Windows的Dia的信息。</p><h1 id="故障排除"><a class="markdownIt-Anchor" href="#故障排除"></a> 故障排除</h1><p>如果您遇到任何dia问题，请先阅读<a href="http://dia-installer.de/doc/faq.html">常见问题解答</a>。</p><p>或者可以检查<a href="http://bit.ly/dbNQA2">错误报告</a>。</p><h1 id="许可"><a class="markdownIt-Anchor" href="#许可"></a> 许可</h1><p>Dia是根据GNU [GNU通用公共许可证]<a href="http://dia-installer.de/doc/gpl-2.0.html">http://dia-installer.de/doc/gpl-2.0.html</a>)GPLv2的条款提供的免费软件。</p><h1 id="安装方式"><a class="markdownIt-Anchor" href="#安装方式"></a> 安装方式</h1><p>在<a href="http://dia-installer.de/download/index.html">下载页面</a>下载对应版本。这里仅介绍ubuntu 安装方式。</p><p><code>$ sudo apt install dia-common</code></p><h1 id="启动"><a class="markdownIt-Anchor" href="#启动"></a> 启动</h1><p><code>$ dia</code></p><h1 id="中文支持"><a class="markdownIt-Anchor" href="#中文支持"></a> 中文支持</h1><p>该软件默认不支持中文，如需支持中文，修改配置文件（默认路径：/usr/bin/dia）即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd &#x2F;usr&#x2F;bin  &#x2F;&#x2F;到配置文件目录</span><br><span class="line">$ sudo chmod 777 dia  &#x2F;&#x2F;修改文件权限，将只读改为可读写</span><br><span class="line">$ vi dia</span><br></pre></td></tr></table></figure><p>修改为下图所示保存即可：<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/58048/--_032.png" alt="--_032"></p>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Qt&#39;s &#39;Property Binding&#39;(Qt的&#39;属性绑定&#39;)</title>
      <link href="%E9%9A%8F%E7%AC%94/60991/"/>
      <url>%E9%9A%8F%E7%AC%94/60991/</url>
      
        <content type="html"><![CDATA[<p><em>Translated from the　original page</em>(<a href="http://doc.qt.io/qt-5/qtqml-syntax-propertybinding.html">Qt Documentation&gt;Qt5.11Qt QML&gt;Property Binding</a>)</p><h1 id="property-binding"><a class="markdownIt-Anchor" href="#property-binding"></a> Property Binding</h1><h1 id="属性绑定"><a class="markdownIt-Anchor" href="#属性绑定"></a> 属性绑定</h1><p>An object’s property can be assigned a static value which stays constant until it is explicitly assigned a new value. However, to make the fullest use of QML and its built-in support for dynamic object behaviors, most QML objects use property bindings.</p><p>可以为一个对象的属性分配一个静态值，该值在分配明确的新值之前保持不变。 但是，为了充分利用QML及其对动态对象行为的内置支持，大多数QML对象都使用<strong>属性绑定</strong>。</p><p>Property bindings are a core feature of QML that lets developers specify relationships between different object properties. When a property’s dependencies change in value, the property is automatically updated according to the specified relationship.</p><p>属性绑定是QML的核心功能，它允许开发人员指定不同对象属性之间的关系。当一个属性的依赖项值发生变化时，该属性将根据指定的关系自动更新。</p><h1 id="overview"><a class="markdownIt-Anchor" href="#overview"></a> Overview</h1><h1 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h1><p>To create a property binding, a property is assigned a JavaScript expression that evaluates to the desired value. At its simplest, a binding may be a reference to another property. Take the following example, where the blue <a href="http://doc.qt.io/qt-5/qml-qtquick-rectangle.html">Rectangle</a>’s height is bound to the height of its parent:</p><p>去创建一个属性绑定时，该属性会被分配一个Javascript表达式，该表达式的计算结果即是要分配的值。最简单的是，一个绑定肯是另一个属性的引用。通过下面的例子，一个蓝色<a href="http://doc.qt.io/qt-5/qml-qtquick-rectangle.html">Rectangle</a>的高度被绑定到父类的高度：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Rectangle &#123;</span><br><span class="line">    width: 200; height: 200</span><br><span class="line"></span><br><span class="line">    Rectangle &#123;</span><br><span class="line">        width: 100</span><br><span class="line">        height: parent.height</span><br><span class="line">        color: &quot;blue&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Whenever the height of the parent rectangle changes, the height of the blue rectangle automatically updates to be of the same value.</p><p>只要父类rectangle的高度变化，该蓝色Rectangle的高度将会自动更新为相同的值。</p><p>A binding can contain any valid JavaScript expression or statement, as QML uses a standards compliant JavaScript engine. Bindings can access object properties, call methods and use built-in JavaScript objects such as Date and Math. Below are other possible bindings for the previous example:</p><p>因为ＱＭＬ使用符合标准的JavaScript引擎，绑定可以包含任何一个有效的JavaScript表达式或者声明。绑定可以访问对象属性，调用方法并使用诸如Date和Math的内置JavaScript对象。以下是前一个例子的其他可能的绑定：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">height: parent.height &#x2F; 2</span><br><span class="line"></span><br><span class="line">height: Math.min(parent.width, parent.height)</span><br><span class="line"></span><br><span class="line">height: parent.height &gt; 100 ? parent.height : parent.height&#x2F;2</span><br><span class="line"></span><br><span class="line">height: &#123;</span><br><span class="line">    if (parent.height &gt; 100)</span><br><span class="line">        return parent.height</span><br><span class="line">    else</span><br><span class="line">        return parent.height &#x2F; 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">height: someMethodThatReturnsHeight()</span><br></pre></td></tr></table></figure><p>Below is a more complex example involving more objects and types:<br>以下是包含更多对象和类型的更复杂的例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">Column &#123;</span><br><span class="line">    id: column</span><br><span class="line">    width: 200</span><br><span class="line">    height: 200</span><br><span class="line"></span><br><span class="line">    Rectangle &#123;</span><br><span class="line">        id: topRect</span><br><span class="line">        width: Math.max(bottomRect.width, parent.width&#x2F;2)</span><br><span class="line">        height: (parent.height &#x2F; 3) + 10</span><br><span class="line">        color: &quot;yellow&quot;</span><br><span class="line"></span><br><span class="line">        TextInput &#123;</span><br><span class="line">            id: myTextInput</span><br><span class="line">            text: &quot;Hello QML!&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Rectangle &#123;</span><br><span class="line">        id: bottomRect</span><br><span class="line">        width: 100</span><br><span class="line">        height: 50</span><br><span class="line">        color: myTextInput.text.length &lt;&#x3D; 10 ? &quot;red&quot; : &quot;blue&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>In the previous example,</p><blockquote><p>topRect.width depends on bottomRect.width and column.width<br>topRect.height depends on column.height<br>bottomRect.color depends on myTextInput.text.length</p></blockquote><p>在前一个例子中，</p><blockquote><p>topRect.width 取决于 bottomRect.width 和 column.width<br>topRect.height 取决于 column.height<br>bottomRect.color取决于 myTextInput.text.length</p></blockquote><p>Syntactically, bindings are allowed to be of arbitrary complexity. However, if a binding is overly complex - such as involving multiple lines, or imperative loops - it could indicate that the binding is being used for more than describing property relationships. Complex bindings can reduce code performance, readability, and maintainability. It may be a good idea to redesign components that have complex bindings, or at least factor the binding out into a separate function.</p><p>从语法上讲，允许绑定具有任意的复杂性。但是，如果一个绑定过于复杂－－比如包含多行，或强制性循环－则表明绑定可能不仅仅用于描述属性关系。复杂的绑定会降低代码的性能，可读性和可维护性。重定义具有复杂绑定的空间，或至少将绑定分解为单独的函数可能会更好。</p><h1 id="creating-property-bindings-from-javascript"><a class="markdownIt-Anchor" href="#creating-property-bindings-from-javascript"></a> Creating Property Bindings from JavaScript</h1><h1 id="创建基于javascript的属性绑定"><a class="markdownIt-Anchor" href="#创建基于javascript的属性绑定"></a> 创建基于JavaScript的属性绑定</h1><p>A property with a binding is automatically updated as necessary. However, if the property is later assigned a static value from a JavaScript statement, the binding will be removed.<br>具有绑定的属性会根据需要自动更新。但是，如果后来通过从JavaScript语句为属性分配了静态值，则将删除绑定。</p><p>For example, the Rectangle below initially ensures that its height is always twice its width. However, when the space key is pressed, the current value of width*3 will be assigned to height as a static value. After that, the height will remain fixed at this value, even if the width changes. The assignment of the static value removes the binding.</p><p>例如，下面的长方形（Rectangle）最初确定了其高度（height）永远是其宽度（width）的两倍。但是，当按下空格键时，当前width*3的值将被赋值给高度作为一个静态值（常量）。之后，即使宽度改变，高度也将固定保持在这个值。静态值的赋值解除了绑定。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import QtQuick 2.0</span><br><span class="line"></span><br><span class="line">Rectangle &#123;</span><br><span class="line">    width: 100</span><br><span class="line">    height: width * 2</span><br><span class="line"></span><br><span class="line">    focus: true</span><br><span class="line">    Keys.onSpacePressed: &#123;</span><br><span class="line">        height &#x3D; width * 3</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>If the intention is to give the rectangle a fixed height and stop automatic updates, then this is not a problem. However, if the intention is to establish a new relationship between width and height, then the new binding expression must be wrapped in the Qt.binding() function instead:<br>如果打算给矩形一个固定的高度并停止自动更新，那么这不是问题。 但是，如果打算在宽度和高度之间建立新的关系，那么新的绑定表达式必须包含在Qt.binding（）函数中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import QtQuick 2.0</span><br><span class="line"></span><br><span class="line">Rectangle &#123;</span><br><span class="line">    width: 100</span><br><span class="line">    height: width * 2</span><br><span class="line"></span><br><span class="line">    focus: true</span><br><span class="line">    Keys.onSpacePressed: &#123;</span><br><span class="line">        height &#x3D; Qt.binding(function() &#123; return width * 3 &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Now, after the space key is pressed, the rectangle’s height will continue auto-updating to always be three times its width.<br>现在，按下空格键后，矩形的高度将继续自动更新，始终为宽度的三倍。</p><h1 id="debugging-overwriting-of-bindings"><a class="markdownIt-Anchor" href="#debugging-overwriting-of-bindings"></a> Debugging overwriting of bindings</h1><h1 id="调试覆盖绑定"><a class="markdownIt-Anchor" href="#调试覆盖绑定"></a> 调试覆盖绑定</h1><p>A common cause of bugs in QML applications is accidentally overwriting bindings with static values from JavaScript statements. To help developers track down problems of this kind, the QML engine is able to emit messages whenever a binding is lost due to imperative assignments.<br>QML应用程序中的错误的常见原因是不慎地使用JavaScript语句中的静态值覆盖绑定。为了去帮开发者追踪这类问题，QML引擎会在绑定因为强制赋值而丢失时发出信息。</p><p>In order to generate such messages, you need to enable the informational output for the qt.qml.binding.removal logging category, for instance by calling:<br>为了生成此类消息，您需要为qt.qml.binding.removal日志记录类别启用信息输出，例如通过调用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QLoggingCategory::setFilterRules(QStringLiteral(&quot;qt.qml.binding.removal.info&#x3D;true&quot;));</span><br></pre></td></tr></table></figure><p>Please refer to the <a href="http://doc.qt.io/qt-5/qloggingcategory.html">QLoggingCategory</a> documentation for more information about enabling output from logging categories.<br>有关从日志记录类别启用输出的详细信息，请参阅<a href="http://doc.qt.io/qt-5/qloggingcategory.html">QLoggingCategory</a>文档。</p><p>Note that is perfectly reasonable in some circumstances to overwrite bindings. Any message generated by the QML engine should be treated as a diagnostic aid, and not necessarily as evidence of a problem without further investigation.</p><p>请注意，在一些情况下重写绑定是完全合理的。通过ＱＭＬ生成的任何信息应该被视作辅助的诊断，在没有进一步调查的情况下，不能视作是问题的必要证据。</p><h1 id="using-this-with-property-binding"><a class="markdownIt-Anchor" href="#using-this-with-property-binding"></a> Using this with Property Binding</h1><h1 id="使用property-binding"><a class="markdownIt-Anchor" href="#使用property-binding"></a> 使用Property Binding</h1><p>When creating a property binding from JavaScript, the this keyword can be used to refer to the object which receives the binding. This is helpful for resolving ambiguities with property names.<br>当通过JavaScript创建属性绑定的时候，this关键字可用于引用接收绑定的对象。这有助于解决属性名称的歧义问题。</p><p>For example, the Component.onCompleted handler below is defined within the scope of the <a href="http://doc.qt.io/qt-5/qml-qtquick-item.html">Item</a>. In this scope, width refers to the Item’s width, not the <a href="http://doc.qt.io/qt-5/qml-qtquick-rectangle.html">Rectangle</a>’s width. To bind the Rectangle’s height to its own width, the binding expression must explicitly refer to this.width (or alternatively, rect.width):</p><p>例如，下面的Component.onCompleted处理程序在<a href="http://doc.qt.io/qt-5/qml-qtquick-item.html">Item</a>的范围内被定义。在此范围中，width指的是Item的宽度，而不是<a href="http://doc.qt.io/qt-5/qml-qtquick-rectangle.html">Rectangle</a>的宽度。 要将Rectangle的高度绑定到自己的宽度，绑定表达式必须显式引用this.width（或者rect.width）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Item &#123;</span><br><span class="line">    width: 500</span><br><span class="line">    height: 500</span><br><span class="line"></span><br><span class="line">    Rectangle &#123;</span><br><span class="line">        id: rect</span><br><span class="line">        width: 100</span><br><span class="line">        color: &quot;yellow&quot;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Component.onCompleted: &#123;</span><br><span class="line">        rect.height &#x3D; Qt.binding(function() &#123; return this.width * 2 &#125;)</span><br><span class="line">        console.log(&quot;rect.height &#x3D; &quot; + rect.height) &#x2F;&#x2F; prints 200, not 1000</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Note: The value of this is not defined outside of property bindings. See <a href="http://doc.qt.io/qt-5/qtqml-javascript-hostenvironment.html#javascript-environment-restrictions">JavaScript Environment Restrictions</a> for details.<br>注意：此值未在属性绑定之外定义。 有关详细信息，请参阅<a href="http://doc.qt.io/qt-5/qtqml-javascript-hostenvironment.html#javascript-environment-restrictions">JavaScript环境限制</a>。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>When run &#39;git clone&#39; error: RPC failed; curl 56 GnuTLS recv error (-54): Error in the pull function</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/37980/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/37980/</url>
      
        <content type="html"><![CDATA[<p>When I use “git clone <a href="https://github.com/smartdevicelink/sdl_core.git">https://github.com/smartdevicelink/sdl_core.git</a>”　on ubuntu16.04 ,<br>the error occured as following:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">remote: Compressing objects: 100% (7&#x2F;7), done.</span><br><span class="line">error: RPC failed; curl 56 GnuTLS recv error (-54): Error in the pull function.</span><br><span class="line">fatal: The remote end hung up unexpectedly</span><br><span class="line">fatal: 过早的文件结束符（EOF）</span><br><span class="line">fatal: index-pack failed</span><br></pre></td></tr></table></figure><p>I solved this problem with the help of 《<a href="https://blog.csdn.net/ai2000ai/article/details/80708079">error: RPC failed; curl 56 GnuTLS recv error (-54): Error in the pull function.</a>》 ，thx.</p><p>Just run the following command to enlarge the cache:</p><p><code>git config --global http.postBuffer 524288000</code></p><p>If the error occured again, to enlarge it bigger again.</p><p>The another solution worked for me is to use ssh protocol instead of http(s) protocol.</p><p>OR use “<a href="https://code.google.com/archive/p/git-repo/">repo</a>” method instead of “git”</p><p><strong>或者就是网络不好!!!</strong></p><p>On <a href="https://git-scm.com/docs/git-config">Git-config</a> page says:<br>【<strong>http.postBuffer</strong>】<br>Maximum size in bytes of the buffer used by smart HTTP transports when POSTing data to the remote system. For requests larger than this buffer size, HTTP/1.1 and Transfer-Encoding: chunked is used to avoid creating a massive pack file locally. Default is 1 MiB, which is sufficient for most requests.</p><blockquote><p>reference:<br><a href="https://git-scm.com/docs/git-config">http.postBuffer</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> Bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>武林筑梦人金庸经典语录整理</title>
      <link href="%E6%91%98%E6%8A%84/56194/"/>
      <url>%E6%91%98%E6%8A%84/56194/</url>
      
        <content type="html"><![CDATA[<p>这几天世界不想让我们安静，吃过饭，看到了新闻，忽然想整理一下金庸的语录。<br>现摘录200条，出处尚未校订，未敢人云亦云。他日校订后补录。</p><p><img src="/%E6%91%98%E6%8A%84/56194/jy-1.jpeg" alt="jy-1"></p><p>1.世上之事，难说得很，亲如父子兄弟，也有信不过的时候。<br>2.教而不明其法，学而不得其道。<br>3.“将军百战身名裂，向河梁，回首万里，故人长绝，易水萧萧西风冷，满座衣冠似雪，正壮士悲歌未彻……。<br>4.慧极必伤，情深不寿，强极则辱，谦谦君子，温润如玉。<br>5.乱世之际，人不如狗。<br>6.情不知所起，一往情深，恨不知所终，一笑而泯……<br>7.白马带着她一步一步地回到中原，白马已经老了，只能慢慢地走，但是终是能回到中原的，江南有杨柳，桃花，燕子，金鱼……汉人中有的是英俊勇武的少年，倜傥潇洒的少年……但这个美丽的姑娘，就像高昌国人那样固执，那都是很好很好的，我却偏偏不喜欢。<br>8.各有因缘莫羡人。<br>9.这本宁愿把世间千万种苦难都放到自己身上 只是要他平安喜乐。<br>10.我是一文不值，狗屁不如，你呢，就有如狗屁，值得一闻。<br>11.就算你们斩我一千刀一万刀，我也要她做我的妻子。<br>12.天山鸟飞绝，故人两相忘。<br>13.其实我虽然嘴上叫你姑姑心里却早就把你当做…当做我的…妻子。<br>14.他强由他强，清风拂山冈；他横任他横，明月照大江。<br>15.萧峰脸上露出一丝苦笑，心道：“我既误杀阿朱，此生终不再娶，阿朱就是阿朱，四海列国，千秋万载，就只一个阿朱。岂是一千个、一万个汉人美女所能代替得了的？皇上看惯了后宫千百名宫娥妃子，那懂得‘情’之一字？”</p><p><img src="/%E6%91%98%E6%8A%84/56194/fhwz.jpeg" alt="fhwz"></p><p>16.沐春风，惹一身红尘;望秋月，化半缕轻烟。顾盼间乾坤倒转，一霎时沧海桑田。方晓，弹指红颜老，刹那芳华逝。与其天涯思君，恋恋不舍，莫若相忘于江湖。<br>17.无我无形，无我无心，无我无招，无我无敌。<br>18.风陵渡口初相遇,一见杨过误终身。只恨我生君已老,断肠崖前忆故人。我走过山时，山不说话，我路过海时，海不说话，小毛驴滴滴答答，倚天剑伴我走天涯。大家都说我因为爱着杨过大侠，才在峨嵋山上出了家，其实我只是爱上了峨嵋山上的云和霞，像极了十六岁那年的烟花。<br>19.前途既已注定了是忧患伤心，不论怎生走法，终究避不了，躲不开，便如长岭遇雨一般。<br>20.过儿，如果我死了，你会一个人活下去吗。<br>21.我现在不杀你，等我死后还有谁来照顾你呢。<br>22.重阳一生，不弱于人。<br>23.世上聪明人本来是有的，不过这种人你遇上了，多半非倒大霉不可。<br>24.这本来面目一露，但见他形相清癯，丰姿隽爽，萧疏轩举，湛然若神。<br>25.为什么！为什么！为什么她教我武功，就不能做我的妻子。<br>26.千棺从门出，其家好兴旺，子在父先死，孙存祖乃亡。<br>27.她抱着无忌，低声道：“孩儿，你长大了之后，要提防女人骗你，越是好看的女人越会骗人。”将嘴巴凑在无忌耳边，极轻极轻的道：“我没跟这和尚说，我是骗他的……你瞧你妈……多会骗人！”说着凄然一笑，突然间双手一松，身子斜斜跌倒，只见胸口插着一把匕首。<br>28.为国为民，侠之大者。<br>29.凡人有生必有死，生固欣然，死亦天命。<br>30.天地四方为江湖，世人聪明反糊涂。名利场上风浪起，赢到头来却是输。</p><p><img src="/%E6%91%98%E6%8A%84/56194/xsfh.jpeg" alt="xsfh"></p><p>31.人生在世，去若朝露。魂归来兮，哀我何悲。<br>32.缠绵悱恻的爱恨情仇<br>33.一座山，隔不了两两相思，一天涯，断不了两两无言，且听风吟，吟不完我一生思念。<br>34.好令后人发现宝藏之时，知道世上最宝贵之物，乃是两心相悦的真正情爱，决非价值连城的宝藏。<br>35.情深意真，岂在丑俊？千山万水，苦随君行。<br>36.你瞧这些白云聚了又聚，散了又散，人生离合，亦复如斯。<br>37.认错悔过，生自本人内心，方有意义，旁人强求，全无益处。<br>38.做人要能瞎蒙，就瞎蒙，生活尽量放轻松。<br>39.他知道殷离这一生，永远会记得蝴蝶谷中那个一身狠劲的少年，她要去寻他。她自然就找不到，但也可以说，她已寻到了，因为那个少年早就藏在她的心底。真正的人、真正的事，往往不及心中所想的那么好。<br>40.书到用时方恨少，肉到肥时方恨多。<br>41.阿紫问姐夫“她有什么好，我哪里及不上她，你老是想着她，老是忘不了她？”<br>姐夫平静的答“你样样都好，样样比她强，你只有一个缺点，你不是她…”<br>42.欧阳克低声道：“黄姑娘，多谢你相救。我是活不成的了，但见到你出力救我，我是死也欢喜。”黄蓉心中忽感歉仄，说道：“你不用谢我。这是我布下的机关，你知道么?”欧阳克低声道：“别这么大声，给叔叔听到了，他可放你不过。我早知道啦，死在你的手里，我一点也不怨。”<br>43.只要有人的地方就有恩怨,有恩怨就会有江湖,人就是江湖。<br>44.桃花影落飞神剑，碧海潮生按玉箫。<br>45.周芷若冷笑道：“咱们从前曾有婚姻之约，我丈夫此刻却是命在垂危，加之今日我没伤你性命，旁人定然说我对你旧情犹存。若再邀你相助，天下英雄人人要骂我不知廉耻、水性杨花。”<br>张无忌急道：“咱们只须问心无愧，旁人言语，理他作甚？”<br>周芷若道：“倘若我问心有愧呢？”<br>张无忌一呆，接不上口，只道：“你……你……”<br>周芷若道：“张教主，咱二人孤男寡女，深宵共处，难免要惹物议。你快请罢！”</p><p><img src="/%E6%91%98%E6%8A%84/56194/lcj.jpeg" alt="lcj"></p><p>46.焚我残躯，熊熊圣火，生亦何欢，死亦何苦？为善除恶，唯光明故。喜乐悲愁，皆归尘土。怜我世人，忧患实多。<br>47.你爱一个人要一生一世爱她，但往往做不到，不是你不想做到是你无法做到，世事难料，当初也只是当初了。<br>48.相思无用，惟别而已。别期若有定，千般煎熬又何如？莫道黯然销魂，何处柳暗花明？<br>49.问花花不语，为谁落？为谁开？算春色三分，半随流水半入尘埃。<br>50.时间，让痛苦不平都沉淀。<br>51.情之为物，本是如此，入口甘甜，回味苦涩，而且遍身是刺，你就算万分小心，也不免为其所伤。多半因为这花儿有这几般特色，人们才给它去上这个名儿。<br>52.上口极甜,后来却苦了,这花叫情花。<br>53.惊世骇俗的爱情总是要付出许多代价。<br>54.喜欢吧，看一眼是如此，过一辈子也是如此。<br>55.说我负天下人，天下人又何曾善待过我。<br>56.鸠摩智微微笑道：“世外闲人，岂再为这等俗事萦怀？老衲今后行止无定，随遇而安，心安乐处，便是身安乐处。”<br>57.四张机，鸳鸯织就欲双飞，可怜未老头先白，春波碧草，晓寒深处，相对浴红衣。<br>58.“你姓杨，那我便姓柳吧。”<br>59.这些雪花落下来，多么白，多么好看。过几天太阳出来，每一片雪花都变得无影无踪。到得明年冬天，又有许许多多雪花，只不过已不是今年这些雪花罢了。<br>60.先去你的塞外，再回我的江南。</p><p><img src="/%E6%91%98%E6%8A%84/56194/tlbb.jpeg" alt="tlbb"></p><p>61.一梦如是。<br>62.如果你深深爱着的人，却深深的爱上了别人，有什么法子？<br>63.世间少年男子，大都有过如此胡里胡涂的一段初恋，当时为了一个姑娘废寝忘食，生死以之，可是这段热情来的快，去的也快，日后头脑清醒，对自己旧日的沉迷，往往不禁为之哑然失笑！<br>64.可惜我迟生了二十年。倘若妈妈先生我，再生姊姊，我学会了师父的龙象般若功和无上瑜珈密乘，在全真教道观外住了下来，自称大龙女，小杨过在全真教中受师父欺侮，逃到我家里，我收留了他教他武功，他慢慢的自会跟我好了。他再遇到小龙女，最多不过拉住她手，给她三枚金针，说道：『小妹子，你很可爱，我心里也挺喜欢你。不过我的心已属大龙女了。请你莫怪！你有甚幺事，拿一枚金针来，我一定给你办到。』唉，还有一枚金针，我要请他不管发生了甚幺事，无论如何不可自尽。他是扬名天下的神雕大侠，千金一诺，不，万金一诺，万万金一诺，答允了我的话不可不守信约，不能自尽就一生一世决不能自尽。<br>65.千里茫茫若梦，双眸粲粲如星。塞上牛羊空许约，烛畔鬓云有旧盟。莽苍踏雪行。<br>赤手屠熊搏虎，金戈荡寇鏖兵。草木残生颅铸铁，虫豸凝寒掌作冰。挥洒缚豪英。<br>66.向来痴，从此醉，水榭听香，指点群豪戏。剧饮千杯男儿事，杏子林中，商略平生义。<br>昔时因，今日意，胡汉恩仇，须倾英雄泪。虽万千人吾往矣，悄立雁门，绝壁无余字。<br>67.穆念慈道：“他是王爷也好，是乞儿也好，我心中总是有了他。他是好人也罢，坏人也罢，我总是他的人了。”<br>68.你走你的阳关道，我过我的奈河桥。<br>69.这三年来到处寻寻觅觅，却始终落得个冷冷清清。终南山古墓常闭，万花坳花落无声，绝情谷空山寂寂，风陵渡凝月冥冥。<br>70.青衫磊落险峰行，玉壁月华明。马疾香幽，崖高人远，微步毂纹生。<br>谁家子弟谁家院，无计悔多情。虎啸龙吟，换巢鸾凤，剑气碧烟横。<br>71.一袭白衣若雪，犹似身在烟中雾里。<br>72.张三丰瞧着郭襄的遗书，眼前似乎又看到了那个明慧潇洒的少女，可是，那已经是一百年前的事了。<br>73.赵敏微微一笑，说道：“我有几句话跟张教主说，说毕便去，容日再行叨扰。”<br>杨逍道：“赵姑娘有甚么话，待行礼之后再说不迟。”赵敏道：“行礼之后，已经迟了。”<br>赵敏向范遥道：“苦大师，人家要对我动手，你帮不帮我？”<br>范遥眉头一皱，说道：“郡主，世上不如意事十居八九，既已如此，也是勉强不来了。”<br>赵敏道：“我偏要勉强。”<br>74.霎时之间，心中想起几句词来：「十年生死两茫茫，不思量，自难忘。千里孤坟，无处话凄凉。纵使相逢应不识，尘满面，鬓如霜。」这是苏东坡悼亡之词。杨过一生潜心武学，读书不多，数处前在江南一家小酒店壁上偶尔见到题著这首词，但觉情深意真，随口念了几遍，这时忆及，已不记得是谁所作。心想：「他是十年生死两茫茫，我和龙儿已相隔一十六年了。他尚有个孤坟，知道爱妻埋骨之所，而我却连妻子葬身何处也自不知。」接著又想到这词的下半阕，那是作者一晚梦到亡妻的情境：「夜来幽梦忽还乡，小轩窗，正梳妆；相对无言，惟有泪千行！料想年年肠断处，明月夜，短松岗。」不由得心中大恸：「而我，而我，三日三夜不能合眼，竟连梦也做不到一个！」<br>75.输赢成败，又争由人算！且自逍遥没谁管。奈天昏地暗，斗转星移。风骤紧，缥缈峰头云乱。 红颜弹指老，刹那芳华。梦里真真语真幻。同一笑，到头万事俱空。糊涂醉，情长计短。解不了，名缰系嗔贪。却试问，几时把痴心断？</p><p><img src="/%E6%91%98%E6%8A%84/56194/bmxxf.jpeg" alt="bmxxf"></p><p>76.我师姐叫李莫愁，莫愁，是师父给她起的名字，就是希望她莫愁，可她偏偏姓李，李就是离，离了莫愁，就是愁，或许，我师姐一生的悲剧就是从她离开古墓开始的。<br>77.人生在世,会当畅情适意,连酒也不能喝,女人不能想,人家欺到头上不能还手,还做甚么人？不如及早死了,来得爽快。<br>78.就算再过一百年一千年，我们俩都变成灰了，我们的灰也要融合在一起，你中有我，我中有你！<br>79.话虽是这般说，可是烦恼之来，岂是轻易摆脱得了的？倘若情丝一斩便断，那也算不得是情丝了。<br>80.你若是死了，我就陪着你，我答应你，永远也不让你孤单！<br>81.无官方是一身轻，伴君伴虎自古云，归家便是三生幸，鸟尽弓藏走狗烹！子胥功高吴王忌，文种灭吴身首分，可惜了淮阴命，空留下武穆名，大功谁及徐将军？神机妙算刘伯温，算不到：大明天子坐龙廷，文武功臣命归阴。因此上，急回头里逃生；因此上，急回头里逃生… 君王下旨拿功臣，剑拥兵围，绳缠索绑，肉颤心惊。恨不能，得便处投河跳井；悔不及，起初时诈死埋名。今日的一缕英魂，昨日的万里长城。<br>82.不生气，你就赢了。<br>83.这套曲子模拟大海浩淼，万里无波，远处潮水缓缓推近，渐近渐快。其后洪涛汹涌，白浪连山。而潮水中鱼跃鲸浮，海面上风啸鸥飞，再加上水妖海怪，群魔弄潮。忽而冰山飘至，忽而热海如沸，极尽变幻之能事。而潮退后水平如镜，海底却又是暗流湍急，于无声处隐伏凶险，更令聆曲者不知不觉入伏，尤为防不胜防。<br>84.世事遇合变幻，穷通成败，虽有关机缘气运，自有幸与不幸之别，但归根结底，总是由各人本来性格而定。<br>85.师父，你得不到心爱的人，就将她杀死。我得不到心爱的人，却不忍心让他给人杀了。<br>86.负气何妨且笑天，相依瘦马不挥鞭。多情还似无情苦，肠断魂萦十六年。<br>87.燕云十八飞骑，奔腾如虎风烟举。老魔小丑，岂堪一击，胜之不武。王霸雄图，血海深恨，尽归尘土。念枉求美眷，良缘安在？枯井底，污泥处。 酒罢问君三语，为谁开，茶花满路？王孙落魄，怎生消得，杨枝玉露？敝屣荣华，浮云生死，此身何惧！教单于折箭，六军辟易，奋英雄怒！<br>88.请从绝处读侠气。<br>89.百战江湖一笛横，风雷侠烈死生轻。鸳鸯有耦春蚕苦，白马鞍边笑靥生。<br>90.”龙儿，你的样貌还是一点都没变，但我的样子就老了很多”<br>”我的过儿只不过是长大了”</p><p><img src="/%E6%91%98%E6%8A%84/56194/ldj.jpeg" alt="ldj"></p><p>91.害我的都是女人，叮我的都是蚊子。<br>92.我只道有情人终成眷属，怎知道无限欢喜空成灰？<br>93.一个人武功越练越高，在武林中名气越来越大，往往性子会变。他自己并不知道，可是种种事情，总是和从前不同了。<br>94.一个情字书万卷，只写恩爱是江山。<br>95.行云流水，任意所至。<br>96.是非只因强出口，烦恼只为强出头。<br>97.子房志亡秦，曾进桥下履。佐汉开鸿举，屹然天一柱，要伴赤松游，功成拂衣去。异人与异书，造物不轻付。重阳起全真，高视仍阔步，矫矫英雄姿，乘时或割据。妄迹复知非，收心活死墓。人传入道初，二仙此相遇。于今终南下，殿阁凌烟雾。<br>98.我今生娶不到你，我就是乌龟王八蛋！啊不，再多加一个蛋，乌龟王九蛋！<br>99.大闹一场，悄然离去。<br>100.怪只怪，她遇见了你，一见倾心。<br>101.天下的人中，我只想被他一个人爱着，我也只爱他一个，就算你再喜欢我一百倍，我也绝不稀罕，还请谷主取除婚约！<br>102.重剑无锋，大巧不工。<br>103.郭襄回头过来，见张君宝头上伤口兀自汨汨流血，于是从怀中取出手帕，替他包扎。张君宝好生感激，欲待出言道谢，却见郭襄眼中泪光莹莹，心下大是奇怪，不知她为甚么伤心，道谢的言辞竟此便说不出口。<br>却听得杨过朗声说道：“今番良晤，豪兴不浅，他日江湖相逢，再当杯酒言欢。咱们就此别过。”说着袍袖一拂，携着小龙女之手，与神雕并肩下山。<br>其时明月在天，清风吹叶，树巅乌鸦呀啊而鸣，郭襄再也忍耐不住，泪珠夺眶而出。<br>正是：<br>“秋风清，秋风明；落叶聚还散，寒鸦栖复惊。相思相见知何日，此时此夜难为情。”<br>104.郭靖沉吟良久，手指西方郁郁苍苍的丘陵树木，说道：“襄阳古往今来最了不起的人物，自然是诸葛亮。此去以西二十里的隆中，便是他当年耕田隐居的地方。诸葛亮治国安民的才略，我们粗人也懂不了。他曾说只知道‘鞠躬尽瘁，死而后己’，至于最后成功失败，他也看不透了。我与你郭伯母谈论襄阳守得住、守不住，谈到后来，也总只是‘鞠躬尽瘁，死而后己’这八个字。”<br>105.四十岁后，不滞于物，草木竹石均可为剑。自此精修，渐进于无剑胜有剑之境。</p><p><img src="/%E6%91%98%E6%8A%84/56194/xajh.jpeg" alt="xajh"></p><p>106.姑姑，倘若我有不是，你尽管可以打我骂我，就算你一剑杀了我，我也心甘情愿！但是你不能不认我！<br>107.黄蓉伤心欲绝，隔了半晌，走上几步，细细打量华筝，见她身子健壮，剑眉大眼，满脸英气，不由得叹了口长气，道：“靖哥哥，我懂啦，她和你是一路人。你们俩是大漠上的一对白雕，我只是江南柳枝底下的一只燕儿罢啦。”<br>郭靖走上几步，握住她双手，说道：“蓉儿，我不知道你说得对不对，我心中却只有你，你是明白的。不管旁人说该是不该，就算把我身子烧成了飞灰，我心中仍是只有你。”黄蓉眼中含泪，道：“那么为甚么你说要娶她？”郭靖道：“我是个蠢人，甚么事理都不明白。我只知道答允过的话，决不能反悔。可是我也不打诳，不管怎样，我心中只有你。”<br>108.嘿！佛经上说，当年佛祖释迦牟尼降世，一落地便自称‘天上天下，唯我一人称独尊’，这句话跟‘古往今来，打遍天下无敌手’，倒配得上对儿。<br>109.我和刘贤弟醉心音律，以数年之功，创制了一曲《笑傲江湖之曲》，自信此曲之奇，千古所未有。今后纵然世上再有曲洋，不见得又有刘正风，有刘正风，不见得又有曲洋。就算又有曲洋、刘正风一般的人物，二人又未必生于同时，相遇结交。要两个既精音律，又精内功之人，志趣相投，修为相若，一同创制此曲，实是千难万难了。此曲响绝，我和刘贤弟在九泉之下，不免时发浩叹。<br>110.善攻者攻敌之必守。<br>111.男子汉大丈夫，第一论人品心肠，第二论才干事业，第三论文学武功。<br>112.天上星,亮晶晶,永灿烂,长安宁。湖边竹,绿盈盈,报平安,多喜乐。<br>113.这些珍宝虽无知觉，却是历千百年而不朽。今日我在这里看着它们，将来我身子化为尘土，珍珠宝玉却仍然好好的留在人间。世上之物，是不是愈有灵性，愈不长久？<br>114.我们就来个“兵来将挡”、“水来土掩”、“饭来张口”、“茶来伸手”<br>115.黄药师想不到女儿竟会出手相救华筝，愣了一愣，随即会意，知道若是自己将这番邦女子杀了，郭靖必与女儿翻脸成仇。哼，翻脸就翻脸，难道还怕了这小子不成？但一望女儿，但见她神色凄苦，却又显然是缠绵万状、难分难舍之情，心中不禁一寒，这正是他妻子临死之时脸上的模样。黄蓉与亡母容貌本极相似，这副情状当时曾使黄药师如痴如狂，虽然时隔十五年，每日仍是如在目前，现下陡然间在女儿脸上出现，知她对郭靖已是情根深种，爱之入骨，心想这正是她父母天生任性痴情的性儿，无可化解，当下叹了一口长气，吟道︰“且夫天地为炉兮，造化为工！阴阳为炭兮，万物为铜！”黄蓉怔怔站着，泪珠儿缓缓的流了下来。<br>116.凡是女子听说哪一个女人美貌，若不亲眼见上一见，可比什么都难过，如果自己是美丽女人，那是更加非去看一看、比一比不可。<br>117.幽冥之事，实所难言，幽魂不须超度。人死业在，善有善报，恶有恶报。佛家行法，乃在求生人心之所安，超度的乃是活人。<br>118.黄蓉向郭靖望了一眼，见他凝视着自己，目光爱怜横溢，深情无限，回头向父亲道：&quot;爹，他要娶别人，那我也嫁别人。他心中只有我一个，那我心中也只有他一个。&quot;黄药师道：&quot;哈，桃花岛的女儿不能吃亏，那倒也不错。要是你嫁的人不许你跟他好呢？&quot;黄蓉道：&quot;哼，谁敢拦我？我是你的女儿啊。&quot;黄药师道：&quot;傻丫头，爹过不了几年就要死啦。&quot;黄蓉泫然道：&quot;爹，他这样待我，难道我能活得久长么？&quot;黄药师道：&quot;那你还跟这无情无义的小子在一起？&quot;黄蓉道：&quot;我跟他多耽一天，便多一天欢喜。&quot;说这话时，神情已是凄惋欲绝。<br>119.也不知过了多少时候，只听得柳梢莺啭，郭靖睁开眼来，但见朝曦初上，鼻中闻着阵阵幽香，黄蓉兀自未醒，蛾眉敛黛，嫩脸匀红，口角间浅笑盈盈，想是正做好梦。郭靖心想：“让她多睡一会，且莫吵醒她。”正在一根根数她长长的睫毛。<br>120.张无忌心头忽然涌起三句话来：“生死修短，岂能强求？予恶乎知悦生之非惑邪？予恶乎知恶死之非弱丧而不知归者邪？予恶乎知夫死者不悔其始之蕲生乎？”这四句话意思是说：“一个人寿命长短，是勉强不来的。我哪里知道，贪生并不是迷误？我哪里知道，人之怕死，并不是像幼年流落在外面不知回归故乡呢？我哪里知道，死了的人不会懊悔他从前求生呢？”庄子的原意在阐明，生未必乐，死未必苦，生死其实没甚么分别，一个人活着，不过是“做大梦”，死了，那是“醒大觉”，说不定死了之后，会觉得从前活着的时候多蠢，为甚么不早点死了？正如做了一个悲伤恐怖的恶梦之后，一觉醒来，懊恼这恶梦实在做得太长了。”</p><p><img src="/%E6%91%98%E6%8A%84/56194/sjecl.jpeg" alt="sjecl"></p><p>121.败笔很多,胜笔没多少!<br>122.杨过待她走远，笑问：“倘若你是她，便嫁哪一个？”小龙女侧头想了一阵，道：“嫁你。”杨过笑道：“我不算。郭姑娘半点也不欢喜我。我说倘若你是她，二武兄弟之中你嫁哪一个？“小龙女“嗯”了一声，心中拿二武来相互比较，终于又道：“我还是嫁你。”杨过又是好笑，又是感激，伸臂将她搂在怀里，柔声道：“旁人那么三心二意，我的姑姑却只爱我一人。”<br>123.扫地僧说：佛由心生，佛即是觉，旁人只能指点，却不能代劳。<br>124.耶律洪基见萧峰自尽，心头一片茫然，寻思：“他到底于我大辽是有功还是有过？他苦苦劝我不可伐宋，到底是为了宋人还是为了契丹？他和我结义为兄弟，始终对我忠心耿耿，今日自尽于雁门关前，自然决不是贪图南朝的功名富贵，那……那却又是为了什么？”他摇了摇头，微微苦笑，拉传马头，从辽军阵中穿了过去。<br>125.骗女孩子其实最好朴实无华。欧阳克用那么多花招，不如我请一顿饭。<br>126.“狄兄弟，你大哥相貌平庸，非富非贵，只是个流落江湖的草莽之徒，如何敢盼望得佳人垂青？只是从此之后，每天早晨，我总是到凌府的府门外，向小姐的窗槛瞧上半天。凌小姐倒也记着我，每天总是换一盆鲜花，放在窗槛上。<br>“这样子的六个多月，不论大风大雨，大霜大雪，我天天早晨去赏花。凌小姐也总风雨不改地给我换一盆鲜花。她每天只看我一眼，决不看第二眼，每看了这一眼，总是满脸红晕地隐到了帘子之后。我只要每天这样见到一次她的眼波、她脸上的红晕，那就心满意足。她从来没跟我说话，我也从不敢开口说一句。以我的武功，轻轻一纵，便可跃上褛去，到了她身前。但我从来不敢对她有半分轻慢。至于写一封信来表达敬慕之忱，那更是不敢了。<br>127.与其奔波劳碌，厮杀拼命，还不如和你一起安安静静，快快乐乐的度过！<br>128.祖千秋指着一坛酒，说道：“这一坛关外白酒，酒味是极好的，只可惜少了一股芳冽之气，最好是用犀角杯盛之而饮，那就醇美无比，须知玉杯增酒之色，犀角杯增酒之香，古人诚不我欺。”“至于饮葡萄酒嘛，当然要用夜光杯了。古人诗云：‘葡萄美酒夜光杯，欲饮琵琶马上催。’要知葡萄美酒作艳红之色，我辈须眉男儿饮之，未免豪气不足。葡萄美酒盛入夜光杯之后，酒色便与鲜血一般无异，饮酒有如饮血。岳武穆词云：‘壮志饥餐胡虏肉，笑谈渴饮匈奴血’，岂不壮哉！”饮这坛梨花酒呢？那该当用翡翠杯。白乐天杭州春望诗云：‘红袖织绫夸柿叶，青旗沽酒趁梨花。’你想，杭州酒家卖这梨花酒，挂的是滴翠也似的青旗，映得那梨花酒分外精神，饮这梨花酒，自然也当是翡翠杯了。”<br>129.你若真的忘了过儿，就将我杀了，埋在这谷中，让我陪你一生一世，然后再嫁给这个谷主，好不好！<br>130.“也只有断肠之痛才可能绝情。”<br>131.想不到我任盈盈，竟也终身和一支大马猴锁在一起，再也不分开了。<br>132.赵敏嫣然一笑，说道：“我的眉毛太淡，你给我画一画。这可不违反武林侠义之道罢？”张无忌提起笔来，笑道：“从今而后，我天天给你画眉。”<br>133.郭襄的第三个愿望一时却不说出，隔了片刻，才道：“我第三个心愿，盼望神雕大侠杨过……”黄蓉虽早料到女儿第三个心愿定与杨过有关，但听到她亲口说出：“杨过”两字，心头终于还是一震，听得她续道：“……和他夫人小龙女早日团聚，平安喜乐。”<br>134.“这天晚上，我悄悄捧了一盆蔷薇，放在凌小姐后楼的窗槛上，然后在楼下等着。第二天早晨，小姐打开窗子，见到了那盆花，惊呼了一声，随即又见到了我。我们一年多不见，都以为今生再无相见之日，此番久别重逢，真是说不出的欢喜。她向我瞧了好一会儿，才红着脸，轻轻掩上了窗子。第三天，她终于说话了，问：‘你生病了么？可瘦得多了。’“以后的日子，我不是做人，是在天上做神仙，其实就做神仙，一定也没我这般快活。每天半夜里，我到楼上去接凌小姐出来，在江陵各处荒山旷野漫游。我们从没半分不规矩的行为，然而是无话不说，比天下最要好朋友还知己。<br>135.过儿是不会娶你女儿的，因为我自己要做过儿的妻子！</p><p><img src="/%E6%91%98%E6%8A%84/56194/sdyxz.jpeg" alt="sdyxz-1"></p><p>136.天子者，有道则人推而为主，无道则人弃而不用，诚可畏也。<br>137.“大丈夫做人的道理，我便跟你说了，你也不会明白。”<br>138.空即是色，色即是空，喇嘛即是和尚，和尚即是喇嘛。<br>139.穆念慈笑道：“天下男子之中，就只你的靖哥哥一个最好了？”<br>黄蓉笑问：“姊姊，你不肯嫁他，是嫌他太笨么？”<br>穆念慈道：“郭世兄哪里笨了？他天性淳厚，侠义为怀，我是佩服得紧的。他对我爹爹、对我都很好。当日他为了我的事而打抱不平，不顾自己性命，我实在感激得很。这等男子，原是世间少有。”<br>黄蓉心里又急了，忙问：“怎么你说就是刀子架在脖子里，也不能嫁他？”<br>穆念慈见她问得天真，又是一往情深，握住了她手，缓缓说道：“妹子，你心中已有了郭世兄，将来就算遇到比他人品再好千倍万倍的人，也不能再移爱旁人，是不是？”<br>黄蓉点头道：“那自然，不过不会有比他更好的人。”<br>140.天涯思君不可忘，武当山顶松柏长。<br>141.十八的时间太短了，为什么老天这么残酷，只给我们这么短的时间！我想永远和你在一起，一百年，一千年，一万年！<br>142.喜欢一个人，看一辈子是看，看一眼也是看。<br>143.郭靖忽然想起，说道：“我给你带了点心来。”从怀里掏出完颜康送来的细点，哪知他背负王处一、换水化毒、奔波求药，早把点心压得或扁或烂，不成模样。黄蓉看了点心的样子，轻轻一笑。郭靖红了脸，道：“吃不得了！”拿起来要抛入湖中。黄蓉伸手接，道：“我爱吃。”<br>144.小龙女淡淡一笑，说道：你说上，便上罢。忽然身旁一个少女的声音道：杨大嫂，你真美。正是郭襄，小龙女回头笑道：小妹子，多谢你为我们祝祷重会，你大哥哥尽说你好，定要带我到襄阳来见你一见，郭襄叹了口气，道：也真只有你，才配得上他。<br>145.我最大的梦想是和你到雁门关外 骑马打猎 牧牛牧羊 从此无忧无虑 共度一生<br>146.若是我错了，我自然要改，可是我和姑姑之间清清白白、天日可表，我敬她、爱她，这难道也错了吗！<br>147.郭襄道：“多谢你啦！”接过金针，说道：“我先说第一个心愿。”当即以第一枚金针还给了杨过，道：“我要你取下面具，让我瞧瞧你的容貌。”杨过笑道：“这件事未免太过轻而易举，我因不愿多见旧人，是以戴上面具。你这么随随便便的使了一枚金针，岂不可惜？”心想：“我既已亲口许诺，再无翻悔，你持了金针，便要我去干天大的难事，我也义无反顾。怎地意来叫我做这样一件不相干的小事？”郭襄道：“连你真面目也没见过，怎能算是识你？这可不是小事。”杨过道：“好！”左手一起，揭下了脸上的面具。<br>148.指法无优劣，功力有高下。<br>149.“啊，亲爱的牧羊少年， 请问你多大年纪？ 你半夜里在沙漠独行， 我和你作伴愿不愿意？”<br>150.你大哥第一爱阿朱，第二才爱喝酒，第三爱打架！</p><p><img src="/%E6%91%98%E6%8A%84/56194/xkx.jpeg" alt="xkx"></p><p>151.琴瑟琵琶，八大王一般头面。魑魅魍魉，四小鬼各自肚肠。<br>152.当年李太白以芍药比喻杨贵妃之美，他若有福见到小姐，就知道花朵虽美，然而无娇嗔，无软语，无喜笑，无忧思，那是万万不及了。<br>153.令狐冲道：“我抬起头来看天，看天上少了哪一颗星，便知姑娘是甚么星宿下凡了。姑娘生得像天仙一般，凡间 哪有这样的人物。”<br>154.刃寒如水，剑是倚天剑。 貌美如花，人是赵敏。<br>155.慕容博微微一笑，说道：“庶民如尘土，帝王亦如尘土。大燕不复国是空，复国亦空。”<br>156.我费尽了九虎二牛之力…还要加上那些羊啊猪啊什么的。<br>157.过儿要娶你为妻，终生的要爱惜你、保护你，永远永远和你在一起，再也不分开了！<br>158.大丈夫一言即出，就什么马也难追了。<br>159.他心中不住盘算：“我和慕容公子相较，文才武艺不如，人品风采不如，倜傥潇洒，威望声誉不如，可说样样及他不上。更何况他二人是中表之亲，自幼儿青梅竹马，钟情已久，我更加无法相比。可是有一件事我却须得胜过慕容公子，我要令王姑娘知道，说到真心为她好的，慕容公子却不如我了。二十多年之后，王姑娘和慕容公子生下儿子，孙子后，她内心深处，仍会想到我段誉，知道这世上全心全意为她设想的，没第二个人能及得上我。”<br>160.朱聪道：“你对她说过一定要娶她，她也说要嫁你，是不是？”<br>郭靖道：“没说过。” 顿了一顿，又道：“用不着说。我不能没有她，蓉儿也不能没有我。我们两个心里都知道的。<br>161.剑魔独孤求败既无敌于天下，乃埋剑于斯。呜呼！群雄束手，长剑空利，不亦悲夫！<br>162.我是尘间摆渡人，为君闲计百年身。<br>163.郭襄道：我在风陵渡口听人说起你的侠义事迹，心下好生佩服，很想见你一面，除此别无他意，今晚宴饮之时，我想起：天下没有不散的宴席这句话，心下郁郁，哪知道筵席未散，我却不得不走了。说到这里，语音中已带哽咽。<br>164.黄蓉点点头，正正经经的道：“我知道你是真心待我好，不管我是男的还是女的，是好看还是丑八怪。”隔了片刻，说道：“我穿这样的衣服，谁都会对我讨好的，那有什么希罕？我作小叫花的时候你对我好，那才是真好。”<br>165.不是人心叵测，而是叵测害了人心。</p><p><img src="/%E6%91%98%E6%8A%84/56194/yttlj.jpeg" alt="yttlj"></p><p>166.你要就随我来，不要就快些和新娘子拜堂成亲。男儿汉狐疑不决，别遗终身之恨。<br>167.你的马死了，我还活着。可我活着，有谁牵挂我呢？如果我死了，我看连一匹马都不如，谁会为我掉一滴眼泪。<br>168.咱们不幸，那是命苦，让别人快快乐乐的，不很好吗？<br>169.郭襄遥遥望见他举止有异，叫道：“我这里尚有你一枚金针，须听我话，千万不可自尽……”一面说，一面便从石梁往悬崖上奔去。她奔到半途，只见杨过纵身一跃，已坠入下面的万丈深谷之中。<br>这一来郭襄只吓得魂飞魄丧，当时也不知是为了相救杨过，又或许是情深一往，甘心相从于地下，双足一登，跟着也跃入了深谷……<br>170.只有真正深情之人，那些天生具有至性至情之人，这样的两个男女碰在一起，互相爱上了，他们才会真正的爱惜对方，远胜于爱惜自己。<br>171.只见赵敏一人站在当地，脸带微笑，其时夕阳如血，斜映双颊，艳丽不可方物。<br>172.月光斜照，只见棺盖背面隐隐写着有字。狄云凑近一看， 只见那几个字歪歪斜斜，写的是：“丁郎，丁郎，来生来世， 再为夫妻。” 狄云心中一寒，一交坐在地下，这几个字显是指甲所刻， 他一凝思间，便已明白：“凌姑娘是给她父亲活埋的，放入棺 中之时，她还没死。这几个字，是她临死时用指甲刻的。因 此一直到死，她的双手始终举着。天下竟有这般狠心的父亲！ 丁大哥始终不屈，凌姑娘始终不负丁大哥。她父亲越等越恨， 终于下了这样的毒手。”<br>173.叶二娘对玄慈方丈：我不苦，你有苦说不出，那才是真的苦！<br>174.令狐冲道：“你说话声音这样好听，世上哪有八十岁的婆婆，话声是这般清脆娇嫩的？”那姑娘笑道：“我声音又粗糙，又嘶嘎，就像是乌鸦一般，难怪你当我是个老太婆。”令狐冲道：“你的声音像乌鸦？唉，时世不大同了，今日世上的乌鸦，原来叫声比黄莺儿还好听。”<br>175.那日杏林初相见，红衣照银簪。塞上牛羊空许约，日暮关山远。佳人已逝，小镜湖畔。<br>176.黄蓉笑道：“这样的人固然是好，可是天下忧患多安乐少，他不是一辈子乐不成了么？我可不干。”郭靖微微一笑。黄蓉又道：“靖哥哥，我不理天下忧不忧、乐不乐，若是你不在我身边，我是永远不会快乐的。”说到后来，声音低沉下去，愀然蹙眉。<br>177.最上品的酒，隔几年加一次新酒融合进来，终于口感醇厚而不失新鲜，品味成熟而不糜烂。<br>178.一只绣花鞋，女儿家一生的梦在此中唤醒又破灭。<br>179.李莫愁道，“等你们死了，我把你们的骨灰一个撒在南海，一个撒在北荒，让你横竖都不能在一起。”<br>180.世人无法偏设法，然知法犯法。烦事未了又来了，难以不了了之。</p><p><img src="/%E6%91%98%E6%8A%84/56194/bxj.jpeg" alt="bxj"></p><p>181.易寒强敌胆，难解女儿心。<br>182.玄慈方丈缓缓摇头，叹了口气道：“明白别人容易，明白自己甚难。克敌不易，客服自己心中的贪嗔痴三毒，更是艰难无比！”<br>183.段誉：……各有各的缘法，我觉得他们可怜，其实他们心中，焉知不是心满意足？<br>184.哭了好一会，心中才稍感舒畅，寻思：“我这时回去，双目红肿，若教仪和她们见了，不免笑话于我，不如晚上再回去罢。”<br>但转念又想：“我久出不归，她们定然担心。大丈夫要哭便哭，要笑便笑。令狐冲苦恋岳灵珊，天下知闻。她弃我有若敝屣，我若不伤心，反倒是矫情作假了。”<br>185.“天下之水，莫大于海，万川归之，不知何时止而不盈”。然而大海却并不骄傲，只说“吾在于天地之间，犹小石小木只在于大山也”<br>186.黄蓉叹了口气，道：“只要你心中永远待我好，你就是娶了她，我也不在乎。”<br>顿了一顿，又道：“不过，还是别娶她的好，我不喜欢别的女人整天跟着你，说不定我发起脾气来，一剑在她心口上刺个窟窿，那你就要骂我啦。<br>且别说这个，你听他们叽哩咕噜的说些甚么。”<br>187.任、向二人彷徨无计，相对又望了一眼，目光中便只三个字：“怎么办？”任我行转过头来，向盈盈低声道：“你到对面去。”盈盈明白父亲的意思，他是怕令狐冲顾念昔日师门之恩，这一场比试要故意相让，他叫自己到对面去，是要令狐冲见到自己之后，想到自己待他的情意，便会出力取胜。她轻轻嗯了一声，却不移动脚步。过了片刻，任我行见令狐冲不住后退，更是焦急，又向盈盈道：“到前面去。”盈盈仍是不动，连“嗯”的那一声也不答应。她心中在想：“我待你如何，你早已知道。你如以我为重，决意救我下山，你自会取胜。你如以师父为重，我便是拉住你衣袖哀哀求告，也是无用。我何必站到你的面前来提醒你？”深觉两情相悦，贵乎自然，倘要自己有所示意之后，令狐冲再为自己打算，那可无味之极了<br>188.黄蓉一笑，已纵出房门，越墙而出。郭靖急忙追上，拉住她手臂劝道：“蓉儿，你已玩了这么久，难道还不够么？”黄蓉站定身子，说道：“自然不够！”她顿了一顿，又道：“要你陪着，我才玩得有兴致。过几天你就要离开我啦，你去陪那华筝公主，她一定不许你再来见我。和你在一起的日子，过得一天，就少了一天。我一天要当两天、当三天、当四天来使。这样的日子我过不够。靖哥哥，晚间我不肯安睡休息，却要跟你胡扯瞎谈，你现下懂了罢？你不会再劝我了罢？”<br>189.黄蓉道： “ 反正人人都要死， 治好了， 都变作土！ 治不好， 都变作土！ ” 郭靖道： “ 呸， 别听他的。 ” 黄蓉轻轻唱道： “ 活， 你背着我！ 死， 你背着我！ ” 郭靖大声道： “ 对啦， 不论死活， 我都背着你！ ”<br>190.我只管过儿一个人，别人的事，我不管。<br>191.你说的不错，世上哪有十全十美之事。一个人千辛万苦的去寻求一件物事，等得到了手，也不过如此，而本来拿在手中的物事，却反而抛掉了。<br>192.次日清晨，诸路人众向张无忌告别。众人虽均是意气慷慨的豪杰，但想到此后血战四野，不知谁存谁亡，大事纵成，今日蝴蝶谷大会中的群豪只怕活不到一半，不免俱有惜别之意。是时蝴蝶谷前圣火高烧，也不知是谁忽然朗声唱了起来：“焚我残躯，熊熊圣火。生亦何欢，死亦何苦？”众人齐声相和：“焚我残躯，熊熊圣火，生亦何欢？死亦何苦，为善除恶，唯光明故。喜乐悲愁，皆归尘土。怜我世人，忧患实多！怜我世人，忧患实多！”那“怜我世人，忧患实多！怜我世人，忧患实多！”的歌声，飘扬在蝴蝶谷中。群豪白衣如雪，一个个走到张无忌面前，躬身行礼，昂首而出，再不回顾。张无忌想起如许大好男儿，此后一二十年之中，行将鲜血洒遍中原大地，忍不住热泪盈眶。<br>193.我不管你对我怎么想，也不管你把我看做什么样的人，我告诉你，我赵敏，对自己做的一切事情绝不后悔。<br>194.越是大奸大恶之人，越沉得住气。<br>195.东方姑娘永远在我心里。</p><p><img src="/%E6%91%98%E6%8A%84/56194/yyd.jpg" alt="yyd"></p><p>196.丘处机知他心意，也叹了口气，道：“她扬言道：若是有谁胜得小龙女，不但小龙女委身相嫁，而墓中的奇珍异宝、武功秘笈，也尽数相赠。那些邪魔外道本来不知小龙女是何等样人，但李莫愁四下宣扬，说她师妹的容貌远胜于她。这赤练仙子据说甚是美貌，姿色莫说武林中少见，就是大家闺秀，只怕也是少有人及。” 郭靖心中却道：“那又何足为奇？我那蓉儿自然胜她百倍。”<br>197.但愿得真有个阴世才好。听说黄泉路上有个孟婆，她让你喝一碗汤，阳世种种你便尽都忘了。这碗汤啊，我可不喝。过儿，我要永远永远记着你的恩情。<br>198.曲扬:你懂酒吗？<br>令狐冲:不懂，爱喝；<br>曲扬:你懂琴吗？<br>令狐冲:不懂，爱听。<br>199.世人从不爱我，我又何必去爱世人？<br>200.“三人半月诚难解，百岁稚年最不通。浊世无心说赤子，未老白头若敢逢？”,周伯通道。</p><p><img src="/%E6%91%98%E6%8A%84/56194/jyr.jpeg" alt="jyr"></p>]]></content>
      
      
      <categories>
          
          <category> 摘抄 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 摘抄 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《东邪西毒》全剧本，句句箴言</title>
      <link href="%E6%91%98%E6%8A%84/1995/"/>
      <url>%E6%91%98%E6%8A%84/1995/</url>
      
        <content type="html"><![CDATA[<p>（金色的波涛，飘逸不羁的长发，两支寒光四射的宝剑，打的山崩地裂）</p><p>海不动，风也不吹<br>　　是人的心自己在动<br>（一间很大的茅房里，一人边打边笑，杀的满屋人片甲不留）<br>　　很多年之后，我有个绰号叫做西毒。任何人都可以变得狠毒，只要你尝试过什么叫做嫉妒。<br>　　我不会介意其他人怎么看我，我只不过不想别人比我更开心。<br><img src="/%E6%91%98%E6%8A%84/1995/rhrdkybdhd.jpg" alt="rhrdkybdhd"></p><p>（一人拦在一队马贼前，拔剑出鞘，飞砂走石，人仰马翻）<br>　　我还以为这世上有一种人是不会有嫉妒心的，因为他太骄傲。<br>　　在我出道的时候，我认识了一个人。因为他喜欢在东边出没，所以很多年之后，他有个绰号叫东邪。</p><p>今年五黄临太岁，到处都是旱灾。有旱灾的地方一定有麻烦，有麻烦…，那我就有生意。我叫欧阳峰，我的职业就是帮助别人解除烦恼。</p><p>（对某人讲话）<br>　　欧阳峰：看来你的年纪也有四十出头了，这四十多年，总有些事情你是不愿意再提，或有些人你不想再见。有个人曾经对不起你，也许你想过，把他们杀了，但是你不肯，又或者你觉得不值得。其实杀一个人，很简单。我有一个朋友，他的武功非常好，不过最近生活有点困难，只有你随便给他一点银两的话，他一定可以帮你杀了那个人。你尽管考虑一下，其实杀一个人不是很容易的，不过为了生活，很多人都会冒这个险。</p><p>离开了白驼山之后，我去了沙漠，开始了另一种生活。<br>　　（在荒山上一个孤寂的房子，一人边擦酒碗，边看一人骑马而来）</p><p>初六日，惊蛰。每年这个时候，都会有一个人来找我喝酒，他的名字叫黄药师。这个人很奇怪，每次都从东边来，这个习惯已经维持了很多年。今年，他带给我一封手信。</p><p>黄药师：不久前，我遇上一个人，送给我一坛酒，她说叫“醉生梦死”。喝了之后，可以叫你忘掉以前做过的任何事情。我很奇怪，为什么会有这样的酒。她说，人最大的烦恼，就是记性太好，如果什么都可以忘了，以后的每一天，都会是新的开始。那你说多开心。<br>　　这坛酒本打算送给你，看起来，我们一人分一碗。</p><p>对于太古怪的东西，我向来很难接受，所以这坛“醉生梦死”，我一直没有喝。可能这酒真的有效，从那天晚上开始，黄药师忘记了很多事。<br>　　欧阳峰：还记得我们是怎么认识的吗？<br>　　黄药师：我想不起来了。<br>　　欧阳峰：那你还记得怎么来这里的？<br>　　黄药师：我也不记得了。<br>　　欧阳峰：你为什么老看着鸟笼?<br>黄药师：因为很眼熟。</p><p>那天晚上，他喝的大醉，第二天大清早就走了。我不知道，他为什么要拿那坛“醉生梦死”，但是我看得出，他有心事。每次见了我之后，他都去见一个女人。</p><p>一个月之后，黄药师去了一个很远的地方，那是他好朋友的故乡。在他朋友成亲的那年，黄药师曾经在那里住过一段时间。有一天，他朋友离开了家，这次之后，黄药师就再也没有来过。</p><p>（一个女人在河里，白皙的皮肤被光怪陆离的反光照得很痛苦。她理了理头发，看了一眼身后骑在马上的黄药师，拉着马走了。在幽灵般的笛声里，她在马背上动情地抚摸着马髻，赤脚沾着河水，伏在马上哭了）</p><p>黄药师：我能不能请你喝酒?<br>武士：我今天只想喝水。<br>　　黄药师：我以前好像见过你。<br>　　武士：：何止见过，你曾经是我最好的朋友，但现在已经不是了。你来这里干什么？<br>　　黄药师：前不久，我遇到一个人，她送给我一坛酒，她说叫“醉生梦死”，喝过之后，不管以前做过什么，都忘了。我很奇怪，为什么会有这样的酒。<br>　　武士：你看得出喝酒跟喝水的区别吗？酒越喝越暖，水会越喝越寒。<br>　　黄药师：我们还会再见吗？<br>　　武士：不会。</p><p>我曾经发过誓，如果再让我碰到这个人，我会杀了他。但是我没有这么做，因为我见到他的时候，眼睛已经看不见东西了。</p><p>（酒里，店小二冲一人大喊）<br>　　店小二：你是男的还是女的！<br>　　（那人把桌子掀了，斜眼盯人）<br>　　那人：堂堂大燕国的公主，慕容家的小姐，你竟敢冒犯我。信不信我杀了你？<br>　　(黄药师按下他拔剑的手）<br>　　黄药师：你喝醉了。<br>　　那人：呵——（一剑砍出,留下一个雕塑般出鞘一击的动作。黄药师捂住伤口，一看手，全是血，大笑）</p><p>一个人的记性不好，就别去太多是非之地，因为你可能忘记你的仇敌，那天，黄药师差点死在一个人的手上。<br>　　（那人也大笑，走了）</p><p>（大漠）<br>　　每年都有几个月，人们好像都不愿去死。一年前，立春后，我一直没有买卖。整个月，只有一个人来找我。<br>　　（两人立在山顶）<br>　　那人：我想要你帮我杀一个人。他的名字叫黄药师。<br>　　欧阳峰：他是当今数一数二的剑客，我看想杀他并不容易。<br>　　那人：只要可以杀了他，我不惜任何代价。不过我有个条件，他一定要死在我手上，而且是最痛苦的死法。<br>　　欧阳峰：你为什么这么恨他？<br>　　那人：因为一个女人，他抛弃了我妹妹。</p><p>（他在喝酒）<br>　　他的名字叫慕容燕，自称慕容公子的后人。他和黄药师在姑苏城外的桃花林一见如故。那天黄历上写着，初四、立春，东风解冻，就是说是一个新的开始。有一天晚上，黄药师跟他开了一个玩笑。</p><p>（黄药师喝了一口酒，满眼醉意，伸手摸那人脸）<br>　　黄药师：如果你有个妹妹，我一定娶她为妻。<br>　　慕容燕：好，那我们就一言为定。可千万别后悔，如果你后悔，我一定会杀了你。</p><p>之后。他俩定了个日子，约好在一个地方见面，结果黄药师没有赴约。<br>　　（一个女子焦急的走来走去，她伏在一棵树上，痛声嘶喊）</p><p>（草屋里）<br>　　慕容嫣：我哥哥是不是来找过你？<br>　　欧阳峰：你哥哥是谁？<br>　　慕容嫣：他的名字叫慕容燕。<br>　　欧阳峰：他好像来过。<br>　　慕容嫣：他是不是要你替他杀一个人？<br>　　欧阳峰：我忘了。<br>　　慕容嫣：如果你真敢杀了他，我一定会要你死！<br>　　欧阳峰：你哥哥出手阔绰，不答应他，岂不损失太大？这年头喜欢出大钱杀人的，不多了。<br>　　慕容嫣：只要你不答应他，我可以付双倍来补偿你的损失。不过…我有一个条件，我要你帮我杀一个人，他就是我哥哥慕容燕。<br>　　欧阳峰：你们兄妹俩的感情真怪，你这么恨你哥哥？<br>　　慕容嫣：对，因为他不要我跟黄药师在一起，他觉得我是属于他的，所以他一定要死！哈哈哈哈哈——（走了）</p><p>（他又斜眼盯人）<br>　　慕容燕:我妹妹是不是来找过你？<br>　　欧阳峰：不错。<br>　　慕容燕:不要对她有非份之想，否则我连你也杀了。<br>　　欧阳峰：你挺关心你妹妹的。<br>　　慕容燕:她是我唯一的亲人，我只不过想保护她。她来找你做什么？<br>　　欧阳峰：她来叫我杀一个人，名叫慕容燕。<br>　　慕容燕：一定是黄药师叫她这么做的。<br>　　欧阳峰：没有黄药师，她也会这么做。她要离开你。<br>　　慕容燕:我不会让她离开我的，除非我死。</p><p>（草屋里，一人摸着草篮，斑斓的光线撕碎了她的脸）<br>　　慕容嫣：你今天见过我哥哥？<br>　　欧阳峰：他告诉你了？<br>　　慕容嫣：为什么还不动手？<br>　　欧阳峰：我怕收不到钱。杀你哥哥并不难，因为他有弱点，你知道什么吗？就是你。我告诉他，要杀他的人是你，就是想看他的反应。既然他反对你跟黄药师，可能是他喜欢你。<br>　　如果是的话，喜欢你到什么程度？<br>　　慕容嫣：他要我一生一世都跟他在一起。<br>　　欧阳峰：那他真的喜欢你。<br>　　慕容嫣：可惜我不喜欢他，我喜欢的人是黄药师。<br>　　欧阳峰：他岂不是很伤心。<br>　　慕容嫣：就让他伤心去吧，既然我不能被他喜欢，为什么不能找一个人来陪我呢？就是要他尝尝得不到一个人的滋味。<br>　　欧阳峰：你很残忍，你不怕他死？<br>　　慕容嫣：就是要他死！哈哈哈——嗯，为什么你会跟我说这些？<br>　　欧阳峰：你哥哥问我的问题，我想了很久，终于想到了。要一个人死，最痛苦的方法，就是杀了他最喜欢的人，但是我不能这么做。如果我杀了你，我找谁要钱呢？</p><p>(一人伏在墙上）<br>　　慕容嫣：有人要追杀我。<br>　　欧阳峰：无缘无故怎么会有人要杀你？<br>　　慕容嫣：因为，他们说我是黄药师最爱的女人。别让他们杀我。</p><p>那天晚上那个女人一直不肯走。我看她那么惊慌，就给她喝了点酒，后来她睡着了。</p><p>（草屋里）<br>　　慕容燕：你把我妹妹藏到哪里去了？<br>　　欧阳峰：为什么这么肯定我收留了她？<br>　　慕容燕：我知道她曾经来找过你，之后就没有人再见过她。<br>　　欧阳峰：有天晚上她来找我，她说她被追杀，求我收留她，后来她走了。她不是回家了吗？<br>　　慕容燕：我妹妹跟人无怨无仇，无缘无故怎么会有人追杀她？<br>　　欧阳峰：好像说…，因为她是黄药师最爱的女人。<br>　　慕容燕：笑话，他要是喜欢她的话，为什么要离开她呢？<br>　　(他看着草篮）<br>　　欧阳峰：有些人离开了之后才发现，离开的人是自己的最爱，也许黄药师就是这种人。<br>　　(那人推开草篮）<br>　　慕容燕：他不是！<br>　　欧阳峰：为什么这么肯定？<br>　　慕容燕：因为他已经喜欢上另外一个女人。<br>一个人受到挫折，或多或少会找接口掩饰自己。其实慕容嫣，慕容燕，只不过是同一个人的两种身份。在这两种身份的后面，躲藏着一个受伤的人。<br><img src="/%E6%91%98%E6%8A%84/1995/yxrslkzh.jpg" alt="yxrslkzh"></p><p>(那人看着一个酒碗）<br>　　欧阳峰：你喝醉了，慕容兄。<br>　　慕容燕：慕容兄？！（那人把酒碗扔了）你认错人了，我不是什么慕容兄，我乃是堂堂大燕国的公主，慕容家的小姐。我的名字叫慕容嫣。你究竟是什么人？<br>　　欧阳峰：你不认识我了吗？<br>　　（深情地伏在墙上）<br>　　慕容燕：你曾经说过要娶我为妻，我又会怎么不认得呢？<br>　　欧阳峰：我有说过这样的话吗？<br>　　慕容燕：当日你做客姑苏，我和你在桃花树下饮酒。你借醉摸着我的脸，说，如果我有个妹妹，你一定娶她为妻。你明知道我是女儿之身，为什么要这样做？<br>　　欧阳峰：酒醉之后说的话，你怎么可以认真呢？<br><img src="/%E6%91%98%E6%8A%84/1995/ywndyjh.jpg" alt="ywndyjh"><br>　　慕容燕：因为你的一句话，我一直等到现在。我曾经要你带我走，但是你没有这样做。你说，你不能同时喜欢两个人，你喜欢的那个女人是慕容嫣，那你为什么又喜欢另外一个女人？你知不知道我曾经看过那个女人，因为有人说过你最喜欢的人是她。我本来想杀了她，后来我没有这样做，因为我不想证明她就是。我曾经问过自己，你最喜欢的女人是不是我，现在我已经不想知道了。（她回头）如果有一天我忍不住问起，你一定要骗我。就算你的心有多么不愿意，也不要告诉我，你最喜欢的人不是我。（她抓着长巾哭了）<br><img src="/%E6%91%98%E6%8A%84/1995/wcjwwzj.jpg" alt="wcjwwzj"></p><p>（评：很多的女生在看我的初稿时，常常会情不自禁地把慕容燕最后的两句话深情地念出来，因为这是一个痴情女子爱到极至时，情感最真实的告白。我也是因此感动，才决定把这部电影的台词摘抄出来。想不到很多朋友很喜欢，甚至比起电影更爱看我整理过的台词。<br>　　因为语言变成了文字后，更有想象的空间，可以反复的品味欣赏，能够得到比动态的电影更多的感受。王家卫的这部电影已经简洁的只有情感和思绪，没有多余标点，再加上富有情感哲理，简洁明了的台词和独白，对于看懂的人，多说也是浪费；对于看不懂得人，多说更是浪费。无语的结尾反而更有回味思索的余地，让每个都有自己独特的丰富感受。）</p><p>那一夜过的特别长，因为我好像同时在跟两个人说话。后来，我再也分不清她到底是慕容嫣还是慕容燕？</p><p>欧阳峰：慕容嫣？<br>欧阳峰：慕容燕？<br>　　（她靠着墙，神情冷漠）<br>　　慕容燕：告诉我，你最喜欢的女人是谁？<br>　　欧阳峰：就是你。（他走了）</p><p>以前也有人这样问我，但是我没有回答，换了是黄药师的身份，我觉得这几个字不是很难说出口。</p><p>（她很深情地躺在他身边，他装着不知）<br>　　那天晚上睡觉的时候，我有感觉到有人摸我。<br>　　我知道她想摸的人不是我，她只不过当我是另外一个人，我又何尝不是呢。她的手很暖，就跟我大嫂的手一样。</p><p>（一人飞抵湖面，拔剑出鞘，剑至浪惊，飞起千雪。信手回转，水壁环起。收剑回鞘，痛声嘶喊）<br>　　那天起，没有人见过慕容燕或者慕容嫣。数年后，江湖上出现一个奇怪的剑客，没有人知道她的来历，只知道她喜欢和自己的倒影练剑。她有一个很特别的名字叫“独孤求败”。</p><p>（一个女人等在屋外）<br>　　欧阳峰：你找我？<br>　　女人：我想找个人替我弟弟报仇。<br>　　欧阳峰：他出了什么事？<br>　　女人：几天前有一群刀客经过我家路门口，我弟弟他年少无知，得罪了其中的一个，他们就把他杀了。<br>　　欧阳峰：官府不管吗？<br>　　女人：因为他们是太尉府的刀客，官府也不敢追究。<br>　　欧阳峰：嗯…你出得起多少钱？<br>　　女人：我家里很穷,根本就没有什么钱?只有一篮鸡蛋和一只驴。那只驴是我娘生前留给我的嫁妆。<br>　　（他摇摇头，走近她）<br>　　欧阳峰：如果你有心替你弟弟报仇，你要筹一笔钱。没有人会为一只驴去得罪太尉府的刀客。报仇是要付出代价的。要是你长得难看，我劝你死了这条心。别以为我对你有什么企图，我只想告诉你，如果要卖…，你会比驴更值钱。你明白我的意思吗？<br>　　女人：我不会这么做的，要是你嫌钱少，我会一直等下去，我想一定会有人帮我。<br>我不知道她是不是真的要为弟弟报仇，还是没事干。每个人都会坚持自己的信念，在别人看，是浪费时间，她却觉得很重要。从这里看下去，她好像一个人。往后的几个晚上，我做的是同一个梦。我梦见我家乡的桃花开了。我突然想起来，原来我已经有很多年没有回白驼山了。</p><p>（一人在屋外看着太阳）<br>　　欧阳峰：你的眼睛有问题吗？<br>　　武士：从小我的眼睛就不好，大夫说我三十岁就会失明。<br>　　欧阳峰：你今年贵庚？<br>　　武士：刚好三十岁。<br>　　欧阳峰：那还来干什么？<br>　　武士：每年的春天家乡的桃花都开的很灿烂。我想在我失明之前再去看一次，可惜盘缠已经用完了。听说你专替别人解决麻烦，可以帮我吗？<br>　　几个月之前，我有一个朋友在这里杀了一批马贼。听说那批马贼的兄弟最近会来报仇。可惜我的朋友已经走了，附近的人担心会殃及池鱼，愿意出一笔钱，找一名高手去杀了他们。</p><p>武士：听说这一代有个人的刀法很快，不知道他在不在？<br>　　欧阳峰：你找他干什么？<br>　　武士：想看看是他的刀快还是我的剑快。</p><p>（他扶剑低头）<br>　　武士：我不应该来这。<br>　　刀客：现在后悔太晚了。<br>　　武士：留只手行吗？<br>　　刀客：不行。要留…留下你的命。<br>　　（他看了一眼太阳，飞起出鞘，刀剑交击）<br>　　武士：你误会了，我说我不该来是因为你不是我的对手，我说我只留只手，你却要把命送给我。<br>　　（一人倒下）</p><p>（他经过那女人）<br>　　那女人：你可不可以帮我？</p><p>他虽然是个落魄的剑客，但是生活很有规律。他每天都会到这里，喝一碗酒，吃两碗饭。<br>　　等太阳下山了，他就会走。</p><p>欧阳峰：你为什么老看着那个女人？<br>　　武士：因为她让我想起另外一个女人。<br>　　欧阳峰：你老婆？既然这样想她，又何必四处漂泊？<br>　　武士：她爱上了我最好的朋友。马贼什么时候到？<br>　　欧阳峰：大概一两天。<br>　　武士：希望他们快点到。如果太迟回去，桃花都谢了。</p><p>（他坐到天黑）<br>　　花什么时候开，是有季节的；马贼什么时候到，就没有人知道。。他每天在城外等候，我发现他越等越晚。虽然他每天晚上点一盏油灯，但是我知道，他晚上是看不见东西的。</p><p>女人：你是不是不喜欢我？也很想回家乡去吗？<br>　　武士：是。（他用汗巾擦了嘴）<br>　　女人：你成亲了？<br>　　武士：为什么这么问？<br>　　女人：我猜你一定很喜欢你老婆。<br>　　武士：可以这么说。<br>　　女人：既然是这样，为什么不留在她身边？<br>　　（他在桌上摆了一个酒碗）<br>　　武士：可以再请我喝碗酒吗？<br>　　欧阳峰：你今晚这么有雅兴？<br>　　（他用袖子擦嘴）<br>　　武士：我怕明天没机会再喝了。我想他们破晓时分才会到。<br>　　欧阳峰：我帮你准备好的灯笼。<br>　　武士：有没有灯笼并不重要。<br>　　欧阳峰：你已经看不见东西了？<br>　　武士：太阳猛烈的时候还能看见，希望明天的天气会好一点。如果日落还不见我回来，麻烦你替我找一个人，他叫做黄药师。告诉他我家乡还有一个人在等他。</p><p>（走到女人前，强吻她。她拼命挣扎，篮子里的鸡蛋撒了一地）<br>　　(武士：)我不知道我为什么会这么做，但我不能控制自己。我走的时候，那个女人的眼泪在我脸上慢慢的干。<br>　　（女人蹲在地上，一边哭，一边拣鸡蛋）</p><p>(欧阳峰：)不知道那个女人会不会为我流泪？<br>　　（那女人把汗巾叠好。）</p><p>（打着打着，他被几百名刀客和马贼包围了。一人快马冲来，出刀极快）<br>　　我曾经听人说过，如果刀快的话，血从伤口喷出来的时候，像风声一样很好听。想不到第一次听到的，是自己流的血。<br>（黄药师独斟自饮）<br>　　那天晚上之后，我的那位朋友再也没有来过。我是因为他而来，但是他到死也没有原谅我。</p><p>（一人河中袭击一队马贼，刀光如电。当刺到一个女人，刀停）<br>　　这个人的名字叫洪七，他的刀很快，但是他不喜欢穿鞋。我知道他可以帮我赚很多钱，但是我一直都不喜欢这个人。因为我命书里有一句话，“尤忌七数，是以命终”。我第一次见到他的时候，他刚从乡下出来。</p><p>（洪七坐在墙角拿着碗，狼吞虎咽）<br>　　欧阳峰：知道我为什么请你吃饭吗？<br>　　洪七：不知道。<br>　　欧阳峰：因为我知道你肚子饿。其实我留意你很久了，我看见你蹲在那堵破墙下，动也没动，看你也不像是病了。你这种年轻人我见得多了，懂一点武功就可以横行天下，其实走江湖是一件很痛苦的事，会武功就有很多事情不能做。你不想种地，又不屑去打劫，更不想抛头露面在大街上卖艺，那你怎么生活？武功高强也得吃饭。有一种职业很适合你，既可以帮你赚点银两，又可以行侠仗义，你有兴趣吗？你呀，考虑一下吧，要快一点。你知道的，肚子很快又饿的。</p><p>洪七来了没多久，上次那帮马贼又回来了。在我带他去见村民之前，我替他买了一双鞋，因为穿鞋和没穿鞋的刀客，价钱是相差很远。</p><p>（一人举着伞站在一群山民前）<br>　　欧阳峰：你们觉得十两银子这个价钱很贵吗？那你们可以找几个便宜点的，唉，那边有几个，不穿鞋的，你给他们几两银子他们就很开心了。那些连鞋都没有的刀客，你们对他有信心吗？万一失手了，那些马贼会晓得是你们指使的，你们想那些马贼会怎么对你们？我不敢说我的这个朋友的武功比他们都好，当时我现在跟你们说的，是你们一家大小二十几口人命的安全。至少在这方面，你们应该相信一个穿鞋的人吧。<br>　　（大漠）<br>　　为了不想重蹈覆辙，我带了洪七去了一个地方。<br>　　（一人把鞋扔了，两人蹲在尸体旁）<br>　　洪七：你带我看死尸干什么？<br>　　欧阳峰：因为死尸会说话。前两天，他在这里伏击马贼，以为可以消灭他们，谁知道死的是他自己。取他性命的是这一刀，很明显的和其他的伤痕不同，是从右至左。他全身只有一个刀伤，也就是说，其中有一个人只出了一刀，就了结了他的性命。所以你对付这帮马贼，要注意一个人，一个用左手拿刀的人。<br>　　洪七：如果我死了你不用带人来看我，我不想是一条会说话的死尸。</p><p>十五日，晴，有风。地官降下，定人间善恶，有血光，忌远行，宜诵经解灾。</p><p>（烈日，一人坐在骆驼旁，鞋扔到一边。突然风沙骤起，一马队行路受阻。一人乘机杀入，无人可挡。一人左手带响铃手镯，扶刀逼近。那人早已看透，两刀相遇，血光四射，镯飞铃响，马队大乱。不久，贼亡马散，沙起尸没。远处，一人携剑离开。）</p><p>通常拿了钱，看也不看就收起来的人，他们的钱很快就会花光，（洪七队蹲在墙角，反复数钱，包好）但是洪七他数得很仔细。我知道这种人，不会留在我身边很久。</p><p>初十，立秋，晴。凉风至，宜远行，会友，忌新船下水。<br>　　（一人掀开门帘）<br>　　欧阳峰：洪七？他走了。我想他不会回来了，你到别的地方找他。你明白我说什么？</p><p>别以为骗一个女人是一件很容易的事，越是单纯的人就越直接，她知道他丈夫根本没有离开，因为洪七是不会扔下他的骆驼不管的。<br>　　（一个乡下女人靠着墙，看着骆驼）</p><p>（洪七和一乡下女人吵架，全是乡音）<br>　　洪七：我叫你在乡下等我，老跟着我干啥？回去，回去！（赶她走）<br>　　乡下女人：我不回去。<br>　　洪七：你回去，回去！（推开她）回去！走！（她慢慢走了）</p><p>（看着一个女人站在墙前）<br>　　欧阳峰：那个女人等在外面好几天了。<br>　　洪七：赶她也不走，有什么办法，难道要我带着老婆闯荡江湖吗？<br>　　欧阳峰：谁说不行呀？事在人为。我曾经像你一样，一心打天下，以为可以抛下自己的女人。谁知道等我回到家才发现…她做了我的嫂子。</p><p>（那女人提着篮子站在前面）<br>　　欧阳峰：你每天都来找我都没有用，没钱我也帮不了你。你回去，想别的办法。<br>　　那女人：我求求你。<br>　　欧阳峰：我求你也没用，我只不过是个中间人，要求的人是你自己。<br>　　（一人举着伞看她走远，房里也有人在看）</p><p>十五，有雨，土黄用时，曲星，宜沐浴，忌出行，冲龙，煞北。<br>　　（大雨中，一人冲入一茅棚，逢人就杀。一人刀法娴熟，刀道有力，砍下一截手指。两人大战几十回合，剑光血影，最后血喷人倒）</p><p>如果我是那群太尉府的刀客，我一定死不瞑目，原来这么多条命加起来，只不过值一个鸡蛋。<br>　　（洪七躺在床上）<br>　　欧阳峰：为了一个鸡蛋而失去一个手指，值得吗？<br>　　洪七：不值得。但是我觉得痛快，这才是我自己。本来我应该没事的，当时我的刀没有以前快。我以前快是因为我直接，认为是对的，我就去做，从来不去想有什么代价。我以为我这一辈子都不会变，直到那个女孩来求我，我才发觉我完全变了，我竟然没有答应她，因为我知道你一定不会答应她。那天，我很失望，我觉得我已经跟你混在一起，变成了一个人，没有了自己。我不想跟你一样，因为我知道欧阳峰，绝对不会为了一个鸡蛋去冒险，这是我跟你的分别。</p><p>（屋里，他在喝水）<br>　　那女人：你能不能救救洪七？<br>　　欧阳峰：听说他病得很厉害。</p><p>那女人：你能不能请个大夫给他看看。<br>　　欧阳峰：请大夫?要钱的。可惜我家里没鸡蛋，如果有，我可以给你几个。你知道你最擅长用鸡蛋请人做事。（他把水瓢扔到桶里）我不会去救人，因为他不听我的话。他弄成这个样子，都是因为你，不如你去救他。我知道你不到山穷水尽是不会来救我的。我在这里等你来求我。你曾经说过，你不肯为别人牺牲自己，我看你这次会不会说得出嘴。</p><p>（那女人握着洪七的手）<br>　　洪七：你在想什么？<br>　　那女人：没什么。<br>　　洪七：不要为我做任何事。如果我这次真的死了，我也会死的很开心。我帮你，是为了那个鸡蛋。鸡蛋我已经吃了，你没欠我什么，别干傻事。记住，还有人在等你。</p><p>（洪七躺在吊床上，悠闲地让老婆喂饭，他老婆边喂边哼歌）<br>　　后来…我再也没有见过这个女人</p><p>（洪七用包好的手砍柴，不爽，换左手再砍，刀断了）<br>　　洪七：以后我再也不用刀讨饭了。<br>　　欧阳峰：不一定要用刀，赤手空拳也能杀人，你只不过是少了根手指，这没什么，好歹还有份差使。怎么，想回家乡吗？要是为了这个…<br>洪七：就想会家乡，为什么当初你要出来？<br>　　洪七：这个沙漠的后面是什么地方？<br>　　欧阳峰：是另外一个沙漠。</p><p>每个人都要经过这个阶段，看见一座山，就想知道山的后面是什么。我会告诉他，你会发现山的后面其实没什么。回头看，会觉得这边更好，但是他不会相信。以他的性格，自己不试试，是不会甘心的。</p><p>欧阳峰：你打算去哪儿？<br>　　洪七：去一个我没去过的地方，希望闯出个名堂。如果以后在江湖上听说一个九指英雄，那一定是我。<br>　　欧阳峰：她呢？<br>　　洪七：她跟我一起去，像你说的，事在人为，谁说不准带着老婆闯荡江湖，对不对？（解开骆驼的缰绳）走，走。</p><p>我终于明白那个女人为什么会喜欢洪七，可能是因为他够简单。看着他们走的时候，我很嫉妒。我曾经有过这样的机会，不知道为什么，却放弃了。</p><p>他走的那天，风是向南边吹的，他故意逆风而行。我记得那天是十五，黄历上这么写着：<br>　　失星当值，大利北方。</p><p>三年后，洪七加入丐帮，并成丐帮之王。晚年于欧阳峰决斗于大雪山，结果相拥而亡。<br>洪七走了之后，天一直在下雨。每次下雨我就会想起一个人，她曾经很喜欢我。不知道是巧合还是其他原因，每次我要离开她远行的时候，天都会下雨。她说是因为她不高兴。后来她嫁给了我哥哥，她结婚的那天，我离开了白驼山。</p><p>（一个女人点着火烛随着楼梯走，突然，黑暗中一人拉住她，她没有喊叫，火烛入楼底）<br>　　大嫂：就算你明天再问我，答案还是一样，我不跟。</p><p>欧阳峰：有句话，过了今天晚上我再也不会说。你跟不跟我走？<br>　　大嫂：你也不会好过，不跟。你要记住，从今天起，我就是你嫂子，以后可以拉我手的人只有一个，就是你哥哥，其他人没有资格。<br><img src="/%E6%91%98%E6%8A%84/1995/kiss.jpg" alt="kiss"></p><p>（一个女人看着他在河里洗汗巾）<br>　　欧阳峰：为什么老看着我的汗巾？<br>　　女人：这条汗巾是我丈夫的，为什么在你这儿？他是不是已经死了？<br>　　也许太久没有看桃花了，第二年的春天，我到了那个人的家乡，我觉得很奇怪，那里根本没有桃花。<br>　　女人：这东西对我来说已经没有用了。<br>　　在我离开的时候才知道，这块地方本来就没有桃花，桃花只不过是一个女人的名字。</p><p>（她抓住马痛哭）<br>　　听到那个女人的哭声，我明白了为什么黄药师每年都来探望我一次。</p><p>（一个小孩在海边玩，一个女人在窗前，边看边说）<br>　　大嫂：你觉得他奇不奇怪？也不理人，老是一声不吭，笑都不笑。但是如果你不理他，他又会呆呆的望着我，不知道他在想什么。分明心里想要的，嘴上却不肯说出来，一定要你送到面前才肯要。最初想撇开他，渐渐的也就不想迁就他了。</p><p>虽然我很喜欢她，但是我不想让她知道，因为我知道得不到的东西才是最好的。每次她看着小孩，我知道她的心里在想另一个人。我嫉妒欧阳峰，我想被人喜欢的感觉是这么样的，结果我伤害了很多人。</p><p>黄药师：我一直以为你们会在一起，为什么不嫁给她？<br>　　大嫂：他没说过喜欢我。<br>　　黄药师：有些话不一定要说出来。<br>　　大嫂：我希望他只说一句，他却不肯说，他太自信了，以为我一定会嫁给他。谁知道我嫁给他哥哥。在我结婚那晚，他要我跟他走，我没答应。为什么到失去的时候才争取？既然是这样，我不会让他得到。</p><p>如果感情可以分胜负的话，我不知道她是否会赢，但是我很清楚，从一开始，我就输了。<br>　　我是因为这个女人才喜欢桃花，每年桃花开的时候我都能看见她。我去看欧阳峰，因为她想知道欧阳峰的消息。因为欧阳峰，我每年都会找借口去看望她一次。</p><p>大嫂：你知不知道，现在对我来说，什么最重要？<br>　　黄药师：如果我没有猜错，应该是你儿子。<br>　　大嫂：以前也是这么想，可是看着他一天天的长大，我知道他早晚会离开我，所以我觉得什么都无所谓了。以前我觉得那句话很重要，因为我觉得说出来，就是一生一世。现在想想，说不说也没有什么分别。有些事会变的。我一直以为是我自己赢了，直到有一天我看着镜子，才知道自己输了。在我最好的时光，我最喜欢的人都不在我身边。如果能重新开始能多好。<br>　　大嫂：其实你跟他这么好，为什么不告诉他我在这儿呢？<br>　　黄药师：我答应过你，所以我一直没说。<br>　　大嫂：你太老实了。</p><p>没多久，她就病死了。死之前，她送一坛酒给我，要我交给那个人。她希望欧阳峰忘记她。<br>　　她对我说，人有烦恼是因为记性太好，从那年开始，很多事我都忘了，唯一能记住的，就是我喜欢桃花。</p><p>六年后黄药师隐居桃花岛，自称桃花岛主，号东邪。<br>（他看着窗外，擦着酒坛）<br>　　立春之后，很快就到了惊蛰。每年这个时候，会有一位朋友来看我，但是他今年没有来。<br>　　没多久，我收到一封白驼山来的信。我大嫂在两年前的秋天，因为一场大病，去世了。我知道黄药师不会再来，可是我还继续等。我在门外坐了两天两夜，看着天空在不断的变化，我才发现，虽然我到这里很久，却从来没有看清过这片沙漠。以前看见山，就想知道山的后面是什么，我现在已经不想知道了。我是孤星入命的人，从小父母早死，只好跟着哥哥相依为命。从小我就懂得保护自己，我知道要想不被人拒绝，最好的办法是先拒绝别人。<br>　　因为这个原因，我再也没有回去。其实那边也不错，可惜已经不能回头。我的命书里说过：<br>　　“夫妻公太阳化忌，婚姻有实无名”，想不到是真的。<br>　　那天晚上我突然很想喝酒，结果我喝了那半坛“醉生梦死”，跟平常一样，继续做我的生意。</p><p>（对某人讲话）<br>　　老兄，看来你已经四十出头了吧。这四十多年来，总有些事情你不愿意再提，或者有些人你不想再见。因为有些人对不起你，你就想杀了他们，但是你不肯。其实杀一个人是很简单的，一点也不麻烦。我有一个朋友，他的武功非常好，最近生活有点困难，如果你能给他一点钱的话，他一定可以帮你杀了那个人。尽管考虑一下，最好快点。</p><p>没事干的时候，我会望向白驼山。我清楚的记得曾经有一个女人在那里等过我，其实醉生梦死，只不过是她跟我开的一个玩笑，你越想知道自己是不是忘记的时候，你反而记得越清楚。我曾经听人说过，当你不能够再拥有，你唯一可以做的，就是令自己不要忘记。不知道为什么，我常常做着同一个梦，没多久，我就离开了这个地方。<br>　　（他一把火把房子烧了）<br><img src="/%E6%91%98%E6%8A%84/1995/nyxzdzj.jpg" alt="nyxzdzj"></p><p>那天黄历上写着：驿马动，火迫金行，大利西方。<br>　　翌年，欧阳峰重返白驼山，成一方霸主，号称西毒。<br><img src="/%E6%91%98%E6%8A%84/1995/wcjtrsg.jpg" alt="wcjtrsg"></p>]]></content>
      
      
      <categories>
          
          <category> 摘抄 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 摘抄 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>习立风翻译手写数字的MNIST数据库（THE MNIST DATABASE of handwritten digits）</title>
      <link href="%E7%BF%BB%E8%AF%91/29267/"/>
      <url>%E7%BF%BB%E8%AF%91/29267/</url>
      
        <content type="html"><![CDATA[<p>原文地址：<a href="http://yann.lecun.com/exdb/mnist/">THE MNIST DATABASE of handwritten digits</a></p><ul><li><a href="http://yann.lecun.com/">Yann LeCun</a>, Courant研究所, 纽约大学</li><li><a href="http://homepage.mac.com/corinnacortes/">Corinna Cortes</a>, Google实验室, 纽约</li><li><a href="http://research.microsoft.com/en-us/people/cburges/">Christopher J.C. Burges</a>, Microsoft研究室, 雷蒙德</li></ul><p>翻译：<a href="https://blog.svenhetin.com">习立风（Patten Kuo）</a>     翻译时间：2018/08/01</p><p>  可从该页面获得的MNIST手写数字数据库具有60,000个示例的训练集和10,000个示例的测试集。 它是NIST提供的更大集合的子集。这些数字已进行了规格标准化，并在固定尺寸的图片里居中展现。</p><p>  对于那些希望在真实数据上尝试学习技术和模式识别方法，同时在预处理和格式化方面花费最少的人来说，它是一个很好的数据库。</p><p>  本网站提供四个文件：</p><ol><li><a href="http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz">train-images-idx3-ubyte.gz</a>：训练集图像（9912422字节）</li><li><a href="http://yann.lecun.com/exdb/mnist/train-labels-idx1-ubyte.gz">train-labels-idx1-ubyte.gz</a>：训练集标签（28881字节）</li><li><a href="http://yann.lecun.com/exdb/mnist/t10k-images-idx3-ubyte.gz">t10k-images-idx3-ubyte.gz</a>：测试集图像（1648877字节）</li><li><a href="http://yann.lecun.com/exdb/mnist/t10k-labels-idx1-ubyte.gz">t10k-labels-idx1-ubyte.gz</a>：测试集标签（4542字节）</li></ol><p>  <strong>请注意，您的浏览器可能会在不通知您的情况下解压这些文件</strong>。如果您下载的文件大小超过上述文件大小，则浏览器已经对其进行了解压操作。只需重命名它们删除.gz扩展名后缀即可。有些人问我“我的应用程序无法打开您的图像文件”。这些文件不是任何标准图像格式。你必须编写自己的（非常简单的）程序来阅读它们。此文件格式在本页底部描述。</p><p>  来自NIST的原始黑白（双层）图像在保持它们的纵横比的情况下被尺寸标准化，以适应20x20像素的盒子。由于归一化算法使用的抗锯齿技术，所以得到的图像包含灰度级。通过计算像素的质心并平移图像以将该质点定位在28×28区域的中心，使其在28×28图像的中心。</p><p>  使用一些分类方法（特别是基于模板的方法，例如SVM和K-近邻算法），当数字以边界框而不是质心为中心时，错误率会提高。如果您进行此类预处理，则应在你的刊文中进行声明。</p><p>  MNIST数据库由NIST的特殊数据库3和特殊数据库1构成，其中包含手写数字的二进制图像。 NIST最初将SD-3指定为训练集，将SD-1指定为测试集。但是，与SD-1相比，SD-3更清晰、更容易识别。造成这种情况的实际原因为SD-3是从人口普查局员工处收集的，而SD-1是从高中学生那里收集的。从学习实验中得出合理的结论要求结果与整套样本中选择训练集还是测试集无关。因此，有必要通过混合NIST的数据集来构建新的数据库。</p><p>  MNIST训练集由SD-3的30,000个图案和SD-1的30,000个图案组成。我们的测试装置由SD-3的5,000个图案和SD-1的5,000个图案组成。60,000个图案训练集包含大约250个手写者的图案。我们确保训练集和测试集的手写者是不相交的。</p><p>  SD-1包含由500个不同手写者写的58,527位数字图像。与SD-3相反，其中来自每个手写者的数据块按顺序出现，SD-1中的数据是被打乱的。SD-1的手写者身份可用，我们使用此信息来整合手写者。 然后我们将SD-1分成两部分：前250名手写者写的字符进入我们的新训练集；其余250位手写者被放入我们的测试集中。因此，我们有两组数据集，每组有近30,000个例子。新的训练集已经完成了SD-3的足够示例，从图案＃0开始，制作了一整套60,000种训练图案。类似地，新的测试集完成了SD-3示例，从图案＃35,000开始，使用60,000个测试图案进行全套测试。此站点上只有10,000个测试图像的子集（来自SD-1的5,000个和来自SD-3的5,000个）。提供了完整的60,000个样本培训套件。</p><p>  已经使用该训练集和测试集验证了许多方法。这里有一些例子：有关这些方法的详细信息将在下一篇论文中给出。其中一些实验使用了数据库的一个版本，其中输入图像被去偏斜（通过计算最接近垂直的形状的主轴，并移动线以使其垂直）。在一些其他实验中，训练集增加了原始训练样本的人工扭曲版本。失真是移位，缩放，倾斜和压缩的随机组合。</p>  <table border="1" cellpadding="3"><tr><td>CLASSIFIER</td> <td>PREPROCESSING</td> <td align="right">TEST ERROR RATE (%)</td> <td>Reference</td></tr><tr><td colspan="4" align="center"><b>Linear Classifiers</b></td></tr><tr><td>linear classifier (1-layer NN)</td>  <td>none</td>  <td align="right">12.0</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun et al. 1998</a></td></tr><tr><td>linear classifier (1-layer NN)</td>  <td>deskewing</td>  <td align="right">8.4</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun et al. 1998</a></td></tr><tr><td>pairwise linear classifier</td>  <td>deskewing</td>  <td align="right">7.6</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun et al. 1998</a></td></tr><tr><td colspan="4" align="center"><b>K-Nearest Neighbors</b></td></tr><tr><td>K-nearest-neighbors, Euclidean (L2)</td>  <td>none</td>  <td align="right">5.0</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun et al. 1998</a></td></tr><tr><td>K-nearest-neighbors, Euclidean (L2)</td>  <td>none</td>  <td align="right">3.09</td>  <td><a href="http://finmath.uchicago.edu/~wilder/Mnist/">Kenneth Wilder, U. Chicago</a></td></tr><tr><td>K-nearest-neighbors, L3</td>  <td>none</td>  <td align="right">2.83</td>  <td><a href="http://finmath.uchicago.edu/~wilder/Mnist/">Kenneth Wilder, U. Chicago</a></td></tr><tr><td>K-nearest-neighbors, Euclidean (L2)</td>  <td>deskewing</td>  <td align="right">2.4</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun et al. 1998</a></td></tr><tr><td>K-nearest-neighbors, Euclidean (L2)</td>  <td>deskewing, noise removal, blurring</td>  <td align="right">1.80</td>  <td><a href="http://finmath.uchicago.edu/~wilder/Mnist/">Kenneth Wilder, U. Chicago</a></td></tr><tr><td>K-nearest-neighbors, L3</td>  <td>deskewing, noise removal, blurring</td>  <td align="right">1.73</td>  <td><a href="http://finmath.uchicago.edu/~wilder/Mnist/">Kenneth Wilder, U. Chicago</a></td></tr><tr><td>K-nearest-neighbors, L3</td>  <td>deskewing, noise removal, blurring, 1 pixel shift</td>  <td align="right">1.33</td>  <td><a href="http://finmath.uchicago.edu/~wilder/Mnist/">Kenneth Wilder, U. Chicago</a></td></tr><tr><td>K-nearest-neighbors, L3</td>  <td>deskewing, noise removal, blurring, 2 pixel shift</td>  <td align="right">1.22</td>  <td><a href="http://finmath.uchicago.edu/~wilder/Mnist/">Kenneth  Wilder, U. Chicago</a></td></tr><tr><td>K-NN with non-linear deformation (IDM)</td>  <td>shiftable edges</td>  <td align="right">0.54</td>  <td><a href="http://www.iupr.org/~keysers/files/Keysers--Deformation-Models--TPAMI2007.pdf">Keysers et al. IEEE PAMI 2007</a></td></tr><tr><td>K-NN with non-linear deformation (P2DHMDM)</td>  <td>shiftable edges</td>  <td align="right">0.52</td>  <td><a href="http://www.iupr.org/~keysers/files/Keysers--Deformation-Models--TPAMI2007.pdf">Keysers et al. IEEE PAMI 2007</a></td></tr><tr><td>K-NN, Tangent Distance</td>  <td>subsampling to 16x16 pixels</td>  <td align="right">1.1</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun et al. 1998</a></td></tr><tr><td>K-NN, shape context matching</td>  <td>shape context feature extraction</td>  <td align="right">0.63</td>  <td><a href="http://http.cs.berkeley.edu/projects/vision/shape/">Belongie et al. IEEE PAMI 2002</a></td></tr><tr><td colspan="4" align="center"><b>Boosted Stumps</b></td></tr><tr><td>boosted stumps</td>  <td>none</td>  <td align="right">7.7</td>  <td><a href="http://users.web.lal.in2p3.fr/kegl/research/PDFs/keglBusafekete09.pdf">Kegl et al., ICML 2009</a></td></tr><tr><td>products of boosted stumps (3 terms)</td>  <td>none</td>  <td align="right">1.26</td>  <td><a href="http://users.web.lal.in2p3.fr/kegl/research/PDFs/keglBusafekete09.pdf">Kegl et al., ICML 2009</a></td></tr><tr><td>boosted trees (17 leaves)</td>  <td>none</td>  <td align="right">1.53</td>  <td><a href="http://users.web.lal.in2p3.fr/kegl/research/PDFs/keglBusafekete09.pdf">Kegl et al., ICML 2009</a></td></tr><tr><td>stumps on Haar features</td>  <td>Haar features</td>  <td align="right">1.02</td>  <td><a href="http://users.web.lal.in2p3.fr/kegl/research/PDFs/keglBusafekete09.pdf">Kegl et al., ICML 2009</a></td></tr><tr><td>product of stumps on Haar f.</td>  <td>Haar features</td>  <td align="right">0.87</td>  <td><a href="http://users.web.lal.in2p3.fr/kegl/research/PDFs/keglBusafekete09.pdf">Kegl et al., ICML 2009</a></td></tr><tr><td colspan="4" align="center"><b>Non-Linear Classifiers</b></td></tr><tr><td>40 PCA + quadratic classifier</td>  <td>none</td>  <td align="right">3.3</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun et al. 1998</a></td></tr><tr><td>1000 RBF + linear classifier</td>  <td>none</td>  <td align="right">3.6</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun et al. 1998</a></td></tr><tr><td colspan="4" align="center"><b>SVMs</b></td></tr><tr><td>SVM, Gaussian Kernel</td>  <td>none</td>  <td align="right">1.4</td>  <td></td></tr><tr><td>SVM deg 4 polynomial</td>  <td>deskewing</td>  <td align="right">1.1</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun et al. 1998</a></td></tr><tr><td>Reduced Set SVM deg 5 polynomial</td>  <td>deskewing</td>  <td align="right">1.0</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun et al. 1998</a></td></tr><tr><td>Virtual SVM deg-9 poly [distortions]</td>  <td>none</td>  <td align="right">0.8</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun et al. 1998</a></td></tr><tr><td>Virtual SVM, deg-9 poly, 1-pixel jittered</td>  <td>none</td>  <td align="right">0.68</td>  <td>DeCoste and Scholkopf, MLJ 2002</td></tr><tr><td>Virtual SVM, deg-9 poly, 1-pixel jittered</td>  <td>deskewing</td>  <td align="right">0.68</td>  <td>DeCoste and Scholkopf, MLJ 2002</td></tr><tr><td>Virtual SVM, deg-9 poly, 2-pixel jittered</td>  <td>deskewing</td>  <td align="right">0.56</td>  <td>DeCoste and Scholkopf, MLJ 2002</td></tr><tr><td colspan="4" align="center"><b>Neural Nets</b></td></tr><tr><td>2-layer NN, 300 hidden units, mean square error</td>  <td>none</td>  <td align="right">4.7</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun et al. 1998</a></td></tr><tr><td>2-layer NN, 300 HU, MSE, [distortions]</td>  <td>none</td>  <td align="right">3.6</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun et al. 1998</a></td></tr><tr><td>2-layer NN, 300 HU</td>  <td>deskewing</td>  <td align="right">1.6</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun et al. 1998</a></td></tr><tr><td>2-layer NN, 1000 hidden units</td>  <td>none</td>  <td align="right">4.5</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun et al. 1998</a></td></tr><tr><td>2-layer NN, 1000 HU, [distortions]</td>  <td>none</td>  <td align="right">3.8</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun et al. 1998</a></td></tr><tr><td>3-layer NN, 300+100 hidden units</td>  <td>none</td>  <td align="right">3.05</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun et al. 1998</a></td></tr><tr><td>3-layer NN, 300+100 HU [distortions]</td>  <td>none</td>  <td align="right">2.5</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun et al. 1998</a></td></tr><tr><td>3-layer NN, 500+150 hidden units</td>  <td>none</td>  <td align="right">2.95</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun et al. 1998</a></td></tr><tr><td>3-layer NN, 500+150 HU [distortions]</td>  <td>none</td>  <td align="right">2.45</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun et al. 1998</a></td></tr><tr><td>3-layer NN, 500+300 HU, softmax, cross entropy, weight decay</td>  <td>none</td>  <td align="right">1.53</td>  <td><a href="http://www.cs.toronto.edu/~hinton/">Hinton, unpublished, 2005</a></td></tr><tr><td>2-layer NN, 800 HU, Cross-Entropy Loss</td>  <td>none</td>  <td align="right">1.6</td>  <td><a href="http://research.microsoft.com/~patrice/publi.html">Simard et al., ICDAR 2003</a></td></tr><tr><td>2-layer NN, 800 HU, cross-entropy [affine distortions]</td>  <td>none</td>  <td align="right">1.1</td>  <td><a href="http://research.microsoft.com/~patrice/publi.html">Simard et al., ICDAR 2003</a></td></tr><tr><td>2-layer NN, 800 HU, MSE [elastic distortions]</td>  <td>none</td>  <td align="right">0.9</td>  <td><a href="http://research.microsoft.com/~patrice/publi.html">Simard et al., ICDAR 2003</a></td></tr><tr><td>2-layer NN, 800 HU, cross-entropy [elastic distortions]</td>  <td>none</td>  <td align="right">0.7</td>  <td><a href="http://research.microsoft.com/~patrice/publi.html">Simard et al., ICDAR 2003</a></td></tr><tr><td>NN, 784-500-500-2000-30 + nearest neighbor, RBM + NCA training [no distortions]</td>  <td>none</td>  <td align="right">1.0</td>  <td><a href="http://www.cs.utoronto.ca/~hinton/absps/nonlinnca.pdf">Salakhutdinov and Hinton, AI-Stats 2007</a></td></tr><tr><td>6-layer NN 784-2500-2000-1500-1000-500-10 (on GPU) [elastic distortions]</td>  <td>none</td>  <td align="right">0.35</td>  <td><a href="http://arxiv.org/abs/1003.0358">Ciresan et al. Neural Computation 10, 2010 and arXiv 1003.0358, 2010</a></td></tr><tr><td>committee of 25 NN 784-800-10 [elastic distortions]</td>  <td>width normalization, deslanting</td>  <td align="right">0.39</td>  <td><a href>Meier et al. ICDAR 2011</a></td></tr><tr><td>deep convex net, unsup pre-training [no distortions]</td>  <td>none</td>  <td align="right">0.83</td>  <td><a href="http://research.microsoft.com/pubs/152133/DeepConvexNetwork-Interspeech2011-pub.pdf">Deng et al. Interspeech 2010</a></td></tr><tr><td colspan="4" align="center"><b>Convolutional nets</b></td></tr><tr><td>Convolutional net LeNet-1</td>  <td>subsampling to 16x16 pixels</td>  <td align="right">1.7</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun et al. 1998</a></td></tr><tr><td>Convolutional net LeNet-4</td>  <td>none</td>  <td align="right">1.1</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun et al. 1998</a></td></tr><tr><td>Convolutional net LeNet-4 with K-NN instead of last layer</td>  <td>none</td>  <td align="right">1.1</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun et al. 1998</a></td></tr><tr><td>Convolutional net LeNet-4 with local learning instead of last layer</td>  <td>none</td>  <td align="right">1.1</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun et al. 1998</a></td></tr><tr><td>Convolutional net LeNet-5, [no distortions]</td>  <td>none</td>  <td align="right">0.95</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun et al. 1998</a></td></tr><tr><td>Convolutional net LeNet-5, [huge distortions]</td>  <td>none</td>  <td align="right">0.85</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun et al. 1998</a></td></tr><tr><td>Convolutional net LeNet-5, [distortions]</td>  <td>none</td>  <td align="right">0.8</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun et al. 1998</a></td></tr><tr><td>Convolutional net Boosted LeNet-4, [distortions]</td>  <td>none</td>  <td align="right">0.7</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">LeCun et al. 1998</a></td></tr><tr><td>Trainable feature extractor + SVMs [no distortions]</td>  <td>none</td>  <td align="right"> 0.83</td>  <td><a href="http://hal.archives-ouvertes.fr/hal-00018426/en">Lauer et al., Pattern Recognition 40-6, 2007</a></td></tr><tr><td>Trainable feature extractor + SVMs [elastic distortions]</td>  <td>none</td>  <td align="right"> 0.56</td>  <td><a href="http://hal.archives-ouvertes.fr/hal-00018426/en">Lauer et al., Pattern Recognition 40-6, 2007</a></td></tr><tr><td>Trainable feature extractor + SVMs [affine distortions]</td>  <td>none</td>  <td align="right"> 0.54</td>  <td><a href="http://hal.archives-ouvertes.fr/hal-00018426/en">Lauer et al., Pattern Recognition 40-6, 2007</a></td></tr><tr><td>unsupervised sparse features + SVM, [no distortions]</td>  <td>none</td>  <td align="right">0.59</td>  <td><a href="http://www.inb.uni-luebeck.de/publications/pdfs/LaBaMa08c.pdf">Labusch et al., IEEE TNN 2008</a></td></tr><tr><td>Convolutional net, cross-entropy [affine distortions]</td>  <td>none</td>  <td align="right">0.6</td>  <td><a href="http://research.microsoft.com/~patrice/publi.html">Simard et al., ICDAR 2003</a></td></tr><tr><td>Convolutional net, cross-entropy [elastic distortions]</td>  <td>none</td>  <td align="right">0.4</td>  <td><a href="http://research.microsoft.com/~patrice/publi.html">Simard et al., ICDAR 2003</a></td></tr><tr><td>large conv. net, random features [no distortions]</td>  <td>none</td>  <td align="right">0.89</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#ranzato-cvpr-07">Ranzato et al., CVPR 2007</a></td></tr><tr><td>large conv. net, unsup features [no distortions]</td>  <td>none</td>  <td align="right">0.62</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#ranzato-cvpr-07">Ranzato et al., CVPR 2007</a></td></tr><tr><td>large conv. net, unsup pretraining [no distortions]</td>  <td>none</td>  <td align="right">0.60</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#ranzato-06">Ranzato et al., NIPS 2006</a></td></tr><tr><td>large conv. net, unsup pretraining [elastic distortions]</td>  <td>none</td>  <td align="right">0.39</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#ranzato-06">Ranzato et al., NIPS 2006</a></td></tr><tr><td>large conv. net, unsup pretraining [no distortions]</td>  <td>none</td>  <td align="right">0.53</td>  <td><a href="http://yann.lecun.com/exdb/publis/index.html#jarrett-iccv-09">Jarrett et al., ICCV 2009</a></td></tr><tr><td>large/deep conv. net, 1-20-40-60-80-100-120-120-10 [elastic distortions]</td>  <td>none</td>  <td align="right">0.35</td>  <td><a href>Ciresan et al. IJCAI 2011</a></td></tr><tr><td>committee of 7 conv. net, 1-20-P-40-P-150-10 [elastic distortions]</td>  <td>width normalization</td>  <td align="right">0.27 +-0.02</td>  <td><a href>Ciresan et al. ICDAR 2011</a></td></tr><tr><td>committee of 35 conv. net, 1-20-P-40-P-150-10 [elastic distortions]</td>  <td>width normalization</td>   <td align="right">0.23</td>  <td><a href="http://arxiv.org/abs/1202.2745">Ciresan et al. CVPR 2012</a></td></tr></table><h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献：</h1><blockquote><p>[LeCun et al., 1998a]<br>Y. LeCun, L. Bottou, Y. Bengio, and P. Haffner. “Gradient-based learning applied to document recognition.” Proceedings of the IEEE, 86(11):2278-2324, November 1998. <a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">on-line version</a></p></blockquote><hr><h1 id="mnist数据库的文件格式"><a class="markdownIt-Anchor" href="#mnist数据库的文件格式"></a> MNIST数据库的文件格式</h1><p>  数据以非常简单的用于存储矢量和多维矩阵的文件格式存储。有关此格式的一般信息，请参见本页末尾，但您无需阅读该信息即可使用数据文件。<br>  文件中的所有整数都以大多数非英特尔处理器使用的MSB优先（高端）格式存储。 英特尔处理器和其他低端机器的用户必须翻转标头的字节。<br>  以下有四个文件：</p><ol><li>train-images-idx3-ubyte：训练集图像</li><li>train-labels-idx1-ubyte：训练集标签</li><li>t10k-images-idx3-ubyte：测试集图像</li><li>t10k-labels-idx1-ubyte：测试集标签</li></ol><p>  训练集包含60000个示例，测试集包含10000个示例。<br>  测试集的前5000个示例取自原始NIST训练集。最后的5000个来自原始的NIST测试集。前一个5000比后一个5000更干净，更容易处理。</p><p><strong>训练集标签文件（train-labels-idx1-ubyte）：</strong></p><table><thead><tr><th style="text-align:center">[offset]</th><th style="text-align:center">[type]</th><th style="text-align:center">[value]</th><th style="text-align:center">[description]</th></tr></thead><tbody><tr><td style="text-align:center">0000</td><td style="text-align:center">32 bit integer</td><td style="text-align:center">0x00000801(2049)</td><td style="text-align:center">magic number (MSB first)</td></tr><tr><td style="text-align:center">0004</td><td style="text-align:center">32 bit integer</td><td style="text-align:center">60000</td><td style="text-align:center">number of items</td></tr><tr><td style="text-align:center">0008</td><td style="text-align:center">unsigned byte</td><td style="text-align:center">??</td><td style="text-align:center">label</td></tr><tr><td style="text-align:center">0009</td><td style="text-align:center">unsigned byte</td><td style="text-align:center">??</td><td style="text-align:center">label</td></tr><tr><td style="text-align:center">…</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">xxxx</td><td style="text-align:center">unsigned byte</td><td style="text-align:center">??</td><td style="text-align:center">label</td></tr></tbody></table><p>标签值为0到9。</p><p><strong>训练集图像文件（train-images-idx3-ubyte）：</strong></p><table><thead><tr><th style="text-align:center">[offset]</th><th style="text-align:center">[type]</th><th style="text-align:center">[value]</th><th style="text-align:center">[description]</th></tr></thead><tbody><tr><td style="text-align:center">0000</td><td style="text-align:center">32 bit integer</td><td style="text-align:center">0x00000803(2051)</td><td style="text-align:center">magic number</td></tr><tr><td style="text-align:center">0004</td><td style="text-align:center">32 bit integer</td><td style="text-align:center">60000</td><td style="text-align:center">number of images</td></tr><tr><td style="text-align:center">0008</td><td style="text-align:center">32 bit integer</td><td style="text-align:center">28</td><td style="text-align:center">number of rows</td></tr><tr><td style="text-align:center">0012</td><td style="text-align:center">32 bit integer</td><td style="text-align:center">28</td><td style="text-align:center">number of columns</td></tr><tr><td style="text-align:center">0016</td><td style="text-align:center">unsigned byte</td><td style="text-align:center">??</td><td style="text-align:center">pixel</td></tr><tr><td style="text-align:center">0017</td><td style="text-align:center">unsigned byte</td><td style="text-align:center">??</td><td style="text-align:center">pixel</td></tr><tr><td style="text-align:center">…</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">xxxx</td><td style="text-align:center">unsigned byte</td><td style="text-align:center">??</td><td style="text-align:center">pixel</td></tr></tbody></table><p>  像素按行排列。 像素值为0到255。 0表示背景（白色），255表示前景（黑色）。</p><p><strong>测试集标签文件（t10k-labels-idx1-ubyte）：</strong></p><table><thead><tr><th style="text-align:center">[offset]</th><th style="text-align:center">[type]</th><th style="text-align:center">[value]</th><th style="text-align:center">[description]</th></tr></thead><tbody><tr><td style="text-align:center">0000</td><td style="text-align:center">32 bit integer</td><td style="text-align:center">0x00000801(2049)</td><td style="text-align:center">magic number (MSB first)</td></tr><tr><td style="text-align:center">0004</td><td style="text-align:center">32 bit integer</td><td style="text-align:center">10000</td><td style="text-align:center">number of items</td></tr><tr><td style="text-align:center">0008</td><td style="text-align:center">unsigned byte</td><td style="text-align:center">??</td><td style="text-align:center">label</td></tr><tr><td style="text-align:center">0009</td><td style="text-align:center">unsigned byte</td><td style="text-align:center">??</td><td style="text-align:center">label</td></tr><tr><td style="text-align:center">…</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">xxxx</td><td style="text-align:center">unsigned byte</td><td style="text-align:center">??</td><td style="text-align:center">label</td></tr></tbody></table><p>  标签值为0到9。</p><p><strong>测试集图像文件（t10k-images-idx3-ubyte）：</strong></p><table><thead><tr><th style="text-align:center">[offset]</th><th style="text-align:center">[type]</th><th style="text-align:center">[value]</th><th style="text-align:center">[description]</th></tr></thead><tbody><tr><td style="text-align:center">0000</td><td style="text-align:center">32 bit integer</td><td style="text-align:center">0x00000803(2051)</td><td style="text-align:center">magic number</td></tr><tr><td style="text-align:center">0004</td><td style="text-align:center">32 bit integer</td><td style="text-align:center">10000</td><td style="text-align:center">number of images</td></tr><tr><td style="text-align:center">0008</td><td style="text-align:center">32 bit integer</td><td style="text-align:center">28</td><td style="text-align:center">number of rows</td></tr><tr><td style="text-align:center">0012</td><td style="text-align:center">32 bit integer</td><td style="text-align:center">28</td><td style="text-align:center">number of columns</td></tr><tr><td style="text-align:center">0016</td><td style="text-align:center">unsigned byte</td><td style="text-align:center">??</td><td style="text-align:center">pixel</td></tr><tr><td style="text-align:center">0017</td><td style="text-align:center">unsigned byte</td><td style="text-align:center">??</td><td style="text-align:center">pixel</td></tr><tr><td style="text-align:center">…</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">xxxx</td><td style="text-align:center">unsigned byte</td><td style="text-align:center">??</td><td style="text-align:center">pixel</td></tr></tbody></table><p>  像素按行排列。 像素值为0到255。 0表示背景（白色），255表示前景（黑色）。</p><hr><h1 id="idx文件格式"><a class="markdownIt-Anchor" href="#idx文件格式"></a> IDX文件格式</h1><p>  IDX文件格式是包含各种数值类型的向量和多维矩阵的简单格式。<br>基本的格式为：<br>magic number<br>size in dimension 0<br>size in dimension 1<br>size in dimension 2<br>…<br>size in dimension N<br>data</p><p>  幻数是一个整数（MSB优先）。 前2个字节始终为0。<br>  第三个字节编码数据的类型：<br>0x08: unsigned byte<br>0x09: signed byte<br>0x0B: short (2 bytes)<br>0x0C: int (4 bytes)<br>0x0D: float (4 bytes)<br>0x0E: double (8 bytes)</p><p>  第4个字节编码向量/矩阵的维数：1表示向量，2表示矩阵…</p><p>  每个维度的大小为4字节整数（MSB优先，高端，与大多数非英特尔处理器一样）。</p><p>  数据存储在C数组中，即最后一维中的索引变化最快。</p><p>  快乐的黑客。</p><hr><p>  MNIST集中的数字图像最初由Chris Burges和Corinna Cortes选择并使用边界框归一化和居中进行实验。 本页提供的Yann LeCun的版本使用了一个更大的窗口内的质心。</p><p><a href="http://yann.lecun.com/">Yann LeCun</a>，教授<br>Courant数学科学研究所<br>纽约大学<br><a href="mailto:yann@cs.nyu.edu">yann@cs.nyu.edu</a></p><p><a href="http://homepage.mac.com/corinnacortes/">Corinna Cortes</a>，研究科学家<br>Google实验室，纽约<br>google dot com</p>]]></content>
      
      
      <categories>
          
          <category> 翻译 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> 翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>#青春万岁，追梦无罪#迟到的318川藏线Part17东达山：冰雹垭口东达山，缺氧海拔最高点</title>
      <link href="%E9%9A%8F%E7%AC%94/57391/"/>
      <url>%E9%9A%8F%E7%AC%94/57391/</url>
      
        <content type="html"><![CDATA[<p><strong>知我罪我，一任诸公。</strong></p><blockquote><p>对骑行者而言，无论是刮风下雨，还是阳光灿烂，抑或是其他种种小事，都不重要；<br>只要还在骑行 ，我们就知道自己是世界上最幸运的人儿。<br>——题记</p></blockquote><p><img src="/%E9%9A%8F%E7%AC%94/57391/Day13map.png" alt></p><p>Day13行程</p><p>  <a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/43883/">前文</a>写道，我们夜路中相伴而行，入夜后才抵达登巴村。</p><p>  登巴村隶属于芒康县如美镇，坐落于崇山峻岭之间，进出村落只有一条路，那就是318了。此处海拔3465m，向前要翻越5130m的川藏线最高垭口东达山，到达左贡县大约77km；向后要翻越海拔3901m的觉巴山，到达如美镇大约39km。而旅游业配套的客栈、餐馆等项目，似乎都是本地的扶贫项目。</p><p>  此村地质条件贫瘠，几乎没有一亩青稞地，澜沧江一支流傍村而过，水流之急，闻声可知，不自觉地开始揣测明天37km的上坡路，需要持续爬升大约1600多米，也就是550多层楼吧。</p><p><img src="/%E9%9A%8F%E7%AC%94/57391/image-2.jpg" alt></p><p>  抵达后，到了联盟内客栈，住宿条件实在不敢恭维，比新都桥的住宿条件还要差一些。大通铺，感觉被套好像都没有换，没有热水，一个骑友的枕头里还发现了虫子。对，就是这么简陋的环境；但是，<strong>似乎没有第二个选择</strong>。</p><p>  时间已晚，客栈不提供晚餐，我们就出去找个餐馆觅食，最终发现了一家还在营业的川菜馆，炒个小白菜都要20元，菜价之高，堪比国内一线城市，大家可以看一看。</p><p><img src="/%E9%9A%8F%E7%AC%94/57391/image-1.jpg" alt></p><p>  回到客栈，没脱衣服，直接就躺在被窝里面了。期间和两三个骑友就某些偏激的观点爆发了激烈的辩论，或者说是争吵，暂不记述了。</p><p>  对糟糕的登巴村自然和居住条件，一位网友写下了“<strong>一个让人心痛的村庄——登巴村</strong>”。</p><h2 id="day11登巴村k3515h3465m容许兵站k3528h4046m东达山k3552h5130m左贡县k3592h3777m-行程77km"><a class="markdownIt-Anchor" href="#day11登巴村k3515h3465m容许兵站k3528h4046m东达山k3552h5130m左贡县k3592h3777m-行程77km"></a> DAY11:登巴村（K3515，H3465m）——容许兵站（K3528，H4046m）—东达山（K3552，H5130m）——左贡县（K3592，H3777m）  行程77km</h2><p>  先14km上坡到达容许兵站，再25km上坡到达海拔5130m的东达山垭口（都说实际上是5008m）,无论哪个数字，都是川藏线上最高的垭口，屈居第二的就是最后一座山，海拔5013米的米拉山。再13km爽下坡 + 20km缓下坡到左贡，继续前行4km就到达了左贡县城。</p><p>  前几天听闻入左贡线路附近发生了泥石流，导致道路阻塞，还不知现在通行了没有。</p><p><img src="/%E9%9A%8F%E7%AC%94/57391/image-4.jpg" alt></p><p>  早上起来后，具体几点已经记不清楚了，看到老板做了一些早餐，面条之类，想到昨天的住宿环境，着实不想下口。但在整个村子里，这个时间段也没有其他可以吃的东西，只好再回来吃了些垫垫肚子。即使这样，还是要对这里居民的淳朴给予肯定的，因为<strong>早饭和晚饭从来都是定价不定量的，管饱</strong>。</p><p>  由于知道是一座难行的垭口，照例检查了一下轮胎和刹车系统，充了充气。因为知道即将第一次抵达海拔5000米的高度，心里还想着能不能看到山巅落雪皑皑，隆达四处飘散的震撼景象。</p><p><img src="/%E9%9A%8F%E7%AC%94/57391/image-5.jpg" alt></p><p>  出发伊始的路上，还有高大的树林，阔叶木种，可以推荐此处氧含量和降雨还是很充沛的。虽然到容许兵站只有14km，但是骑行5km不到，就感觉今天的早餐能量已经消耗殆尽。时不时拿出早上在客栈一楼买的四瓶AD钙奶、小面包补充补充体力。之后的9km，算是半公里一歇吧。</p><p>  再往前面一点的一个停车观景台附近，遇到了自驾的一家人，老人小孩整整齐齐。我羡慕他们举家游玩的高情雅趣，他们羡慕我们骑行挑战的顽强毅力。</p><p>  他们家的老人说：</p><p>  “我要是有你们这么年轻的体魄，也没有你们这骑行的魄力啊！”</p><p>  我对他们家的娃娃说：</p><p>  “我们在泸定还遇到了骑共享单车挑战的小学生，和你差不多大，与他们相比，我自惭形愧啊！”</p><p><img src="/%E9%9A%8F%E7%AC%94/57391/image-8.jpg" alt></p><p>  再往前，遇到了昨晚和我观念相歧的那两个骑友，互相致意，加油鼓气，似乎昨天的分歧在这共同的道路上已经消弭不见。因为<strong>此地此刻，我们都有共同的目的地，昨天、今天和明天都要在同一条道路上骑行</strong>。即使素昧谋面，也以“同行者”相称，何况我们一直从成都骑行到了鲁朗才分离的呢？</p><p>  到容许兵站中间的辛苦，略去不提。因为和容许到东达山的25km相比，简直就是小巫见大巫，不值一提。</p><p><img src="/%E9%9A%8F%E7%AC%94/57391/image-9.jpg" alt></p><p><em>（图源骑友胡田摄影.TitanHu）</em></p><p>  到了容许兵站，发现所有的骑友们几乎都在，只是第一梯队已经吃完了在休整，第二梯队的已经开始享受美味，而我们可以算做是第三梯队，第四第五梯队的骑友还在后面，距离多远也不清楚。而我们还没吃完，第一梯队告别后又自行出发了。</p><p>  说是饭店，其实也没得选。只有二十块钱的鸡蛋面，此处海拔4046米，一样需要用高压锅才能把面煮熟，锅又不是太大，所以一锅只能出个两三碗左右。唯一值得欣慰的，是不大的货架上有小包装之类的榨菜可供选择，用以调味。</p><p>  <strong>所以什么是城市化？城市化的过程就是不断给你提供更多选项的过程</strong>。在发达的城市中，每行每业都有足够多的选择，即使你都不满意，也可以通过网购24小时或者半小时内就可以送达你的住处。</p><p><img src="/%E9%9A%8F%E7%AC%94/57391/image-7.jpg" alt></p><p>  再向上走，越来越荒凉。<strong>先是阔林木没了，紧接着针叶林木没了，再然后灌木林没了，知道最后草都没了</strong>，比第一座折多山荒凉的多。</p><p>  眼前所见，是散落在路边不远处的一顶顶黑色的大帐篷，如骑友Titan在朋友圈所记录的，“小孩在玩耍，农妇在挤奶，汉子骑着摩托到处嗨。”</p><p>  这里有一个藏区小tips需要留意，或许你在呼伦贝尔草原见惯了白色的帐篷，那<strong>为什么同样是草原，藏区的白色帐篷不能随便进呢？因为这是待嫁的藏族女孩的闺房</strong>。在西藏，只要是年纪大于14岁并且愿意嫁人的姑娘才会拥有这样一个白色的闺房，同时会养一只凶猛的藏獒，而这顶白色的帐篷，就是她们的私人物品。<strong>一般的男孩子是不允许进入的，除非是女孩子的意中人</strong>。</p><p>  如果有女孩子邀请你进入自己的白色帐篷，说明她想嫁给你；如果你不请自来，门口的藏獒也不会放过你。所以说，迎娶藏族姑娘需要胆量，首先要准备好牦牛肉和利刃，牦牛肉是犒劳白帐篷门口的藏獒的，而利刃是用来割掉女孩子的裤腰带的，这个白色的帐篷往往也是这个女孩子的婚房。</p><p><img src="/%E9%9A%8F%E7%AC%94/57391/image-6.jpg" alt></p><p><em>（图源骑友胡田摄影.TitanHu）</em></p><p>  再往前走， 看到了前面不远处好像是我们的两个队友，于是中间没有怎么停，我和光明就一直追啊追啊的，最后越来越近，他们在一块大石头旁边休息的时候就赶上了他们。然而，他们并不是我们的队友，简单交流得知，他们昨晚入夜骑行到了容许兵站，早上出发比较晚云云，互相鼓励后继续前行。</p><p>  如果遇到他们，是浮光掠影；那眼前的一幕，就是刻骨铭心。如你所见，几辆报废的汽车、摩托车静静地躺在那里，透过他们，我似乎看到了那一幕幕让人揪心的瞬间，无论在何处，生命是第一位的，“<strong>活着的意义就是活着本身</strong>”，余华在《活着》这本书里如是写道。</p><p><img src="/%E9%9A%8F%E7%AC%94/57391/image-12.jpg" alt></p><p>  再向前，似乎已经到了4900m的海拔了，我和光明远远地看到队友从前面几百米的拐弯处骑将过去，我还在心里暗想：他们怎么骑得这么慢？</p><p>  于是乎，骑行三五十米休息两三分钟，再推个八九十米休息个一两分钟…一方面温度慢慢下降，一方面山风呼呼作响，氧气含量不足以支持我们继续骑行，另一方面包里也没有热乎的吃食，可谓饥寒交迫，于是我们在一个拐弯风小的地方穿上了雨衣。前面的那个拐弯处是不是垭口？我俩面面相觑，认怂地说了句：</p><p>  “最后的这几百米，我们推过去吧。”</p><p>  推着推着，遇到了一个正在此处休息的独行小姐姐，简单交流后得知其他的队友都在容许兵站搭车过去了，但是她决定自己一定要骑过去，</p><p>  “推也得推过去，我又不比男人差。”</p><p>  我们为她打气，但是由于她的速度着实比较慢，我们也只好与她道别，祝她好运！</p><p><img src="/%E9%9A%8F%E7%AC%94/57391/image-10.jpg" alt></p><p><em>（图源骑友胡田摄影.TitanHu）</em></p><p>  距离那个拐弯处还有一两百米的时候，看到了铿铿、刘斌等骑友在前面向我们招手，我们再次骑上了爱驹，风光直接冲将过去，而我骑了几十米还是继续决定推上去，氧气着实跟不上。However，到了山顶，还是要举起自己的一路的伙伴，以示征服。</p><p><img src="/%E9%9A%8F%E7%AC%94/57391/image-13.jpg" alt></p><p>  十分感谢各位骑友仍在山顶等我们，合照肯定是少不了的。</p><p><img src="/%E9%9A%8F%E7%AC%94/57391/image-14.jpg" alt></p><p>  刚刚拍完合照，或者说在拍合照的过程中，雾蒙蒙的开始下雨，我们赶紧再穿上雨裤雨靴，放低了胎压，冲将下去。这37km的下坡路，速度较快，几乎无事可记。</p><p><img src="/%E9%9A%8F%E7%AC%94/57391/image-11.jpg" alt></p><p>  整理第今天素材的时候，在骑友那天的朋友圈中，翻到了这张照片，似乎对这个老兵还有些许印象，好奇心驱使我去查了查“八七四一部队”，着实感动了我。</p><p>  庞承权同志是原八七四一部队退役的一位老兵。为了完成祭奠牺牲在西藏的战友，他曾开摩托车七赴西藏去祭奠战友，05年和09年的两次尝试均无功而返，他只想到中国与尼泊尔交界处的聂拉木樟木烈士陵园，战友墓前点上一柱香祭奠亡魂。把一百多位牺牲战友墓碑拍录下来准备送到各民政局，让他们亲人一见。</p><p><img src="/%E9%9A%8F%E7%AC%94/57391/image-15.jpg" alt></p><p><img src="/%E9%9A%8F%E7%AC%94/57391/image-16.jpg" alt></p><p><img src="/%E9%9A%8F%E7%AC%94/57391/image-17.jpg" alt></p><p><img src="/%E9%9A%8F%E7%AC%94/57391/image-18.jpg" alt></p><p>【上一篇：《<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/43883/">#青春万岁，追梦无罪#迟到的318川藏线Part16觉巴山：山巅相逢，夜路漫漫，历久弥坚</a>》】</p><p>【未完待续：《<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/57391/">#青春万岁，追梦无罪#迟到的318川藏线Part18左贡：有一刻的欢愉，就有一刻的故事</a>》】</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
            <tag> 318 </tag>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>#青春万岁，追梦无罪#迟到的318川藏线Part16觉巴山：山巅相逢，夜路漫漫，历久弥坚</title>
      <link href="%E9%9A%8F%E7%AC%94/43883/"/>
      <url>%E9%9A%8F%E7%AC%94/43883/</url>
      
        <content type="html"><![CDATA[<p><strong>知我罪我，一任诸公。</strong></p><blockquote><p>一旦骑上那辆单车，一路或走或停，或急或缓，欲左即左，志右则右，旅程虽不免雨打风吹、日晒摔车，但双轮飞转，那颗自由不羁的心灵始终在跃动，我们对那段旅程的记忆，更多的或许永远便是快乐。<br>——题记</p></blockquote><p><img src="/%E9%9A%8F%E7%AC%94/43883/Day12map.png" alt></p><p>图一：Day12行程</p><p>  <a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/18933/">前文</a>提到，我们昨晚抵达了芒康，买断了街上那家店铺的所有馒头，当然，卫龙辣条也是少不了的。</p><p>  在超市里向老板询问：</p><p>  “你们这里的饭菜为什么这么贵？”</p><p>  老板就提到了这边难以种植蔬菜，大多都是从成都平原运来的云云。而这里距离成都大约1300km，抵达茶马古道重镇雅安也得1200km；到拉萨呢，大约还有1200km，相当于川藏线的中间位置。</p><p>  <strong>芒康，藏语意为“善妙地域”</strong>，名气最大的风俗活动应该就是弦子舞了。弦子舞，藏语称之为“谐”，即“圆圈舞”。一般时男性拉着牛角胡琴领舞，女性随着琴声的节奏挥动长袖，翩翩起舞。为什么我印象这么深呢？因为小学的时候曾经跳过一曲《欢乐的海洋》舞蹈，对歌词“<strong>一根根洁白的哈达，架起我们友谊的桥梁；一声声扎西德勒，祝福幸福吉祥</strong>”印象深刻。</p><p>  舞蹈的人围成一圈，足踏节拍，激情高歌，边唱边舞。先是轻歌曼舞，其后逐渐加快节奏，最后推向快节奏的高潮便结束一曲弦子。跳舞时个人可随时进入或退出舞圈。</p><p>  昨晚到客栈，很不幸的遭遇了一两个小时左右的停电，然后爆发了一次队伍内部的争吵，期间，客栈的其他住客也到了，有一位“徒步”318的小姐姐，我之所以加上了双引号，是因为她属于那种搭不上车就徒步前进，搭上了车就乘车前行，也是另外一种体验318的方式。所以第二天，她就已经抵达了左贡，之后再也没有碰面。</p><p><img src="/%E9%9A%8F%E7%AC%94/43883/image-15.jpg" alt></p><h2 id="day11芒康k3429h3875m拉乌山k3441h4376m如美镇k3276h2640m觉巴村k3487h3161m觉巴山k3503h3901m登巴村k3515h3465m-行程86km"><a class="markdownIt-Anchor" href="#day11芒康k3429h3875m拉乌山k3441h4376m如美镇k3276h2640m觉巴村k3487h3161m觉巴山k3503h3901m登巴村k3515h3465m-行程86km"></a> DAY11:芒康（K3429，H3875m）——拉乌山（K3441，H4376m）——如美镇（K3276，H2640m）——觉巴村（K3487，H3161m）——觉巴山（K3503，H3901m）——登巴村（K3515，H3465m）  行程86KM</h2><p>  今天的路线就如文章开头的那一张地图，我们准备把攻略常规的三天行程（芒康–&gt;觉巴村–&gt;容许兵站–&gt;左贡）并作两天（芒康–&gt;登巴村–&gt;左贡），所以今天的海拔总体是一个“V”字形，难度陡增了不少，因为这意味着一天要翻越两座山。</p><p>  3km平路到江卡村，9km上坡到<strong>海拔<strong><strong>4376m的</strong></strong>拉乌山垭口</strong>，过垭口继续爬坡两公里，一个34km大下坡到如美镇，此时的海拔高度为2640m，10km上坡到觉巴村，继续20km上坡到<strong>海拔3911m的觉巴山垭口</strong>，最后8km下坡+4km起伏路到登巴村终点。</p><p>  今天是抵达西藏境内的第一天，也是川藏线的中点，<strong>退无可退，只能前行</strong>。因为可以返家的最近的机场就在前面的林芝市，也就是说回家也要向前走。</p><p>  早上起床较早，去街上买了几个包子暂时充饥，打了两瓶水，就直接出发了。</p><p>  所谓的3km平路其实是感觉不到的，因为刚出芒康就是一段上坡，14km，每七八百米停下来休息五分钟调整调整呼吸，我印象中骑行了两个小时，比平常在平原上跑步的速度还慢。爬这座拉乌山的时候，风光、光明和我差不多就是在最后面的。</p><p><img src="/%E9%9A%8F%E7%AC%94/43883/image-1.jpg" alt></p><p>  那天晴天，整个拉乌山，所见唯有莽莽山峦，碧草蓝天，偶有几棵上了年纪的行道树可以提供一个临时歇脚的地方，我都会停下个十来分钟，偶尔吃点小食品补充体力。</p><p>  印象最深的一段就是下面的这一个转角，当时转角前有一个帐篷，帐篷外放着一口锅，我估计是一个徒步的伙伴昨晚走到了这里，就地扎营歇息了。路上曾见过许多徒步者，但是看到徒步者帐篷居所的，这是第一个地方。TA选的这个位置不错，距离芒康四五公里，距离拉乌山垭口也是四五公里左右，而且两面高出帐篷，应该是为了避开山中深夜的凛冽寒风，徒步不易，孑然徒步者更是不易，一个过路人愿你早日顺利抵达自己的终点!</p><p><img src="/%E9%9A%8F%E7%AC%94/43883/image-3.jpg" alt></p><p>  距离垭口还有最后一公里的时候，一个拐弯接一个拐弯，但在这个拐弯处，永远不知道下下个拐弯处是什么样子，即使垭口就在那里。根据攻略，垭口的里程碑应该是K3441，所以在K3440的时候，心里美滋滋地想，只有一公里了；但是过了3441还是没有看到垭口，抬头也看不到，心里稍微感觉到了挫败感。这段海拔4300m左右的高度，每一百米都要付出巨大的体力，甚至自己不得不一次比一次休息地更久，只为了能看到垭口的那个蓝色的牌子。</p><p><img src="/%E9%9A%8F%E7%AC%94/43883/image-1.jpg" alt></p><p><img src="/%E9%9A%8F%E7%AC%94/43883/image-5.jpg" alt></p><p><img src="/%E9%9A%8F%E7%AC%94/43883/image-6.jpg" alt></p><p><img src="/%E9%9A%8F%E7%AC%94/43883/image-7.png" alt></p><p><img src="/%E9%9A%8F%E7%AC%94/43883/qiaoshilawushan.png" alt></p><p>  无论怎样，我们最终到了第一座山的垭口，算是玩成了一个阶段小目标。只要到了垭口，之前爬坡所有的劳累都一扫而尽，蓦地想起了一句话——</p><p><strong>我们各自攀登，在高峰相逢</strong>。</p><p>  接下来的34km长下坡几乎无事可记，速度一直放在40码左右，自己车上的负重无法超过50，否则会感觉有点飘，只知道心里一直念叨：下降坡度别这么陡啊，等会还得再爬上来啊。</p><p>  中午11：30左右抵达如美镇，如美是318这一段沿途的一片绿洲，在澜沧江沿岸，而我们只是吃了一顿午饭，由于路程较赶，我们稍微歇息了半小时就继续出发了。</p><p><img src="/%E9%9A%8F%E7%AC%94/43883/image-9.jpg" alt></p><p>  如果没有刚开始合并旅程的举动，今天接下来的行程算是很轻松的，因为再从如美爬坡10km就可以到半山腰的觉巴村了，由于合并了行程，还要从觉巴村开始多走“20km爬坡 + 8km下坡 + 4km起伏路”才能到登巴村。</p><p>  再出发已经13：00了，10km的爬坡我们花费了3个小时左右抵达，这个时候已经下午16：30，我看到风光他们一行坐在一个小卖铺门口，在检查自己的车子，风光说:</p><p>  “现在想想都有点气，那个面包车师傅把我的车子后刹挤坏了。”</p><p>  “啊？那你今天算是半捏着刹车爬坡的？”</p><p>  “当然，那还能咋办？”</p><p>  “厉害，厉害！这样你都能跑到我前面那么远。”</p><p><img src="/%E9%9A%8F%E7%AC%94/43883/image-11.jpg" alt></p><p>  “前面还行，心想撑一撑，到左贡这个县城总该有修车的了吧。”</p><p>  “也怪咱们没有想全，轮胎的工具准备了不少，就是刹车链条什么的都没准备。”</p><p>  “要不然咱们今天在觉巴山休息吧，还按三天的路程走？”</p><p>  “不行，怎么能因为我的问题耽误大家的行程呢？”</p><p>  “那要不然今天你住在觉巴村，明天直接搭车到左贡，然后等我们一天?”</p><p>  “不行，出发吧。<strong>我就算推也得推过这个不到4000米的觉巴山</strong>。”</p><p>  <strong>男人的浪漫往往很简单，可以远到浩瀚宇宙中的星辰皓月，也可以近到脚下这条2200多公里的漫漫征途；可以大到家国世界，也可以小到脚底的那两块踏板。</strong></p><p>  <strong>一个人有一个人的浪漫，爱好、信仰以及面对眼前困境的态度，最终组成了一个或许仅仅属于男人的浪漫。</strong></p><p><img src="/%E9%9A%8F%E7%AC%94/43883/image-8.jpg" alt></p><p>  就这样，即使面前有几个其他素昧谋面的骑友刚刚抵达这个觉巴村就去了旁边的客栈，他还是选择和我们一起出发了，由于考虑到目前还没有吃晚饭，刚刚10km的爬坡足以使其体能消耗殆尽，速度肯定快不了，我就跟队友们说，“你们先上去吧，我和风光一起最后走。”</p><p>  这时候运动员和隔壁队的大部分估计已经在我们前面10km了，我们这一队分成了至少三个梯队：刘斌、西瓜哥在第一梯队；何队、光明在第二梯队；我和风光在第三梯队。刚开始或许只相差两三百米，半小时后就是五百米，再过半小时，就能看到他们在我们头顶的那条路上刚刚驶过，再后来，就再也看不到他们的尾灯了。而且由于这段路，手机仍然没有信号，联系不到彼此，不知道他们现在在哪个位置了?到垭口了没有？下山了没有？</p><p><img src="/%E9%9A%8F%E7%AC%94/43883/image-12.jpg" alt></p><p>  就这样，我和风光在最后一个梯队，希望尽快追赶前面的队友。风光骑着自带刹车的爱驹奋力地想加快速度，再加快速度。由于道路较窄，坡陡弯急，我就跟在他后面，只在休息的时候简单交流一下，跟他说不用着急，即使22:00到也没事，明天只有70多公里，而且差不多一半下坡路，大不了晚点出发之类什么的。</p><p>  以往如果他是2 * 3 或者 2 * 2的速度不怎么费力地在爬坡，这次的爬坡他降低到了1 * 3 或者 1 * 2，仍然感到十分吃力，只好骑个几百米，休息一下。</p><p>  当我们看到已经快到了这座山的尽头时，心底兴奋地不得了，终于可以开始下坡了。然后，我们拐过了这个弯之后，是一座更高的山头在前面耀武扬威，肉眼可见的数个往复的&quot;Z&quot;字形拐弯就在我们头顶几百米的地方，但我们不知道，翻过这座山头，是否还要下一个山头在等着我们…</p><p><img src="/%E9%9A%8F%E7%AC%94/43883/image-10.jpg" alt></p><p>  我们俩已经推了几公里了，推着负重的车有时候比骑行还累，只记得接下来的几天我的肩膀疼了好久都没缓过来。天色开始暗下去了，显然我们说不定还不能到山顶就要天黑了。</p><p>  就在这边&quot;Z字形&quot;路中途推车的刹那，风光没控制住情绪使劲地踢着爱驹后刹的位置，说道：</p><p>  “把这台车卖了，在左贡再买一辆，当时真不应该坐那辆面包车！”</p><p>  我知道此刻的他已经崩溃了，似乎只说了一句话:</p><p>  “现在你怎么它也解决不了问题，咱们停下来歇歇吧!”</p><p>  就这样，我们坐在了马路旁边，上上下下的轿车、卡车从我们面前一辆辆飞驰而过，尘土飞扬，等他情绪调节地差不多了，我们立马再次出发。</p><p>  拐过了一个弯又一个弯，直到这个山头的最后一段路口地拐角处，我们看到了观景亭台建筑的屋檐，再往前走，看到了我们的几个队友都在路口等着我们，而现在已经晚上20：30左右了，他们在上面等了我们差不多一个小时，满满的感动。</p><p><img src="/%E9%9A%8F%E7%AC%94/43883/image-17.png" alt></p><p><img src="/%E9%9A%8F%E7%AC%94/43883/image-18.png" alt></p><p>  队友之间的情谊就是在这一刻又一刻的感动中不断升华，从萍水相逢到铮铮铁友，而这只是我们相识的第12天。有时候，我们出发，未曾有任何规划，然而共同的志趣让我们同一时间在同一地点相逢，开始了意料之外的诸多故事。</p><p><strong>很多时候，男人之间的情谊或许是不需要用语言来传达的，一声&quot;兄弟&quot;或许就够了</strong>。<br><img src="/%E9%9A%8F%E7%AC%94/43883/image-13.jpg" alt></p><p><strong>夜  路</strong><br><img src="/%E9%9A%8F%E7%AC%94/43883/image-17.jpg" alt></p><p>2018/08/26</p><p>  夜路，有诸友相伴，每个人都不再孤单。</p><p>  夜路下坡，是一件不得不让人小心翼翼的事。我们我们打开了头灯，以防后侧来车；打开强光手电，希望不会在下坡的路上遇到深坑或者大石头；还不得不时刻留意山上会不会有飞石下坠，而我又选择了走在最后。</p><p>  因为是夜晚，所以即使是下坡速度也放的很慢，估计二三十码的速度吧，如果你是一个旁观者可能会听到下面的这几句话从队头传到队尾，或者从队尾传到队头——</p><p>  “前面有车，减速靠边！”</p><p>  “后面来车了，减速靠边！”</p><p>  “减速，注意下面的石头！”</p><p>  “减速，有沟！”</p><p>  …</p><p>  当然，如果碰到那种前面占左边道路拐弯的，或者碰到一直开着远光灯的司机，几个队友可能又会破口大骂：</p><p>  “<strong>傻Ⅹ，会不会开车?</strong>”</p><video src="青春万岁，追梦无罪-迟到的318川藏线Part16觉巴山：山巅相逢，夜路漫漫，历久弥坚/mangkangdaodengba.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><p>【上一篇：《<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/45536/">#青春万岁，追梦无罪#迟到的318川藏线Part15海通沟：双腿在地狱，两眼在天堂</a>》】</p><p>【未完待续：《<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/57391/">#青春万岁，追梦无罪#迟到的318川藏线Part17东达山：冰雹垭口东达山，缺氧海拔最高点</a>》】</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
            <tag> 318 </tag>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>#青春万岁，追梦无罪#迟到的318川藏线Part15海通沟：双腿在地狱，两眼在天堂</title>
      <link href="%E9%9A%8F%E7%AC%94/45536/"/>
      <url>%E9%9A%8F%E7%AC%94/45536/</url>
      
        <content type="html"><![CDATA[<p><strong>知我罪我，一任诸公。</strong></p><blockquote><p>你翻过几座山，踏过几条河流，跋山涉水来到这里，你说你终于洒脱。那天，年轻的你，掷地有声地说，<strong>五菱宏光能过去的，为什么山地车不能</strong>？<br>——题记</p></blockquote><p><img src="/%E9%9A%8F%E7%AC%94/45536/Day11map.png" alt></p><p>Day11行程</p><p>  恰逢五四青年节，引用老喻的一句话，“<strong>前浪别收割后浪，后浪别举报前浪</strong>”。</p><p>  恍惚之间，已经有小半年没有更新了，如果非要给自己找一个借口的话，那就是因为笔者的自建博客崩了，修复完毕后又崩了。最终决定从个人博客迁徙到微信公众号来，出于以下两方面的考虑：</p><ul><li><p><strong>集中精力</strong>。之前的博客由于是自己买了服务器，然后用代码一步一步搭建起来的，结果就导致自己除了创作内容外还要分散出精力来维护网站，实属没有必要。</p></li><li><p><strong>视频号未来可期</strong>。由于最近个人一直在日更个人品牌IP的视频号（视频号名称：<em>郭鹏真PattenKuo</em>），希望以后可以将视频号与本公众号打通，公众号作为对视频号内容的补充，进一步发力。</p></li></ul><p>  目前准备将原博客167篇文章筛选出四五十篇，一篇一篇地迁移至本公众号，由于订阅号只允许一天一更，所以首先要把“青春万岁，追梦无罪”川藏线骑行的文章迁移过来，其余文章后续再行迁移。</p><p>  其实巴塘到芒康的这段我之前已经写过了，但是由于当时修复博客的过程中操作不当，少了2019/11/02–2020/02/08的所有文章数据，当然，是包含这一篇的，心累，不过不能总sang着脸吧，解决不了问题，还是开心点好。</p><p>  重写也是一遍重温，巧合的是丢失的那一篇恰好就是自四川蜀入藏的第一天，那我们一起跨过金沙江大桥再度入藏吧！虽然现在的竹巴笼金沙江大桥已经不是昔日的那一座，但是金沙江水汹涌千百年，似乎亘古不变。</p><p>  <a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/18933/">前文</a>最后有提到——</p><p>  而明天的故事，是个关于两个勇士的故事，是关于十几个人决定自己将以什么样的姿态，初踏藏地的心理抉择。<strong>无关乎对错，弥见勇敢与坚毅</strong>。</p><p>  我们昨晚抵达巴塘后，从这里开始，住宿不再包含早晚餐，因为这里的菜实在是太贵了，一碗阳春面都要15的节奏。巴塘，古为部落之地，周曰戎，秦称西羌，汉系白狼国，当之无愧的康巴地区的历史重镇，又因其地形酷似展翅的大鹏，也唤作“鹏城”。这首歌《故乡巴塘》，意境空灵，推荐给你们。</p><video src="https://v.qq.com/x/page/b05046sf442.html" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><p>  由于知道这里有自行车维修点，所以匆匆吃了些晚饭，就抓紧时间去找维修点，检查检查我们的车况并打算多准备几条备胎，以防接下来或许更加凶险难行的道路。</p><p>  我和张大哥、刘斌等一起反方向骑行一公里左右到了维修点，让维修点小哥帮我们检查检查刹车系统、减震系统等等。此时刘斌的车子被检查出来后轮的塔基坏了，前文有提到刘斌在从二郎山下坡的时候，出了第二个隧道后，与何队在同一个地点接连摔车，第一次用到了我们备用的外伤药，自那时起，自称“下巴有疤的男人”。</p><p><img src="/%E9%9A%8F%E7%AC%94/45536/image-3.jpg" alt></p><p>  我说这个队伍再准备两条备胎就差不多了，张大哥执意要再多加两条，一方面我拗不过他，另一方面也是没必要，所以我们又多加了四条备胎。这件小事记叙出来，主要是为了说明团队里的很多观念是很难趋于一致的，但是如果你想走得更远，那就包容彼此吧!</p><p>  待刘斌花费了两三百块换了那个塔基之后，我们又顺便去了超市买了一些水果和零食，在回客栈的门口，忽然听到了温柔的声音，我的视线随即转向了声音的方向，就看到巷道里的每个门口似乎都坐着一个女人，霓虹灯串下做着搔首弄姿的动作，向我们这边张望，我又立即转回了头，赶紧推开客栈门溜将进去。我们应该如何看待这些事呢？没有经历过别人的生活，就不要以自己的标准去要求别人，想起《了不起的盖茨比》里有这么一句话：</p><p>  “<strong>每当你想批评人的时候，要记得，世上不是所有人都像你一样拥有许多优势。</strong>”</p><p>  自昨天抵达巴塘，找我们预约的客栈着实花了点时间，由于都是大通铺，大家又是陆陆续续到的，所以没有住在同一间房子，而是分了两三个房间。等所有人几乎都回到了客栈，我们所有人就开始讨论明天的行程问题，是&quot;继续骑行前进&quot;呢?还是&quot;搭车前进&quot;呢?看似一个对骑行者很羞耻的问题，但是没必要隐瞒什么，坦诚面对当时的抉择与心理历程，还是那句话，“无关乎对错，弥见勇敢与坚毅”，讨论过程大概是这个样子的——</p><p>  ”明天是骑车走还是搭车走？&quot;</p><p>  “还要问？当然是骑车了，骑行骑行，咱们是骑行川藏线，不是搭车游川藏线。”</p><p>  “可是<strong>海通沟，人送称号‘鬼门关’，气候多变，地质复杂，全程都是飞石路段，塌方、泥石流频发，可是有骑友先驱在这里丧了命的</strong>。”</p><p>“对，我出发之前把地图放到最大，从巴塘到芒康这一段我是<strong>一公里、一公里看过去的，简直就是飞石封锁线，飞沙走石</strong>，堵车数天数夜都是家常便饭。”</p><p>  “我之前查看攻略的时候，有人提到一片云就是一片雨，雨水来地快，下地急，况且百分之七八十地路段时没有信号的啊，出了问题也报不了警啊。”</p><p>  “哪有那么可怕，不骑这一段，感觉前面整个318都是缺憾，以后会后悔的。”</p><p>  “巴塘到芒康这段路太危险了，我准备搭车过去。”</p><p>  “嗯嗯，我也这样打算的，竹巴笼再往前那段，听说都是泥路，没过脚踝。”</p><p>  ······</p><p>  就这么讨论讨论的时候，大家的意见慢慢趋于一致了——搭车。</p><p>  可偏偏这个时候，何队扔下一句——</p><p>  “要搭车你们搭，反正我不搭。从广东骑过来，我什么烂路没见过，<strong>五菱红光能过去的，为什么自行车不能？</strong>”</p><p>  而和何队做出同一选择的，还有隔壁队的三个人，包括小龙在内。好了，现在是时候介绍我们最后一位队友了，小龙。</p><p><img src="/%E9%9A%8F%E7%AC%94/45536/image-2.jpg" alt></p><p><em>小龙，四川德阳人氏，性格豪爽、重情义、敢想敢做、不拘小节，是火锅串串的狂热爱好者，是在这个不断圆滑的世界里仍然保持着棱角的人。少小离家出外闯荡，曾踩过缝纫机，下过厨子，也曾直接参与了西藏内一些知名寺庙的建设，在为别人工作的过程中，逐渐找到了自己灵魂深处想要的东西，回到故乡，开始了自己为自己打工的生活，颇有陶渊明“久在樊笼里，复得返自然”的志趣，目前已经开始着手摩旅219的行程。本图是巴塘到芒康的宗拉山所摄。</em></p><h2 id="day11巴塘k3323h2580金沙江大桥k3360h2526m宗拉山垭口k3423h4170m芒康k3429h3875m-行程106km"><a class="markdownIt-Anchor" href="#day11巴塘k3323h2580金沙江大桥k3360h2526m宗拉山垭口k3423h4170m芒康k3429h3875m-行程106km"></a> DAY11:巴塘（K3323，H2580）——金沙江大桥（K3360，H2526m）——宗拉山垭口（K3423，H4170m）——芒康（K3429，H3875m）  行程106KM</h2><p>  天刚朦朦亮，就听到屋子外面有人活动的声音，原来有人已经准备开始出发了，他们就是何队、小龙和隔壁队的另外两个伙伴。为什么要这么早，看上面的图一就知道了，而且在昨天的讨论中有提到，今天的113公里，我们搭车过去，估计下午三四点就到了；他们估计要骑行两天，在海通兵站住一晚，所以我们可以在芒康等他们一天。他们为了不耽误大家的行程安排，准备今天就到达芒康与大家会和。</p><p>  由于剩下的我们这一批人准备搭车出发，所以起床比较晚，约摸着九点左右才陆续起床整理装备，前一晚约了两辆面包车，骑行到一个大工厂的院墙里，拆车装车，拆车装车的这个过程真的很揪心啊，看着自己的爱驹几乎毫无保护地放置在面包车最后面，又想到前行地道路如此如此坎坷不平。</p><p>  本来准备打电话问问他们到哪里了，但是提示“<strong>您所拨打的电话暂无法接通，请稍后再拨…</strong>”，那就印证了骑行前辈的攻略所说，估计他们已经进入了没有信号的区域，只能在心里默默祝他们好运。</p><p>  没多久，我们就搭车出发了…</p><p>  搭车是真的爽，除了有点挤。几十分钟就过了竹巴笼，到达了四川——西藏交接处，金沙江大桥。司机很贴心地停下车让我们下去打卡拍照。此时搞笑的一幕出现了，运动员带着头盔过来的，所以一路吆喝着——</p><p>  “租头盔了，拍照一次十元，一次十元。”</p><p><img src="/%E9%9A%8F%E7%AC%94/45536/image-4.jpg" alt><br><img src="/%E9%9A%8F%E7%AC%94/45536/image-5.jpg" alt><br><img src="/%E9%9A%8F%E7%AC%94/45536/image-6.jpg" alt><br><img src="/%E9%9A%8F%E7%AC%94/45536/image-7.jpg" alt><br><img src="/%E9%9A%8F%E7%AC%94/45536/image-8.jpg" alt></p><p>  我很少在一个打卡点放这么多图，为什么这次有点反常？因为这座桥已经消失了，2018年11月14日，堰塞体泄洪，这座桥被汹涌的洪水冲垮。你们眼前的这座金沙江大桥已经成为历史，<strong>很多人的入藏梦就是从这座桥开始，以后再也没有了，我们18年的骑友变成了最后一批，是幸运也是遗憾</strong>。记得有一个网友大概说过这句话：<strong>冲走的不单是大桥，还有怀念</strong>。</p><p>  过了这座桥是什么路况呢？有图有真相——</p><p><img src="/%E9%9A%8F%E7%AC%94/45536/image-9.jpg" alt><br><img src="/%E9%9A%8F%E7%AC%94/45536/image-10.jpg" alt><br><img src="/%E9%9A%8F%E7%AC%94/45536/image-11.jpg" alt><br><img src="/%E9%9A%8F%E7%AC%94/45536/image-12.jpg" alt><br><img src="/%E9%9A%8F%E7%AC%94/45536/image-13.jpg" alt></p><p>  一路走走停停，忽然单行道，忽然限行，忽然堵车，一路上又没有信号，骑友互相唠嗑说笑，以打发这无趣的时间。</p><p>  接下来发生了一些不愉快的事情。车开到一个左边直挺挺的崖壁，右侧金沙江的地方，几个徒步的驴友拦停了我们的汽车，意思是说：“有两个朋友走不动了，能不能搭我们的车过去…”这要是在平常，无所谓啊，但是这么危险的路段，我们两辆车上的人已经满座了，或者说再加一个人就超员了，本来就是危险路段，再搞这种危险驾驶，况且这是我们前一天说好是包车的，司机在没有咨询我们任何人的情况下，就准备让他们的两个人上车。怎么也说不过去啊！</p><p>  于是车里有骑友开始抱怨，和司机理论，甚至性格比较耿直的西瓜哥已经准备把自己的自行车从后备箱里拿出来自此出发了。然而，就在此刻，令人更瞠目结舌的事情发生了——</p><p>  徒步群体里面的一个瘦削的小伙子，拿起原本背在肩头的钢钎指向我们，喝道，“你们不要在里面瞎bb，再说一句，我这家伙可不认人。”有意见的骑友都被身边的朋友按压了下去。</p><p>  出门在外，都不想惹事，都希望尽快平息下去，最终还是让他们两个人搭乘上来了。到我们车上的是个体型肥胖的高个子，刚开始气氛还是有点尴尬的，我心想：后面还有四五个小时的车程呢？这样走一路岂不是要闷死？然后试探性地问了一句：</p><p>  “你们从哪里出发的？准备走多久？”</p><p>  于是他的话匣子就打开了，说是他们这群人除了他都是特种兵退役，退伍之后在北京呆腻了，于是准备两年的徒步行程，从北京一路向南，经多个省份穿过国境线到尼泊尔，然后再从新疆返回到北京。沿途不是只走公路，也会翻山，遇过狼群，吃过蛇之类的野生动物，打过不少猎物…另一种户外探险的体验历程浮现在我的眼前，但于我而言，只是想想而已。</p><p>  下午四点钟左右，我们这一行抵达了客栈。都将自己的爱驹卸下来之后，发现经过一路颠簸，几个伙伴的车都出了问题，要么是辐条弯折了，要么刹车片变形了，要么来令片坏了…有骑友感叹道,“看到自己的车变成这样，还不如跟着他们一起骑过来呢！”</p><p>  然后大家在客栈里简单收拾了一下都聚在了客栈大厅里海聊，运动员的车也坏了，急于去修车，连问——</p><p>  “去哪里修车？”</p><p>  “去哪里修车？”</p><p>  “去哪里修车？”</p><p>  大家都没怎么留意，然后运动员忽然间暴躁了，拳头往桌子上一擂，咆哮道，“去哪里修车？”这时大家都安静下来了，刘斌回应到——</p><p>  “吼什么吼？等会不行吗？”</p><p>  “你说什么？是不是欠揍啊？”</p><p>  “你再说一遍！”</p><p>  …</p><p>  他们俩就这样开始杠起来了，刚开始我们还以为是在开玩笑，后面越说越不对劲，感觉他俩都是真的生气了，然后开始拉架，他俩的情绪才慢慢稳定下来。后来某骑友回忆道，</p><blockquote><p>“<strong>当时吓我一跳，大家开开心心地一路走了那么多天，最怕有这种摩擦，很恐怖的啊，不开心不说，万一搞出了什么事，这路还能不能继续走了。</strong>”</p></blockquote><p>  等他俩的情绪彻底稳定了我们就出去吃饭了，芒康这座城市，建筑很有民族特色，转弯处没多久很快找到了一家牛肉面馆，一碗面30块，你没看错，在这个地方，蔬菜很难运进来，饮食方面的消费水平很高，和国内一线城市相当。这家店主不但面做的好吃，而且他们带过来的家乡手工研磨泡的茶水特别香郁，口感清甜，回味无穷。</p><p>  我们按照攻略并且问着找到了一家修车的地方，可惜老师傅不在，在返回客栈的路上，碰巧看到了一家卖馒头的，我们几个买断了他们家所有的馒头。</p><p>  继续在客栈瞎侃，聊到了何队和小龙他们俩——</p><p>  “电话也打不通，你们觉得他俩今天能不能到？”</p><p>  “我觉得他们今晚要在海通兵站休整。”</p><p>  “嗯嗯，我也觉得他们今天到不了了，估计明天下午了，咱们在芒康休整一天吧，可能明天修车的师傅就在了。”</p><p>  这时，只听到“吱呀”一声，客栈大门被一个人拉开了，缓缓走进来的正是何队的身影，“吾与吾友皆愕然”，满大厅响起了掌声和赞扬的声音。</p><p>  听他说，早上出发到竹巴笼附近，前后胎全扎了，半路水喝完了，骑了几小时都没有碰到卖水的，还好路上遇到了小龙分给了他一半水，这件事到前几天小龙还在我们群里得瑟——</p><p>  “是不是我的半瓶水救了你一命？”</p><p><img src="/%E9%9A%8F%E7%AC%94/45536/image-14.jpg" alt></p><p>  没多久，小龙也出乎意料地今天也抵达了，说——</p><p>  “你们这群弱鸡，还搭车，这段路怎么不能骑？哪个瓜皮还说要骑两天，老子不是今天就到了吗？我在宗拉山顶还喝了罐啤酒，等了你们队长半个小时哟…”</p><p><img src="/%E9%9A%8F%E7%AC%94/45536/image-2.jpg" alt><br><img src="/%E9%9A%8F%E7%AC%94/45536/image-15.jpg" alt><br>宗拉山垭口的两位勇士</p><p>  在当天晚上，我想到了路上一位骑友的涂鸦，上面写道，“双腿在地狱，两眼在天堂”，他们两位那天用自己的行动印证了这十个字。在大部分人都选择了搭车进藏地情况下，他们俩还能执拗地坚持骑行向前，这种一往无前的精神难能可贵，姑且称他们俩为巴芒英雄。<strong>之所以视他们为英雄，有时候并不是因为他们完美无缺，而是因为透过他们，让我们看到了那自古以来永不磨灭的人性火焰</strong>。</p><p><img src="/%E9%9A%8F%E7%AC%94/45536/image-16.jpg" alt></p><p>西瓜哥芒康客栈留言</p><p>【上一篇：《<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/18933/">#青春万岁，追梦无罪#迟到的318川藏线Part14海子山:天外星球，千湖之山</a>》】</p><p>【未完待续：《<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/43883/">#青春万岁，追梦无罪#迟到的318川藏线Part16觉巴山：山巅相逢，夜路漫漫，历久弥坚</a>》】</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
            <tag> 318 </tag>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>#青春万岁，追梦无罪#迟到的318川藏线Part14海子山:天外星球，千湖之山</title>
      <link href="%E9%9A%8F%E7%AC%94/18933/"/>
      <url>%E9%9A%8F%E7%AC%94/18933/</url>
      
        <content type="html"><![CDATA[<p><strong>立风拙笔，知我罪我，一任诸公。</strong></p><blockquote><p>永远是这样，风后面是风，天空上面是天空，道路前面还是道路。</p><p>——题记</p></blockquote><p><img src="/%E9%9A%8F%E7%AC%94/18933/image.png" alt></p><p>图一：Day10行程</p><p>  晃晃悠悠，恍恍惚惚，据上一次更新已过了两个月了，这中间两个来月是几乎没有周末的，由于种种比较重要的事，几乎周末安排的都满满登登，八月十五中秋节还抽空去爬了四姑娘山海拔5355m的三峰，2019/09/17早上8：20左右成功登顶，小记一下。</p><p><img src="/%E9%9A%8F%E7%AC%94/18933/image-12.png" alt></p><p>图二：笔者登顶四姑娘山Ⅲ峰留念</p><p>  闲话要少说，立马入正题。<a href="https://blog.svenhetin.com/late318-part13/">前文</a>讲到我们在“双彩虹始，双彩虹止”的祥和氛围中到了禾泥乡，网络信号贼差，几乎就是2G的速度。</p><p>  我觉得这里有必要先说一下大家对海子山的误解——</p><p><img src="/%E9%9A%8F%E7%AC%94/18933/image-2.png" alt></p><p>图三：海子山区域</p><p>  海子山，虽名叫海子山，但是并不是一座孤立的山，而是如图三所示地一大片区域，要理解这么一个概念，我们得首先理解什么是“海子”？</p><blockquote><p>“海子”一词不是藏语，而是蒙古语，发音大概是“卓尔”，意思是“湖泊”，类似与藏语里的“措”。海子山是由无数的山头、山脊组成的一个广袤区域，这些山头、山脊的相对高度并不高，很多甚至只能算是丘陵，它们共同组成了一个海子山。海子山平均海拔4500米，最高峰果银日则海拔为5020米，共有1145个大小海子。其规模密度在我国是独一无二的，故名海子山。</p></blockquote><p>  网上众多“海子山”相关游记大多描述的“稻城海子山”，人言“蛮荒”二字，有人喜其蛮荒，久久驻足不愿离尘；有人恶其蛮荒，不愿稍作停留。而我们路过的318国道旁边的这个拥有姊妹湖的“巴塘海子山”与之相据大约一百公里左右，其最高峰是哈塞拉峰（又称：夏塞峰），海拔5833米，脚下就是广袤的毛娅大草原，与“蛮荒”无关，也与诗人海子无关。</p><h2 id="day10禾尼乡k3173h4000海子山k3207h4685德达乡k3230h3708巴塘k3323h2580-行程118km"><a class="markdownIt-Anchor" href="#day10禾尼乡k3173h4000海子山k3207h4685德达乡k3230h3708巴塘k3323h2580-行程118km"></a> DAY10:禾尼乡（K3173，H4000）——海子山（K3207，H4685）——德达乡（K3230，H3708）——巴塘（K3323，H2580）  行程118KM</h2><p>  今天的路况贼好，出门约摸者23km缓上坡到海子山脚下，再11km长上坡爬升到海拔为4685的海子山垭口，接下来就是连续越80km的长下坡，前50km全是纯下坡，后面30km偶尔有起伏路，全程约通过隧道6个，偶有无灯黑漆漆的隧道。</p><p>  即使今天是118km，在高原上着实算是很远了，但由于有80多公里的下坡路，大家完全是一种不慌不忙、不紧不慢地状态。早上准备出发的时候，何队的车胎发现没有气了，估计是昨天就扎胎了，露慢气，但是前几天队友刘斌扎胎，何队把自己的备胎贡献出去了，如今自己也扎胎了，我包里都是美嘴备胎，这时隔壁队的骑友拿出自己的备胎给他，但是尺寸不对，也就是说一个26寸，一个27.5寸；最后小龙拿出了自己地备胎给了何队（之后有故事），大家就陆陆续续出发了。</p><p><img src="/%E9%9A%8F%E7%AC%94/18933/image-6.png" alt></p><p>图四：海子山雄鹰展翅</p><p>  由于队伍里的修车装备都在我包里，我还是选择了最后出发，没错，出发的时候已经九点多了。过了没多久，就在海子山脚下遇到了小龙、长发男、铿铿三人下了车，正在向草原腹地走去，并向我们做了一个“shut up”的手势，好奇心驱使我们也停下来，静等着他们回来。没几分钟，我们就知道他们去干嘛去了，原来是悄咪咪地去拍下面这个胖嘟嘟的小可爱了——</p><p><img src="/%E9%9A%8F%E7%AC%94/18933/image-3-1.png" alt></p><p>图五：毛娅大草原的土拨鼠</p><p>  在我们稍作休整后准备再次出发时，忽然听到耳边传来小龙的声音——</p><p>  “MD,后胎扎了。前胎也TMD扎了。”</p><p>  没错，就是这个前面无私将自己备胎借给何队的小龙，平地一声雷，在看土拨鼠的时候，两个胎都扎了。那么只好补胎了，虽然耗了点时间，但是也暂时没有可用的备胎了，而主要负责补胎的恰好就是何队。他俩这一前一后地互助，也是318一路上值得笑侃、也值得铭记地一个小插曲。而在明天，他们俩将做一件更加勇敢地事，一件两个队伍只有两个人敢做的事。</p><p><img src="/%E9%9A%8F%E7%AC%94/18933/image-4.png" alt></p><p>图六：海子山脚下</p><p>  在爬坡的一个拐弯口前，大家准备就地解决午餐，于是齐刷刷地将车子停在路边。这时长发男建议大家把包里地吃的堆在一起，就地开个picnic party，这也许是大家第一次在一起吃午餐。就在这莽莽草原上，那时的我们还没出巴蜀，怎会知道谁将最终抵达终点？谁将离我们独行？是否还有机会再次盘腿而坐，笑谈人生的又一段旅程？在我们面前的只是未知，无尽的未知。</p><p><img src="/%E9%9A%8F%E7%AC%94/18933/image-5.png" alt></p><p>图七：海子山picnic party</p><p>  接下来的10km左右爬坡，“这是一个牛粪都带着草香味的地方”，大家互相加油打气，又互相喊着“牲口，你就是牲口”的调侃，在海子山的垭口前，我、风光、何队、刘斌、光明等盯着那远远的哈塞拉雪峰，祈祷云层可以再薄一点，再薄一点，好让我们看到他的真容，但并不是每一次的希望上天都会让我们实现，但只要我们在路上，一直在路上，我相信我们所清楚预见的,所热烈渴望的,所真诚追求的,都将自然而然地一个接一个地慢慢实现!</p><p><img src="/%E9%9A%8F%E7%AC%94/18933/image-7.png" alt></p><p>图八：海子山垭口</p><p>  就像图八里这样，鼻子晒黑了，不遮住，晒黑，汽车尾气，尘土；遮住，氧气不足。我们总得做出抉择，而我选择了不遮。开始下坡，没多久就到了观景台，雪山下的姊妹湖缓缓揭开她们地面纱，将自己地倾城容颜暴漏给这群糙汉子看，我脑海里蹦出的第一句话是“此景只应天上有”。在这高原上的两处澄澈洁净的姊妹湖，紧紧地依偎在一起，双湖并依，一张一翕之间，见证了多少亲情、爱情与友情在这里交融？又见证了多少闪光的梦想眼睛在这里聚合？聆听了多少情人的海誓山盟与少年的奋力呐喊？见证了多少人又故地重游，只愿找回那曾经的爱恨交织？我们无从知晓，也不必知晓，只愿山河无恙，漫看云卷云舒。</p><p><img src="/%E9%9A%8F%E7%AC%94/18933/image-10.png" alt></p><p>图九：海子山观景台</p><p><img src="/%E9%9A%8F%E7%AC%94/18933/image-9.png" alt></p><p>图十：姊妹湖上的我</p><p><img src="/%E9%9A%8F%E7%AC%94/18933/image-8.png" alt></p><p>图十一：姊妹湖近景</p><p>  当然，在“蛮荒”海子山，看到了姊妹湖，想起的可能并不是舒婷“与其在悬崖上展览千年 ，不如在爱人肩头痛哭一晚”；而是海子的《四姐妹》，我喜欢海子，也喜欢这首自杀前满蘸独世风华的完美而纯粹，饱含着绝望的呐喊，所以全文摘录——</p><blockquote><p>荒凉的山冈上站着四姐妹，<br>所有的风只向她们吹，<br>所有的日子都为她们破碎。<br>空气中的一棵麦子，<br>高举到我的头顶，<br>我身在这荒凉的山冈，<br>怀念我空空的房间，<br>落满灰尘。<br>我爱过的这糊涂的四姐妹啊！<br>光芒四射的四姐妹，<br>夜里我头枕卷册和神州。<br>想起蓝色远方的四姐妹，<br>我爱过的这糊涂的四姐妹啊！<br>像爱着我亲手写下的四首诗，<br>我的美丽的结伴而行的四姐妹，<br>比命运女神还要多出一个，<br>赶着美丽苍白的奶牛，<br>走向月亮形的山峰！<br>到了二月，<br>你是从哪里来的？<br>天上滚过春天的雷，<br>你是从哪里来的？<br>不和陌生人一起来，<br>不和运货马车一起来，<br>不和鸟群一起来，<br>四姐妹抱着这一棵，<br>一棵空气中的麦子。<br>抱着昨天的大雪，<br>今天的雨水。<br>明日的粮食与灰烬，<br>这是绝望的麦子，<br>请告诉四姐妹：<br>这是绝望的麦子，<br>永远是这样，<br>风后面是风，<br>天空上面是天空，<br>道路前面还是道路。</p></blockquote><p>  今天再往后，因为几乎都是下坡，速度很快，几乎无事可记。</p><p>  而明天的故事，是个关于两个勇士的故事，是关于十几个人决定自己将以什么样的姿态，初踏藏地的心理抉择。无关乎对错，弥见勇敢与坚毅。</p><p><img src="/%E9%9A%8F%E7%AC%94/18933/image-11.png" alt></p><p>图十二：继续前进</p><p>【上一篇：《<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/7903/">#青春万岁，追梦无罪#“迟到”的318川藏线Part13最高县城:我不会远走高飞，只到理塘转转便回</a>》】</p><p>【未完待续：《<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/45536/">青春万岁，追梦无罪#“迟到”的318川藏线Part15海通沟鬼门关:双腿在地狱，两眼在天堂</a>》】</p><h2 id="致谢"><a class="markdownIt-Anchor" href="#致谢"></a> 致谢</h2><p>《<a href="https://mp.weixin.qq.com/s?src=11&amp;timestamp=1569991074&amp;ver=1887&amp;signature=GyW0A7IzV-Q4lUW7CPlbLNXulpIIEe2P9mJWW2eXSZW4mIzAssxgKXNEO3U4gz8xOor-UxYKN09aUNDku2I*d7V7sPJC8T85MKfeJuGr2SekWaPxrduaeXCn3iDnyQxa&amp;new=1">海子山是个什么山？第一份海子山徒步穿越报告</a> 》</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
            <tag> 318 </tag>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浪骑318小队骑行川藏线一周年视频集锦纪念</title>
      <link href="%E9%9A%8F%E7%AC%94/3165/"/>
      <url>%E9%9A%8F%E7%AC%94/3165/</url>
      
        <content type="html"><![CDATA[<p><img src="/%E9%9A%8F%E7%AC%94/3165/----_20190814210305.jpg" alt></p><p>好快啊，满一周年了。</p><h2 id="一周年"><a class="markdownIt-Anchor" href="#一周年"></a> 一周年</h2><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/aYearLater318.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h2 id="珠穆朗玛峰"><a class="markdownIt-Anchor" href="#珠穆朗玛峰"></a> 珠穆朗玛峰</h2><h3 id="早晨"><a class="markdownIt-Anchor" href="#早晨"></a> 早晨</h3><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/zhufeng.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h3 id="到达前"><a class="markdownIt-Anchor" href="#到达前"></a> 到达前</h3><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/zhumulangmafeng.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h2 id="加乌拉山口"><a class="markdownIt-Anchor" href="#加乌拉山口"></a> 加乌拉山口</h2><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/jiawulashankou.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h2 id="5000km里程碑"><a class="markdownIt-Anchor" href="#5000km里程碑"></a> 5000KM里程碑</h2><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/k5000.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h2 id="羊卓雍错"><a class="markdownIt-Anchor" href="#羊卓雍错"></a> 羊卓雍错</h2><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/yangzhuoyongcuo.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h2 id="拉萨到珠峰"><a class="markdownIt-Anchor" href="#拉萨到珠峰"></a> 拉萨到珠峰</h2><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/lasadaozhufeng.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h2 id="布达拉宫day2"><a class="markdownIt-Anchor" href="#布达拉宫day2"></a> 布达拉宫Day2</h2><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/budalagong2.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h2 id="布达拉宫"><a class="markdownIt-Anchor" href="#布达拉宫"></a> 布达拉宫</h2><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/budalagong.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h2 id="中流砥柱"><a class="markdownIt-Anchor" href="#中流砥柱"></a> 中流砥柱</h2><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/gongbujiangda.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h2 id="八一"><a class="markdownIt-Anchor" href="#八一"></a> 八一</h2><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/bayi.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h2 id="林芝"><a class="markdownIt-Anchor" href="#林芝"></a> 林芝</h2><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/linzhicheng.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h2 id="波密"><a class="markdownIt-Anchor" href="#波密"></a> 波密</h2><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/bomi.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h2 id="波密朝拜"><a class="markdownIt-Anchor" href="#波密朝拜"></a> 波密朝拜</h2><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/bomiChaobai.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h2 id="然乌冰川"><a class="markdownIt-Anchor" href="#然乌冰川"></a> 然乌冰川</h2><h3 id="在路上"><a class="markdownIt-Anchor" href="#在路上"></a> 在路上</h3><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/ranwu.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h3 id="冰川上的呐喊"><a class="markdownIt-Anchor" href="#冰川上的呐喊"></a> 冰川上的呐喊</h3><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/bingchuan.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h2 id="八宿"><a class="markdownIt-Anchor" href="#八宿"></a> 八宿</h2><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/basu.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h2 id="怒江七十二拐"><a class="markdownIt-Anchor" href="#怒江七十二拐"></a> 怒江七十二拐</h2><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/qishierguai.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h2 id="左贡到邦达"><a class="markdownIt-Anchor" href="#左贡到邦达"></a> 左贡到邦达</h2><h3 id="在路上-2"><a class="markdownIt-Anchor" href="#在路上-2"></a> 在路上</h3><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/zuogongdaobangda.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h3 id="火车队形"><a class="markdownIt-Anchor" href="#火车队形"></a> 火车队形</h3><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/zuogong.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h2 id="海子山"><a class="markdownIt-Anchor" href="#海子山"></a> 海子山</h2><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/haizishan.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h2 id="理塘"><a class="markdownIt-Anchor" href="#理塘"></a> 理塘</h2><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/litang.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h2 id="卡子拉山"><a class="markdownIt-Anchor" href="#卡子拉山"></a> 卡子拉山</h2><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/xiangkezong.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h2 id="折多塘"><a class="markdownIt-Anchor" href="#折多塘"></a> 折多塘</h2><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/zheduotang.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h2 id="折多山冰雹"><a class="markdownIt-Anchor" href="#折多山冰雹"></a> 折多山冰雹</h2><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/zheduoshan.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h2 id="康定"><a class="markdownIt-Anchor" href="#康定"></a> 康定</h2><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/kangding.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h2 id="泸定"><a class="markdownIt-Anchor" href="#泸定"></a> 泸定</h2><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/luding.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h2 id="二郎山"><a class="markdownIt-Anchor" href="#二郎山"></a> 二郎山</h2><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/erlangshan.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h2 id="新沟"><a class="markdownIt-Anchor" href="#新沟"></a> 新沟</h2><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/xingou.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><h2 id="离别"><a class="markdownIt-Anchor" href="#离别"></a> 离别</h2><pre><code> 这段视频比较卡，可以在优酷这里((只不过有广告):[＃青春万岁，追梦无罪＃系列三之川藏线：送别，再拥抱你一次](https://v.youku.com/v_show/id_XMzg0NDc4NDA5Ng==.html?spm=a2h0k.11417342.soresults.dtitle)</code></pre><video src="浪骑318小队骑行川藏线一周年视频集锦纪念/libie.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
            <tag> 318 </tag>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>#青春万岁，追梦无罪#迟到的318川藏线Part13最高县城:我不会远走高飞，只到理塘转转便回</title>
      <link href="%E9%9A%8F%E7%AC%94/10665/"/>
      <url>%E9%9A%8F%E7%AC%94/10665/</url>
      
        <content type="html"><![CDATA[<p><strong>立风拙笔，知我罪我，一任诸公。</strong></p><blockquote><p>白鹤啊，请借我一双翅膀，我不会远走高飞，只到理塘转转便回。</p><p>——题记</p></blockquote><p><img src="/%E9%9A%8F%E7%AC%94/10665/image-27.png" alt></p><p>  理塘与仓央嘉措，似乎有一段段说不完、道不尽的段段往事与浪漫。然而，仓央嘉措不生于此，亦不葬于此，更不曾到过此地，而他在被康熙废黜后，前往漫漫京城路的最后一首绝笔诗，为何会提到理塘呢？</p><p>  有一种说法是，仓央嘉措在布达拉宫坐床前有一个青梅竹马的意中人，唤作“桑洁卓玛”，她的故乡就是毛娅大草原上世界最高的那座城市——理塘。她能歌善舞，纯洁善良，而又拥有百灵鸟般的嗓音，曾与仓央嘉措一起和唱着一首又一首草原牧歌，婉转悠扬。当仓央嘉措被认定为五世达赖的转世灵童被带走后，未曾来得及与桑洁卓玛告别，便被一行威武壮实的汉子秘密迎送走了，他在深宫里，面对幽幽酥油灯、沉沉佛经书，不断地回忆那个让他魂牵梦萦的姑娘，在一首诗种写道：<em>我与姑娘相会，山南门隅村里，鹦鹉知晓千情，千万不要泄密</em>。</p><p>  在文青的眼里，仓央嘉措是个情种。<strong>心若无恙，奈我其何？情种爱得热烈，但不专一。君子爱得专一，但不热烈。此事古难全。不过，偶尔有爱得专一的情种，却注定没有爱得热烈的君子</strong>。然而，故事再美好动人终究是故事，文青们不愿意听真话,因为真话太残酷了不好听，也是经不起考究的：康熙二十一年（1682年），在刚刚落成的布达拉宫里，五世达赖圆寂，桑杰嘉措出于政治目的，一面秘不发丧，欺瞒藏地僧众和康熙皇帝；一面四处找寻五世达赖的转世灵童。康熙二十四年（1685年），桑杰嘉措找到仓央嘉措，1683年出生的仓央嘉措才两岁啊，哪会有什么两小无猜呢？</p><p><img src="/%E9%9A%8F%E7%AC%94/10665/image-28.png" alt></p><p>图一：绛红色袈裟的喇嘛（仓央嘉措）</p><p>  另一种说法，个人觉得比较可信，理塘用藏语发音被称之为“勒通”，意思是说这个坝子（西南方言中对于山谷间的小平原的称呼），像是铜镜一样平整。理塘比拉萨的海拔还要高500m，在当时的藏地人心中，除了巍峨洁净的雪山，理塘就是那捉摸不定的世外仙境，类似于内地的桃花源，一生坎坷、受尽红教格鲁派繁文缛节的仓央嘉措，在幽暗的酥油灯前，对他而言，身前是越走越近的死寂京城，身后是越走越远的伤心之地，选择了这么一片幽密深远的土地寄托自己渴望自由，期望得到灵魂的救赎，也就变得情有可原了。就像他的一首小诗写道——</p><blockquote><p>一个人</p><p>需要隐藏多少秘密</p><p>才能巧妙地</p><p>度过一生</p><p>这佛光闪闪的高原</p><p>三步两步便是天堂</p><p>却仍有那么多人</p><p>因心事过重</p><p>而走不动</p></blockquote><p><img src="/%E9%9A%8F%E7%AC%94/10665/image-30.png" alt></p><p>图二：毛娅大草原的队友何队</p><p><img src="/%E9%9A%8F%E7%AC%94/10665/image-29.png" alt></p><p>图三：毛娅大草原的队友刘斌</p><p>  仓央嘉措圆寂后，人们不愿意承认拉藏汗推举的继承者，虔诚的人们遵循他的指引在理塘找到了七世达赖格桑嘉措，被认定为活佛的转世灵童。</p><h2 id="day9红龙乡k3082h4163理塘隧道k3132h4000理塘k3115h4014禾尼乡k3173h4000-行程91km"><a class="markdownIt-Anchor" href="#day9红龙乡k3082h4163理塘隧道k3132h4000理塘k3115h4014禾尼乡k3173h4000-行程91km"></a> DAY9:红龙乡（K3082，H4163）——理塘隧道（K3132，H4000）——理塘（K3115，H4014）——禾尼乡（K3173，H4000）  行程91KM</h2><p>  双彩虹始，双彩虹止；目力所及，皆是风景。</p><p><img src="/%E9%9A%8F%E7%AC%94/10665/image-31.png" alt></p><p>图四：红龙乡双彩虹</p><p>  因为今天的距离相对比较远，把攻略两天的路程合为了一天，也就是说没有在理塘休整，所以大家都早早起来了，从楼上顺着一个斜置的木板从楼上走到后院，就发现了双彩虹，大家欣喜地互相讲述着，还赖床的队友飞快地收拾起床，去看双彩虹。我看着彩虹的起点似乎是一座寺庙，就问当地人，彩虹的起点是哪里，他头也没抬的答道——崇禧寺。</p><p>  在这里，<strong>你从小见惯了神迹，也许就会自然而然地去相信</strong>。</p><p>  出发了，没有几百米，看到了成群结队地小学生，遇见我们一个接一个地喊“扎西得嘞”，我也微笑地重复一遍。没多久，天气阴沉沉地开始滴雨，对我们而言，倒是挺凉爽的，虽然到现在我仍然还在感冒。</p><p><img src="/%E9%9A%8F%E7%AC%94/10665/image-32.png" alt></p><p>图五：出红龙乡的第一个下坡</p><p>  路途相对比较平坦，爬坡七公里后就是16km的长下坡了，队友速度都很快，除了下坡速度比较快，有点冷，其他无恙，没多久就出了雅江县。</p><p><img src="/%E9%9A%8F%E7%AC%94/10665/image-33.png" alt></p><p>图六：雅江县理塘县交界处的雕塑</p><p>  这一部分简述，中午到了世界最高县城——理塘，好不容易到了一个县城，我们后面的几个准备饱餐一顿，大家一起吃了大盘鸡。</p><p><img src="/%E9%9A%8F%E7%AC%94/10665/image-34.png" alt></p><p>图七：理塘大盘鸡</p><p>  其实我是主张按照攻略在理塘休整一天的，一来到了县城天气不错，可以好好洗洗；二来县城里有药房，有不少骑友都在感冒，可以缓解一下；三来理塘南下就是红遍驴友圈的圣城稻丁，虽然路途遥远我们不会去，但总能在理塘看到点什么吧。然而，在整个路途上，不管是谁，只要有一个人主张继续前行，几乎就是我们最终的决定。</p><p>  眼镜框坏了，队友在休息，我就一个人先出发，地图搜索，偌大的一个县城，只有一个眼镜店，就在格萨尔王广场。你是千年的神话，你是万年的传说，你是千万年将不老不灭的神话传说。</p><p><img src="/%E9%9A%8F%E7%AC%94/10665/image-35.png" alt></p><p>图八：格萨尔王广场</p><blockquote><p>格萨尔王在藏族的传说里是神子推巴噶瓦的化身，一生戎马，扬善抑恶，宏扬佛法，传播文化，成为藏族人民引以为自豪的旷世英雄。</p></blockquote><p>  之后又去比较近的一个药房买感冒药，途中遇见了形形色色的游人、身着绛红袈裟的大小喇嘛，是有好久没有见这么多人了。妇女的头饰大同小异，都将头发编成若干小辫，三条黑布制成的顶套，罩在均匀地分为三部编成的发辫上。左右顶套的头侧，各缝有一个“银袍”，下面缝缀有三角形银饰，相传为格萨尔王妃子&quot;珠姆&quot;路经理塘时流传，妇女们发辫皆为块头大小若干条弧形披于背后，间用彩色丝线相连并以金银饰饼装饰，一直延续到今天。</p><p><img src="/%E9%9A%8F%E7%AC%94/10665/image-36.png" alt></p><p>图九：理塘发饰（图源网络，侵删）</p><p>  准备出城的时候，吹起了逆向的狂风，下起了大雨，只好在西城门穿上雨衣，等待头顶这块乌云飘过再行出发。</p><p><img src="/%E9%9A%8F%E7%AC%94/10665/image-40.png" alt></p><p>图十：理塘西城门</p><p>  往前几公里，看到了一辆吆喝卖水果的小货卡，不由得想起早先年少时，随着老爸在青海溜街窜巷叫卖水果的日子，似乎恍如昨日。</p><p><img src="/%E9%9A%8F%E7%AC%94/10665/image-42.png" alt></p><p>图十一：毛娅大草原的格桑花</p><p><img src="/%E9%9A%8F%E7%AC%94/10665/image-43.png" alt></p><p>图十二：毛娅大草原的绵羊</p><p><img src="/%E9%9A%8F%E7%AC%94/10665/image-44.png" alt></p><p>图十三：毛娅大草原的湿地景观</p><video src="https://www.guopengzhen.com/content/images/2019/08/maoyaGrasslands.mp4" controls="controls" width="100%">您的浏览器不支持 video 标签。</video><p>  再往前，就是少有人烟的美轮美奂的毛娅大草原，《中国地理》杂志曾将毛垭大草原评为中国最美的6大草原之一，无量河湿地公园又是毛垭大草原上最具代表性的景点。一路上，公路沿弯曲的无量河谷上行向西约30多公里，数十公里的草地、成群的牛羊和远处的蓝天白云、雪山构成了一副高原牧歌图。我们停在一处观景台，看着康巴汉子纵马远行，至无量河而反，默地想起驰名中外的理塘马术节，拾哈达、马上射击、马上射箭、镫里藏身、五彩凌空，哪怕只是看图片视频，依旧能感受到他们高超的马术技巧，颇有格萨尔王剽悍遗风，原来是从小就开始纵马驰骋的啊！</p><p><img src="/%E9%9A%8F%E7%AC%94/10665/image-45.png" alt></p><p>图十四：毛娅大草原的马匹</p><p>  不得不提的是同在观景台的一个藏地小孩，我要先说声抱歉，也是我至今仍抱愧于心的一件事。这个藏地小朋友刚刚骑马返回，在观景台上与我们打招呼，于是请求到——</p><p>  “大哥哥，我可不可以骑一下你们的车子？”</p><p>  我心头一震，想起了一个318的帖子上写过：一个小朋友请求骑一下自行车，然后那个骑友很放心地把车子给了他，结果这个小朋友一去不返，再也找不到了。</p><p>  说实话，我心里还是有一点抵触的，至少我不会把车给这个小朋友的，和另外一个骑友对了一下眼色不要同意，正准备跟他说什么年龄太小，车架子太高，你不适合之类的话搪塞过去。</p><p>  然而几乎同时，那小孩刚想推一队友的车，就被队友抢回来了，然后那小孩迅速骑上了何队的爱驹，只见他娴熟地纵身上车，由于车座过高，他只好站着，骑向理塘县城方向，一百米、两百米、三百米、四百米…此时我的心里的担忧不断加深，知道看到了他掉头转向的一刹那，我心里的石头才放了下来，心中的罪恶感和愧疚感袭扰了我的每一个细胞。</p><p>  今天我再说一声抱歉，是我的心不再纯洁了。</p><p><img src="/%E9%9A%8F%E7%AC%94/10665/image-46.png" alt></p><p>图十五：藏地小孩骑车</p><p><img src="/%E9%9A%8F%E7%AC%94/10665/image-47.png" alt></p><p>图十六：藏地小孩返还风光爱驹</p><p><img src="/%E9%9A%8F%E7%AC%94/10665/image-48.png" alt></p><p>图十七：藏地小孩</p><p>  后来何队在群里说：“当时我真的怕他摔下来，他没放脚撑，刚好又有个大货车过来，我都脑补了，藏族小孩骑我的车被货车撞了，然后我被藏民围攻。”</p><p>  向天空尽头望去，估摸着几个小时后倾盆大雨将至，然而，距离今天的终点还有56km，我们立马就再次出发了。</p><p>  一阵大风吹来，只听“咣当”一声，又听到一句川话“麻了个皮呦！”，眼睛顺着来声望去，只见小龙的头盔被狂风吹起，而后只坠在地，顿时散做两片，后来队友在群里开玩笑道,“全程唯一爆头盔的人，被风吹爆的！”</p><p><img src="/%E9%9A%8F%E7%AC%94/10665/image-56.png" alt></p><p>图十八：头盔爆头惨案</p><p>  右边蓝天，左边乌云密布，一个本地人说：“那边没人住，随便下；这边有人住，一般不下。”我觉得这个逻辑是反的，应该是这边雨水相对较少，人们才选择在这里居住，说句题外话，之前写过一句“<strong>左手深秋右手春，半边瑟瑟半边萋</strong>”，也是有异曲同工之妙。</p><p><img src="/%E9%9A%8F%E7%AC%94/10665/image-49.png" alt></p><p>图十九：无量河石碑</p><p><img src="/%E9%9A%8F%E7%AC%94/10665/image-50.png" alt></p><p>图二十：无量河爱驹</p><p><img src="/%E9%9A%8F%E7%AC%94/10665/image-39.png" alt></p><p>图二十一：蓝天乌云各一边</p><p>  最终，在天黑前赶到了毛娅温泉酒店，禾泥乡的网络哪怕有wifi，也差到无法上网，刷一个网页似乎只有2G的速度，只能接打电话。刚进房间没有半小时，滂沱大雨倾泻而下…</p><p>  此时张大哥已经在这里等我我们好久，听他说很遗憾今天是最后一天了，但是出于男人的尊严，脚踝和脚掌严重受伤、同时伴随着高反症状的他从理塘一路骑行到禾泥乡，中间没有下车，中间五六十公里，渴了单手开瓶饮水；有尿意了，不下车直接透过裤子尿在车杠上，算是三十多岁的他最后的倔强。</p><p>  之后我们就再也没有遇到他了。</p><p><img src="/%E9%9A%8F%E7%AC%94/10665/image-51.png" alt></p><p>图二十二：毛娅温泉酒店</p><p>  听说有温泉，隔壁队的队友们迫不及待地冲进去开始泡温泉——</p><p><img src="/%E9%9A%8F%E7%AC%94/10665/image-52.png" alt></p><p>图二十三：出卖色相的队友</p><p>  收拾妥当，待队友集结完毕，晚饭也做好了，老板娘为我们每一桌准备了十余个美味佳肴，最让我们惊讶的是，牛肉、猪肉这些翻越折多山后，平常贵的要命的伙食竟然是随便加，你没听错，吃完了继续加。所以当时我就跟她说，如果以后我写游记了，一定向骑友大力推荐你们家。</p><p><img src="/%E9%9A%8F%E7%AC%94/10665/image-53.png" alt></p><p>图二十四：毛娅温泉酒店的菜肴</p><p>  大家快吃完的时候，忽然听到外面有人喊“双彩虹”，众人扔下筷子就冲了出去。</p><p><img src="/%E9%9A%8F%E7%AC%94/10665/image-54.png" alt></p><p>图二十五：禾泥乡双彩虹</p><p>  大家在格桑花丛前驻足观赏，在彩虹的后面，就是另一座雪山，似乎又是另一个神迹。</p><p>  牦牛、脱缰野马、松鼠、土拨鼠、喜鹊、老鹰，好多可爱的动物……</p><p>  然而，路还要继续…</p><p><img src="/%E9%9A%8F%E7%AC%94/10665/image-55.png" alt></p><p>图二十六：前路漫漫之禾泥乡</p><p>【上一篇：《<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/37137/">#青春万岁，追梦无罪#“迟到”的318川藏线Part12彩云之上：天路十八弯，一日山外山</a>》】<br>【未完待续：《<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/18933/">#青春万岁，追梦无罪#“迟到”的318川藏线Part14海子山:天外星球，千湖之山</a>》】</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
            <tag> 318 </tag>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>#青春万岁，追梦无罪#迟到的318川藏线Part12彩云之上：天路十八弯，一日山外山</title>
      <link href="%E9%9A%8F%E7%AC%94/37137/"/>
      <url>%E9%9A%8F%E7%AC%94/37137/</url>
      
        <content type="html"><![CDATA[<p><strong>立风拙笔，知我罪我，一任诸公。</strong></p><blockquote><p>山脚下的你惊叹于山之雄奇壮伟，你总幻想着有朝一日能冲上云端，甚至在想：山的那边是什么呢？在海拔4000米以上连续骑行一整天的你，平视那座座顶峰，低头白云悠悠，抬首亦是白云悠悠，不断前行的你变成了别人朋友圈的英雄。</p><p>——题记</p></blockquote><p><img src="/%E9%9A%8F%E7%AC%94/37137/xkzdhlx.png" alt></p><p>  纯起伏路，真正的起伏路，平均海拔在4000米以上的连续起伏路。</p><p><img src="/%E9%9A%8F%E7%AC%94/37137/xkzdhlx2.png" alt></p><h2 id="day8相克宗k2999h3500剪子湾隧道k3015h4200135道班k3031卡子拉山k3059h4718雷达兵站k3065158道班k3070红龙乡k3082h4163-行程82km"><a class="markdownIt-Anchor" href="#day8相克宗k2999h3500剪子湾隧道k3015h4200135道班k3031卡子拉山k3059h4718雷达兵站k3065158道班k3070红龙乡k3082h4163-行程82km"></a> DAY8:相克宗（K2999，H3500）——剪子湾隧道（K3015，H4200）——135道班（K<strong>3031</strong>）——卡子拉山（K3059，H4718）——雷达兵站（K3065）——158道班（K3070）——红龙乡（K3082，H<strong>4163</strong>）  行程82KM</h2><p>  修整了一天之后，虽然感冒还没好，又断网断电下大雨，但是已经快适应了3000米以上的海拔，至少爬三层楼不会像以往那样气喘吁吁了。攻略上说：<strong>多备干粮！今天一定要早出发！卡子拉山有救援点！</strong></p><p>  于是，约莫着七点左右，大家早早起床了，早饭吃的什么已记不太清，估计就是馒头、榨菜、鸡蛋、粥之类的了，可别小看榨菜之类的功用，想当初民国时期的资本家尽管盘剥压榨着工人兄弟姐妹们，但是盐是不会少给的。出发前和各路骑友、自驾游的驴友合照一张，浩浩荡荡地大部队就此出发，两支队伍就今天合并一事达成共识，但哪支占主导地位，或者说谁吞并了谁并没有最终结论，由于当天是8月22日，此次事件被我戏称为“八二二共识”：一支队伍，一队各表。</p><p>  出发前阿妈千叮咛万嘱咐要小心，从天路十八弯上来之后，几乎都在4100m以上海拔骑行，坡度不陡，腿不累，就是氧气跟不上，骑不了多远就开始喘。</p><p><img src="/%E9%9A%8F%E7%AC%94/37137/xkz-1.jpg" alt></p><p>（两支队伍合并）</p><p>  起床早是早了点，但是小卖铺还没有正常营业啊，鼻子又不透气，纸巾又用的几乎没了，暂时还没有其他干粮补给储备，所以小卖铺如果不开门的话，我是难以上路的。于是乎，“咚咚咚～咚咚咚～”，大早上地使劲敲小卖铺的门，约莫着等了五六分钟，听到了屋子里面木质地板的脚步声，又过了五六分钟，老板娘睡眼惺忪地打开了玻璃窗的小口，问道：</p><p>  “你们要什么？”</p><p>  我们表达了歉意以后，各自置办了些水、干粮，我额外买了一包纸巾，后来果然两天就用完了。</p><p>  山上渐渐起了雾，顺着弯折的盘山公路望去，已然看不到三四折之后的路了，即使只是三四折，但就着偶尔的一些雾气缝隙，看着稀稀落落过往的卡车，已经对接下来的天路十八弯有了些许概念。</p><p><img src="/%E9%9A%8F%E7%AC%94/37137/tlsbw.jpg" alt></p><p>  爬坡的苦痛与折磨，前文已多次介绍过，从今以后的爬坡，除非难以忘怀，不再赘述，比如翻越超过5000米的东达山时，我和光明上气不接下气地百米一停，几十米一停，似乎已经到达了体力和心肺的极限。</p><p>  很快（自己体会），两个小时左右就爬过了10km左右，到达了剪子弯隧道前的观景台，欣赏来路的弯折与艰险。身处的这座剪子湾山是318线上著名的康巴地区最高峰之一，藏语为“惹玛那扎”，即汉语里的羊子山口，望着这像一个初学女工的小女孩随便拿着剪刀肆意剪出来的山路，不由得想起“新都桥”的汉语意思是羊安康，同样的道路艰险曲折，交通不便，在数百数千年前，一排排驮羊晃悠悠地负重前行，运送物料，时过境迁，驮羊变成了一辆辆卡车，可这触目惊心的几百米一弯几百米一弯的柏油马路，还是让过往的多数司机时刻绷紧了神经。</p><p><img src="/%E9%9A%8F%E7%AC%94/37137/jzws.jpg" alt></p><p>（原图，云海初成）</p><p><img src="/%E9%9A%8F%E7%AC%94/37137/tlsbw-1.jpg" alt></p><p>（原图，天路十八弯）</p><p><img src="/%E9%9A%8F%E7%AC%94/37137/tlsbw2.jpg" alt></p><p>（原图，云海苍茫）</p><p>  比之于二郎山和阿里山云海，多了些山野村夫、牧犬而归、闲云野鹤、鸡犬相闻的生活气象，这真是绵绵长飘三万尺，疑是银河将人间。身在山间云彩中，若苦吟派诗人贾岛见此景，“<strong>松下问童子，言师采药去。只在此山中，云深不知处。</strong><em>”；若“词中之龙”辛弃疾见此景，“</em><strong>好卷垂虹千丈，只放冰壶一色，云海路应迷。</strong><em>”；若东坡先生见此景，“</em><strong>古来云海茫茫，道山绛阙知何处。</strong><em>”。又或——</em></p><p>“<strong>云海渺空阔，咫尺是蓬山。</strong>”</p><p>“<strong>长看白日下芜城，又见孤云海上生。</strong>”</p><p>“<strong>与君远相知，不道云海深。</strong>”</p><p>  …</p><p>  何队不幸地在爬坡途中扎了胎，在补胎的过程中，一辆旅游大巴的游客鱼贯而出，五六十的老大爷跑过来，竖起了大拇指，说了句：</p><p>  “年轻小伙子就是好啊，我这样坐着旅游大巴上来都喘地不行，你们还能骑车上来，真是英雄啊！…我要是像你们这么年轻，也不一定敢骑车上来啊。”</p><p>  于是我们就和游客聊起天来了，一个大妈掏出手机说：</p><p>  “小伙子啊，胡子也不刮，不过你们这群小伙子们看着挺精神的啊。来来来，一起合个照，要发给我孙子看看你们这样的活法。”</p><p>  另一个大妈说：</p><p>  “加个微信吧！看着你们到布达拉宫，也会激励我的，这满满的都是正能量啊！”</p><p>  …</p><p>  之后，有几个游客要加我们微信，我掏出手机，打开微信，才发现没网，他们的导游又催促着他们赶紧离开，只得作罢，互相告别，未曾再见。</p><p><img src="/%E9%9A%8F%E7%AC%94/37137/tlsbwyk.jpg" alt></p><p>  在我准备呼唤车友准备出发的时候，才发现我还不知道一个队友的名字，想起他的头像是个小孩端坐在桌子前，面前一块西瓜，张口喊道——</p><p>  “西瓜哥，你叫什么名字啊？这都一起骑了八天了，还不知道你叫啥。”</p><p>  “崔志军，怎么了？”他也笑嘻嘻地答到。</p><p>  从此“西瓜哥”就成了他的一个绰号，也是从今天开始，凡是跑的快的，比如运动员、何队等，我们追上了都会压低嗓音，“牲口！牲口！跑这么快干嘛？简直牲口！”。开始互相开玩笑，开始互相起绰号，开始互相指责，就说明我们的关系在一天天地变的亲密。</p><p>  接下来的剪子湾隧道长2230m，没有灯！没有灯！没有灯！而且在隧道里见到了一个傻叉司机超车，弄的我也是一愣，怎么对面来了一辆车？不得不赶紧晃悠我的强光手电，同时刹车靠边，好不惊险！当晚我写下了下面这句话：<strong>弯道超车、隧道内超车的都是傻叉</strong>。</p><p>  翻过剪子湾山垭口，一片大“平原”，美不胜收，如梦如幻，似乎闭着眼睛都能拍出最美的照片。骑行在这天上人间，哼起了《向天再借五百年》的旋律——</p><blockquote><p>沿着江山起起伏伏温柔的曲线 　　<br>放马爱的中原爱的北国和江南 　　<br>面对冰刀雪剑风雨多情的陪伴 　　<br>珍惜苍天赐给我的金色的华年 　　<br>做人一地肝胆 　　<br>做人何惧艰险 　　<br>豪情不变年复一年</p></blockquote><p><img src="/%E9%9A%8F%E7%AC%94/37137/xkzhlxls.jpg" alt></p><p>  你所看到的山峰，个个都是海拔4000米以上，接着，又翻过了一座山——</p><p><img src="/%E9%9A%8F%E7%AC%94/37137/wmyk.jpg" alt></p><p>  下午一两点的样子，在康巴汉子村见到了一个小卖铺，赶忙冲了进去，不过看到店铺主人还是比较害怕的，因为他身材高大，体宽身胖，面相凶恶，双眼大睁，就像一些影视剧里的半路劫匪。除了买奶茶、泡面和火腿之类的，没敢和他说话。不过他怀里的那个小孩子着实比较可爱，我就问道：</p><p>  “大叔，您的孩子多大了？”</p><p>  “哈哈哈，这是我孙女，今年一岁了。”他用带着口音的汉语答道。</p><p>  通过聊天才发现，这是一个充满爱心的和蔼的老爷爷，小孩的父母常年在外谋生，孩子刚出生的时候比其他的孩子都要轻，三四斤的样子，体质一直很差，几个月的时候得了肠胃病，花了十几万才治好。家住山下十几公里以外的山村，村里没有网，但电是通了的，柏油马路还没修好，只是用推土机压平了的土路。这间木屋是他亲手搭建起来的，先在家里准备好材料，然后运过来，前前后后用了十几天的时间，希望弄点其他的活计。但是私开小卖铺也不是很好的干什，因为经常会有环保局、林业局、食品安全局等等的过来检查各项指标，如果发现过期产品、“牦牛肉”等，或者安全环保指标不达标，一律要求闭业。前面的牦牛肉之所以要加双引号，是这位老爷爷告诉我：</p><p>  “路上的风干牦牛肉都是假的，因为现在没到风干的季节，很多都是猪肉弄成的。”</p><p>  也和他聊起仓央嘉措，可能是因为发音的不同，他不太清楚说的是谁，恰好不远处的广告牌上“世界海拔最高县城——理塘”写着仓央嘉措，我掌心向上，四指微曲，指向广告牌，他忽然间明白了，眼里露出崇敬而又惋惜的神情，小声说了一句：“活佛啊”。</p><p>  又到了一个道班，一个观景台——</p><p><img src="/%E9%9A%8F%E7%AC%94/37137/gjter822.jpg" alt></p><p>  值得一提的是，在这里空中有一只老鹰一直在头顶盘旋，就这么一直跟着我们。休息的时候，它就在我们不远的上空盘旋；我们出发，他就跟着我们往前飞；不离不弃地跟了约莫着二十公里，直到起风了，它才姗姗飞去。不知在它的眼里，我们是它的食物，还是它要执意护卫的朋友。亦或是难道我们闯进了他的势力范围？</p><p><img src="/%E9%9A%8F%E7%AC%94/37137/hawk.jpg" alt></p><p>  牦牛是318的路霸，哪里都是他们的身影，晃晃悠悠，车来了立在原地不动，车过去了他们才走开。</p><p><img src="/%E9%9A%8F%E7%AC%94/37137/mn.jpg" alt></p><p><img src="/%E9%9A%8F%E7%AC%94/37137/hlxqdyzs.jpg" alt></p><p>  之所以没写今天的路如何，并不是很容易，而是经过前几天的历练，已经适应了一弯一弯又一弯的路况，总不能写某某骑友高反症状严重搭车走了吧（坏笑脸）?留下好的记忆，不好的记忆就随风而散吧。也就是这一天，我写下了：</p><p><strong>从此只要身体无恙，都是和自己的意志力在搏斗。</strong></p><p><img src="/%E9%9A%8F%E7%AC%94/37137/mnd.jpg" alt></p><p>【上一篇：《<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/13897/">#青春万岁，追梦无罪#“迟到”的318川藏线Part11相克宗的眼泪：大雨停电断网，绝望痛苦下的坚持</a>》】<br>【未完待续：《<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/10665/">#青春万岁，追梦无罪#“迟到”的318川藏线Part13最高县城理塘：请借我一双翅膀，我不会远走高飞</a>》】</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
            <tag> 318 </tag>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>#青春万岁，追梦无罪#迟到的318川藏线Part11相克宗的眼泪：大雨停电断网，绝望痛苦下的坚持</title>
      <link href="%E9%9A%8F%E7%AC%94/13897/"/>
      <url>%E9%9A%8F%E7%AC%94/13897/</url>
      
        <content type="html"><![CDATA[<p><strong>立风拙笔，知我罪我，一任诸公。</strong></p><blockquote><p>如果说我们是浪漫主义者，是不可救药的理想主义分子，我们想的都是不可能的事情。那么我们将一千零一次地回答：是的，我们就是这样的人。</p><p>——题记</p></blockquote><p><img src="/%E9%9A%8F%E7%AC%94/13897/xkz.jpg" alt></p><p>  从高尔寺山一冲而下，在雅江短暂修整，开始了接下来的17km艰难爬坡。</p><p>  按常情而言，我们早已接受了二郎山盘山公路的洗礼，体验康定爬折多山的陡坡，刚刚挑战完高尔寺山的连续上坡，这17km的纯上坡不过是小菜一碟罢了。可现实总会在你最得意洋洋的时候蓦地给你一巴掌，而今天的这一巴掌来自这17km的连续爬坡。</p><p>  等演习的军车从隧道口一辆辆驶出，我们的车轮也就开始转了，我瞄了一眼时间，下午16:30左右，在短短的隧道里就感受到了一点点上坡的压力，出了隧道，视线顺着公路望去，隐隐消失在两山之间，这种情景在康定遇到过，似乎一模一样。刚开始还能骑行一公里休息一次，后来变成了六七百米，再后来是一个拐弯休息一次，再最后只能推着走了。</p><p>  由于出发的时候有前有后，进了山里，过了一座桥，拐弯的时候就看到队友们在休息，我也停下了车。没多久，看到前面高尔寺垭口遇到的那个天津人，从后面慢慢上来了，他没有在这里休息，伸出大拇指，互相喊了一句“加油”，气喘吁吁地就上去了；几分钟过后，一个黑色骑行服的小伙子骑着旅行车，前后各一个驮包，低档快频率地驶过，他低着头，不看远处，只是盯着眼前的几米公路，也气喘吁吁地闷头上去了。</p><p>  我、风光和光明继续往前，走走停停，超过了大哥和他们队的小姐姐后，又是一排排军车从对面驶来，我在想：以往都喊这些当兵的为“哥哥”、“叔叔”，现在看来，似乎都是同龄人了，或者有些人还很年轻，十八九的样子，岁月催人老啊。正在我这么想着的时候，一辆军皮卡的司机摇下车窗，将左手伸出窗外，比了个大拇指，兴奋地喊“加油”，我与他互相会意，之后在便签里写下了：</p><p>  “相信他要么曾走过这段路，要么他还未出发。”</p><p><img src="/%E9%9A%8F%E7%AC%94/13897/xkz17km.jpg" alt></p><p>  我从折多塘开始的感冒咳嗽到现在还没好，不时停下来擦擦鼻涕。天渐渐觉得冷了，原来休息都是在躲避阳光的阴影处，现在休息都是在夕阳的余晖下，希望取取暖。在一个转弯前休息了一会再度出发，刚刚转过弯就发现何队竟然也在这边休息，前后不过100m，我们再度停下在这里休息。</p><p>  之后碰到了相克宗客栈的主人开着面包车驶过，询问我们是否需要搭车，我们四个都拒绝了。在四人的小队伍中，我时常落在最后，由于感冒鼻子不通气只好把魔术头巾扯下来，可是有汽车经过，由于上坡马力不足，排出大量未充分燃烧后的尾气后，我又用魔术头巾遮住了口鼻。每次追上他们休息的地方，虽然只是几百米，我都会比他们晚个两三分钟，为了分散注意力，我在心头反复默念仓央嘉措的一首小诗：</p><blockquote><p>这么多年</p><p>你一直在我心口幽居</p><p>我放下过天地，却从未放下过你</p><p>渐悟也好，顿悟也罢</p><p>世间事除了生死，哪一件不是闲事</p><p>我独坐须弥山巅</p><p>将万里浮云一眼看开</p></blockquote><p><img src="/%E9%9A%8F%E7%AC%94/13897/xkzybfq.jpeg" alt></p><p>  我的水已经喝光了，忘了是从哪个队友那里又倒了一杯水，没多久又喝光了，山风凛冽，有点瑟瑟发抖，大家摸着骑行包里，还有几个蛋黄派和几片辣条，分而食之。天快黑了，看到了“2994”的里程碑，心想还有五公里，现在心里想的，就是那个心心念念的“2999”里程碑。</p><p>  “2995，我们又走了一公里了。”</p><p>  “2996，在这多歇一会儿吧。”</p><p>  “2997了，我骑不动了，我要开始推了。”</p><p>  “我也骑不动了，要推了。”</p><p>  雨水开始滴落在脸庞，我们轮流打开手电继续前进，看到了攻略上的“2999”，但是还没有看到村落，估计还有几百米的路程，“有三座白塔，再向前走二三百米就到客栈”，于是我们开始寻找白塔，大晚上的下雨，哪里能看到远处的白塔？</p><p>  “看，前面有灯光，应该是村落了。”</p><p><img src="/%E9%9A%8F%E7%AC%94/13897/2999.jpg" alt></p><p>（我们到的时候天已经黑了，这个应该是队友拍的）</p><p>  走，又推又骑地在20:30左右到达了布珠居民三姐妹家。没多久，听闻雨水引发了泥石流，我们暗自庆幸自己速度还算快，躲过了这一自然灾害。</p><p>  收拾了片刻，开始了丰盛的晚餐，虽然这里也提供免费酥油茶，但是经过商业化的酥油茶已没有了折多山下来的那个康巴汉子家的酥油茶纯美香甜。吃饭的过程中，骑友时不时地拿这家的网红三公主开玩笑，也是在这个轻松愉快地氛围里，我们两个队伍的人慢慢熟络了，从此以后的十几天里，我们两支队伍结下了深厚的友谊。</p><p>  “你们队伍先走，明天我们留下来陪陪三公主。”</p><p>  “呦呦呦，你们走，三公主留给我们。”</p><p>  …</p><p>  在聊天的过程中，我们知道了在藏地很忌讳手指佛像，如果真要指向佛像，需掌心水平向上，四指向上微曲。吃完饭，由于洗澡的地方只有两个，准备明天再行洗澡，就躺在床上休息。听说有人在下面哭了，后面得知，是隔壁队的小姐姐在肖大哥的陪同下到了，这个时候已经晚上十点多了，抵达目的地后的她选择了让眼泪肆意流淌，趴在桌子上不断地抽泣，当时的我写下了，“相信走过这17km的人都会理解这个眼泪”。</p><p><img src="/%E9%9A%8F%E7%AC%94/13897/xkzsm.jpg" alt></p><p>  第二天，小姐姐扔下了在相克宗修整的队友，只身随着其他队伍出发了，大家似乎感受到了来自一个坚强女孩的无言鄙视。</p><p>  自此以后，我们路上再也没有见过这个小姐姐，只知道我们到了拉萨，她已经去了日喀则，我们到了日喀则，人家已经去纳木错之类的景点游玩去了。后来知道了她应该叫白亚楠，虽然由于我个人对纹身的偏见，对她的第一印象并不是太好，但是一路以来，在一些男骑友都会搭车的路上，她坚决推着也要到达目的地，在绝望痛苦中坚持，不曾言弃。再后来，听闻她再次收拾行囊出发，车轮正在新藏线的路上飞驰，在我前几天还在屋里打字回忆往事的时候，她在无人区的暴雨暴雪中消失了四天，在大家的焦心等待中，终于走出来了，我在这里对此时此刻仍奔驰在路上的你表示由衷的赞美！</p><p>  只愿你新藏线平安抵达，余生无憾，活出自己想要的生活！你的故事就是别人口中不断提起的故事。</p><p><img src="/%E9%9A%8F%E7%AC%94/13897/bynltjl.jpg" alt></p><p>  第二天大雨冲毁了通信基站，雅江被迫停电，之后网络信号紧接着消失了。本打算和三公主一起下山到雅江县买点感冒药，后来没来的及，她们早早就出发了，我只在一个十平见方的小卖铺里买了双雨鞋。所谓这一天的修整，衣服洗不了，还没网络，只能与队友们在一起唠嗑。于是就注意到了墙上的切·格瓦拉，和以往骑友的留言，不乏自嘲与无奈、诗和远方、隐隐地抱怨…自此以后，我们开始称呼对方“牲口”。摘录部分如下：</p><blockquote><p>哥是打车的，骑车的都是SB。<br>LZ脑残，二爷推上来的。<br>推车是门技术，我推车，我骄傲。<br>千万不要惹这家的三公主，不然你在这的日子会很难过的，哥已经吃过亏了。<br>我来过，但我木有带走妹子。<br>我们为了一个梦想，不辞辛苦的骑行川藏!只为了更好的活着。<br>哥昨天爬高尔寺崩溃了，下着大雨啊，有没有？下山的时候手都没了，不过哥还是会坚持下去，骑行没有目的地，路上才是我们的归宿。<br>昨晚春梦没有换内裤，就骑车走了。<br>当看到这句的时候，说明你没睡着，高反了。<br>曾在这里偷窥过隔壁的美女。<br>tmd，老子高反了，但是一样骑。<br>每一个特别的女孩，在男孩心中都会留下一个特别的记忆，每一个自认为特别的男孩在女孩心中只是一个普通的哥哥。<br>不知道这是为了啥，只知道坚持。<br>上坡用爬，下坡用滚，谁有哥牛？<br>当我跨过沉沦的一切，向着永恒开战的时候，你就是我的星旗。<br>能骑到这里的都是牲口。<br>川藏线很累，但是无悔。<br>每天给自己一个微笑，种下一天的阳光。<br>今天骑崩溃了。<br>被坑了，想不起来为何骑318，但是想继续骑下去，永不停息。<br>我的每一个飞机都是为你打的。<br>我一定要骑完这狗日的318!<br>你妈的骑行和徒步的都是屌丝。</p></blockquote><p><img src="/%E9%9A%8F%E7%AC%94/13897/qgwl.jpg" alt></p><p><img src="/%E9%9A%8F%E7%AC%94/13897/sgzhz-1.jpg" alt></p><p>【上一篇：《<strong><a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/13811/">#青春万岁，追梦无罪#“迟到”的318川藏线Part10两度分歧新都桥:错过的风景，是会再续的藏地情结</a></strong>》】<br>【未完待续：《<strong><a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/37137/">#青春万岁，追梦无罪#“迟到”的318川藏线Part12彩云之上：天路十八弯，一日山外山</a></strong>》】</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
            <tag> 318 </tag>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>#青春万岁，追梦无罪#迟到的318川藏线Part10两度分歧新都桥:错过的风景，是会再续的藏地情结</title>
      <link href="%E9%9A%8F%E7%AC%94/13811/"/>
      <url>%E9%9A%8F%E7%AC%94/13811/</url>
      
        <content type="html"><![CDATA[<p><strong>立风拙笔，知我罪我，一任诸公。</strong></p><blockquote><p>他们迎着冰雹飞速冲下，光影流转，胡杨参天，绿油油的山丘草浪一层一层推及开去，牧羊少女哼着《金色的花朵》，小桥流水与人家，却不见枯藤老树及昏鸦，玛尼堆边的转经筒依然转动不止，而你我不过只是这个小镇的匆匆过客。</p><p>——题记</p></blockquote><p><img src="/%E9%9A%8F%E7%AC%94/13811/xdqdxkz.png" alt></p><p>  前段时间一直忙活论文的事，318游记的事搁浅了三四个月了，骑友在群里嘲笑我道——“骑行一个月，游记写两年，回忆一辈子”，虽说是嘲弄的随口一说，但文艺青年认真起来，仔细琢磨这句话，还真是“别有一番滋味在心头”。</p><p>  新都桥镇位于四川省甘孜藏族自治州康定市境内，海拔3300米，又名东俄罗，约七八千常驻民，一个个小群体分散地聚居在方圆五百多平方公里的草原上。新都桥在“藏语”里的意思是“羊安康”，这就要从很久很久以前开始说起了，当时的古藏人发现，在藏地所及的所有泥土中，只有新都桥的最适于建造寺庙，人言蜀道难，当时新都桥的交通状况也是一言难尽，所以羊群就是翻山越岭运送圣洁泥土的最经济的交通工具，久而久之，后人将这些羊群经过的第一座桥唤作“新都桥”，以祈愿神灵福佑驮羊。据说，至今西藏各大寺庙中还难得地保留着驮羊的标本。</p><p>  新都桥素有“摄影天堂”之称，虽未在“犬牙交错”的政治意义上入藏，但实际上折多山后已然是藏地风情。那这个小镇为什么号称“摄影天堂”呢？原来这其实是一个“以讹传讹”的具体化，就好比尧舜禹或许本来是三个部落，在口口相传中却变成了一个个活了一百多岁的人。大家口中的“摄影天堂”并不是指新都桥镇，而是指包含川藏线南北分线岔路口在内的十公里区域，深秋时节，光影流转、芳草无垠，河流弯弯静静地穿过金色的柏杨林，散落的藏寨星星点点坠落在起伏的山峦间，静谧而祥和。</p><p><img src="/%E9%9A%8F%E7%AC%94/13811/xdq.jpg" alt></p><p>（拍不出来，图源网络，侵删）</p><p><img src="/%E9%9A%8F%E7%AC%94/13811/xdq2.jpg" alt></p><p>（图源网络，侵删）</p><h2 id="day6新都桥k2914h3300高尔寺山垭口k2973h4412相克宗k2999h3500-行程87km"><a class="markdownIt-Anchor" href="#day6新都桥k2914h3300高尔寺山垭口k2973h4412相克宗k2999h3500-行程87km"></a> DAY6:新都桥（K2914，H3300）——高尔寺山垭口（K2973，H4412）——相克宗（K2999，H3500）  行程87KM</h2><p>  <a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/15700/">前文</a>有写道，自昨天翻越折多山，我心里蹦出了八个字——“折多山后，大美人间”，等我和风光、光明三人从折多山下来，躲冰雹的间隙在康巴汉子家蹭了一顿饭后再度迎着烈日出发，骑行在行道树柏杨簇拥的柏油马路上，路两边是绿油油的草场，放眼望去，山峦的优美曲线渐渐与蓝天融为一体，抵达新都桥客栈，黄墙褐顶，朱漆大门，典型的藏寨建筑风格。最早到达的运动员等一行几乎都洗漱完毕，躺在大通铺的床上歇息,或者围在一起和陆续赶来的骑友侃大山，或者和摩友、纯徒者、自驾游的驴友吹牛皮，或者在院子里检查车子的状况，打气的打气，补胎的补胎，调刹车的调刹车…</p><p>  由于住处在三楼，洗澡的地方在一楼，人也超多，我排了队实在等不下去了，这也是在318的路上第一次没有洗澡。吃完饭，我们队吃完饭商讨的结果是：明天休整，一是避免爬升速度过快的高原反应，二是新都桥着实是个游玩拍照的好地方，“摄影天堂”嘛！</p><p>  “本来在折多塘就应该休整的，几乎所有的攻略都说这个地方是个休整适应高原反应的好地方，如果高反严重，可以折返康定的嘛。”</p><p>  “隔壁队的那个家伙说明天可以骑行半天，先到雅江，休整半天；然后后天在用半天爬坡17km到相克宗，再休整半天。我觉得建议不错。”</p><p>  “不是有好几个伙伴都感冒了吗？休整休整一天再走吧。”</p><p>  “感冒你一天两天的也好不了，迟早要出发的。”</p><p>  “昨天在折多塘不就是说需要休整的在折多塘休整，不需要休整的在新都桥休整吗？”</p><p>  “反正我要走，走不走看你们，实在不行相克宗再会和。”</p><p>  “好，大家自己决定吧，相克宗会和也成。”</p><p>  ······</p><p>  此时的大伙还处于巨大的分歧中，意见也是不大可能统一的。因为这是在一起的第六天，大家还不是特别熟悉，甚至队友的名字还不一定叫的起来，但是在这个大集体中，似乎刚开始的那一两天，大家已经按照体力、速度、计划、预算等三三两两的组成了小团伙，随时可以脱离这个集体，单独行动。</p><p>  晚些时候，在大家准备就寝的时候，一个蓬头藏地小伙子推门而入——</p><p>  “我是本地人，有明天准备出去逛一圈的吗？你们一般也就在这里修整一天，我自己有车，明天带你们去周围的贡嘎山、塔公草原、雅拉雪山、八美石林、居里寺等等，还能带你们一起去看明天的天葬，一起吃本地的藏餐，只要两百块钱，考虑一下？”</p><p>  “可以去色达吗？”有队友开玩笑的问道。</p><p>  “一天你早早出去，晚晚回来，稍作停留，最多打一个来回，不划算的。你们先考虑一下，明天早上我还会再过来的。”</p><p>  大家讨论着，虽然我没说什么，但是已经决定明天要跟他一起溜达去了。</p><p>  “对了，刚刚下面食堂的那个小姐姐好看不好看？”</p><p>  “你说的哪一个，在大狗旁边的那个是真美，另外一个一般般。”</p><p>  “额，我觉得大狗旁边那个还好，我说的是另一个。”</p><p>  “我也觉得大狗旁边的那个小姐姐漂亮，你是什么眼神？”</p><p>  “想什么呢？那个小姐姐是我的，我马上下去去加人家的微信。”</p><p>  “呵，一群屌丝，人家又不骑车，有本事你驮着人家走下半程啊。”</p><p>  …</p><p>  夜深了，耳边渐渐传来了队友的鼾声和梦呓…</p><p><img src="/%E9%9A%8F%E7%AC%94/13811/sd.jpeg" alt></p><p>（色达）</p><p>  脚边一直有东西在蠕动，毛茸茸的，睡眼朦胧的我把手有意识没意识地向那边摸去，一摸它还会动，着实把我吓得打了一个哆嗦，下意识地睁开了双眼，原来是一只猫咪在我旁边睡着了。好吧，看你是这么一只小可爱的情况下，原谅你了。</p><p><img src="/%E9%9A%8F%E7%AC%94/13811/xdqmm.jpeg" alt></p><p>  刚穿上衣服，坐在床边正准备穿鞋，另一个毛茸茸的家伙憨坐在床边，一副悠游自在，无辜可怜的样子，难道刚刚在我脚边摩擦摩擦的是它？我抚摸了他的头部，静坐了一会，才发现外面院子里现在闹哄哄的。我打开窗子，看到了已经有人骑车出发了，而且一个接一个。</p><p><img src="/%E9%9A%8F%E7%AC%94/13811/xdqxg.jpeg" alt></p><p>  “我走了啊！你们走不走随意，实在不行相克宗会和，在这边呆着干嘛。”</p><p>  “你们走吧，反正我不走，要修整，从长远考虑，万一你现在上去高反了咋办？”</p><p>  “反正已经感冒了，在这个小镇呆着也看不好。还不如去雅江县城买点药吃吃有效果。”</p><p>  “你还别说，昨晚我过来客栈老板看我感冒了，免费给我吃了特制的药，果然有效，现在感觉好多了。”</p><p>  “走不走随你们，我走了，今天中午到雅江休息半天。”运动员嘴里说着，就开始收拾东西了。</p><p>  现在大多数人似乎都陷入了纠结中。莎士比亚式究极疑问这时在许多人心中回荡——“Departure or not？”随着一辆辆自行车驶出客栈，大家的选择似乎慢慢地一致了。第二个人开始收拾东西，第三个人开始收拾东西，第四个，第五个…</p><p>  “看你们走不走，这边一个小镇呆着有啥意思？澡都洗不了。走，去县城里做个大保健。”</p><p>  “走吧，人多了好有个照应，修车工具和药总不可能分前后两拨吧，肯定不够的，走吧，晚一两天再修整。”</p><p>  “好吧，走吧，大家都走了。”</p><p>  …</p><p>  之后的骑行日子里，两个队伍越来越亲密，最终合成了一支队伍，说起了今天这件事——</p><p>  “当时我们队伍里好多人都不想走的，看到你们两个队伍走了，我们就出发了。”</p><p>  “哎，什么？我们本来是不准备走的，看到你们两支队伍都走了，我们才出发的。”</p><p>  这倒是一个有趣的心理现象。不一会儿，昨晚的藏地小哥再次敲门进来，发现我们已经准备出发了。</p><p>  “人家都在这里修整，你们这一批怎么不休息休息就走了，我们现在过去还能赶上天葬，有不走的吗？我们马上就出发了。”</p><p>  我走到小哥旁边，对他说：</p><p>  “我们已经准备走了，反正我以后有机会还要到色达的，到时候如果再次经过新都桥，你还在这里张罗，我会跟你溜达一圈的。</p><p><img src="/%E9%9A%8F%E7%AC%94/13811/xdqkz.jpeg" alt></p><p>  吃完馒头稀饭、鸡蛋榨菜，在争执犹豫中已经快十点了，这也是我们自第二站雅安开始自己驮运行李的第一天，队友们互相帮衬着，行李少的帮着行李多的队友多带点，即使为后来的一些矛盾分歧与不满埋下了一个伏笔。“我行李带的少本来就是准备节省体力的，我的精打细算凭什么要为你的粗犷买单？”</p><p>  看来初次自带行李，大家有诸多不适应，而我今天适应地比较快，爬高尔寺山时超过了一个又一个折多山上超过我的人，最终是我们队伍里第一个骑行到达垭口的人。虽然只有七公里的上坡，不过海拔提升了1100m，意味着每一公里爬升150多米，50层楼高，坡面仰角平均下来大约是10°，导致了我平均每两个弯要休息一次，补充水分。在爬坡了大约三四公里后，看到了客栈老板骑着他的公路车在我旁边经过，我对他伸出了大拇指，他微笑示意，大喊：“我一闲下来，就会骑行到垭口再下来。”没过多久，就看他再次从我身边飞掠而下，我盘算着应该距离垭口不远了，休息的时候回头看看队友们，在身后的第三四个弯处休息，追上我估计还需要三四十分钟，手机信号时有时无，不知道他们的情况，我就继续向前骑行，准备先到垭口探探情况。</p><p><img src="/%E9%9A%8F%E7%AC%94/13811/gess.jpeg" alt></p><p>  剩下的两三公里，骑行了将近一个小时，垭口除了一个交通管理局，门口一个卖泡面饮料的阿姨和她七八岁的儿子，几乎没有任何人了。我问她还有多少泡面，她示意到还有八桶，后面还有至少五个队友，应该不够了，但我不知道其他人会不会吃泡面，就跟阿姨打了声招呼说我和后面的队友一起买，这个时候被未曾见过的骑友买走了两桶。然后一个天津的骑行小哥上来，取出了自己的压缩饼干，买了瓶矿泉水开始吃，他是国企员工，请假准备二十三天单独一人骑行川藏线，所以今天他是要到相克宗的，如果走不完全程，准备到时间直接搭车去拉萨回天津。</p><p>  我往回走到转弯处，站在路边的石栏上等队友，大概等了二十多分钟看到了他们，大声喊道：</p><p>  “快了，我这里就是垭口！加油！”</p><p>  等最后两个队友上来已经过去大约一个小时了，加上我正好六个人，我们买断了阿姨的泡面，并且一人加了一两根香肠，就坐在马路牙子上开始了午饭。</p><p><img src="/%E9%9A%8F%E7%AC%94/13811/gesspm.jpeg" alt></p><p>  接下来的隧道长5682m，确实有点危险，也是我所担心的路段，前文多次提到，隧道太窄，仅容两辆卡车相向而行，根本没有非机动车道，所以在隧道里要前后看多次，来预估两辆车的可能交汇点，做出加速或者减速的动作。</p><p>  出了隧道，就是非常爽的43km长下坡直到雅江，因为我没被摔过，所以现在下坡速度放到了40多码，但也不敢再快了。因为速度比较快，除了长直坡还能抬眼看两下山间风物，走马观花，绝大部分时间根本无暇顾及左右风景，所有的注意力几乎都在路上，这样的速度，哪怕是一块小石头或者一个小坑，都是要摔车的，运气不好，摔倒山下或者下坡的车辆来不及减速，几乎就一命呜呼了。</p><p>  距离雅江还有二十几公里的地方，运动员说自己到雅江客栈了，等我们过来。我们在一公安检查点买了雪糕降温，没多久就到雅江了。看到大部队都在这里停着，原来是军事演习的军车一辆辆返回，目前雅江口的这个隧道只是单向行驶，我们只能等这一批次的军车过去。相克宗的三公主专门从相克宗赶到雅江过来接我们骑友去他们客栈入住，说是帮忙带行李上去，我们只要骑着空车和必备品上去就行了，从来没有骑友在雅江休息的说法。这时候，又爆发了第二波小分歧，住在雅江还是爬坡17km到相克宗再休息？</p><p>  等这一批军车过完，已经有人出发了，等后面的队友回来前，听说另一支队伍的骑友下坡时摔车了，手、膝盖磨损地出血了，整个腰部疼的受不了，只能在雅江修整了。我买了点小西红柿分享给大家吃，这时候时间还早，两点多的样子，但是原本计划是在雅江休息的，而且运动员已经在雅江客栈里了，不知道付过钱没有，这时候他的电话也不通了。在不断地讨论中，随着骑友渐渐地一个一个穿过隧道，似乎已经没必要再讨论了，大家和前面是一样的心理，何队决定去客栈把运动员拉出来。后来，何队在群里说，“事实上是应该在新都桥休整的，相克宗那个鸟地方，又没电又没网，天气又差，又没地方去。”</p><p>  当时决定出发的大家似乎都是下面的心理——</p><p>  “17km，一小时五六公里，三小时也爬完了吧。”</p><p>  后来，我们发现，还是低估了这个17km。</p><p><img src="/%E9%9A%8F%E7%AC%94/13811/wfgxdq.jpg" alt></p><p>【上一篇：《<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/15700/">#青春万岁，追梦无罪#“迟到”的318川藏线Part9天降冰雹:寒风暴雨中，谁的笑脸？</a>》】<br>【未完待续：《<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/13897/"><strong>#青春万岁，追梦无罪#“迟到”的318川藏线Part11相克宗的眼泪：大雨停电断网，绝望痛苦下的坚持</strong></a>》】</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
            <tag> 318 </tag>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>#青春万岁，追梦无罪#迟到的318川藏线Part9天降冰雹:寒风暴雨中，谁的笑脸？</title>
      <link href="%E9%9A%8F%E7%AC%94/15700/"/>
      <url>%E9%9A%8F%E7%AC%94/15700/</url>
      
        <content type="html"><![CDATA[<p><strong>立风拙笔，知我罪我，一任诸公。</strong></p><blockquote><p>那日的天很蓝，那日的云很白，那日的海拔很高，那日的氧含量很低，那日的太阳很烈，那日的屋檐很宽，那日的笑容很美，那日的冰雹滂沱，那日的人心很暖。可那日的青春呢？<br>——题记</p></blockquote><p><img src="/%E9%9A%8F%E7%AC%94/15700/zdtdxdq.png" alt="zdtdxdq"></p><p>  先说个题外话，最近对《流浪地球》的讨论很激烈，甚至到了水火不容的地步，对于强行分析其科学原理的观点，我在这里简单说说我的观点：从“科学”与“科幻”的定义出发，两者的区别是什么？区别在于两者使用的研究方法及研究设备。当代科学不一定是绝对的正确，只是对现行世界解释的比较好而已，或者说还没有出现明显的错误，在科学研究中，我们没办法对证据求全责备，也没有办法反复地验证，我们通常是从一点点可供研究的素材出发做逻辑判断，就是这些一点点的积累，竟然慢慢解释了这个世界。But，However，但是科幻小说或者说艺术作品不是这样，它每一个逻辑不需要完全验证，某一个逻辑的出现也许纯粹只是为了推动故事情节的发展服务的。如果没有把小说《流浪地球》拍成电影，或许是另外一种评价吧。</p><p><img src="/%E9%9A%8F%E7%AC%94/15700/lldq.jpg" alt></p><p>  好了，言归正传，前天看完了佟晟嘉导演的纪录片《大三儿》，我至少在出发前的他身上看到了出发前的自己，各种搜索准备锻炼，有人说去西藏旅行的目的是什么？《旅游学概论》的第一章所言“旅游的本质与基本属性”多了些文绉绉，少了些冲击内心的力量。有人说我是为了去净化心灵，有人说去西藏俗不可耐，在珠峰大本营，大三儿和佟晟嘉有一段对话发人深思——</p><p>  “大家来西藏都是净化心灵的，你净化了吗？”</p><p>  “我觉得我挺纯洁的啊。”</p><p>  “你凭啥说你心灵纯洁啊。”</p><p>  “我不祸害人。”</p><p>  从西藏回来后，大三儿依旧在工厂拿着拖把写着一个一个“Z”，似乎没有改变什么？但是又能指望真的改变什么吗？</p><p>  换句话说，如果你以净化心灵的目的出发，却留下了满地垃圾，你也许只是在朋友圈得到了净化吧？</p><p><img src="/%E9%9A%8F%E7%AC%94/15700/dse.jpg" alt></p><h2 id="day5折多塘k2858h3177折多山k2880h4298新都桥k2914h3300-行程56km"><a class="markdownIt-Anchor" href="#day5折多塘k2858h3177折多山k2880h4298新都桥k2914h3300-行程56km"></a> DAY5:折多塘（K2858，H3177）——折多山（K2880，H4298）——新都桥（K2914，H3300）  行程56KM</h2><p>  今天的56km不长，22km爬坡到海拔4298m的折多山垭口，18km爽下坡+16km平路到新都桥登巴客栈。为什么没有继续前行几十公里呢？看文首的图就明白了，新都桥是最低点，往前爬坡四十多公里才能到达高尔寺山隧道，中间没有可以留宿的地方，另外准备在新都桥休整一天，一来适应高原气候，二来在有“摄影天堂”之称的新都桥溜达溜达，顺便去实地了解一下天葬。可是准备与计划在这群渣渣面前显得特别无力，下一篇再谈。</p><p><img src="/%E9%9A%8F%E7%AC%94/15700/zdtzp.jpg" alt></p><p>  前面有写到，我把加绒的骑行服忘在了泸定的客栈里，所以即使是八月份的天，起床后（穿了保暖内衣）就给客栈老板伟哥打了电话，但是没人接听，这个时候大概七点多。我们收拾完，吃了碗客栈老板秦哥下的鸡蛋面，就出发了。</p><p>  讲一个小插曲，前一天傍晚我们队的何队和隔壁队公路车的长发男（这家伙前几天刚领了结婚证，恭喜恭喜）先到了客栈，与老板约定好两队人马都住在这里，第二天早上悄悄送给他俩一人一个鸡蛋。结果，长发男拿到了鸡蛋，何队没开得了口去问老板要一个鸡蛋。也许这个鸡蛋就是为什么长发男已经领到了结婚证，而何队还在寻寻觅觅佳人安在的原因吧。</p><p>  今天的他们速度都比较快，如果没记错， 风光、光明和我是走在我们最后面的三个人了。两个小时后，几乎走了上坡一半的路程（10km左右），有点蹬不动了，我们就在路边休息，恢复体力，这时候我第一次在318的路边看到了转经筒，不得不想起《藏地密码》中提到的藏族人民的大智慧，朗达玛灭佛之后，藏族人民丢失了太多惊为天人的技艺，而这水流驱动的转经筒，只是他们最普通的一种诵读的方式。藏族人民把“六字大明咒”经文（六字指唵ōng嘛ma呢nī叭bēi𠺗mēi吽 hōng，意为净除骄傲及我念、忌妒、贪欲、愚痴、悭吝、嗔恨）放在转经筒里，用手、水力、灯火热能每转动一次就相当于念颂经文一次，表示反复念诵着成百倍千倍的“六字大明咒”。当时我还想起了仓央嘉措，在朋友圈写下了“<strong>那一世，我转山转水转佛塔，不为修来世，只为途中与你相见</strong>。”</p><p><img src="/%E9%9A%8F%E7%AC%94/15700/zjt.jpg" alt></p><p>  就在转经筒近旁数堆大小不一的玛尼堆边休息的时候，又给伟哥打了一个电话，运气比较好，和他确认了骑行服确实在客栈，左右寻思解决方案，这时恰好一个摩友准备从客栈出发，毕竟他们一天可以走我们三五天的路程，而且他不准备在康定多做停留，伟哥就将我的联系方式和骑行服转交给他，但是忘记了留下他的联系方式。</p><p>  由于车多路窄，我们把自行车都停在了公路外面，不一会儿，只听见“咣当”一声，眼见风光的爱驹一下栽倒进了水沟里，骑行包上那个水呦，看的人心里发毛，不过他还是乐呵呵地扶起爱驹，开玩笑说道，“这车是不是想罢工，咱们直接回康定吧，买个票回去？”</p><p>  下一次长时间休息就是一两个小时之后了，这个时候，我的水喝的也差不多没了，恰好看到了一片工地旁有一排板房，顺着板房向前望去，最边边上的一家门口写着三个字——“小卖铺”，内心好不欢喜，终于可以正式地吃点东西了，不过也只是泡面而已。几乎彼此间不用商量，只需要说一句“我们进去吃点东西吧”，我们三个就齐刷刷地走过几十米的土路，进去了。</p><p>  刚进到房子里，拿起一桶泡面，两根火腿——</p><p>  “老奶奶，这个多少钱？”</p><p>  她伸出了双手比划，说了几句藏语，指了指旁边的热水壶，继续开始研磨她的纯手工酸奶。看着她笑眯眯的双眼，让在烈日中吹了几个小时寒风的我心里暖融融的，我才意识到她也许听得懂汉语，但是不会说罢了。吃完泡面，我问老奶奶：“能不能让我试着做一下这个酸奶？”她就把转轴交给了我，在一旁笑容可掬地看着我，可是我操作起来，感觉酸奶出的特别不均匀，我担心影响酸奶的品质，才几十秒我就交给了老奶奶。</p><p>  藏族纯手工的酸奶，多为牦牛奶，保质期只有一天，而且好不容易碰到了，当然要尝一尝。老奶奶为我们每人盛了一杯，又在每一杯里面加了一大勺白砂糖，我迫不及待地开始品尝——</p><p>  这奶皮之下的酸奶就像豆腐脑一样洁白如脂，芳香扑鼻，挖一勺入口，一股浓厚的奶香味立刻溢满喉间，“先是丝丝滑滑、软嫩黏稠，入喉清凉微酸，酸中略微一点甜，十分可口宜人”。骗子，都是骗子，第一口我咋觉得酸的难以下咽呢？直到喝到了最后，才体会到了酸中带甜的丝滑口感。</p><p><img src="/%E9%9A%8F%E7%AC%94/15700/zdstbz.jpg" alt></p><p>  在我们又买了一杯热奶茶休息的时候，我看到了窗外一个背包的徒步小哥，他瞅了瞅我们路边的车子，又往这边瞅了瞅，然后径直走了进来。简单交谈后，了解到——</p><p>  他准备徒步前往拉萨，身后的背包四五十斤，包括帐篷、睡袋、锅、碗等，还有预防野狗等野兽的工具武器，每天走到哪里就在哪里搭帐篷，偶尔去客栈住一晚洗澡充电之类。有时候无聊的时候干什么呢？拿出自己的MP3，在荒郊野岭听一听同类的声音。</p><p>  每个人都在以自己的方式来丈量世界，有些人靠自己的脚步，有人借助于外物，还有些人是凭自己的那张嘴。总之，祝你好运！</p><p><img src="/%E9%9A%8F%E7%AC%94/15700/ydyyd.jpg" alt></p><p>  这个时候，听说运动员早已翻过了折多山垭口，在据目的地10km的地方扎胎，由于修车工具、备胎都在我这里，而我们距离到达垭口还得至少一个小时，他也很无奈，记得是隔壁队的追上他的时候，他躺在地上，双眼迷糊着，嘴里嘟囔着“不行了，不行了，我要崩溃了！我要回家！”后面才知道，这段视频是摆拍。隔壁队的伙伴帮他换了胎。</p><p>  没多久，接到了摩友的电话——</p><p>  “今天早上客栈老板让我把衣服带给你，我快到折多山了，你们现在到哪里了？”</p><p>  “我们还有三四公里就到垭口了，不好意思，刚刚应该是手机没有信号。”</p><p>  “我等会就到，你们等会。”</p><p>  “嗯嗯，不急，路况比较危险，你们速度慢点，我们三个人一起，我穿着红黑相间的衣服，一个队友蓝色衣服，一个黑色的衣服。谢谢，麻烦你了。”</p><p>  这时候，我翻看手机，才发现他之前打了两三个电话。我们匆匆碰面了之后，我问：</p><p>  “大哥，哪里人？”</p><p>  “四川自贡。”</p><p><img src="/%E9%9A%8F%E7%AC%94/15700/ygmlx.jpg" alt></p><p>  在折多山最后的几拐处，海拔提升到了4000米以上，我们仨走走停停，在一个网传有近路的分岔口，何队已经提前走过了这段路，建议我们千万别走这条路，虽然路程近了不少，但是大多是坑坑洼洼的石子土路，大多数情况下只能推，我们见到了一个骑山地车的老爷爷，六十来岁，交流之后了解到——</p><p>  他与两三个花甲挚友临时起意骑行318川藏线，按他们的说法是能到哪就是哪，看今天的状况，再综合预计的时间，估计最多到雅江就准备回去了。</p><p>  就是在路上遇到的一个个有趣的灵魂，才让我们的路途显得格外有魅力，人生就像一辆有始有终的公交车，走走停停，人上人下，走过的是时间，留下的是故事。就像那句广告语所说，“人生就像一场旅行，不必在乎目的地，在乎的是沿途的风景，以及看风景的心情。”</p><p><img src="/%E9%9A%8F%E7%AC%94/15700/318zdslb.jpg" alt></p><p>  我们转过了两个弯之后，一起车祸发生了，我们到的时候，众人正在把面包车司机从车里架出来，他似乎已经失去了直觉，面无表情，颤巍巍地抖动着双唇，双眼已经失去了光芒，头上的血不停地向外渗出来，看到满地的西瓜，不禁想到了这么一幕：他规规矩矩地开着车，在转弯时没有减速，对面一辆车在拐弯的时候加速超车，占了他的车道，此时两边都躲闪不及，“砰”地一声，两车相撞，后座满满的西瓜一个个击向了挡风玻璃和他的后脑勺······愿你无恙，早日康复！</p><p><img src="/%E9%9A%8F%E7%AC%94/15700/mn.jpg" alt></p><p>  有“康巴第一关”之称的折多山垭口到了，“折多”在藏语里是“弯多”的意思，饱含艰辛之意，弯弯曲曲的山路，不仅代表折多山，也象征着318国道建设的艰辛历程。站在垭口观景台上，时不时有本地的藏民驱车路过，洒下“龙达（long da，我不知道怎么写，应该是这两个字）”祈福，上面的图案一般有五种：虎居森林象征五行中的木或风；狮独霸于高山象征土；鹏则独占天空象征火；龙深居大海象征水；风无处不在、遍及一切则象征虚空。藏族人尽量不踩踏龙达，万一无意中踩到也无妨，因为上面并没有菩萨经文。飘洒的龙达与山巅代表土、水、火、风、天的五色经幡遥相呼应，即使仅仅是路过，也会对宗教产生一种莫名的景仰。呼吸着高岗的空气，双眼扫过一遍又一遍，然后闭上双眼，Just enjoy it！</p><p><img src="/%E9%9A%8F%E7%AC%94/15700/jft.jpg" alt></p><p><img src="/%E9%9A%8F%E7%AC%94/15700/xczd.jpg" alt></p><p><img src="/%E9%9A%8F%E7%AC%94/15700/zdsnt.jpg" alt></p><p><img src="/%E9%9A%8F%E7%AC%94/15700/zdstk.jpg" alt></p><p><img src="/%E9%9A%8F%E7%AC%94/15700/zdsjf.jpg" alt></p><p>  你看这天，像一会儿就狂风肃肃起，乌云密布，冰雹骤降的样子吗？欣赏完美景，我们开始下坡，还没看够眼前美景，就迎来了恶劣的天气。</p><p>  眼见着前面电闪雷鸣，本来只是觉得下雨，提前穿上了雨衣，可到了那朵乌云下，当一个个冰雹砸在身上才发现大事不妙，眼见着冰雹四处乱弹，可我们也没办法，在这种地方下冰雹，你是想躲都没地方躲的。只好加速、加速、再加速······</p><p>  好不容易碰到了一排民屋，不管有人没人，直接冲到一家屋檐下暂避一会，在我们聊天的时候，忽然听到了身后一句小孩子的声音——“扎西德勒”，我们回应了一句“扎西得勒”，于是这个小孩就过来帮我们开门，让我们到里面休息休息。进了屋，满眼跳跃的红色装饰，坐在炉边的那个魁梧粗犷的康巴汉子估计就是一家之主了，他们帮我们斟满了刚刚烧好准备饮用的酥油茶，咸咸的、醇香可口，我止不住喝了三大杯，以后再也没有喝过这么纯粹而又原汁原味的酥油茶。后面让他们帮我们炒了四个菜，“有什么炒什么就行了”，我盛了两大碗米饭，算是解决了一天的伙食。</p><p><img src="/%E9%9A%8F%E7%AC%94/15700/zdshz.jpg" alt></p><p>  这家人的淳朴善良不再细说，给我留下最深印象的莫过于这两个孩子，你只是看他们的眼睛，哪怕什么也不说，心里扑通扑通的心跳就已经出卖了你。这样的孩子在藏区有很多很多，哪怕只是遇见一个，你心里的疲惫就会烟消云散。</p><p>  等冰雹变成了雨，雨又小了些，我们继续出发，看到下面这个和谐的画面，我的脑海里浮现了八个字，“折多山后，大美人间”。</p><p>  三四天后听说，折多山下雪了······</p><p><img src="/%E9%9A%8F%E7%AC%94/15700/zdsh.jpg" alt></p><p>【上一篇：《<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/19875/">#青春万岁，追梦无罪#“迟到”的318川藏线Part8西出折多：给你一次机会，你退不退？</a>》】<br>【未完待续：《 <a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/13811/">#青春万岁，追梦无罪#“迟到”的318川藏线Part10两度分歧新都桥:错过的风景，是会再续的藏地情结</a>》】</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
            <tag> 318 </tag>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>#青春万岁，追梦无罪#迟到的318川藏线Part8西出折多：给你一次机会，你退不退？</title>
      <link href="%E9%9A%8F%E7%AC%94/19875/"/>
      <url>%E9%9A%8F%E7%AC%94/19875/</url>
      
        <content type="html"><![CDATA[<p><strong>立风拙笔，知我罪我，一任诸公。</strong></p>  <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="20" src="//music.163.com/outchain/player?type=2&id=200283&auto=0&height=12"></iframe><blockquote><p>康定情歌城，谁的康定谁的情歌谁的城？<br>——题记</p></blockquote><p><img src="/%E9%9A%8F%E7%AC%94/19875/318mappart8.jpg" alt="318mappart8"></p><p>  如果你问我：“川藏线上你第一次感到疲惫时什么时候？”<br>  我会毫不犹豫的回答：“傍晚康定出来，爬折多山的时候。”<br>  哪怕到今天，我对那天的坡也仍然记忆犹新。</p><h2 id="day4泸定k2792h1300瓦斯沟k2819康定k2843-h2560折多塘k2858h3177-行程69km"><a class="markdownIt-Anchor" href="#day4泸定k2792h1300瓦斯沟k2819康定k2843-h2560折多塘k2858h3177-行程69km"></a> DAY4:泸定（K2792,H1300）——瓦斯沟（K2819）——康定（K2843， H2560）——折多塘（K2858，H3177）  行程69KM</h2><p><img src="/%E9%9A%8F%E7%AC%94/19875/qs818.jpg" alt="qs818"></p><p>  仔细回想了一下，我们的早餐只是馒头、稀饭、榨菜、鸡蛋，最最开始的地方应该就是在泸定。埋一个伏笔：昨天洗完衣服，放在了客厅晾晒，早上出发只拿走了鞋子，一套骑行服忘在了泸定。</p><p>  69km听着也没多远嘛，我给你说说路况：4km到泸定隧道，21km大起伏路到瓦斯沟，8km上坡到日地，9km上坡到小天都隧道，继续9km上坡到康定，5km出康定城，继续14km到折多塘。（备注：体力一般的可在康定休息，体力好的可在康定稍作休息继续出发折多塘）</p><p>  没错，几乎全程上坡，而我们面前的这座山就是4298米的康巴第一关——折多山，69km海拔累计提升约1900m，什么概念？每一公里爬升约30米，每一百米爬升3米，相当于每一百米上一层楼，连续上到630层楼的高度。不少人会把今天的路程拆分为两天，即50km到康定，19km到折多塘，各有各的好处，拆为两天一方面可以渐渐适应提升的海拔（3000m是高反的临界点），另一方面有充足的时间在康定停停看看。</p><p><img src="/%E9%9A%8F%E7%AC%94/19875/kd.jpg" alt="kd"></p><p>  刚进泸定县城，队友们需要补充一些骑行装备，就是雨披、鞋套、梁包之类，另外风光前面爬坡伤到了膝盖，他没打算休整几天恢复了再走，需要购置护膝，但这里可选的护膝实在太少，接触接触面积小到无法使用，而且死贵。说到膝盖，不由想起前面提到的我和扬威在高雄的半马，全程是先爬上再下山，我的膝盖在下山的时候速度太快伤到了，最后蹦蹦跳跳地到达了终点。有时候，坚持或放弃在我们眼里始终是一个两难选择，放弃对我们而言很容易，而且理由充足，鄙人陋见：只要坚持的风险可控，只要你能接受最差最差的那一种状况，坚持显然是最最明智的；反之，莫要犹豫，弃之。</p><p><img src="/%E9%9A%8F%E7%AC%94/19875/lb818.jpg" alt="lb818"></p><p>  购置装备时，看到了另一个网红：318侠客行的创始人猴哥的坐骑，偷偷地体验了一把猴哥的感觉，后来他说，我在楼上看到你们拿我的装备了。</p><p><img src="/%E9%9A%8F%E7%AC%94/19875/ldhg.jpg" alt="ldhg"></p><p>  安迪·安德鲁在《上的天堂，下得地狱》中说，“人的一生中，至少要有两次冲动，一次为奋不顾身的爱情，一次为说走就走的旅行。”而对猴哥而言，说走就走的旅行，不只是这一次，据说16年他骑着两匹马走了滇藏线，没错，是两匹马，估计一个负重，一个负他。前前后后骑行川藏不知几次了，而目的地不一定是拉萨，能到哪里，全听凭内心深处的召唤，你要是说他热爱于斯吧，他却说地云淡风轻：<br>“我就是无聊才出来的。为什么这身打扮？好玩嘛。”</p><p><img src="/%E9%9A%8F%E7%AC%94/19875/318hg.jpg" alt="318hg"></p><p>  而与他真正的交谈已经是半个月之后在林芝客栈遇到的事了，那个时候由于他在折多山上遇到了一条野狗，喂食了之后一直跟着他，下坡的时候速度很快，就把它抛在后面了，那天下大雨，而后是冰雹，不明就里的网友在骂他：“怎么忍心把那么可爱的小狗狗抛弃了？”实在扛不住网络舆论的他逆坡而返，没有找到那条野狗，网友骂声愈烈，却不知他已经因为淋雨而感冒了，在高原上感冒意味着什么？很容易转化为肺水肿，然后…还好，他坚持到了林芝，而后折返了，我也知道，这不是他最后的一次川藏线骑行，如果有幸你也读到了这篇文章，请收下我的问候。有时候，我们站在网络的道德高地上，破口大骂，啾啾其理，置其他人安危于不顾，而我们，真的知道自己与这个世界的关系吗？如罗胖在今年跨年演讲所说——<br>  “感觉世界和真实世界，这中间有道鸿沟，而且还有两种力量在把这个鸿沟越拉越大。<br>  在鸿沟这边有好多人，我们的亲妈、男朋友或女朋友、商店里的导购，还有美颜相机，他们总是夸我们，长得真好看。这使我们离真相越来越远。<br>  这条鸿沟的另外一边呢？其实真相自己，也在往后退，退得离我们越来越远。”</p><p><img src="/%E9%9A%8F%E7%AC%94/19875/ldddh.jpg" alt="ldddh"></p><p>  出了泸定隧道，就看到了昨天在泸定桥上碰到的那个姑娘，她把手机固定在板车上，与早起的网友手舞足蹈地谈着她所看到的世界，她提到的那个同行的男伙伴推着板车，步履铿锵而坚定。我向他们竖起了大拇指，喊了一声：“加油”，可能是因为我用魔术头巾遮住了脸，她愣了一下，然后竖起了大拇指，喊了一声：“加油”。在川藏线上，竖起大拇指，“加油加油”，是所有318骑友、摩友、徒步者交流最频繁的手势，在擦肩的一刹那之前，君不识吾，吾不识君，我们的世界互不打扰；一刹那之后，吾仍不识君，君仍不识吾，但我们成了彼此记忆里的那个过客，在各自的生命里留下了彼此的印记。</p><p>  我们顺着大渡河而上，看着右手边的大渡河，虽无冰凌齐放、万排齐发向东的气势，但“哗哗”的流速，也一眼可见所爬坡的斜率是如何如何难行了。</p><p><img src="/%E9%9A%8F%E7%AC%94/19875/rd.jpg" alt="rd"></p><p>  到达日地，这个名字起的随随便便，但是我不知道什么意思，只知道“那日”是“黑蛋，黑黝黝的”，“郭日”是“圆头”，“岗日”是“雪山”…烈日当空，酷暑难耐，喝了多少瓶水已经记不清了，只知道一看到小卖铺就冲进去买一瓶水，等着饭菜的时候，拿着老板从山顶引来的泉水冲洗了魔术头巾、头盔、手套、毛巾等等降温。</p><p>  在这个小村子，记忆最深刻的不是这顿饭，也不是吃过饭后遇到的骑着旅行车的两个白人，而是两个手持牵牛花的两个孩子，虽是匆匆一瞥，但一想起他俩笑盈盈的面庞，可爱而稚嫩的一句“扎西德勒”，让疲惫的我的心几乎都要融化了，你们能想到那种感觉吗？当时的我想到了乐樽和尚：<br>  “公元366年，一个和尚来到敦煌。他叫乐樽，戒行清虚，执心恬静，手持一支锡杖，云游四野。到此已是傍晚时分，他想找个地方栖宿。正在峰头四顾，突然看到奇景；三危山金光灿烂，烈烈扬扬，像有千佛在跃动。乐樽和尚怔怔地站着，他有所憬悟，把锡杖插在地上，庄重地跪下身来，朗声发愿，从今要广为化缘，在这里筑窟造像，使它真正成为圣地。”</p><p><img src="/%E9%9A%8F%E7%AC%94/19875/qnh.jpg" alt="qnh"></p><p>  再往后，匆匆一瞥康定，到达已经四点多了，距离折多塘还有19km，未敢多驻留太久，所以8月16日开幕的康定情歌节，在我们眼里，或许是个遗憾吧。<br><img src="/%E9%9A%8F%E7%AC%94/19875/kangding1.jpg" alt="kangding1"></p><p><img src="/%E9%9A%8F%E7%AC%94/19875/kangding2.jpg" alt="kangding2"></p><p><img src="/%E9%9A%8F%E7%AC%94/19875/kangding3.jpg" alt="kangding3"></p><p>  康定，专门有一个负责打包邮寄自行车的站点，可见在这个自行车不盛行的城市，有多少人曾止步于此。还未出城，就感到了陡升的坡度，一开始还能2x2，1x3或者1x2的配速往前骑，后来只好半推半骑，到最后不得不推着，318左边的峡谷对面是一座雪山，但是由于云彩较为厚实，完全遮挡住了那似有若无的雪山顶，最终我屈服了这段破坡的淫威，19km，时速四五码，就意味着不得不用四五个小时爬坡，还要开始面对这难行的夜路，正所谓“弱者认命，强者抗命”，“知天易，逆天难”者也。哪怕推车前行，刚出城遇到的一些本地同胞也会为我们加油打气，并送上“扎西德勒”的祝福，而就在此时，何队踩着1x1的高频率从我们身边超了过去，据他后面说，这19km中间几乎都没有休息，佩服佩服。由于折多塘民宿包早晚餐（不包的话估计也没地方吃早晚餐），五点多在一个小卖铺吃了点牛肉片，喝了瓶酸奶，略微填了填肚子，我和刘斌就这么往上骑着推着。一个多小时后，从康定晚出发的风光和光明也跟过来了，看到他们的神态，我觉得他们也是有点筋疲力尽了。就这样，我们一边骂骂咧咧，一边互相打气，向前挪移着，当然，看到美景还是要拍照的：</p><p><img src="/%E9%9A%8F%E7%AC%94/19875/gpzkd.jpg" alt="gpzkd"></p><p><img src="/%E9%9A%8F%E7%AC%94/19875/lbkd.jpg" alt="lbkd"></p><p>  等等，不是说美景吗，怎么出来两条糙汉子？这就不得不用初中我说过的七个字来圆场了，叫“景在人后更显美”。</p><p><img src="/%E9%9A%8F%E7%AC%94/19875/qggl.jpg" alt="qggl"></p><p>  太阳完全落山了，我们轮流打开了强光手电，之后每一次看到界碑，对我们都是一种慰藉：<br>  “看，2848，还有10km。”<br>  “2849，咱们又走了一公里了。”<br>  “2850，歇一歇吧。我觉得双腿已经没感觉了，都在做机械运动，完全感觉不到  是我在控制它，每500米歇一歇吧。”<br>  …<br>  “2854，还有4km，我不骑了，也骑不动了，我推着，你们先往前走吧。”<br>  “我也骑不动了，你们先走，我和立风一起推着。”<br>  “算了，一起推吧，4km也没多远，一个小时总能到了吧。”<br>  “2855，还有3km，我的水喝完了，把你的大瓶装矿泉水给我匀一点，渴死了。”<br>  “2856，2km，看看前面那边房子是不是折多塘，我觉得应该是了。我这里还有几小包蛋黄派，你们谁还有吃的吗？”<br>  “对了，从成都出来，张大哥的香辣牛肉干放在我驮包里一部分，前面吃了不少，我瞅瞅还有多少？”<br>  “还有六包，趁张大哥不在，嘿嘿，咱们一人一片吧，水没多少了，不过也快了。”<br>  “擦！不是折多塘，应该还在前面，是不是要拐了那个弯才是。”<br>  “2857，他妹的，前面那一片再不是，我就要崩溃了，我的水喝完了。”<br>  “我这边还有几口，没事，快到了。”<br>  “折多塘无疑了，客栈呢？擦，还在前面吗？”<br>  …</p><p>  又往前推了几百米，守得云开见月明，终于到了秦哥家。看来，他们早早的就把饭菜做好了，而我们却迟迟未到。这里洗澡很不方便，但是别无所择，一栋楼只有一楼和二楼的走廊尽头有一小间洗漱室，第二天早上洗漱是在房顶上的水龙头旁边解决的，之后很长的一段时间，洗漱环境几乎都是如此，泸定可能是接下来这几天最好的一个住处了。</p><p>  隔壁队来的比较早的几个看我们队在吃饭，要求加入我们一起吃，被我们无情地拒绝了，十点多，隔壁队的小姐姐和她其余的队友夜骑才到达折多塘。</p><p><img src="/%E9%9A%8F%E7%AC%94/19875/zpdjkz.jpg" alt="zpdjkz"><br><em>（图源网络，这个客栈当时我没拍照，而且已经黑了。）</em></p><p>  今天的夜空迷人而绚烂，繁星点点，反光的月亮比发光的恒星还要明亮，而直面冲击地球的宇宙尘埃化作了昙花一现的流星，此刻，他们比月亮还令我着迷，我顶着感冒在屋顶上仰望星空，思考了一些问题，而我也找到了答案，我会在后面的一篇里单独把我在川藏线上的所思所想写出来。</p><p>  海拔3000米以上的折多塘，让人爬上三楼都气喘吁吁，有87%的藏族人都拥有EPSA1这个抵抗高原反应的基因，汉族人里只有9%的人有这个基因，看来我是没有了，据说：海拔2700米以后，50%到75%的人都会产生高原反应。没错，经过中午的骄阳似火和晚上的温度骤降，好几个伙伴都感冒了，而我意识到自己感冒，是说话的时候已经变了声的嗓音，带的999派上了用场。可不光是感冒，我感到了胸闷，轻微的恶心，这些症状怕家里人担心的我当时没敢写在动态里，这个时候，我不禁浮想联翩，自己与自己抗争——<br>  “这些不都是高反的症状吗？我要下康定休整吗？或者明天不走了，在折多塘休整一天。这里也没有医院，万一是感冒转为肺水肿怎么办？这里才海拔3100多米，以后四五千的海拔怎么办？”<br>  “嗨嗨嗨，小伙子，你想多了，怎么可能这么严重，当你真的虚弱的撑不下去，再考虑折返或者放弃的事，坚持下去。”<br>  “虽然买了保险，不过你出发的目的不是冒着生命危险瞎折腾吧？万一真有个三长两短，你真的不会后悔吗？”<br>  “不后悔，会后悔我就不会出来这一遭了。”<br>  “家里人怎么办？那些关心你的人会怎么办？大部分人都在这里打了退堂鼓，放弃不丢人。”<br>  “风险可控，风险可控，这不是还没转化为肺水肿、脑水肿嘛，别想了，别想了，先睡一觉，看看明天的症状怎么样吧。”<br>  …</p><p><img src="/%E9%9A%8F%E7%AC%94/19875/zdt-1.jpg" alt="zdt-1"></p><p>  就在我考虑这些事情的时候，还是有队友提出来要不要在折多塘休整一天再走，因为我们都不赶时间，经过讨论，是：<br>  “反正咱们要在新都桥休整一天的，实在不行，咱们新都桥再会和，想在这里休整的在这里休整，想去新都桥的在新都桥休整。”</p><p>  直到写这篇文章的前一天，我才从《卓克的科学思维课》学到到高原反应是和基因有关系的，吃红景天是完全没必要的，在这里分享给你们——<br>  “大陆市场上可以买到的红景天至少有八九十种，像是“增加了红细胞的携氧能力”的说法是缺少证据的。而实际情况是，每个人对氧气的利用率能到什么程度已经写在基因里了。就不存在什么药能增强我们对氧气的利用率。这种药跟长寿不老药一样，不存在。<br>高原反应实际就是因为环境缺氧导致的身体应激反应，身体各个部分都会尽量调控，尽其所能提供更多氧气，这时候肺部和心脏的压力就大了，这一系列紧急调控措施出现后，身体会感觉难受，绝大部分人是不需要吃任何药的，绝大部分人只是头疼、胸闷、恶心，少部分人适应不了，就会有肺水肿、脑水肿，这时候根本的解决办法就是吸氧，什么药都解决不了根本问题。<br>大部分人在氧气不够的时候，只能通过降低活动量来适应。进入高原准备好乙酰唑胺，布洛芬就可以了。”</p><p><strong>致谢：</strong></p><blockquote><p>卓克《卓克的科学思维课》</p></blockquote><p>【上一篇：《<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/20724/">#青春万岁，追梦无罪#“迟到”的318川藏线Part7泸定修整：飞夺泸定，一统山河，壮志在否？</a>》】<br>【未完待续：《<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/15700/">#青春万岁，追梦无罪#“迟到”的318川藏线Part9天降冰雹:寒风暴雨中，谁的笑脸？</a>》】</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
            <tag> 318 </tag>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>#青春万岁，追梦无罪#迟到的318川藏线Part7泸定修整：飞夺泸定，一统山河，壮志在否？</title>
      <link href="%E9%9A%8F%E7%AC%94/20724/"/>
      <url>%E9%9A%8F%E7%AC%94/20724/</url>
      
        <content type="html"><![CDATA[<p><strong>立风拙笔，知我罪我，一任诸公。</strong></p> <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="298" height="20" src="//music.163.com/outchain/player?type=2&id=79784&auto=1&height=12"></iframe><p><img src="/%E9%9A%8F%E7%AC%94/20724/fdldq.jpeg" alt="fdldq"></p><blockquote><p>康熙的铁索，大渡河的波涛，二十二勇士的飞夺，成就了泸定桥；“一统山河”四字，遥见康熙天下一统的雄心壮志，其却不曾料到数百年后，红军长征，北上抗日，抵御外侮，同样的志存高远，而历经挫折的红军，曾在这片土地四渡赤水，飞夺泸定，摆脱险境，继续北上，最终完成了“一统山河”的历史大业。<br>——题记</p></blockquote><p>  泸定的大街上，红军路，成武路耳熟能详，情不自禁地想起那个年代的特殊的记忆。关于泸定桥是怎么横亘百米大河搭建起来的，当地有一个传说：“说是当时有一位名叫噶达的大力士，他夹着两根铁链乘船渡过对岸，一来一回，跑了七趟，最后桥虽然建成了，但是他却因劳累过度而死。后来当地的人为他建起了一座噶达庙”。读完《拉萨掌故》我才理解了这个传说为什么嘎达会存在？在藏文化中，总会有一些看似不可能完成的任务被一些能工巧匠完成了，在口耳相传中这个能工巧匠就变成了另外一种形式存在的神灵，最终这个神灵可能就成了当地人的出生神和守护神，当地人会日日供祭。</p><p>  当年，1935年五月底，据报国民党的军队将在五天内抵达这里，而面对一百多米波涛汹涌的大渡河，轻装简从的红军，可用的跨江船只非常之少，面对险境，红军统帅部决定逆大渡河而上，间不容发，不容有失。接到任务的红四团用一天的时间疾行240华里（120km，我们骑车每天的均速也不过90km），于29日与在守国民党军进行了一场殊死搏斗。<br>  “这次负责攻占泸定桥的士兵总共分为两个梯队，第一梯队负责突击，第二梯队在后架设木板，22名突击队员奋勇向前，在付出了3人牺牲的代价下，完成了这一光荣而又艰巨的任务。”</p><p><img src="/%E9%9A%8F%E7%AC%94/20724/fdldq2.jpeg" alt="fdldq2"></p><p>  在泸定的半日修整，是在攻略上达成共识的，一方面，泸定海拔和新沟差不多，我们是为了适应从海拔600多米的雅安到这里1300米的海拔抖升的状态；另一方面还不敢贸然冲到海拔2560m的康定，攻略上有写“折多塘有高反症状，返回康定修整，如果在康定有高反，可返回到泸定稍作修整”。<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/51490/">上一篇</a>有写到我拦了一个出租车进了县城，跟司机聊了聊当地的一些风俗与经济状况：当地人口八万左右，由于是山路，所以电动车、天然气的汽车普及不起来，还是摩托车、燃油汽车为主等等。就这么聊着聊到了泸定桥：<br>  “泸定桥在你们本地人心里什么地位？”<br>  “这个啊，没什么，一座桥而已，从我小时候就有，没什么特别的。就这个十块钱门票都是康熙收的。”<br>  “此话怎讲？”<br>  “这是康熙让修的啊。”<br>  “哦哦，我对泸定桥的印象本来只有红军的飞夺泸定桥，还有那句‘金沙水拍云崖暖，大渡桥横铁索寒’，竟然不知道是康熙让建的。你出去过吗？”<br>  “我去过广州的工地上，你们年轻人不知道，那个活是多么累。后来我老婆生孩子，就回来了开出租，反而感觉好多了，再也不出去了，其实只靠你们乘客的钱是不够的，要不是有政府补贴，小日子就难过喽。”<br>  …</p><p>  有时候，我们跨过大山大海，心心念念所要去见的，在本地人眼里，也许只是岁岁年年的习以为常。可最初的我们，不也是那个被自己吐槽无数遍的家乡的本地人吗？即便如此，我，还是选择了出去。</p><p><img src="/%E9%9A%8F%E7%AC%94/20724/ddhgc.jpg" alt="ddhgc"></p><p>  寄完东西，四点多了，快递点对面有一个广场，在广场舞的流行覆盖度面前，共享单车、网约车、外卖都不堪一击。没过多久，我就和其他队友在广场上会和了，先去超市买了日常的补给品和水果拼盘，到现在还记得张大哥看到了投币的游戏机，立马冲上去，说：<br>  “来，一起来打拳皇啊。”<br>  三十多岁的他在打游戏的时候，眼睛里冒出的纯真，真像是一个孩子。“好一年，坏一年，不知不觉又一年”，年轻的我们也终会成家立业，恍惚间，我也二十又三，而我早已弄丢了一切纯真的生活习惯，而这真的是我们想要的吗？彼情彼景，是深刻在我的脑海的。</p><p>  广场的那一头，就是大名鼎鼎的大渡河了，桥头堡为一座木结构古廊亭式的建筑，屋檐上是家乡常见的金色双龙戏珠雕饰，对联是当年胡耀邦所题“飞身可夺天堑，健步定攀高峰”，更令我想不到的是，康熙几百年前的御笔所题仍在。继而泸定桥的几根铁索也闯入了我的眼帘，黝黑发亮，震颤着，似乎在低声诉说着“一统山河”的过往岁月。刚到客栈的时候，老板建议我们晚上六点以后再去，是不收费的，而我们不可能为了省十块钱在这里晃荡一两个小时吧。于是，我和光明、何队买了票就踏上了这座人文名桥。</p><p><img src="/%E9%9A%8F%E7%AC%94/20724/ldqcm.jpg" alt="ldqcm"></p><p>  刚刚站在桥头堡中，有点昏暗，当桥头对面的噶达庙清晰可见，看到碗口粗的十四根铁索，侧面各两根，当是围栏，脚下平铺九根，每隔几厘米铺一块木板，看上起是无所畏惧的。然而，当你的双脚一旦全部踏上去，整个身子就会跟着晃动的桥身来回晃动，而且越往桥中间走，这种感觉就愈加强烈，不觉让人有些许目眩，对当年的二十二勇士的崇敬之情愈发强烈。一般是两行人在来回走动，如果有第三行人，必有一行会停下来等旁边的人先过去。</p><p>  我到达桥中间，闭上双眼，感受着脚下的震颤，之后睁开双眼，望向滚滚江水上游，在南通看厌了长江水，浊流滚滚，而大渡河却是这般淡绿色，江水冲刷着两岸油光锃亮的岩石。联想到《拯救大兵瑞恩》，当年的刘文辉何不炸了泸定桥来阻击红军呢？还好没有炸了这座蜚声中外的铁索桥，历史不容假设，历历过眼云烟。</p><p><img src="/%E9%9A%8F%E7%AC%94/20724/ldqsy.jpg" alt="ldqsy"></p><p>  没多久，一个脸面被晒的黝黑的姑娘，看到我穿着骑行服（我为了晚上不洗两套衣服，没换便装就出来了），就和我打招呼：<br>  “看你穿这样，骑行过来的吧？”<br>  “对的。”<br>  “今天第几天了？”<br>  “第三天。”<br>  “你们比我快多了，我是徒步过来的，已经一周多了。”<br>  “哇，好厉害，你是一个人徒步吗？”<br>  “不不，我在网上找到了几个人从成都出发了，后面几天几个人退出了，我现在和一个小哥哥一起走的。喏，我们就住在对岸那边的客栈。”说完晃了晃手中的钥匙，继续说道：<br>  “拿着这把钥匙，上泸定桥不收费的。”这时候我才注意到她右手拿着手机的姿势好像在直播（后来光明跟我说，她是某直播平台的网红，粉丝百万），我问道：<br>  “你是在直播吗？”<br>  “对的，我的粉丝问你是哪里人？”<br>  …</p><p><img src="/%E9%9A%8F%E7%AC%94/20724/ldqxjj.jpg" alt="ldqxjj"></p><p>  在前面成都到雅安我有记述到徒步的年轻恋人，而这个靓丽的同龄异性还是着实让我吃惊了一把，一个女孩子，孤零零地在网上找到了同行者，说走就走。说实话，在之前，一直不看直播的我对女主播的认识是肤浅的，认为她们只是靠着颜值卖肉卖色相变现，直到我和她短暂地交流，还有这么一群女主播，用脚步去丈量世界，以广博的见闻向躺在床上、两眼发直、喝着肥宅快乐水的粉丝们，展现了另外一种生活方式。我为什么没有要求去添加她的联系方式呢？只因为我深知，我们不是活在一个世界的人，也不会有太多的共同话题，哪怕加上了好友，也不过是列表里躺着的另外一个人罢了，过了两三年，就会被我删掉。</p><p>  在川藏线上，总会有一些网红出现在你面前，他们以自己的方式告诉你，生活，原来还可以这么精彩。</p><p>【上一篇：《<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/51490/">#青春万岁，追梦无罪#“迟到”的318川藏线Part6连续摔车：千里川藏线，天堑二郎山</a>》】<br>【未完待续：《<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/19875/">#青春万岁，追梦无罪#“迟到”的318川藏线Part8西出折多：给你一次机会，你退不退？</a>》】</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
            <tag> 318 </tag>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>#青春万岁，追梦无罪#迟到的318川藏线Part6连续摔车：千里川藏线，天堑二郎山</title>
      <link href="%E9%9A%8F%E7%AC%94/51490/"/>
      <url>%E9%9A%8F%E7%AC%94/51490/</url>
      
        <content type="html"><![CDATA[<p><strong>立风拙笔，知我罪我，一任诸公。</strong></p>  <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="20" src="//music.163.com/outchain/player?type=2&id=5266814&auto=0&height=12"></iframe><blockquote><p>车过二郎山，<br>像进鬼门关。<br>侥幸不翻车，<br>也要冻三天。<br>——题记</p></blockquote><p><img src="/%E9%9A%8F%E7%AC%94/51490/xgdld.png" alt="xgdld"></p><p>  二郎山是踏上318第一座有名有姓，而又有悠久历史、带有悠远淡雅的宗教色彩，公路弯多、坡大、路窄，常年冰雪、暴雨、浓雾、泥石流、滑坡不断，全年3/4的日子都是雨雪天气，我们路过的时候时晴时雨，以陡峭险峻、气候恶劣闻名于驴友圈，从成都平原到青藏高原的第一道咽喉险关，被称作“天堑”，素有“千里川藏线，天堑二郎山”之说。据说，当年人民解放军第18军将士以每公里牺牲七位军人的代价，克服重重艰险，修成了此路，同时期诞生的《歌唱二郎山》说的就是这件事。</p><p><img src="/%E9%9A%8F%E7%AC%94/51490/elsgh.jpg" alt="elsgh"></p><p>  而在这段路上，手机长时间没信号，我们的两个队友，何队与刘斌先后在同一个地点摔车。</p><p>  常言道，“观景不如听景”，那是还不了解美景背后的一个个传说，一段段故事，自此匆匆打马而过，所见不过郁郁葱葱、松柏林立、云海澎湃、草长鹃飞，怎能领略它真正的本质美？若一步一景、移步换景，若月光、星光与佛光。</p><h2 id="day3新沟k2718h1310二郎山隧道k2736h2170泸定k2792h1300-行程54km"><a class="markdownIt-Anchor" href="#day3新沟k2718h1310二郎山隧道k2736h2170泸定k2792h1300-行程54km"></a> DAY3:新沟（K2718，H1310）——二郎山隧道（K2736,H2170）——泸定（K2792,H1300）  行程54KM</h2><p>  初到新沟，最先引起我注意的是一个小瀑布，在对面山上的半山腰，我驻足于此，静静地看着，没有黄果树瀑布的波澜壮阔，却别有一番曲径通幽的闲适，苍松劲柏，没膝腐叶，它就在那里不紧不慢地细细流淌，二郎山有云“双峰高声遥对九龙，绝壁干仞下临一水”不就是这番景象吗？</p><p>  我住在最底层的临江的窗边，不知这窗外的涛涛江水，是白沙河还是喇叭河的分支？关上窗户，仍能听到江水撞击石头的声音，夹杂着雨滴抖落的声音，偶尔传来一两声杜鹃的啁啾，而我就这么沉沉地睡去了。</p><p>  今天的路途比较轻松，只安排了54km，客栈出来，10km缓上坡，10km坡程到二郎山隧道，过隧道2km缓坡，然后就是激动人心的29km长下坡。</p><p>  七点多起床，吃了冯姐家煮的面和鸡蛋，简单收拾收拾，就出发了。同时出发的还有一批老年队伍，约莫着五六十岁，看来他们昨晚很晚才到，可在我们吃饭的时候，他们已经陆陆续续地出发了，自此往后，只在然乌到波密的那段路上遇见了他们，而这已经是半个月后的事情了。</p><p>  吃过饭还没怎么休整，隔壁队的妹子和肖大哥已经出发了，运动员看到小姐姐已经走了，迫不及待地也出发了，张大哥身体抱恙，也早早出发了。</p><p><img src="/%E9%9A%8F%E7%AC%94/51490/elspsgl.jpg" alt="elspsgl"></p><p>  以往对盘山公路无感，这次是真真切切地感到了什么是盘山公路，一个弯接着一个弯，走了一个小时，低头还能看到一小时前的地方，绕过了一座，抬头一看，垂直距离几十米的半山腰上有卡车在缓慢行进，就知道你终究要爬上那个高度，而那并不是尽头。</p><p>  虽然只是二十公里的上坡，但是海拔提升了将近1000m，也就是说每公里提升了50m，再形象一点，每公里要爬升17层楼的高度，免不了要走走停停，休息一阵子。一般就是看到了一个简陋的自建房屋停下来买点饮料，价格比村镇一般贵个一块钱，村镇一般比县市贵个一块钱，运气好了，还能蹭点热开水，一般有房子的地方也不一定有网络，所以大多时候是用的现金支付。</p><p><img src="/%E9%9A%8F%E7%AC%94/51490/elsdog.jpg" alt="elsdog"></p><p><img src="/%E9%9A%8F%E7%AC%94/51490/elsrest.jpg" alt="elsrest"></p><p>  在上图所示的地方休息的时候，发生了一件尴尬的事情，我们在老奶奶的屋里休息讨茶，这个时候，何队发了微信——“小心，我在二郎山隧道这里摔车了”，还好并不严重，看到墙上有人写写画画的笔记，记不得谁开玩笑地说了一句——<br>  “要不然咱们也在上面写几个字纪念一下。”</p><p>  结果老奶奶脸色突变，带着方言地雷霆大怒道——<br>  “你们谁要是敢在墙上再乱写乱画，看我不打断你们的腿。”</p><p>  我们立即闭嘴不言，然后她气冲冲地转身出了屋，站到了马路对面，用强烈地肢体语言向我们表达不满。可她并不知道，此时的我们身上并没有一支马克笔，也就无从玷污她那不该涂抹的墙面了。但这件事让我联想到了“破窗效应”：当有人看到一栋有少许破窗的建筑物，可能会去破坏更多的窗户，他们甚至会闯进建筑内，如果发现无人居住，甚至会在那里定居或者纵火。此理论认为如果放任环境中的不良现象的存在，会诱使更多的人们效仿，甚至变本加厉。</p><p>  如果你读到了这里，以后也踏上了这条路，我向你发起一个请求：在未经过主人同意的时候，即使出现了“第一扇破窗”，也请抑制住自己继续“破窗”的心态，还他们一片安宁。</p><p>  既然上图出现了肖大哥，顺便介绍一下：</p><p><img src="/%E9%9A%8F%E7%AC%94/51490/xk.jpg" alt="xk"><br><em>肖大哥，湖南人氏，但是口音并不重，是我们队里在整条线上推车最远距离的一位，也是唯一一个留在最后又转游尼泊尔的人，直到十月份才回来。有些人可能并不了解：上坡时，推车对体力的消耗不亚于骑车，技术不好，可能会受伤，比如推觉巴山那一段我的肩膀就疼了好几天，所以肖大哥也是坚持以自己的方式走过了318，甚至最后几天，他的速度已经可以把我们很多人甩在后面了。他曾这样评价自己说，“工作环境制造现在的我…性格怪异，话不多，易怒，不正常的思想…”，而我们相处的这短短一个月，我倒觉得他是一个乐观体贴，正气凛然，脚踏实地，永不言弃的人，一路上，只有他陪着拉在最后的小姐姐，直到相克宗小姐姐单飞。我不知道他为什么会出发，但我知道，他心心念念了不少时光，在9月13日他说——<br>“旅行的好处在于可以暂时远离日常生活，还不必承担平日里琐碎的责任。”</em></p><p>  就这样很吃力地往上走，我、风光、光明等互相勉励，偶尔破口大骂道阻且长，偶尔有网络的时候看看还有多远到隧道，在隧道前面2km左右的上坡，我抬头好像看到了隧道，就问旁边的一些修路工，他们告诉我，“不远不远，这边上去拐个弯几百米就到了”，结果又硬生生地爬了半个小时，不自觉想起当年在北京徒步100km的时候每次问志愿者还有多远到下一个补给点，总是回答“快了快了，200米左右”，实际上远远不止这个距离，看来他们都深谙心理学之道。</p><p><img src="/%E9%9A%8F%E7%AC%94/51490/elssd.jpg" alt="elssd"></p><p>  到了二郎山隧道前的一片人工开阔地，一个当地大妈提着一袋李子冲过来——<br>  “十块十块！三斤十块。”</p><p>  我尝了一个，酸甜可口，当时想三块钱一斤在这荒山野岭也能接受，就买了下来，大伙分着吃了。可后来赶上何队他们的时候，何队说——<br>  “当时我上去也有一个人冲过来，说五块五块，三斤五块…”</p><p>  没有比较就没有伤害啊！我在这里顺便补充一句：据当地人说，整条318线上，包括观景台上，都没有真正的风干牦牛肉，大多都是猪肉。</p><p>  休整了二三十分钟，我们准备继续等后面的队友，因为“不等他们，这段路心态可能会崩！”</p><p>  等大家齐刷刷地到了，我就先出发过了这个4km的隧道，没想到过去了，还有一个小隧道，又冲过去了，等刘斌他们下来的时候，他一个不小心，在与何队一样的地方，也摔车了，还好带了头盔，不算特别严重，带的外伤药第一次派上了用场，张大哥帮他包扎完毕，休整了一下继续爬坡，从此他就成了“下巴上有疤的男人”。</p><p>  “快看，云海慢慢起来了，真美啊！”</p><p><img src="/%E9%9A%8F%E7%AC%94/51490/elsyh1.jpg" alt="elsyh1"></p><p><img src="/%E9%9A%8F%E7%AC%94/51490/elsyh2.jpg" alt="elsyh2"></p><p><img src="/%E9%9A%8F%E7%AC%94/51490/elsyh3.jpg" alt="elsyh3"></p><p>  我们齐刷刷地把车在垭口停下来，欣赏这奇异的景色。我文笔拙劣，引用一下古人对二郎山恩泽普降、瑞绕两峰、山环水绕、月白风清的描写吧：</p><blockquote><p>“海到天边天是岸，山登绝顶我为峰。”<br>“浩充天地形影外，然爱风云变化中。”<br>“镇驼峰灵光浩荡，坐古洞佛法无边。”<br>“青牛留道脉，古今帝王师。”</p></blockquote><p>  上世纪四十年代，张大千当年西康之行，过境二郎山，为之震撼，做国画《二郎山》，苍翠险峻跃然纸上，题诗做书道“横经二郎山，高与碧天齐，虎豹窥阊阊，爰猱让路蹊。”所言极是。时代风起云涌，而二郎山一贯如此，秉性从未改变。</p><p><img src="/%E9%9A%8F%E7%AC%94/51490/els.jpg" alt="els"></p><p>  看似29km连续下坡很轻松，却不尽然如此，一是担心刹车过多，磨坏了刹车片；二是保持一个姿势过久，手臂发麻；三是坡陡弯急，卡车较多。不得不二十分钟左右停下来一次降温、活动筋骨。</p><p><img src="/%E9%9A%8F%E7%AC%94/51490/ldq.jpg" alt="ldq"></p><p>  下午两点多到了泸定，和大伙一起饱餐一顿，点了好多吃的。</p><p>  我想了一想：以往看攻略带了许多杂七杂八的东西，尤其是我那个大背包，给我增加了不少的负担，思前想后，收拾了将近十斤东西，准备寄往拉萨骄傲女士的住处。客栈老板这里邮费大概120元左右，她说比较贵，就推荐我去外面的快递点看看多少钱，在附近死活没有找到一家快递点，好不容易问到了一家，可是关门了。一个当地人就推荐我去县城看看顺丰那边，我当时就好奇，这个地方的县城会是什么样子，拦了一辆出租车就出发了，没想到他们的县城这么近，十分钟左右就到了。后来顺丰的告诉我，他们这里只走空运，寄大件划不来，推荐我去了中国邮政。</p><p>  不知不觉三千多字了，先略去泸定桥一段，放在下一篇。</p><p><img src="/%E9%9A%8F%E7%AC%94/51490/gxdc.jpg" alt="gxdc"></p><p>  晚上，我们在楼下刚刚吃完晚饭，冒雨推门进来了三个人，如果是一般的骑行者，倒是没必要记述了，可他们三个（母亲带着一儿一女）却是骑着共享单车一路过来的，而且最小的那个孩子一看就知道是小学生。简单交流才知道，他们比我们早出发了五天，母亲准备带着他们磨砺意志，开学前能骑到哪里就到哪里。</p><p>  我相信，有过这段经历的他们，永远不会成为一个“巨婴”，而会更加热爱生活，从此活地更加精彩！鸡汤时间到：骑行川藏线，不在于年龄，双鬓斑白也好，稚气未脱也罢；也不在于装备，捷美也好，共享也罢，而在于你那颗跳动的心脏是否还有这个执念？是否还在依依东望？</p><p>【上一篇：《#<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/22602/">#青春万岁，追梦无罪#“迟到”的318川藏线Part5中规中矩：岁月不饶人，可你并不孤独 </a>》】<br>【未完待续：《<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/20724/">#青春万岁，追梦无罪#“迟到”的318川藏线Part7泸定修整：飞夺泸定，一统山河，壮志在否？</a>》】</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
            <tag> 318 </tag>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>#青春万岁，追梦无罪#迟到的318川藏线Part5中规中矩：岁月不饶人，可你并不孤独</title>
      <link href="%E9%9A%8F%E7%AC%94/22602/"/>
      <url>%E9%9A%8F%E7%AC%94/22602/</url>
      
        <content type="html"><![CDATA[<p><strong>立风拙笔，知我罪我，一任诸公。</strong></p> <iframe frameborder="yes" border="1" marginwidth="30" marginheight="30" width="80%" height="200" src="//music.163.com/outchain/player?type=2&id=529490528&auto=1&height=12"></iframe><blockquote><p>苍龙破天，女娲炼五彩石补天，他孔皆补，唯雅安一处，娲精疲力尽，举五彩石抵苍穹，终身心俱疲，坠于地，呕血而亡，化“雨城”一峰。城内一“小媳妇”整日以泪洗面，双颊秋水花带雨，试问苍穹：这晴不过三日的巴山夜雨，除了你，还曾为谁滴答？<br>——题记</p></blockquote><p><img src="/%E9%9A%8F%E7%AC%94/22602/----_----_20181209134505.png" alt="----_----_20181209134505"></p><p>  经历了昨天的两次扎胎，晚上调车时，跟大伯聊到了这个问题，准备再向他购买两条内胎，加上昨晚补好的，一共四条，可是他说：“没必要带这么多内胎，骑川藏线不要太靠边，要骑在汽车压的黑黢黢的线上，因为汽车经过的时候，会把细铁丝、钉子之类的压到路边上，你规规矩矩地骑在边边上，反而容易扎胎。”是啊，有时候你以为你守规矩、遵章法，然而可能恰恰因为你的小心翼翼，把你带到了危险的悬崖边缘，却不自知。我听从了大伯的忠告，自此以后的二十多天里，再也没有扎过胎。</p><p>  当天晚上，我们和从广东深圳出发，走另外一条线的光明会和了：</p><p><img src="/%E9%9A%8F%E7%AC%94/22602/ygm.jpg" alt="ygm"></p><p><em>光明，河南人氏，也是我们队年纪比较小的一位，于7月20日从深圳出发，经广州——佛山——桂林——遵义等到达雅安，于8月16在雅安和我们会和的时候，已经骑行了快一个月了，也是我们队唯一一个没有经过成都的人。当晚在雅安第一次见面，时间仓促，没有聊太多就都休息了，第二天却完全刷新了我的认知，我们还在避雨的时候，由于当时他没有准备雨衣，冒雨三点多就骑行到了新沟。为人温厚敦良、乐天达观、心理年龄领先生理年龄的人，在中后段的路上，我们两个速度差不多，相携相伴，互相鼓励，一起爬过推过了好几座垭口。在8月20日，他在朋友圈里抛出了一个问题：<br>“骑行两千多公里是信仰吗？我也不知道。”</em></p><h2 id="day22018816雅安k2631h641飞仙观天全k2667紫石乡新沟k2718h1310行程89km"><a class="markdownIt-Anchor" href="#day22018816雅安k2631h641飞仙观天全k2667紫石乡新沟k2718h1310行程89km"></a> DAY2（2018.8.16）:雅安（K2631，H641）——飞仙观——天全（K2667）——紫石乡——新沟（K2718，H1310）行程89KM</h2><p>  雅安是一座有故事的城，两千多年前的”茶马古道“的起点就是这座边茶重镇，素有“川西咽喉”、“西藏门户”、“民族走廊”之称。<br>  东升竹庄包早晚餐，由于昨晚已经问了早上吃饭的时间，再加上昨天大家都比较疲乏，所以早上七点多才起，但与后半程十点多出发相比，也已经起的够早的了。出发前一天晚上开始，客栈老板情商哥就千叮咛万嘱咐要带雨衣，即使天气显示明天晴天，如我题记所写，”雅无三日晴“，”雅雨“与细嫩鲜美的”雅鱼“、秀丽清纯的”雅女“并称”雅安三绝“，所以“变脸比变天还快“并不适用于这片土地。<br>  吃过饭，我们在客栈加入了“文明公约”公益行动，该公约行动旨在探索中国旅游文化发展的时代坐标；是中国时代精神的旅游文化符号。如果你读到了这里，烦请在318的路上，抑或在其他的路上，爱护身边的一草一木、一花一鸟吧。折多山垭口有了你这份参与，相信会洁净不少吧！</p><p><img src="/%E9%9A%8F%E7%AC%94/22602/dszz.jpg" alt="dszz"></p><p><img src="/%E9%9A%8F%E7%AC%94/22602/3180qd.jpg" alt="3180qd"></p><p>  我知道，这个所谓的“川藏线0起点“是情商哥出于商业目的挂上去的，从这里所走过的每一个人，都会情不自禁地刹车、拿出手机、“咔咔咔”，如果说这里是零起点，那昨天走过的那段路又算是什么呢？但就是这个标志所带来的仪式感，给每一个路过的人心里一丝惊喜与敬畏，不再管那个“2222”是不是在数落着自己。<br>  果然，才骑了大约十几公里，雅安这个“小媳妇”又开始微微啜泣了，看你倾国倾城、秀外慧中的小家碧玉，我就原谅你了。就这样在细雨蒙蒙中，我们踏上了茶马古道。But, But, But，女人的心思我们真的是捉摸不透，你啜泣也就啜泣呗，我们互不打扰，可是，谁让你嚎啕大哭的呢？而且路本来就窄，又到处张贴着“易飞石路段”、“事故多发路段”、“易滑坡路段”的提示语，至少让我这个初次踏上这片土地的人心里感到了一丝不安。</p><p><img src="/%E9%9A%8F%E7%AC%94/22602/cloudBridge.jpg" alt="cloudBridge"></p><p>  35km后到天权吃了一顿午饭，就在我们避雨的时候，没带雨具的光明已经出发了，也就是说，他冒着大雨下午三点多就一路火花带闪电地冲到了新沟。现在回头想想，对整个队伍而言，那天是挺危险的，直到今天细细回想，才发现，那天的我们几乎都是两两三三的一拨，也就是说，我们有分散的可能。如果何队没等我们，而是和光明一起三点到了新沟，他们会不会继续出发呢？如果第二天速度快的运动员被隔壁的公路车的乔某人带着走了，我们还能一起到拉萨吗？如果…</p><p>  既然提到了乔某人，我先在这里简单介绍一下：</p><p><img src="/%E9%9A%8F%E7%AC%94/22602/qs.jpg" alt="qs-1"><br><em>乔某人，自称“乔帅”（第一次问他名字说叫“乔帅”，我竟信以为真…），我们称之为“长发男”，山西人氏，或许就是某个煤老板的儿子，本来是隔壁队的，后来我们合并，是队里唯一一个骑公路车上川藏线的人。大学期间，曾去澳大利亚打工度假一年，也就是我们常说的working holiday,在此期间，乘车完成了环澳的旅行。在我们这个人们都不善于谈恋爱的时代，他绝对是个例外。从前面的介绍也可以看出来，他是个幽默风趣、风流倜傥的一个存在。但从后来的交流中，知道他曾把巴塘到芒康那一段路在地图上一公里一公里看过去的时候，我知道他也是个细致入微的存在。</em></p><p>  言归正传，二郎山在整条318上虽然不算很高，爬到山顶也是明天的事了，但是路窄、卡车多是不容忽视的，有时候你不得不停下车来，等着一辆又一辆卡车从身边呼啸而过；有时候，下坡你速度正快，一辆卡车从身边经过的时候，你忽然感觉到一股拉力把你往卡车那边挤，作为通大理工科电子信息学院最后一批毕业生，也来不及从“流速大的地方压强小”来细细分析了。<br><img src="/%E9%9A%8F%E7%AC%94/22602/20181209121357.gif" alt="20181209121357"></p><p>  在一个下坡后的上坡，太阳伯伯安慰了“小媳妇”，笑微微地出来了，于是，隔壁队的开始摆地摊了。<br><img src="/%E9%9A%8F%E7%AC%94/22602/bdt.jpg" alt="bdt"></p><p><img src="/%E9%9A%8F%E7%AC%94/22602/bdt2.jpg" alt="bdt2"></p><p>  既然图一铿铿的照片也出来了，顺便介绍一下铿铿：</p><p><img src="/%E9%9A%8F%E7%AC%94/22602/zkk.jpg" alt="zkk"><br><em>铿铿（别说你不认识这两个字，“铿锵玫瑰”了解一下），安徽人氏，现在上海从事健身教练一职，身材就不用我再说了吧，据说家里是负责收黄山门票的，家产也不用我说了吧，之前我发的很多图片都是出自他之手，可以修图做视频到凌晨的人，对男票拍照技术有要求的也不用我说了吧。清新俊逸、俊美无涛，为人深沉文静、落落大方、情趣高雅，“原谅我这一生不羁放纵爱P图”就是他的座右铭。算了算了，写不下去了，由于之前对我说，写到他的时候一定要帮他征婚，才有了如上段落。他是一个可以把自行车拆成一个个细小的零部件然后再组装回去的人，是一个可以为了拍珠峰、纳木错星空可以在寒风中冻的瑟瑟发抖而不罢休的人，更是一个不安于现状、总是尝试新的生活方式的人，比如“318”，即使家里反对，他也说来就来了。</em></p><p>  继续回到原来的路途中，骑行到一个下坡，远远地就看到前面的车全部停下了，路右边的宽度窄到容不下一辆自行车的宽度，从车左边走吧，你怎么能确定不是单边放行？呼啸的车队冲过来怎么办？为了安全起见，我也停下了车。这个时候忘记是西瓜哥还是刘斌的车胎也扎了，他们在后面补胎，之前那座漂亮的云桥前面，张哥也扎胎了。旁边卡车还有小轿车的人下来了，于是我们开始了一个半小时左右的聊天。<br>  “下雨你们还骑？今天准备到哪？”<br>  “雅安的晴天说不准的，迟早要走，不如现在就走，今天预计到新沟就休息了。”<br>  “我在这里跑了两个月卡车了，每次上来都会感觉头晕脑胀，你们骑自行车没有高反吗？”<br>  “你们不是有一句口号叫‘海拔高志向更高，缺氧气不缺志气’吗？咱们其实是不太一样的，我们一天才一百公里左右，有了一个适应的阶段，你们是一天几百公里，急匆匆地就到了高原，高反症状肯定要比我们明显的。”<br>  “我要是再年轻二十来岁，也想像你们一样，疯狂一把！”<br>  “是啊，岁月不饶人啊，年纪越大，考虑的事情也越多，总归还是年轻好。哎，你们几个是自驾游去拉萨吗？”<br>  “对啊，我们几个老友一商量就出发了，都没做什么攻略，开了一辆车就上来了。”<br>  …</p><p><img src="/%E9%9A%8F%E7%AC%94/22602/318day2river.jpg" alt="318day2river"></p><p>  后面才知道，前面的桥塌了一块，烂了个大窟窿，所以导致了十几公里的拥堵。<br>  木心曾说，“岁月不饶人,我亦未曾饶过岁月”；梁实秋也曾在《中年》里说，“拔毛连茹,头发根上还许带着一颗鲜亮的肉珠,但是没有用,岁月不饶人!”；甚至季羡林季老也在《老猫》中有说，“可是岁月不饶人,也不会饶猫的”…凡此种种，我们都在感叹时光易逝，不管你愿不愿意，青春的容颜终会消逝，岁月的尽头，我们都是一样的。时光，留给树的是一圈圈的年轮，留给我们的是一段段难忘的故事，在某一天我们颓然老去的时候，还能回想一下现在自认牛掰的自己，也是不愧此生了。<br>  有人说，一个人要学会独处，一个人看书读报，一个人浇花养草，一个人洗衣做饭，一个人去看电影，要学会享受孤独。但是，如果有一群同道之人同行，我们又何必茕茕孑立、形影相吊呢？<br>  今天的后面没什么可记的了，总之，我们队伍最终齐刷刷地到了新沟冯姐家的客栈。收尾有点仓促，因为快两点了，我要去跑马拉松了，就此止笔。</p><p>【上一篇：《#<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/47104/">#青春万岁，追梦无罪#“迟到”的318川藏线Part4牛刀小试：坚持是你，认怂亦是你，这才是你</a>》】<br>【未完待续：《<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/51490/">#青春万岁，追梦无罪#“迟到”的318川藏线Part6连续摔车：千里川藏线，天堑二郎山</a>》】</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
            <tag> 318 </tag>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>#青春万岁，追梦无罪#迟到的318川藏线Part4牛刀小试：坚持是你，认怂亦是你，这才是你</title>
      <link href="%E9%9A%8F%E7%AC%94/47104/"/>
      <url>%E9%9A%8F%E7%AC%94/47104/</url>
      
        <content type="html"><![CDATA[<p><strong>立风拙笔，知我罪我，一任诸公。</strong></p><blockquote><p>黑夜给了我黑色的眼睛，我却用它来寻找光明。<br>是的，浩浩汤汤的历史进程中，光明只是短暂是一瞬，黑暗，才是永恒的；但正是这短暂一瞬的光明，诞生了点点生命与希望。因此，虽然我们都自黑暗中来，却注定了要用此生去追逐光明。如果西藏，就是那最最闪耀的地方，那318，就是我们必须要走过的路。<br>——题记</p></blockquote><p><img src="/%E9%9A%8F%E7%AC%94/47104/part4.png" alt="part4"></p><p>  清风虽系不住流云，流云却带走了岁月。转眼间，已经过去了三个月，如今想起，模糊的记忆里总有几张熟悉的面孔与几处熟悉的风景，且待我一一道来——</p><h2 id="day12018815成都成新蒲快速通道大兴镇大塘镇雅安k2631-行程155km"><a class="markdownIt-Anchor" href="#day12018815成都成新蒲快速通道大兴镇大塘镇雅安k2631-行程155km"></a> DAY1（2018.8.15）:成都——成新蒲快速通道——大兴镇——大塘镇——雅安（K2631）  行程155KM</h2><p>  出发前一天晚上和张大哥、何队、风光、运动员去客栈附近一家饭店干了一碗酒，虽然只是一碗啤酒，可对我而言，再往前，我一时都想不起来什么时候还饮过酒，这碗酒，算是向明天318的致敬，向过往岁月的握手言和，向此去经年的另一个自己辞别。<br> 而就在此时，18:00左右，川藏线318中段左贡泥龙塌方，路被堵死，车辆无法通行。</p><p><img src="/%E9%9A%8F%E7%AC%94/47104/3180814beer.jpg" alt="3180814beer"></p><p>  这一天是我们整条川藏线起床最早的一天，凌晨5:30开始，天色还未亮，或者说还漆黑一片，大家陆陆续续都醒了，此时的我意识模模糊糊，竟然穿上了我那套抓绒的骑行服，洗漱、收拾床铺、整理行李、打热水…<br> 此时的我信心爆棚，自忖“速度可快可慢，体力比较好”，把自己当做了战队的后勤，医药包在我这里，修车工具也在我这里，没有十斤也得有七八斤吧。后来才知道，在青藏高原上，有些平原上的规律是不成立的。<br>  大家一起去吃早餐的时候，住在侠客行的西瓜哥与我们会和了——</p><p><img src="/%E9%9A%8F%E7%AC%94/47104/xiguage.jpg" alt="xiguage"><br><em>西瓜哥（当然还有另一个称呼，“X图哥”），河北人氏，是我最后一个知道本名的队友，在天路十八弯要合照，他在比较远的地方，即口喊出了“西瓜哥”，之所以叫西瓜哥，是因为头像是：一个孩子端坐在桌子前，桌子上放了一块西瓜；留名的时候，会在签名处附上一个西瓜图案。有独立思考精神，个人世界观健全，性格执拗，幽默有趣。一路上为我们带来了很多快乐与笑点，在318后半段八宿查出高反症状，医生建议赶紧回平原修整，不然可能危及生命，可是他还是坚持以另外一种方式到了拉萨。经历过生死的人，足以语人生，才更能明白活着的意义：<br>“…医生都给我吓尿了。老弟可是冒着生命危险到的啊。啥也不说了，以后好好生活”<br>后来他说：<br>”我今年准备骑的时候，一个人坐火车去成都，真的可孤单了，要是知道后来能遇到你们，有一群朋友在成都等你，绝对不会心空荡荡的在火车上度过27个小时“</em></p><p>  吃过早饭，回到客栈，客栈“洪哥”也起床了，作为“心旅”成立以来的传统，出发当天，他们会带领每一批从“心旅”出发的伙伴走出成都这座城市，临别说了句“祝你们好运”。就如同一个程序猿在网上找到了一篇英文教程，文末一般会标注“Good Luck”，现在的我不是个确定论者，而是个概率论者，相信了“成功就是一分的灵感，九分的努力，再加上九十分的颜值，最后的九百分留给运气”。</p><p><img src="/%E9%9A%8F%E7%AC%94/47104/team1.jpg" alt="team1"></p><p>  从图片来看，当时的我们每个人都信心满满，但我知道：最后抵达目的地并不是因为我们多么努力，而是运气比较好而已。但是，没有这九分的努力，是碰不到那九百分的运气的。<br> 此时，另一队的伙伴们从“57318”也刚刚出发——</p><p><img src="/%E9%9A%8F%E7%AC%94/47104/team2.jpg" alt="team2"></p><p>  此时，我们不认识他们，他们不认识我们，哪怕路上擦肩而过，对彼此而言，我们只是对方的路人。要说有一点点不同，就是我们是有同一个目的地的路人。</p><p>  第一天，生活总要给你搞点事情，也会给你一丝丝惊喜，好的坏的并不重要，重要的是，你曾经历过——<br>  一、走错路。第一个丁字路口，没开导航的我们方向走反了几公里，还好及时意识到并且纠正了方向。当时的我们对彼此并不熟悉，所以喊前面队友的时候，并不知道彼此的名字，只能大声“哎～回来！”，“哎～前面的几个，走反了”，现在想想也是挺有意思的。没多久碰到了一对徒步的情侣，拉着一个铁板拖车，边直播边徒步，还带着一条小狗，简单交谈才知道，他们准备这样花三个月抵达拉萨，也就是说，如果一切顺利，直到我写文章的今天他们差不多到了拉萨。当时的我，想到了”<a href="https://www.jianshu.com/p/0859d02c75d1">成田分手定律</a>“：成田指的是成田国际机场，是许多日本的新婚夫妻出国度蜜月的必经之地。而在蜜月旅行中，新婚夫妇因一些琐碎事项，导致双方生活习惯中的缺点暴露，引发不和。最终在抵达成田机场后，提出了离婚。<br>  所以，他们两个在恋爱期间一起出发，把结婚蜜月反过来，三个月从日出到日落的日子里彼此陪伴、了解，是多么的明智啊，如钱钟书先生在《围城》里所说：<br> “结婚以后的蜜月旅行是次序颠倒的，应该先共同旅行一个月，一个月舟车仆仆以后，双方还没有彼此看破，彼此厌恶，还没有吵嘴翻脸，还要维持原来的婚约，这种夫妇保证不会离婚。”</p><p><img src="/%E9%9A%8F%E7%AC%94/47104/ctfsdog.jpg" alt="ctfsdog"></p><p>  二、分拨，货架罢工。上了大道没多久，随着时间的推移，大太阳出来了，队伍慢慢分成了几拨，前面第一拨休息了二三十分钟，后面的一拨刚赶到。而我，和刘斌、张大哥走在了最后，以防前面的队友出现意外情况，我这里可以帮忙处理。果然，中途张大哥的自行车货架罢工，螺丝不知道什么时候松了，说时迟，那时快，当时驮包“轰”的一下整个儿掉到了地上，还好疲惫的张大哥反应迅捷，车子栽倒在地，人没事。于是我们仨往后走了几十米，愣是没找到掉了的螺丝，前不着村后不着店，只好让刘斌前面先走，我和张大哥想办法解决，最终，忘了张大哥是从路边还是驮包里拿出了一截粗铁丝，我们拿出工具，敲敲打打的当做螺丝固定在他的货架上，准备到了雅安再行处理。</p><p>  三、扎胎，中暑。十一点多，此时的我们好像才走了四五十公里，距离今天的目的地还有一百公里左右，但是肚子实在饿的紧，达成一致”只要碰到了饭店就去吃饭“，即将出一个镇的时候，找到了一处饭店吃饭，点了酸溜土豆丝、西红柿炒鸡蛋、青椒炒鸡蛋、回锅肉等等，前面三个菜以后成了我们的必点下饭菜。这个时候聊天慢慢多了起来，吃过饭，稍作修整，因为路程比较赶，一点多就顶着烈日出发了。<br>  自信的我让他们先走，我在后面又多歇息了十分钟左右，恰恰在这一段，第一次扎胎。再次上路，已经看不到了他们的尾灯，出发二十分钟左右，感觉越骑越沉，然后感觉到后胎没气了。没错，扎胎了，炙热的太阳烘烤着大地，想要把世界蒸糊了一般，前前后后可见的沿路的树没有一棵茂盛到可以提供荫蔽的地方，我只好把车推到路边，卸驮包、拆后轮、换内胎、打气、装后轮、重装好驮包，我也感到有点头晕了。但是我还不知道是中暑，依旧用魔术头巾遮住口鼻向前骑行，第一次看到在一座桥的前面等着我的队友们，心里说不出的感谢。”走，我不用歇了“，继续和张大哥走在后面，看到一个正在洗车的小哥，让他往我们身上冲点水消消暑，小哥说”你们这个时候骑什么车？中午多休息一会儿晚点出发不好吗？“。就这样撑着，直到下午五六点，阳光柔和了一些，才感觉身上的暑气渐渐消退了。</p><p><img src="/%E9%9A%8F%E7%AC%94/47104/baotai.jpg" alt="baotai"></p><p><img src="/%E9%9A%8F%E7%AC%94/47104/yemu.jpg" alt="yemu"></p><p>  四、夜行，二次扎胎。这个时候晚上八点多，天已经黑了，体力不支的我们还在爬一座无名山，或者用”推“更加合适。这个时候，今天目的地雅安东升竹庄的老板已经沿途帮我们带驮包了。<br>  ”需要帮你们把驮包带上去吗？“老板问。<br>  ”不用，还有12km就到了。“我坚定的回答。<br>  可是，冲下隧道，距离”马踏飞燕“还有几百米，距离目的地还有9.3km缓上坡的十字路口，我停下来等红灯的时候，又察觉到扎胎了。<br>  ”你们先走，不用等我了，我补完胎就出发。“<br>  ”别补了，都几点了，还没吃饭，吃过饭还得调车子，洗衣服，洗澡，明天起得来吗？起来了体力还跟得上吗？赶紧给老板打电话过来接人。“<br>  我相信很多人都不能体会我心底当时在做的强烈的心理斗争——<br>  ”坚持下去，还有9km而已，你就算推过去，十点半也到了，不能怂！“<br>  ”你即使十点半到了，几点睡？明天人家都出发的时候你走不走？“<br>  ”第一天就推车，搭车，你好意思吗？“<br>  “‘不推车，不搭车’，后面三个字是‘不勉强’，你今天死磕自己，是的，今天可以推过去，但是明天呢？后面的二十几天呢？“<br>  ”你个怂包，第一天都坚持不下去，后面的路你直接放弃得了，还硬撑什么？“<br>  ”是，我怂，但是我今天不勉强自己。我中暑了，而且我不是一个人，他们体力也不行了，他们呢？难道我们要硬抗这眼前的9公里,而放弃后面的2000多公里吗？“<br> …</p><p><img src="/%E9%9A%8F%E7%AC%94/47104/baotai2.jpg" alt="baotai2"></p><p>  今天再来看那时的自己，还是应该坦诚，认怂了就是认怂了，没什么值得隐瞒的，如梭罗在《瓦尔登湖》里所说，”我出去生活，和我进来生活一样，有着同样充分的理由。“，那天我写下了——<br>  ”距目的地还有9.3km的时候，今天第二次扎胎，这个时候已经晚上20:30了，距中午吃饭已经过去了八个半小时，不能为了脸面和自己硬抗。我认怂，不换胎了，请救援车过来走了今天的最后9.3km。<br>  所以对我而言，第一天就是失败的。从速度到运气都烂爆了，跟以前的体质没法比，第一次扎胎，没找到可以庇荫的大树，在烈日下卸驼包换胎搞了20多分钟，有点小中暑。到目的地，吃了饭，补胎到22:00，到现在才收拾完毕。“<br>  这天，西瓜哥写到——<br>  ”第一天川藏线就给我来个下马威。中暑一次，爆胎一次。不是超累，是巨累。“</p><p>  搭车到了东升竹庄，看到了这么多骑友都在，绝大多数还是自己骑过来的，当时看到一个同龄的姑娘也在那边，我的内心好不难受。</p><p><img src="/%E9%9A%8F%E7%AC%94/47104/dongsheng3.jpg" alt="dongsheng3"></p><p><img src="/%E9%9A%8F%E7%AC%94/47104/dongsheng2.jpg" alt="dongsheng2"></p><p><img src="/%E9%9A%8F%E7%AC%94/47104/dongsheng1.jpg" alt="dongsheng1"></p><p>  东升竹庄在半山腰，刚刚到达，吃了饭，就请修车的大伯帮我检查车子的各个地方，除了脚撑子当时坏了，其他无恙。<br>  补胎的时候，一个穿红色衬衣、戴军帽的人对我说：<br>  ”为人民服务！嘿，你早点休息，要洗衣服先去洗，胎等会再补，洗衣机轰轰响，不要打扰到其他人民休息了。“<br>  我就这么瞅着他，感觉好熟悉，后来他值班，我去他那边讨藏茶水喝，聊天的时候才发现，这不神似《平凡的世界》里的孙玉亭吗？又红又专。不但性格像，外貌、打扮、装束也很像。<br>  期间他说，如果路上一只藏獒扑过来，你能打得过吗？<br>  我开玩笑说，分分钟的事，人还打不过獒吗？<br>  他说着就准备起身回家把自已养的藏獒拉过来，可把我吓了一跳，说，打不过，打不过。<br>  他说——<br>  ”习主席说，中国梦是我们这一代的，更是青年一代的。年轻人，不要吹牛，脚踏实地…“<br>  我…</p><p><img src="/%E9%9A%8F%E7%AC%94/47104/matafeiyan.jpg" alt="matafeiyan"></p><p>【上一篇：《#<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/4128/">青春万岁，追梦无罪#“迟到”的318川藏线Part3成都站：初次相识君莫笑，一路风雨感君恩</a>》】<br>【未完待续：《<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/22602/">#青春万岁，追梦无罪#“迟到”的318川藏线Part5#青春万岁，追梦无罪#“迟到”的318川藏线Part5中规中矩：岁月不饶人，可你并不孤独</a>》】</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
            <tag> 318 </tag>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>#青春万岁，追梦无罪#迟到的318川藏线Part3成都站：初次相识君莫笑，一路风雨感君恩</title>
      <link href="%E9%9A%8F%E7%AC%94/4128/"/>
      <url>%E9%9A%8F%E7%AC%94/4128/</url>
      
        <content type="html"><![CDATA[<p><strong>立风拙笔，知我罪我，一任诸公。</strong></p><blockquote><p>曾经你说，在下一个轮转，你一定要看到自己奔袭在这莽莽荒原。<br>从2018年8月15日那天起，你终于踏上被雨水冲刷着的路面，车轮在呼啸的风中转动，再看这路面，除了风雨抚摸侵蚀的痕迹，还有你生命流动的印记。<br>——题记</p></blockquote><p>  人至懒则无敌，今天终于从Part3开始记述318路上的故事了。前几天一直在想，是按路上、客栈、驻留、夜行者、我的天问等的主题来写呢？还是平常地按时间来写？想了想，最后决定应该按时间写，因为一路上的你都在成长，已在终点拉萨的你，再回眸东望起点之成都，已非你最初的模样。若在时间的流里，夕阳若落就落，冰雹若下就下，那才是过往岁月真真切切的一幕幕。</p><p><img src="/%E9%9A%8F%E7%AC%94/4128/departure.jpg" alt="departure"></p><h2 id="318骑行文化简述"><a class="markdownIt-Anchor" href="#318骑行文化简述"></a> 318骑行文化简述</h2><p>  这所有的一切要从五十年代说起——</p><blockquote><p>1950年初，解放军奉命进军西藏，完成祖国大陆统一的历史使命时，毛泽东主席指示进藏部队:“一面进军，一面修路”。11万人民解放军、工程技术人员和各族民工以高度的革命热情和顽强的战斗意志，用铁锤、钢钎、铁锹和镐头、劈开悬崖峭壁，降服险川大河。在4年多的时间里，川藏公路穿越整个横断山脉的二郎山、折多山、雀儿山、色齐拉等14座大山；横跨岷江、大渡河、金沙江、怒江、拉萨河等众多江河；横穿龙门山、青尼洞、澜沧江、通麦等8条大断裂带，战胜种种困难。工程的巨大和艰险，在世界公路修筑史上是前所未有的。在整个川藏、青藏公路的修筑过程中，3000多名干部、战士和工人英勇捐躯，一代业绩永垂青史。</p></blockquote><p><img src="/%E9%9A%8F%E7%AC%94/4128/czx.jpeg" alt="czx"></p><p>  川藏线成，最初赋予其生命的是一路上那一个个磕长头的朝圣者，后来，被第一批敢于冒险的旅行者探索征服，他们或徒步、或搭车、或通过其他工具辅助前行，当初的他们为了一个个单纯而坚定的梦想，用脚步丈量了318。<br>  上世纪六七十年代，自行车是最紧俏的工业品，上海永久牌自行车耳熟能详，八十年代末，我国自行车保有量达到了五亿辆，我家库房里至今还有一辆锈迹斑斑的二八大杠的凤凰牌自行车。靠自行车，我们第一次改变了自己的行进速度，由于城市的半径一般是由当时常用的最快的交通工具两小时路程决定的，一些城市的规模也因此而扩大，“开车太快，走路太慢，骑车才能看到人生最美的风景”也一度走红。<br>  从八十年代开始，已有人陆陆续续迈入川藏，用脚步丈量它的长度，用心灵去感悟他的震撼。<br>  1998年，318起点，上海人民广场，一个叫刘文峰的汉子，沿318一路向西，最最普通的自行车，日用品改装过来的装备，当时的路况和沿途设备服务几乎为零，历时一个多月抵达了拉萨，当之无愧地被奉为”骑行318第一人“，从成都出发却也用了二十四天的小弟我在这里膜拜一下。</p><p><img src="/%E9%9A%8F%E7%AC%94/4128/lwf.jpeg" alt="lwf"></p><p>  进入二十一世纪，热衷于挑战的骑行者愈来愈多，随着06年《中国国家地理》的普及，及08年谢旺霖出版《转山》，11年被改编为电影，引发川藏线、滇藏线、青藏线、新藏线骑行的高潮，因为这批热血的人发现原来我国有如此壮阔雄伟的地方，一辆小小的自行车也能做出如此大气磅礴的事。在我们自驾去珠峰大本营的路上，还看到一批国际友人的骑行队伍。</p><h2 id="before-departure南通longitude12086latitude3201成都longitude10407latitude3067火车行程约2000km"><a class="markdownIt-Anchor" href="#before-departure南通longitude12086latitude3201成都longitude10407latitude3067火车行程约2000km"></a> Before departure：南通（longitude：120.86；latitude：32.01）——成都（longitude：104.07；latitude：30.67）火车行程约2000km</h2><p>  约莫记得是七月下旬吧，各个客户的需求一波接着一波，我连续加班三四天，是的，是早晨六七点睡觉的那种，太阳将升未升，我已睡眼朦胧。在工作休息的间隙，我喜欢读读书放松一下，当时在看的是一部叫做《<a href="https://baike.baidu.com/item/%E8%97%8F%E5%9C%B0%E5%AF%86%E7%A0%81/3170910?fr=aladdin">藏地密码</a>》的小说，已经读到了最后一本《藏地密码10(神圣大结局)》，说不清、道不明，只知道这部读了两年的小说再次撩起了心底那个关于骑行川藏线的心弦，是啊，西藏千年秘史、藏传佛教秘史、藏獒传说、宁玛古经、格萨尔王史诗、布达拉宫、转经筒、经幡…哪一个不是引起你内心一阵阵悸动的元素？那，如果，我说如果，天葬、磕长头、“唵（ōng）嘛（ma）呢（nī）叭（bēi）𠺗（mēi）吽（ hōng）”、脚下的流云就在你眼前，那又是一种何等的快意呢？</p><p><img src="/%E9%9A%8F%E7%AC%94/4128/xz.jpeg" alt="xz"></p><p>  于是乎，我开始慢慢重拾关于318的念想，重拾肆意青春的心跳，重拾当年不羁放纵的热血，重新了解川藏线、318，于是每到晚上，你就能在各个相关的贴吧、QQ群、公众号下面看到我的留言、提问，这也说明，在此之前，我对川藏线知之甚少，才能写出这样简略的攻略——《<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/7903/">2018/8骑行西藏行程安排、路线图及装备清单</a>》。但，这就是我，不喜欢太过详细的计划，只是在已有的知识上搭建一个框架，而里面想怎么装填，就交给在路上的我了，原本此时的我想在这里建一堵墙，而后来的我却在这里摆上了沙发；原本想唤三两个朋友喝茶，却和一群陌生人打的火热；原本想去看日出，却早早出发叫了一碗<a href="https://baike.baidu.com/item/%E7%B3%81%E6%B1%A4">糁汤</a>；原本想去看云海的波澜，却止步于门口两位老者的棋盘…C’est la vie，这就是生活，这就是航线外的人生。<br>  攻略上说，”三个人的队伍最稳定“，而我觉得，三天之后，或者十天之后，由于想法、体力、计划不同，可能就会分成两拨。所以，我一共找到了五男三女八个未曾谋面的网友，相约8月15日出发，预留了两周收尾各个项目，我在8/11这一天终于踏上了南通——成都的列车，我心向往藏地的悸动，不亚于在铁轨上呼啸的列车。<br>  抵达成都是8/12早上，到了与各位网友约好的<a href="http://j.map.baidu.com/WAKA2">心旅单车客栈</a>，这个时候，风光早上已经到了，我们也已经知道，可能八个人只能来运动员我们三个了。客栈还有一个叫SC的伙伴，家有大型养殖场，他的队友据说已经到了拉巫山，而他，也在客栈休息了十天，在等网购的帐篷睡袋，之后反向挑战新藏线。</p><p><img src="/%E9%9A%8F%E7%AC%94/4128/wfg.jpg" alt="wfg"></p><p><em>风光，河南商丘人，与我同龄，亦是同乡，武汉大学本科毕业，原就职于恒大地产集团有限公司，由于厌倦于单调乏味的工作，大概于七月份辞职，去福建泉州清源山骑行拉练了半个月左右，期间向我二哥（16年川藏线，今年九月份又特地去了色达）和泽宇（哪一年骑行川藏记不清了，只知道他曾经在路上碰到了一头死野猪，驼到了下一站）了解了川藏线基本情况。”很烦“这两个字就是从他口中慢慢传开的，我要强调一下这两个字怎么读的更有韵味，&quot;很&quot;字轻轻带过，”烦“字起音上齿抵住下唇，以上声（第三声）“V”1/4处吐出，尾音提升拉长。</em></p><p>  按他原来的话说——<br>  ”现在最担心的就是折多山这一段，过不去怎么办，我爬坡很慢的，在清源山拉练爬坡的时候，女的都超我车，当时我还没带这么多行李。“<br>  ”我觉得差不多过了折多山，我们这些人就会分成两拨，所以要准备至少两套工具。“<br>  后来啊，经常把”很烦“挂在嘴头开玩笑的他，爬坡速度比我还快，让我这个有过骑行环台湾岛经验的人自叹不如。也是全队第一个提出要去“珠峰大本营”的人，有两三个人就会出发。<br>  PS一句：此人单身，是个下巴上有疤的男人，有意者文末留言<sup>~</sup> *</p><p>  至于为什么我们在<a href="http://www.517318.com/portal.php">517318</a>、<a href="http://57318.org/">57318</a>、<a href="http://map.baidu.com/detail?qt=ninf&amp;uid=c6276e858282381342ab9adb&amp;detail=cater">飞登</a>等等最终选择了这家联盟客栈，暂不记述。这家客栈给人的感觉是很不错的，干净舒适、阳光活力、热血青春，大家体会一下：</p><p><img src="/%E9%9A%8F%E7%AC%94/4128/xinlv.jpg" alt="xinlv"></p><p><img src="/%E9%9A%8F%E7%AC%94/4128/1xinlv.jpg" alt="1xinlv"></p><p><img src="/%E9%9A%8F%E7%AC%94/4128/2xinlv.jpg" alt="2xinlv"></p><p><img src="/%E9%9A%8F%E7%AC%94/4128/3xinlv.jpg" alt="3xinlv"></p><p><img src="/%E9%9A%8F%E7%AC%94/4128/4xinlv.jpg" alt="4xinlv"></p><p><img src="/%E9%9A%8F%E7%AC%94/4128/5xinlv.jpg" alt="5xinlv"></p><p><img src="/%E9%9A%8F%E7%AC%94/4128/6xinlv.jpg" alt="6xinlv"></p><p>  “成都心旅川藏服务站”（微信公众号：xinlv517318）创立于2010年3月，创始人兼高级技师是川藏线上的“鬼哥”，后来我们聊天才知道——</p><p><img src="/%E9%9A%8F%E7%AC%94/4128/gg.jpg" alt="gg"></p><p><em>姓甚名谁不详，估摸着三十左右，应该是四川本地人，人称“鬼哥”，中学时代由于跑步速度比较快，辍学前往中缅边境当兵，隶属于解放军，曾为了吃一个西瓜和战友偷偷翻越中缅，被守卫边疆的武警边防军部队战士发现，互相打斗了一番，后来演变成了群殴，他提起这一段，表情欢快，是啊，谁还没有过岁月青葱？退役后，于零几年骑行318川藏线，出于对川藏线的热爱及发现了相关商机，于是创立了“心旅”，以“心无界 行无疆”为宗旨，以——<br>我们不只是帮您修车，更是教您修车；<br>我们是骑行专家，不是半路出家；<br>我们吹牛逼不专业，但我们硬件专业、技术专业。<br>为口号，把318的经验推广给一批批骑行者。</em></p><p>  下午，去了武侯祠，与明天即将出发去印尼工作的扬威匆匆碰了个面，两三个小时，得知这家伙竟然通过微博找了个女朋友，也是服了。</p><p><img src="/%E9%9A%8F%E7%AC%94/4128/wyw.jpg" alt="wyw"></p><p>  当天晚上，何队也来到了客栈。由于之前未曾联络，当时也没准备一起出发，所以只简单聊了聊。</p><p><img src="/%E9%9A%8F%E7%AC%94/4128/hyz.jpg" alt="hyz"></p><p><em>何队，广东茂名人，约等于90后的80后，原从事于电子通讯产品行业，足球迷，克罗地亚十号球衣卢卡-销魂外脚背-莫德里奇的忠实追随者，五月辞职，月底出发历时八天810km环海南岛，之后骑行经广东茂名——广西桂林——湖南凤凰古城——贵州铜仁——重庆武隆等抵达成都。本来准备在成都修整一天继续出发的，但是由于另一个深圳出发走另一条线路的骑友（下篇记述）明天还不能抵达雅安，遂多在成都呆了一天。于是鬼哥指定他为我们15号骑行大军的队长，在那时的他看来，有些莫名其妙——<br>“单飞了两千多公里，在成都住两天，莫名其妙成了个杂家军的队长，好吧，能不能跟着我到拉萨就看你们自己造化了。”<br>后来在巴塘到芒康那段危险路段，只有他和当时隔壁队的骑友（大概下下篇记述）按下了更危险的另一个选项的按钮。<br>PS一句：此人也单身，拍照技术超好，适合给女朋友拍照，有意者文末留言<sup>~</sup></em></p><p>  此时也认识了张大哥——</p><p><img src="/%E9%9A%8F%E7%AC%94/4128/zdg.jpg" alt="zdg"></p><p><em>张大哥，河南郑州人，三十多岁，热衷于政治军事等国际资讯，我从张大哥那里补充了不少的信息，认为“有些事现在不做，以后就没机会了”，哪怕已经结婚，而且有了孩子，还是选择了出发。六七月份在一个露天烧烤摊，正与一批年轻时的好友把酒言欢，他说——<br>“咱哥们几个要不要一起上318转转？”<br>”你说啥？咱都多大了，还去那地方瞎转悠啥？‘老婆孩子热炕头，幸福快乐天天有’不好吗？“<br>  可是，他还是准备出发，今年自己到318熟悉熟悉路线，明年带着老婆孩子自驾再来一趟318。听他说道，当时怕高原反应，提前买了几盒红景天，当天晚上就喝了个精光；他还开玩笑说道——<br>  ”以后要是我给女儿找女婿，他要是没骑过川藏线，我都不愿意。“</em></p><p>  成都第三天8/14，本准备去都江堰或者大熊猫繁殖基地看看的，可是，时间真的来不及。早上，运动员到了，我去地铁站接了他——</p><p><img src="/%E9%9A%8F%E7%AC%94/4128/xyd.jpg" alt="xyd"></p><p><em>运动员，东北人，九七九八还是九九年记不清了，由于原名有”玉迪“两字，故自称”玉帝“，我们之所以称他为”运动员“，是因为他是空手道国家队队员，挂名上海体育学院，目前在泰国学习泰拳。花花公子任风流，据我所知，前女友两只手数不过来，曾为了追求一个影视专业女子，一个打拳的”糙汉子“活生生看了两个小时的高雅艺术话剧。性格豪爽耿直，身材壮实，走路姿势都是欠打的模样，一路上为我们带来了很多欢乐，听说现在又换了一个女朋友。第一次听说”营养？我都穷的吃泡面了。你还跟我谈营养？“这句话，就是他说的。<br>从原搏击俱乐部辞职，一时没有什么球事，脑子一抽，就来到了318这条路。当然，另一个目的，嘿嘿，就是在路上能再找个女票。<br>”能不能骑到先试试呗，试试又不犯法。“</em></p><p>  然后我们倆去看自行车，本来都是准备租的，后来一想，租车800-1000，买一辆2000左右的车子，到拉萨还能卖个1000多，相当于租了辆新车，稍微在成都周边逛了逛，我们就骑着自己的新车回到了客栈。<br>  于是和大家一起去买药，红景天、纱布、碘酒、感冒、发烧、创可贴、云南白药、拉肚子的等等等等。再加上原来自己备的药，加起来要有五六斤左右。</p><p>  晚上，在我们打着灯调节自行车的时候，刘斌出现了——</p><p><img src="/%E9%9A%8F%E7%AC%94/4128/lb.jpg" alt="lb"></p><p>*刘斌，云南昭通人，路上还在读大冰的一本书，很多做决定的时候都是临时起意，比如说骑行318，刚冒出了想法，就到了成都买了车子和装备，刚买了车子就到了客栈，刚到了客栈就问我们是不是明天出发，于是明天就和我们一起出发了。临出发，理了个发，三毫米的那种。幽默有趣，创造了”哎“这个我们队伍里的流行语，一定要用波浪的音调才能读出这两个字。他爱的专一而坎坷，可能是上天太无情，青梅竹马的女朋友不幸殒命。而他谈起这段往事的时候，眼角闪过的那丝悲伤，我至今还记得。虽嘴里说自己走出来了，但是真的吗？原谅我又提起了这段事，你若不想让别人知道，私聊我立马删除。<br>他第一天速度很慢，但是后来，却是我们队伍里的第一梯队。临走那一天，他发了一条朋友圈</p><p>  ”有奖竞猜，猜猜我能坚持几天！下注了下注了“<br>  PS一句：此人单身，也是个下巴上有疤的男人，有意者文末留言<sup>~</sup>蓝翔毕业，后到新东方进修，是可以用挖掘机炒菜的高级人才*</p><p>  由此可见，当时不仅是我，他们也没有完全的把握能走完全程，我们能做的，不过是迎难而上，正面面对。很多人，在出发前，总是担心自己车辆不够好，身体素质不够好；怕车子刮底盘，怕受不了高原反应。有句话也是这么说的，“没有到不了西藏的车，只有到不了西藏的人。”<br>  不知不觉写了这么多，原定的”西出折多“只能放在下一篇了。</p><p><strong>致谢——</strong></p><blockquote><p><a href="http://mil.eastday.com/">头条军事</a>《<a href="http://mil.eastday.com/a/180312115043480.html?qid=jiegeng">川藏公路，只有中国军人才能修建完成，为此每公里牺牲7位军人</a>》<br><a href="http://bbs.biketo.com/">美骑论坛</a>《<a href="http://bbs.biketo.com/thread-2118931-1-1.html">第一批骑行川藏线的勇士都玩出过什么“野路子”？</a>》</p></blockquote><p>【上一篇：《<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/49480/">#青春万岁，追梦无罪#“迟到”的318川藏线Part2出发前的日子:每一段你不曾忘记的岁月，总有些刻骨铭心的故事 </a>》】<br>【未完待续：《<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/47104/">#青春万岁，追梦无罪#“迟到”的318川藏线Part4牛刀小试：坚持是你，认怂亦是你</a>》】</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
            <tag> 318 </tag>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>#青春万岁，追梦无罪#迟到的318川藏线Part2出发前的日子:每一段你不曾忘记的岁月，总有些刻骨铭心的故事</title>
      <link href="%E9%9A%8F%E7%AC%94/49480/"/>
      <url>%E9%9A%8F%E7%AC%94/49480/</url>
      
        <content type="html"><![CDATA[<p><strong>立风拙笔，知我罪我，一任诸公。</strong></p><blockquote><p>少时不见山，便觉无奇趣。<br>狂发从乱歌，情来任闲步。<br>此心谁共证，笑看风吹树。<br>——题记</p></blockquote><p>  早上在朋友圈看到咏哥逝世的消息，我以为是fake news，晚上再次看到，不禁潸然泪下，一个个曾经熟悉的人逝去，似乎在向我们低语——<br>  “你们老了，属于你们的时代也不在了。”<br>  在心底为他们默哀。</p><p>  这么久才开始动笔写Part2，我也是够懒了。在出发前，有四件事是为了骑行318作为准备的，一曰纯徒步，二曰有氧跑，三曰竞速跑，四曰短途骑行。</p><h2 id="一徒步失败不可怕可怕的是不敢再次出发"><a class="markdownIt-Anchor" href="#一徒步失败不可怕可怕的是不敢再次出发"></a> 一：徒步——失败不可怕，可怕的是不敢再次出发</h2><p>  2014年9月，凌晨三四点，暗夜，寒风，微雨，山路，两个人，鞋底摩擦路面的声音，长久的沉默。<br>  “别走了，我们叫救援车吧，放弃不是你先提出来的，算是我，我们别走了。”<br>  H君说道，此时我们已经不眠不休走了20个小时，内心里两个声音强烈的挣扎——<br>  “走，坚持下去。”<br>  “别勉强，身体要紧。”</p><p>  高考结束，我和H君接触到了中国扶贫基金会举办的“<a href="http://www.shanxingzhe.org.cn/">善行者</a>”活动，此活动以“每一步都会带来改变”为宗旨，要求参与者完成50km或100km的徒步运动，并在活动前后筹集善款，帮助边远山区的孩子新建厨房、图书馆、置办文具等。<br>  2014年是善行者的第一届活动，于是我和H君、Y君和Z君组成了一个四人队伍，由于出发的时间是刚开学（2014/9/13–2014/9/14），Y君和Z君无法请假，最终只有我和H君到达了起点，北京居庸关。<br>  回头再看，我还是低估了这次徒步活动，自以为体力无碍，为了给自己增加难度，浅浅感受一下当年红军徒步行军的状态，除了指南针、口哨、手电、瑞士军刀等基本求生用具，连登山杖（我俩临时捡了两根树枝当做登山杖使）都没有准备，单肩包，鞋还是军训的那种绿军鞋。</p><p><img src="/%E9%9A%8F%E7%AC%94/49480/sxz.jpeg" alt="sxz"></p><p>  最初十公里左右爬长城、下长城，可谓一片美景尽收眼底，不过小CASE而已，接着开始走山路，装备不足的弊端就开始暴露：压倒我的不是10kg，而是时间，单肩包无论挎在哪一边，随着时间的流逝与上下颠簸，肩膀就开始疼痛；没有登山杖，爬山耗了别人一倍的体力，下了两三座山，膝盖疼痛难忍；在军训鞋里的脚底，穿了两双袜子，磨出了几个泡，挑破之后，又磨出了几个泡，不管它，泡下面又磨出了新泡…<br>  傍晚，下了一场雨，没带太厚的外套，套上了一次性雨衣，吃了点干粮，继续前进，可谓饥寒交迫。<br>  H君开口后，我们停下了脚步，我抬头看了看天空，模糊的月光，没有一颗星星，已经走了20个小时，平均时速不足4km/h，还有30多公里，至少还得再爬两座山，脚底的疼痛钻心的传来，在体力与精力的极限边缘，我，屈服了，或者说崩溃了。即使H君不说要放弃，我也会提出来，一方面是因为当时心底的一个问题在拷问我：我们徒步的目的难道是把自己置于险境，再想办法脱离，这是我们徒步的初衷吗？另一方面，此时我和H君都在一瘸一拐的向前挪移，距离上一次休息才五分钟，距离上一次休息不足二十分钟，距离上上次休息不足半个小时，也就是说现在的我们倒在地上就能睡着，我看着H君缓慢的挪移很是吃力，估计H君看我的动作也是很吃力，出于对队友的关心，自己才开了口。<br>  “我们现在放弃了，明年一定再来，一定要完成这个100公里。”<br>  很多时候，我们花费大量的时间、精力去参与到一件事情中，并矢志不渝，途中却发现，我们早已背离了初衷，却总是羞于谈论过去的失败与半途而废，今天我坦诚地面对自己，并告诉自己：你可以失败，可以放弃，但以后的日子，不要为当初的半途而废而后悔。</p><p>  一年后，2015/9/13，H君迫于父亲的压力，无法出发，装备齐全的我和蓝翼（女生）成功挑战了100km，第26.5小时抵达了终点。</p><p><img src="/%E9%9A%8F%E7%AC%94/49480/sxzfinish.jpeg" alt="sxzfinish"></p><p>  当时我说——<br>  那天放弃是正确的，要不然估计要废在后面的两座山（都200多米）上。最后感想:两座山的夜行路程后，拼的不是体力，而是意念。我的意念是:我不是一个人在行走。今天再次感谢蓝翼（女生）一路的陪伴，也感谢当天临时组队的另外两名伙伴，我们，走完了！</p><h2 id="二有氧跑二十一天后遇到另一个自己"><a class="markdownIt-Anchor" href="#二有氧跑二十一天后遇到另一个自己"></a> 二：有氧跑——二十一天后，遇到另一个自己</h2><p>  第一次失败的徒步回来，同学们还在军训中，徒步结束后的我又在北京西站献了血，到学校无法再参加军训，只好坐在帐篷下，看着同学们军训，大学的军训，我只参加了开幕式与闭幕式。<br>  后来身体慢慢恢复了，为了准备318的骑行和下一次徒步，我开始了有氧跑步，刚开始选在早上，带着“那一刻，我是唯一一个引起雏鸟振翅的人；如果那一刻，我是唯一一个凝视朝阳的人”的信念，跑了1km就气喘吁吁，后来天气太冷，起床困难，没能坚持多久；后来才发现自己更适合晚上去跑步，不论刮风下雨，连续跑到了学期末，从1km的乏力气馁，到2km、3km、5km、10km、20km的轻松应对。我又问自己：你不间断跑步的目的是什么？</p><p><img src="/%E9%9A%8F%E7%AC%94/49480/17km.jpeg" alt="17km"></p><p>  跑步不是为了每天都去跑，不是为了坚持而坚持，而是为了上述的目的，所以后来的策略变成了立flag，用目标管理的思路进行跑步，比如这学期要跑够200km，这学期要跑够300km，目标都一一完成。今年我定的目标是502km，目前已完成200km，到明年三月份还有四个月，达成目标应该没问题。<br>  有氧跑步期间我写下过一句话：塑造自己，过程很疼，但你最终能收获一个更好的自己。</p><h2 id="三竞速跑猎鹰属于苍穹少年属于世界"><a class="markdownIt-Anchor" href="#三竞速跑猎鹰属于苍穹少年属于世界"></a> 三：竞速跑——猎鹰属于苍穹，少年属于世界</h2><p>  这几年参与了多次10km健身跑，20km半马比赛，还未参加过全马。记忆最为深刻的是那次在台湾交换期间，与YW在高雄宝来的半马比赛，“再见宝来的美”是发起于宝来震后，居民恢复正常生活的邀请赛，在有专业运动员的参与下，感觉我们的成绩还不错。</p><p><img src="/%E9%9A%8F%E7%AC%94/49480/zjbldm.jpeg" alt="zjbldm"></p><p>  10km上坡，10km下坡。16公里处，由於下冲太快，小腿抽筋，停下了大概一分钟，一跑友說，“别跑了，严重了走都不能走了”，恰巧，一救援车就在前面50m处，我看了看，心里闪过了一下放弃的念头，但这次告诉自己，我不是两年前的我了，繼續拍打小腿，兩跑友從身边經過，注意到他們下坡采用蛇形跑法，遂模仿之，膝盖和小腿的疼痛感果然就不那么剧烈了。最後200m处，再次抽筋，蹦蹦跳跳到终点，挺佩服自己的。</p><p><img src="/%E9%9A%8F%E7%AC%94/49480/scmls.jpeg" alt="scmls"></p><p>  半马前一晚，我和YW都没有睡，讨论着过去的梦想，过去的傻事，以及过去的她。外面天亮了，我在动态里写到“猎鹰属于苍穹，少年属于世界”。</p><h2 id="四短途骑行这么危险你还坚持出发吗"><a class="markdownIt-Anchor" href="#四短途骑行这么危险你还坚持出发吗"></a> 四：短途骑行——这么危险，你还坚持出发吗？</h2><p>  这几年短途骑行了多次，拿南通来说，最东到过黄金海岸、吕四港；最南到过苏通大桥，前几天到了上海；最西在滨江公园沿岸骑行，；最北到达了海安。<br>  这么多次骑行，记忆最为深刻的，当属环台的那八天。</p><p><img src="/%E9%9A%8F%E7%AC%94/49480/BHGX.jpeg" alt="bhgx"></p><p>  出发前，很多关心我的朋友对我说：<br>  ”立风，别骑了，东岸死过很多人的？“<br>  ”十天呢，你外地人，就不怕出事吗？你觉得你体力能跟上吗？“<br>  ”这边路太窄了，骑机车出发吧，稳妥点。“<br>  “山体滑坡，下大暴雨，刮台风怎么办？”</p><p>  我感谢你们，说实话，那时的我也没有把握，也在犹豫。当时心里在想：来都来了，我命由我不由天，挑战一下又何妨？<br>  后来，走到最危险的苏花路段，当天山体滑坡，搭火车走过了那一段，也错过了传说中的断水清崖。<br>  那个时候也真的害怕自己在路上出了什么事，于是带了下面这张纸条就出发了。现在想想，也是高估了环台的难度，但对初次长途骑行的人来说，这里，也是这群人心中要拿下的一个高地。</p><p><img src="/%E9%9A%8F%E7%AC%94/49480/emer.jpg" alt="emer"></p><p>  一旦驰骋在未曾走过的路上，我们就不自然地投入到最自由的大自然的怀抱。如果你问：<br>  ”騎行的樂趣在哪裡？”<br>  我会回答：<br>  “一個轉角，一個上坡，眼前的景色，忽然引起了心中那一刹那的悸動”</p><p>  我还记得那只扑在我怀里的小鸟，那只跟了我一二十公里的鸟妈妈，那只山羊，那只猴子…我还记得最高点寿卡的一根香蕉，7-11里的一杯刨冰，涕泗横流的老伯伯，和他赌气的她，在重机车上的小哥，拿着地图向我描述他子女的大叔，追着我们跑喊“加油”的稚气小男孩…<br>  在路上，碰到了骑行的情侣、夫妻、好基友、父子…在和他们的交流中，我相信，共同走过这段路的人，足以语人生，我也相信，你们之间的情感会更加深厚，并历久弥坚。</p><p><img src="/%E9%9A%8F%E7%AC%94/49480/sk.jpg" alt="sk"></p><p>  那天我写道：每一個長途騎行的人，都會有一段故事，如果可以，停留再多哪怕一個小時，心靈的共鳴，會讓清水斷崖的波濤，洶湧另一個夕海大洋下。</p><p>  年轻真好，年轻的我们一路狂奔，从十几岁跑到了二十几岁；年轻真好，年轻的我们指点江山，从朝阳初升到星空满天；年轻真好，年轻的我们思绪纷飞，从大好河山到浩渺宇宙。<br>  这是我318出发前的一些故事，匆匆收笔，与你们分享。</p><p><img src="/%E9%9A%8F%E7%AC%94/49480/shfl.jpg" alt="shfl"></p><p>【上一篇：《<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/33934/">#青春万岁，追梦无罪#“迟到”的318川藏线Part1简述缘由:一路风光狂一世，四海同行客四方</a>》】<br>【未完待续：《<a href="https://guopengzhen.com/%E9%9A%8F%E7%AC%94/4128/">#青春万岁，追梦无罪#“迟到”的318川藏线Part3成都站：初次相识君莫笑，一路风雨感君恩</a>》】</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
            <tag> 318 </tag>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>#青春万岁，追梦无罪#迟到的318川藏线Part1简述缘由:一路风光狂一世，四海同行客四方</title>
      <link href="%E9%9A%8F%E7%AC%94/33934/"/>
      <url>%E9%9A%8F%E7%AC%94/33934/</url>
      
        <content type="html"><![CDATA[<p><strong>立风拙笔，知我罪我，一任诸公。</strong></p><blockquote><p>这次旅行在我看来其实并不完美，有许多遗憾，在我老去的时候，就依偎着青春的回忆呼吸，怀揣着曾经的遗憾，背上行囊再次出发。从此一生不再停歇，永远穿行在这个美丽又遗憾的世界。<br>——题记</p></blockquote><p><img src="/%E9%9A%8F%E7%AC%94/33934/318map-1.jpg" alt="318map-1"></p><p>  出发前，总在忌惮这忌惮那；出发后，眼里只有抵达目的地；抵达后，就可以吹吹牛，“这也没什么难的”。<br>  其实早就想动笔开始记述这段生活的痕迹了，记一下所见所闻，所思所感，由于“记忆是一位带有太多偏见和情绪的编辑,他常自作主张地留下他喜欢的东西”，所以我一等再等，一等再等，直到记忆也微微泛黄，这时脑海里浮现的就是那些弥足珍贵的人、事、景、情。<br>  我过去的这几年，也正包含大学的这几年，过得过于匆忙，我知道我想赶到哪里去，所以一直向那个方向奔波。偶尔停下脚步，停下来听听那风，看看那云，读读那故事，感受那温度，观察一只爬行的虫子，聊聊老人关于一座城市的记忆。</p><p><img src="/%E9%9A%8F%E7%AC%94/33934/318ontheway.jpg" alt="318ontheway"></p><p>  关于这次旅行，我们还真得想想一个问题：英国在战时资源短缺的时候，在火车站旁边立了一个广告牌——“你有必要进行这次旅行吗？”<br>  这次，我的回答是有必要。原因如下——<br>  今天路上的苦逼，往往是因为昨天吹过的牛逼。高中时，忘记了是从哪里获得的勇气，我对大家说：“我毕业后，要骑行川藏线”，当时的我甚至还不知道川藏线还分南线（G318）北线（G317），只知道我一定要出发，为何出发？之前却没有一个能够说服自己的答案。<br>  或许如乔治●马洛里所说，“Because the mountain was there！（因为，山就在那里！）”；<br>  或许当时年轻，缺少了所谓的男子汉气概，就要去证明自己，一如在整个人类历史上，总看到男性愿意冒险犯难甚至牺牲生命，只为了让人夸赞一句：“他是个真正的男人”；<br>  或许觉得生活平淡无奇，想寻求一种刺激，关于勇气、关于信念、关于穿越世界的诺言；</p><p><img src="/%E9%9A%8F%E7%AC%94/33934/mybike.jpg" alt="mybike"></p><p>  或许如毛姆在《月亮和六便士》里谈到的心灵故乡，“…也许正是在本乡本土的这种陌生感才逼着他们远游异乡，寻找一处永恒定居的处所…有时候一个人偶然到了一个地方，会神秘地感觉到这正是自己的栖身之所，是他一直在寻找的家园…他在这里终于找到了宁静。”；<br>  或许如梭罗所认为，我们每个人都可能有一块属于我们自己的地方，这个地方可能并不是我们现在所匍匐的地方，但不是我们每个人都会出发去寻找它。它不仅是我们身体的栖所，也是我们心灵的故乡，精神的家园；它给我们活力，给我们灵感，给我们安宁。我们可能终老于此，也可能离开它，但即使离开，我们也会像安泰需要大地一样需要它；<br>  或许正如我之前一次次地出游，只为了寻找一些问题的答案，在旅途中，有些难以决断的事情，在旅途中的某地某刻，忽然间就明白了，而我这次也在寻求一些答案，有些问题之后的手账中我会提及，有些问题暂不便提及；<br>  或许是我这段时间太忙了，忙着想去抵达那个高度，当我再次动起出发的念头时，我正在起早摸黑地忙碌着，忽然那天想到：“难道这样忙碌是我的舒适区？”从来没敢这样想过，这般忙碌竟然是自己的舒适区，以为一直努力坚持就会再往上跳一个台阶，之后在路上我想明白了未来该何去何从？<br>  或许是对现状的逃避，或许是为了一个人，或许是一次无缘由的神经质，或许是心底深处的召唤…</p><p><img src="/%E9%9A%8F%E7%AC%94/33934/lzjy.jpg" alt="lzjy"></p><p>  无论如何，总之，我斟酌了好久终于在2018/8/15这天出发了。</p><p>  5200——2200——24——14——10——4——1。<br>  一切的一切，从这几个简单的数字开始：成都出发，1个人迟到了4年，在路上遇到了另外的一群渣渣组成了一支10人的队伍，翻过了14座山，历时24天，骑行2200公里，抵达拉萨，紧接着自驾到达了海拔5200m的珠峰大本营。</p><p>【未完待续：《<a href="https://blog.svenhetin.com/late318-part2/">#青春万岁，追梦无罪#“迟到”的318川藏线Part2出发前的日子:每一段你不曾忘记的岁月，总有些刻骨铭心的故事</a>》】</p><p><img src="/%E9%9A%8F%E7%AC%94/33934/318bestse.jpg" alt="318bestse"></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
            <tag> 318 </tag>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018/8骑行西藏行程安排、路线图及装备清单</title>
      <link href="%E9%9A%8F%E7%AC%94/7903/"/>
      <url>%E9%9A%8F%E7%AC%94/7903/</url>
      
        <content type="html"><![CDATA[<h2 id="装备清单"><a class="markdownIt-Anchor" href="#装备清单"></a> 装备清单——</h2><table><thead><tr><th>川锅线物品清单</th><th></th><th></th><th></th></tr></thead><tbody><tr><td>名称</td><td>参考价格</td><td>必备(Y/N)</td><td>备注</td></tr><tr><td>自行车</td><td>1200+</td><td>Y</td><td>美利达勇士/雄狮/公爵/挑战者系列/捷安特ATX系列(身高175以下不建议27.5寸)</td></tr><tr><td>货架</td><td>60+</td><td>Y</td><td></td></tr><tr><td>前货架</td><td>50+</td><td>N</td><td>如果东西比较多</td></tr><tr><td>驮包</td><td>1 00+</td><td>Y</td><td></td></tr><tr><td>防雨罩</td><td>30+</td><td>N</td><td></td></tr><tr><td>橡胶绑绳</td><td>8+</td><td>Y</td><td>两根以上</td></tr><tr><td>挡泥板</td><td>25+</td><td>N</td><td>一套、看你愿不愿意挡泥了</td></tr><tr><td>密码锁</td><td>10+</td><td>N</td><td>防君子不防小人</td></tr><tr><td>后拨保护器</td><td>6+</td><td>N</td><td></td></tr><tr><td>水壶架</td><td>10+</td><td>Y</td><td>建议两个,一冷一热</td></tr><tr><td>☐哨</td><td>2+</td><td>Y</td><td>以防万一,求生</td></tr><tr><td>指南针</td><td>15+</td><td>N</td><td>偏离318游玩爱好者必备</td></tr><tr><td>骑行码表</td><td>20+</td><td>N</td><td></td></tr><tr><td>车铃或气喇叭</td><td>8+</td><td>N</td><td></td></tr><tr><td>强光手电</td><td>40+</td><td>y</td><td></td></tr><tr><td>骑行头盔</td><td>120+</td><td>Y</td><td></td></tr><tr><td>遮阳帽</td><td>15+</td><td>N</td><td></td></tr><tr><td>骑行眼镜</td><td>60+</td><td>Y</td><td></td></tr><tr><td>魔术头币</td><td>15+</td><td>N</td><td>两条以上</td></tr><tr><td>速干毛币</td><td>12+</td><td>N</td><td>两条以上</td></tr><tr><td>骑行水壶</td><td>25+</td><td>Y</td><td>建议两个,一冷一热</td></tr><tr><td>骑行半指手套</td><td>45+</td><td>N</td><td></td></tr><tr><td>骑行长指手套</td><td>35+</td><td>Y</td><td></td></tr><tr><td>车前杠包或车首包</td><td>10+</td><td>N</td><td>手机、零钱等</td></tr><tr><td>轻便型腰包</td><td>35+</td><td>N</td><td>手机、零钱等</td></tr><tr><td>袖套、腿套</td><td>20+</td><td>Y</td><td></td></tr><tr><td>软坐垫、坐垫</td><td>20+</td><td>Y</td><td>屁股很重要,屁股很重要</td></tr><tr><td>骑行内裤或骑行裤</td><td>40+</td><td>Y</td><td>屁股很重要,屁股很重要</td></tr><tr><td>束裤带或硅钢条</td><td>8+</td><td>N</td><td></td></tr><tr><td>骑行护膝</td><td>15+</td><td>N</td><td>膝盖也重要</td></tr><tr><td>尾灯或青蛙灯</td><td>10+</td><td>Y</td><td>安全第一</td></tr><tr><td>修车补胎工具</td><td>20+</td><td>Y</td><td>一个队伍一套,建议西格玛PT6</td></tr><tr><td>便携高压气筒</td><td>25+</td><td>Y</td><td>一个队伍2个,注意法式和英式☐</td></tr><tr><td>尖嘴钳</td><td>14+</td><td>Y</td><td>一个队伍一个</td></tr><tr><td>刹车线、变速线</td><td>10</td><td>N</td><td>一个队伍可以备一套</td></tr><tr><td>内胎</td><td>15</td><td>Y</td><td>预防扎胎,建议正新,2条</td></tr><tr><td>全地形外胎</td><td>55+</td><td>Y</td><td>同车型三个人备一条哦</td></tr><tr><td>碟刹车来令片</td><td>15+</td><td>Y</td><td>两人备一对</td></tr><tr><td>链条油</td><td>15</td><td>Y</td><td>一队一瓶</td></tr><tr><td>截链器</td><td>12+</td><td>Y</td><td>一队一个</td></tr><tr><td>魔术扣</td><td>6+</td><td>Y</td><td>三个人带一对</td></tr><tr><td>便携电吹风</td><td>60+</td><td>Y</td><td>-支队伍一个,吹干鞋子、衣物</td></tr><tr><td>插线板</td><td>30+</td><td>N</td><td>旅店一般不够用,建议2-3人备一个六孔的</td></tr><tr><td>辐条及辐条扳手</td><td>1+</td><td>N</td><td>五个人队伍带4-6根,以防万一</td></tr><tr><td>日用产品及电子设备</td><td>生活用品(牙刷牙膏、香皂、洗面奶、袋装洗发水小瓶装洗衣液、卫生纸、小刀)、夜用型护垫(缓冲)、手机及充电器、MP3或外置小功放、数码相机及充电器、移动电源充电宝、GPS码表或轨迹记录仪、剃须刀等</td><td>看情况</td><td></td></tr><tr><td>衣服(控制在全身两套)</td><td>长袖T恤+运动长裤-套、 短袖T恤+骑行袖套+短裤一套、骑行皮肤风衣一件、抓绒衫-件、棉衣/羽绒服/冲锋衣一件、骑行服套(可用T恤+袖套代替)、骑行雨衣裤、内裤2-4条、 袜子3-5双、洞洞凉鞋一双、骑行鞋(推荐3537军鞋)、鞋套一双等</td><td>看情况</td><td></td></tr><tr><td>药品及食品(路上一般能买到)</td><td>感冒药一盒、阿莫西林一盒、阿司匹林、泻立停、藿香正气水、清凉油、云南白药气雾剂创可贴、盐、葡萄糖、白糖、唇膏、防晒霜、酒精纱布棉签、红景天及肌苷片、士力架、压缩饼干、牛肉干、蛋黄派小面包等</td><td>看情况</td><td></td></tr><tr><td>其他</td><td>身份证（必须）、现金500左右、帐篷、防潮垫、防水午休地席、零度以上睡袋、抓绒睡袋、游泳裤、高原打火机（康定有售）、装车袋或筒装打包车袋、记号笔、对讲机超市塑胶袋、手机地图、海拔仪</td><td>看情况</td><td></td></tr></tbody></table><h2 id="路线图"><a class="markdownIt-Anchor" href="#路线图"></a> 路线图——</h2><p><img src="/%E9%9A%8F%E7%AC%94/7903/compressed-yrms.png" alt="compressed-yrms"></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
            <tag> 318 </tag>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>习立风浅谈从热点看沉默的螺旋：为什么嗓门越大，越有理？</title>
      <link href="%E9%9A%8F%E7%AC%94/39158/"/>
      <url>%E9%9A%8F%E7%AC%94/39158/</url>
      
        <content type="html"><![CDATA[<blockquote><p>“在一个喧嚣的话语圈下面，始终有一个沉默的大多数。既然精神原子弹在一颗又一颗地炸着，哪里有我们说话的份？”                    ——王小波</p><p>“傻逼的共识也是共识. 傻逼太多了，有共识，也会产生价值。我们作为自认不傻逼的人也必须接受这个事实，都是这样。”                 ——李笑来</p><p>“公众的审美里，也是盲目崇尚强者。我们这个行业在苹果出金色版之前，整个国家只有山寨厂商敢做金色手机。苹果做了金色之后，全世界都在跟风抄金色，所以这个世界庸俗无趣，和没劲的程度，是超出一个文青出身的企业家的所能想象的最糟糕的事情还要糟糕十倍。” ——罗永浩</p></blockquote><p>  1994年，周星驰拍摄的《大话西游》刚播出就被骂赶贺岁档粗制滥造、烂片、穿帮、弱智无聊、没有深度…各种负面的声音蜂拥而至，媒体关注最先发声的多数派，觉得好看的人出于害怕被孤立、被嘲笑的原因，这些少数派不敢说话了，于是沉默的螺旋出现了，它在香港放映两天就停映了。<br><img src="/%E9%9A%8F%E7%AC%94/39158/dhxy.jpg" alt="dhxy"></p><p>  2016年11月，某公众号的推文《罗一笑，你给我站住》刷爆朋友圈，一张笑脸天真无邪、排版简单、语言真挚、救命要紧、父爱大于天，由于“文章每被转发一次，公司就捐赠1元钱”而质疑为炒作营销的人，担心与朋友圈所有转发这则消息的人为敌，没有在朋友圈里表达出来，于是在”父爱如天“的意见气候里，沉默的螺旋又出现了，当天打赏额度突破微信限制。<br><img src="/%E9%9A%8F%E7%AC%94/39158/lyx.jpg" alt="lyx"></p><h2 id="沉默的螺旋"><a class="markdownIt-Anchor" href="#沉默的螺旋"></a> 沉默的螺旋</h2><p>  <a href="https://zh.wikipedia.org/wiki/%E6%B2%89%E9%BB%98%E7%9A%84%E8%9E%BA%E6%97%8B">沉默的螺旋</a>（英语：Spiral of silence）是一个政治学和大众传播理论，由伊丽莎白·诺尔-纽曼于1974年在发表于《传播学刊》(Journal of Communication)上的《沉默的螺旋：一种大众观点理论》一文中最早提出。主要概念是：<strong>如果人们觉得自己的观点是公众中的少数派，他们将不愿意传播自己的看法；而如果他们觉得自己的看法与多数人一致，他们会勇敢的说出来。而且媒体通常会关注多数派的观点，轻视少数派的观点。于是少数派的声音越来越小，多数派的声音越来越大，形成一种螺旋式上升的模式</strong>。<br><img src="/%E9%9A%8F%E7%AC%94/39158/cmdlx.gif" alt="cmdlx"></p><p>  前提假设有三个——</p><ul><li>1.社会将用孤立的方式来威胁那些与大多数人不一致的人，对孤立的恐惧不可抗拒。</li><li>2.对孤立的恐惧导致个人在任何时候都会试图评估意见气候。</li><li>3.公众的行为会受到民意评估的影响。</li></ul><p>  其中有三个重要的概念——</p><ul><li>准统计官能（quasi-statistical organ）：我们长久地处于媒体讯息之下，个体之间缺乏有效的沟通，能够觉察到媒体所呈现的主流意见，这些意见就会转化为个人对于社会主要价值的认知。</li><li>多数的无知（pluralistic ignorance）：人们“把带有自己倾向的感知与媒体过滤过的感知混合为一个结论无形的整体感觉，他们觉得这个判断来自自己的思考和经验”。也就是说，即使我们自己对某件事持不赞成的态度，如果大众传播对这种意见持赞成态度的话，个人会错误地以为这种赞成态度是多数的人的意见。</li><li>中坚分子（hard core）：是一群&quot;在沉默的螺旋旋转过程中无视孤立的威胁的人”,这是一群愿意为自己公开言论付出代价的人，这些特立独行的人通常与主流意见相悖。</li></ul><p>  那么这个理论如何去应用呢？也就是说我们如何去制造”反沉默螺旋“呢？</p><ul><li><p>一、在事件还没有发生或者刚发生的黄金时间段，就去有意的制造主流意见，比如我没看过的电影《前任》，还没上映之前就是各种情感宣传的正面评价，所以这个意见就成了主流意见；手机还没发布，就各种借势营销，这个黑科技，这个人性化，这个外形美；比如微博里常见的”五毛“和”美分“的造势，我一直不认为微博的主流评论就是主流意见。</p></li><li><p>二、”时过于期，否终则泰“，“全则必缺，极则必反，盈则必亏”。这就是造成开篇两件事反转的原因所在了。</p></li><li><p>三年后，1997年，《大话西游》制片方把电影带到北京的大学生电影节，满含荷尔蒙的文艺青年被里面的经典桥段和对白感动了，大家纷纷效仿或评论，从这里开始大家又开始重新审视这部电影，给予了高度的评价，认为是星爷的巅峰之作。在这个反转中起重要作用的是时间。</p></li></ul><p>  几天后，部分”中坚分子“网友开始质疑罗尔，事件被批”带血的营销“，后来的事我不想提了…</p><p>  简单说，沉默螺旋的逻辑就是”从众效应“、”第三人效应“。这个效应可以说明广告的影响——<strong>你可以认为自己是理性的，不受广告影响，但是你会认为其他人受到了广告影响，这足以让你自己受到广告影响</strong>。</p><p>  我们斯赫在不知不觉中，还是运用了这个理论的，在南通大学吉祥物”通仔“上，刚刚把出厂的通仔展现给一部分同学时，得到的评价是”好丑“、”做工真糙“、”几个字就和南通大学关系了？“…如果这种评论再持续下去的话，结果可想而知。后来我们通过一些营销方式，主要是发动意见领袖，”好萌啊“、”好可爱“等等就成了评论的主流意见，南通大学吉祥物的地位就在民间默认了。<br><img src="/%E9%9A%8F%E7%AC%94/39158/tz.png" alt="tz"></p><p><strong>致谢</strong></p><blockquote><p>人民网《<a href="http://media.people.com.cn/GB/22114/52789/207738/13220734.html">论网络时代下的“沉默的螺旋”</a>》<br>郭小安《<a href="http://cjjc.ruc.edu.cn/fileup/HTML_EN/20150504.shtml">舆论的寡头化铁律：“沉默的螺旋”理论适用边界的再思考</a>》<br>刘润《<a href="https://www.jianshu.com/p/d9e388a1cd9f">沉默的螺旋：”为什么先说的声音越来越大，后说的最后无话可说“</a>》</p></blockquote><p><strong>写于</strong> ：2018-07-25</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用n管理不同版本的Node（nodejs升降级）</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/31934/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/31934/</url>
      
        <content type="html"><![CDATA[<h2 id="n"><a class="markdownIt-Anchor" href="#n"></a> n</h2><p>是管理多个Node版本的工具，作者是<a href="https://github.com/tj">TJ Holowaychuk</a>（鼎鼎大名的Express框架作者），就像它的名字一样，它的理念就是简单易用。之前用的是nvm，貌似大家都说好，但是用起来切换版本配置有点麻烦，而且结合zsh启动会有延迟等等导致一些人弃用了nvm，投入了TJ大神n的怀抱（可能是不太会用nvm），n管理Node版本体验真的很simple and easy，顿时世界变得清爽许多</p><h2 id="另外补充一下n和nvm的区别"><a class="markdownIt-Anchor" href="#另外补充一下n和nvm的区别"></a> 另外补充一下n和nvm的区别：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">n命令是作为一个node的模块而存在，而nvm 是一个独立于node&#x2F;npm的外部 shell 脚本。</span><br><span class="line"></span><br><span class="line">由于npm安装的模块路径一般为&#x2F;usr&#x2F;local&#x2F;lib&#x2F;node_modules（可以使用npm root -g命令查看你的系统中全局的路径）</span><br><span class="line">当使用n切换不同的node版本时，实际上会共用全局的node&#x2F;npm目录。</span><br><span class="line">而nvm是每个版本的node都有独立的全局目录。</span><br><span class="line"></span><br><span class="line">So</span><br><span class="line"></span><br><span class="line">if (需求 &#x3D;&#x3D; 按不同node版本使用不同全局node模块) use nvm，以免出现全局模块无法更新的问题。</span><br><span class="line">if (需求 &#x3D;&#x3D; 频繁更新node，不想新版本的node再全局安装node模块) use n，省事省心，当然会有坑哦。</span><br></pre></td></tr></table></figure><ul><li><a href="https://github.com/tj/n">n官方使用说明</a></li><li><a href="https://nodejs.org/zh-cn/">NodeJS官网</a></li></ul><h2 id="基本使用"><a class="markdownIt-Anchor" href="#基本使用"></a> 基本使用</h2><h3 id="安装n"><a class="markdownIt-Anchor" href="#安装n"></a> 安装n</h3><p><code>curl -L http://git.io/n-install | bash</code><br>或者执行<br><code>npm install -g n</code></p><p>安装完记得source一下</p><h3 id="安装node"><a class="markdownIt-Anchor" href="#安装node"></a> 安装node</h3><h4 id="1-安装指定版本"><a class="markdownIt-Anchor" href="#1-安装指定版本"></a> [1] 安装指定版本</h4><p><code>n 6.4.0</code></p><h4 id="2-安装最新版本"><a class="markdownIt-Anchor" href="#2-安装最新版本"></a> [2] 安装最新版本</h4><p><code>n latest</code></p><h4 id="3-安装稳定版本"><a class="markdownIt-Anchor" href="#3-安装稳定版本"></a> [3] 安装稳定版本</h4><p><code>n stable</code></p><h3 id="切换版本"><a class="markdownIt-Anchor" href="#切换版本"></a> 切换版本</h3><p>直接输入n后输出当前已经安装的node版本以及正在使用的版本（前面有一个o），你可以通过移动上下方向键来选择要使用的版本，最后按回车生效。注：<strong>要在root权限下切换方可生效</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">n</span><br><span class="line">4.4.1</span><br><span class="line">o 6.4.0</span><br></pre></td></tr></table></figure><h3 id="查看当前版本在node所有版本中的位置"><a class="markdownIt-Anchor" href="#查看当前版本在node所有版本中的位置"></a> 查看当前版本在node所有版本中的位置</h3><p><code>n ls</code></p><h3 id="删除某个版本"><a class="markdownIt-Anchor" href="#删除某个版本"></a> 删除某个版本</h3><p><code>n rm 0.12.9</code></p><h3 id="查看某版本node的安装路径"><a class="markdownIt-Anchor" href="#查看某版本node的安装路径"></a> 查看某版本node的安装路径</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n bin 7.1.0</span><br><span class="line">&#x2F;Users&#x2F;Kimi&#x2F;n&#x2F;n&#x2F;versions&#x2F;node&#x2F;7.1.0&#x2F;bin&#x2F;node</span><br></pre></td></tr></table></figure><h3 id="以指定的版本来执行脚本"><a class="markdownIt-Anchor" href="#以指定的版本来执行脚本"></a> 以指定的版本来执行脚本</h3><p><code>&gt; n use 0.12.9 some.js</code></p><p><code>use</code> can be replace with <code>as</code></p><h3 id="设置-nvm-的默认版本"><a class="markdownIt-Anchor" href="#设置-nvm-的默认版本"></a> *设置 nvm 的默认版本</h3><p><code>nvm alias default 6.1.0</code></p><h3 id="跳坑一"><a class="markdownIt-Anchor" href="#跳坑一"></a> 跳坑一</h3><p>安装<code>n</code>执行<code>curl -L http://git.io/n-install | bash</code>时出现如下错误<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/31934/error.png" alt="error"><br>在开始升降级前，请自行确认当前的Node.js 版本，然后全局安装n 这个工具。当然，如果你也可以克隆源代码来编译安装「make install」；编译安装的时候，bin/n默认是安装在/usr/local文件夹下的「通过设置PREFIX=~/customize/path来自定义安装位置」。<br>安装之前需要清除缓存～</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 清除缓存</span><br><span class="line">npm cache clean -f</span><br><span class="line"># 全局安装 n</span><br><span class="line">npm install -g n</span><br></pre></td></tr></table></figure><p><strong>致谢</strong></p><blockquote><p><a href="https://github.com/mklement0/n-install#uninstalling-n">n-install</a><br><a href="http://www.hi-linux.com/2016/04/07/%E5%88%A9%E7%94%A8n%E5%92%8Cnvm%E7%AE%A1%E7%90%86Node%E7%9A%84%E7%89%88%E6%9C%AC/">利用n和nvm管理Node的版本</a><br><a href="https://eric.blog/2016/08/23/set-default-node-version-with-nvm/">Set default node version with NVM</a><br><a href="https://github.com/muwenzi/Program-Blog/issues/6">用n管理不同版本的Node</a><br><a href="http://blog.freedomlang.com/962.html">通过NPM 对Node.js进行升降级</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于CentOS7.2利用shadowsocks搭建VPN</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/61321/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/61321/</url>
      
        <content type="html"><![CDATA[<p>奔波于各个VPN工具，总是不令我满意，于是开始自己折腾VPN，于是就找到了shadowsocks这个简单易用且跨平台的工具。<br>关于什么是<a href="https://zh.wikipedia.org/wiki/%E8%99%9B%E6%93%AC%E7%A7%81%E4%BA%BA%E7%B6%B2%E8%B7%AF">VPN</a>,什么是<a href="https://zh.wikipedia.org/wiki/Shadowsocks">shadowsocks</a>网上资源一大堆，我就不在这里赘述了。<br>直接摞代码。</p><h2 id="安装epel源-安装pip包管理"><a class="markdownIt-Anchor" href="#安装epel源-安装pip包管理"></a> 安装epel源、安装pip包管理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum -y install epel-release</span><br><span class="line">sudo yum -y install python-pip</span><br></pre></td></tr></table></figure><p>输入 <code>pip --version</code>查看版本确认是否安装成功<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/61321/pip.png" alt="pip"></p><h2 id="安装shadowsocks客户端"><a class="markdownIt-Anchor" href="#安装shadowsocks客户端"></a> 安装Shadowsocks客户端</h2><p><code>sudo pip install shadowsocks</code><br>输入<code>sudo ssserver --version</code>查看版本确认是否安装成功<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/61321/shadowsocks.png" alt="shadowsocks"></p><h2 id="创建配置文件"><a class="markdownIt-Anchor" href="#创建配置文件"></a> 创建配置文件</h2><p>创建Shadowsocks配置文件所在文件夹：<code>sudo mkdir /data/release/vpn</code><br>如果该命令执行失败，请注意mkdir使用方法，需要一级一级的建立文件夹。如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir &#x2F;data</span><br><span class="line">sudo mkdir &#x2F;data&#x2F;release</span><br><span class="line">sudo mkdir &#x2F;data&#x2F;release&#x2F;vpn </span><br></pre></td></tr></table></figure><p>创建配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;data&#x2F;release&#x2F;vpn</span><br><span class="line">vi config.json</span><br></pre></td></tr></table></figure><h2 id="编辑配置文件configjson"><a class="markdownIt-Anchor" href="#编辑配置文件configjson"></a> 编辑配置文件config.json</h2><p>我这里是设置多个端口和密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;  </span><br><span class="line">    &quot;server&quot;:&quot;0.0.0.0&quot;,  </span><br><span class="line">    &quot;port_password&quot;:&#123;  </span><br><span class="line">        #格式&quot;Port&quot;: &quot;password&quot;如下(最后一行不能加逗号):</span><br><span class="line">        &quot;1111&quot;:&quot;qwer1234&quot;,  </span><br><span class="line">        &quot;1112&quot;:&quot;asdf5678&quot;</span><br><span class="line">    &#125;,  </span><br><span class="line">    &quot;timeout&quot;:300,  </span><br><span class="line">    &quot;method&quot;:&quot;aes-256-cfb&quot;,  </span><br><span class="line">    &quot;fast_open&quot;: false  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试shadowsocks运行状态"><a class="markdownIt-Anchor" href="#测试shadowsocks运行状态"></a> 测试shadowsocks运行状态</h2><p><code>ssserver -c /data/release/vpn/config.json</code></p><p>最后开启服务器相关端口即可</p>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> 工具 </tag>
            
            <tag> 跨境电商 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用终端指令集锦</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/43899/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/43899/</url>
      
        <content type="html"><![CDATA[<h2 id="deepin"><a class="markdownIt-Anchor" href="#deepin"></a> Deepin</h2><p>查看已经安装的软件包：<code>dpkg -l</code><br>卸载命令：<code>sudo apt-get autoremove --purge 软件包名称</code><br>清理下载文件的存档 ：<code>sudo apt-get clean</code><br>只清理过时的包: <code>sudo apt-get autoclean</code><br>tar 压缩方法： <code>tar -zcvf /home/xahot.tar.gz /xahot</code><br>解压到指定的目录: <code>tar -zxvf /home/images.tar.gz -C /specific dir</code><br>firewall批量开放端口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --zone&#x3D;public --add-port&#x3D;100-500&#x2F;tcp</span><br><span class="line">firewall-cmd --permanent --zone&#x3D;public --add-port&#x3D;100-500&#x2F;udp</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h2 id="centos"><a class="markdownIt-Anchor" href="#centos"></a> CentOS</h2><p>安装安装rz和sz命令（无法在putty使用）:<code>yum -y install lrzsz</code></p>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>习立风浅谈《邪不压正》：这有什么好笑的？，异类眼中的140字时代</title>
      <link href="%E9%9A%8F%E7%AC%94/39927/"/>
      <url>%E9%9A%8F%E7%AC%94/39927/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最反主流的行动不是抵制潮流，而是在潮流中不丢失自己的独立思考。<br>“在什么重要问题上你与其他人有不同看法？”，针对这个反主流问题的多数回答都是对现在的不同看法，而好的回答应该尽可能的使我们看到未来。<br>——彼得.蒂尔《<a href="https://baike.baidu.com/item/%E4%BB%8E0%E5%88%B01">从0到1</a>》*</p></blockquote><p>  我们不必纠结其与原著张北海的《<a href="https://baike.baidu.com/item/%E4%BE%A0%E9%9A%90/1866854">侠隐</a>》的差别，我们尽管把它当做一个新的IP。真正的观众不是像读原著那样去纠结电影的契合度，而是电影呈现的故事给我们带来的情感的震荡。“我们读的不是故事，而是恰恰是畜生与人的区别——情感！”<br>  在影院里，唐凤仪从城楼上跳下的那一刻，砸死了正在摆pose的一个日本兵，我与众人一样，哈哈大笑。这个时候，身后一个男性愤怒的声音——<br>  “这有什么好笑的？”<br>  对啊，我们生活在140字的时代，所有的知识都被压缩在了140字以内，我们用十分钟读了一篇推文，看进度条还有一半，TMD的怎么还这么长，直接去某博看一下图文，这么长时间能刷很多条呢，后面草草浏览而过；框架清晰地书本懒得碰，不如看几条视频来得快；甚至长视频也懒得看，15s多直接。<br><a href="%E4%B9%A0%E7%AB%8B%E9%A3%8E%E6%B5%85%E8%B0%88%E3%80%8A%E9%82%AA%E4%B8%8D%E5%8E%8B%E6%AD%A3%E3%80%8B%EF%BC%9A%E8%BF%99%E6%9C%89%E4%BB%80%E4%B9%88%E5%A5%BD%E7%AC%91%E7%9A%84%EF%BC%9F%EF%BC%8C%E5%BC%82%E7%B1%BB%E7%9C%BC%E4%B8%AD%E7%9A%84140%E5%AD%97%E6%97%B6%E4%BB%A3/jw.jpg">jw</a></p><p>  所以年届55岁的<a href="https://zh.wikipedia.org/wiki/%E5%A7%9C%E6%96%87">姜文</a>就成了这个时代的”异类“，他狂狷不羁，他特立独行，他说”人生本来就是建立在误读上的“；他真情实感，货真价实，他说&quot;看电影应该是对人的心灵的缅怀，我觉得被格式化了的现代人，都需要找到内心奔涌的东西&quot;。<br><img src="/%E9%9A%8F%E7%AC%94/39927/xbyz-1.jpg" alt="xbyz-1"></p><p>  对于《邪不压正》，你尽可以当做一个喜剧来大笑，你也尽可以当做一个悲剧来审视。有深度的电影，无关乎你现在如何看它。精品若如《大话西游》，也会等到在北大放映的那一天，如果没有等到，那你属于未来的人们。<br><strong>暗号——</strong><br>  捏鼻子咳咳咳：”还等什么呢？“<br>  咚咚咚敲脑门：”C’est la vie“（法语，<a href="https://zh.wiktionary.org/wiki/c%27est_la_vie">这就是生活</a>，奠定了全剧的主基调）.<br>  我还是按照我的习惯来拆解故事，去看一个个性格鲜明的人物——</p><p><img src="/%E9%9A%8F%E7%AC%94/39927/lqf.jpg" alt="lqf"></p><p><strong>蓝青峰</strong></p><blockquote><p>关键词：民族大义、前朝武人、赋闲军阀、企业家、齿豁头童、黑白通吃、老男孩</p></blockquote><p>  “邪正两面派”，本故事中的暗线主角，”侠隐“里的”大隐隐于市“的”侠“。<br>  ”蓝“姓来源于，明初四大案之一”蓝玉案“，蓝玉是朱元璋时期的一员虎将，被朱元璋盛赞堪比”汉之卫青，唐之李靖“，但其人桀骜不逊，自恃功高，某次北征还师，夜扣喜峰关，关吏没有及时接纳，蓝玉就纵兵毁关强行进入，这一举动显然引起了朱元璋的猜忌，后为朱元璋所杀，后被收到《逆臣录》。联想到朱潜龙是朱元璋之后，我们姑且认为蓝青峰是蓝玉之后。<br>  蓝青峰的出场是出门买醋，透露着老北京人的讲究，他斡旋于明、清、民国、革命党人、日本、美国之间，可称之为”八面玲珑“，他欲成大事，借李天然的灭门之仇，借朱潜龙的”浩然正气“，借根本一郎的”大东亚共荣圈“，最终输得一败涂地。被关进小黑屋，他说”这么黑，我TM的知道哪天是哪天啊“；载李天然赴湖心孤岛时，他还孩子气一般”我压着速度呢“；被朱潜龙拔牙，想起了被禁的《鬼子来了》，所以被拔牙的人不在影视剧里，而在现实世界中。三番两次提起”曹雪芹“，不由想起《一步之遥》里引用”假作真时真亦假“，他更想说的应该是”满纸荒唐言，一把辛酸泪。都云作者痴，谁解其中味“。</p><p><img src="/%E9%9A%8F%E7%AC%94/39927/ltr.jpg" alt="ltr"></p><p><strong>李天然</strong></p><blockquote><p>关键词：成长、涅槃重生、浩然正气、身手了得、复仇者、大男孩</p></blockquote><p>  “正”，本故事的明线主角，复仇主线的推动者。<br>  师傅原型是晚清和民国时期民间传说中擅长飞檐走壁的侠盗“燕子李三”，这样就理解了他为什么一直在飞檐走壁。<br>  如果要和明朝扯上一点关系，那就是明朝有个进士叫”李天然“，其余不详。但一个文士，一个武侠，应该没什么关系的，就看张北海怎么想了。初出场的他是一个愣头小子，从鬼门关走了三遭，躲过了抵着额头的数枪、背中数弹未死、火葬未死。有人说这不是抗日神剧吗？我强调一下，本剧的重点不是抗日，是Revenge,是”武侠“。在美国进行特训，回来的公事是协助张将军（张自忠，二战中50个同盟国中战死疆场的最高阶将领，却一度被同时代人视为汉奸，谓之”张逆自忠“）抗日，私事是一起杀了朱潜龙和根本一郎。<br>  一开始的胆小怯懦，到后来的谋大事，血溅顺天府，转折的地方在钟楼，有人把钟楼和巴黎圣母院联系在一起，李天然为卡奇莫多，关巧红为吉普赛女郎爱斯梅拉达，蓝青峰为红衣教主克洛德·弗洛罗真是像极了这个情节。我来补充一下，据传，明太祖朱元璋登基后不久，关中一带连连发生地震，民间相传城下有条暗河，河里有条蛟龙，蛟龙在翻身，长安在震动。朱元璋感觉心里不踏实，于是修建了中国最大的钟楼，“钟乃天地之音”，又调来了“天下第一名钟”景云钟。我把钟楼的这一传说理解为“驯服”，“如果你驯服我的话，我们就会彼此需要”，驯服李天然的恰恰就是关巧红。“紧十八，慢十八，不紧不慢又十八”，看似引用泰山三个十八盘的句子，我觉得是暗示姜文的年龄，18*3=54，17年正在拍摄的他正好五十四岁。</p><p><img src="/%E9%9A%8F%E7%AC%94/39927/gqh.jpg" alt="gqh"></p><p><strong>关巧红</strong></p><blockquote><p>关键词：优雅沉静、气定神闲、淡定从容、端庄、成熟、古典标致、反叛者、心理理疗师</p></blockquote><p>  “正”，本故事的女主，信息传递者，李天然的温柔梦乡，促使了李天然的蜕变。<br>  记得小学时候说一件事比较巧，对话总是这样，“呀，今天又碰到巧儿了”，“我今天没碰到巧儿，倒是碰到巧儿他妈了”。<br>  关巧红，关大娘，用张北海的话说，是“怎么看也不过二十出头，怎么说也不像个大娘”，“没准儿是七夕那天生的，反正名儿可取得正好，会女红，手又巧”。二十多岁开始守寡，不管是用板弓、自行车来反抗裹脚，还是“京城第一裁缝”，抑或是隐身十年只为报仇雪恨，她无时无刻不在透露着沉静、从容、成熟与反叛，大家或许知道了，她的原型是民国女侠施剑翘，父被枭首，仇人是三大军阀之一孙传芳，与不支持自己复仇的丈夫决裂。所不同的是，十年一剑，施剑翘在孙传芳的清修地用勃朗宁手枪成功复仇，而关巧红因为看到他“慈眉善目”，最终没有下手。</p><p><img src="/%E9%9A%8F%E7%AC%94/39927/zql.jpeg" alt="zql"></p><p><strong>朱潜龙</strong></p><blockquote><p>关键词：阴险狡诈、颠倒是非、卖国贼、反清复明的老顽固</p></blockquote><p>  “邪”，本剧中的反派之一，故事的起因。<br>  潜龙，潜伏在民间的天子。他的目的就是借日本之手，灭了清廷，恢复帝制，做一个正统的皇位继承者，为了讨好日本人，帮他们在太行山种植鸦片，不惜灭了师门。在他身上看到的只是贪婪、邪恶，别无其他。</p><p><img src="/%E9%9A%8F%E7%AC%94/39927/tfy.png" alt="tfy"><br><strong>唐凤仪</strong></p><blockquote><p>关键词：风姿绰约、风情万种、侠肝义胆、简单纯真</p></blockquote><p>  “正”,凤仪作为北平的著名交际花，69岁这个数字，据网友说有两层意思，一个是2018-1949=69；一个是15年前，李天然13岁，师姐18岁，师父48岁，师母大师父5岁，师母53岁，李天然雪藏15年，师母68岁，李天然在北京呆了一年遇到唐凤仪，师母69岁。再联想到”不老针“，细思恐极。<br>  说点正经的，唐凤仪两次出场都与李天然有正面交锋，她的台词我注意到的有两处是反常识的，一是”正妻不殉葬“，真实的应该是”<a href="https://zh.wikipedia.org/wiki/%E6%AE%89%E8%91%AC">如果死者多妻，则正妻与死夫一起殉葬，其余妻子要单独自焚</a>“；二是”海平面下降“，陆地会越来越多，岛屿会越来越大，真实的情况应该是”海平面上升“。不知编剧意欲何为？<br>  刚开始她只想谋得”正房“，不惜采用种种可行的手段；后来与李天然的情感纠葛，她又只想远走高飞，在她眼里，世界是如此的简单。面对国破家亡的惨状，希望破灭的无助，七七事变日军进城的那一刻，交际之花从城楼跳下，是的，这一幕，我们不应该笑。</p><p>  我觉得姜文的创作风格和以下两位小说家的创作风格差不多。<br>  加拿大小说家翁达杰和日本石黑一雄都不喜欢过度打磨的精致，他从来都不愿意写一部结局完满的小说，每次小说结尾处他总会留一扇“门”，在他写的故事里，有的角色会消失了25页以后忽然又回来了，他也不会为此而解释。</p><p>  我写东西的时候是懒得谋篇构局，喜欢想到哪写到哪。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10+银河麒麟ubuntu双系统正确卸载ubuntu</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/54692/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/54692/</url>
      
        <content type="html"><![CDATA[<ul><li><p>第一步：下载需要的工具包，这里我用的是<a href="https://pan.baidu.com/s/1TdD9ycooQg_EuoqC0BIy6A">MBR</a>, 可以直接从我分享的网盘链接下载，密码w3sl</p></li><li><p>第二步：将下载好的文件放在任一位置，我这里以C盘根目录为例：C://MBR/</p></li><li><p>第三步：在contana框中输入：<code>cmd</code>，右击命令提示符，以管理员身份运行</p></li><li><p>第四步：进入MBR文件目录，如我这里输入：<code>cd MBR</code></p></li><li><p>第五步：输入命令：<code>MbrFix /drive 0 fixmbr /yes</code></p></li><li><p>然后重启电脑，看是否直接进入windows，如果是的，那么恭喜你，可以开始删除了</p></li><li><p>右击我的电脑–&gt;管理–&gt;存储-磁盘管理–&gt;选择你当初分配给ubuntu 的磁盘，右击–&gt;删除卷</p></li><li><p>对于删除后的磁盘为绿色，你可以考虑将其拓展到你的其他盘，重新利用起来</p></li><li><p>如我选择将其为“文档”磁盘拓展空间，右击“文档”磁盘–&gt;拓展卷</p></li></ul><p><strong>致谢</strong>：</p><blockquote><p>wae42675的博客《<a href="https://blog.csdn.net/wae42675/article/details/78821910/">双系统正确卸载Ubuntu系统</a>》</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>银河麒麟Ubuntu安装wine时无法找到add-apt-repository问题的解决方法</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/13392/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/13392/</url>
      
        <content type="html"><![CDATA[<p>银河麒麟版本ubuntu安装wine的方法应该和ubuntu差不多，参考这篇博文——《<a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/57905/">Ubuntu16.04安装企业微信教程</a>》的第一步。</p><p>我最近安装了<a href="https://www.ubuntukylin.com/downloads/">银河麒麟版本ubuntu</a>，在安装wine的时候，提示了这个错误，最终找到了方法。</p><p>这个问题主要是缺乏一个叫做<code>python-software-properties</code>依赖，只需要执行下面两句即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python-software-properties</span><br><span class="line">sudo apt-get install software-properties-common</span><br></pre></td></tr></table></figure><p>出现选项的，选择‘y’即可</p><p><strong>致谢</strong></p><blockquote><p>张鹿鹿的专栏《<a href="https://blog.csdn.net/u013144863/article/details/52296482">Ubuntu无法找到add-apt-repository问题的解决方法</a>》</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> Bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu16.04/18.04安装钉钉教程</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/9699/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/9699/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><h3 id="系统环境"><a class="markdownIt-Anchor" href="#系统环境"></a> 系统环境</h3><pre><code>patten@patten-hp:~/software$ lsb_release -aNo LSB modules are available.Distributor ID:UbuntuDescription:Ubuntu 16.04.6 LTSRelease:16.04Codename:xenialpatten@patten-hp:~/software$</code></pre><h2 id="step-1下载deepin-wine-for-ubuntu"><a class="markdownIt-Anchor" href="#step-1下载deepin-wine-for-ubuntu"></a> Step 1：下载deepin-wine-for-ubuntu</h2><p>之前写过一篇文章讲述了《<a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/57905/"><strong>Ubuntu16.04/18.04安装企业微信教程</strong></a>》，<a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/57905/#step3%E4%B8%8B%E8%BD%BDdeepin%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1">里面</a>提供了多个ubuntu软件的下载方式，可知从<a href="http://mirrors.aliyun.com/deepin/pool/non-free/d/dingtalk/">这里</a>可以下载<code>dingtalk_2.0.13-145_amd64.deb</code>的安装包。</p><h2 id="step-2安装"><a class="markdownIt-Anchor" href="#step-2安装"></a> Step 2：安装</h2><p>到安装包所在目录执行<code>sudo dpkg -i dingtalk_2.0.13-145_amd64.deb</code>安装钉钉，我的安装包目录在<code>~/software</code>。</p><pre><code>patten@patten-hp:~/software$ sudo dpkg -i dingtalk_2.0.13-145_amd64.deb (正在读取数据库 ... 系统当前共安装有 298647 个文件和目录。)正准备解包 dingtalk_2.0.13-145_amd64.deb  ...正在将 dingtalk (2.0.13-145) 解包到 (2.0.13-145) 上 ...正在设置 dingtalk (2.0.13-145) ...正在处理用于 hicolor-icon-theme (0.15-0ubuntu1.1) 的触发器 ...正在处理用于 gnome-menus (3.13.3-6ubuntu3.1) 的触发器 ...正在处理用于 desktop-file-utils (0.22-1ubuntu5.2) 的触发器 ...正在处理用于 bamfdaemon (0.5.3~bzr0+16.04.20180209-0ubuntu1) 的触发器 ...Rebuilding /usr/share/applications/bamf-2.index...正在处理用于 mime-support (3.59ubuntu1) 的触发器 ...patten@patten-hp:~/software$</code></pre><h2 id="step-3安装完成"><a class="markdownIt-Anchor" href="#step-3安装完成"></a> Step 3：安装完成</h2><p>安装已完成，just Enjoy it！</p><p>最后：在ubuntu的搜索器中搜索“dingding”，打开运行即可。</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/9699/dingding.png" alt></p><p>图一、搜索钉钉应用</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/9699/dingdingLaunch.png" alt></p><p>图二、钉钉Launch页面</p><h2 id="step-4可能遇到的问题"><a class="markdownIt-Anchor" href="#step-4可能遇到的问题"></a> Step 4：可能遇到的问题</h2><p>安装时可能遇到如下问题：</p><h3 id="问题未安装软件包-libappindicator1"><a class="markdownIt-Anchor" href="#问题未安装软件包-libappindicator1"></a> 问题：未安装软件包 libappindicator1。</h3><p>如下所示：</p><pre><code>patten@patten-hp:~/software$ sudo dpkg -i dingtalk_2.0.13-145_amd64.deb [sudo] patten 的密码： 正在选中未选择的软件包 dingtalk。(正在读取数据库 ... 系统当前共安装有 298552 个文件和目录。)正准备解包 dingtalk_2.0.13-145_amd64.deb  ...正在解包 dingtalk (2.0.13-145) ...dpkg: 依赖关系问题使得 dingtalk 的配置工作不能继续： dingtalk 依赖于 libappindicator1；然而：  未安装软件包 libappindicator1。dpkg: 处理软件包 dingtalk (--install)时出错： 依赖关系问题 - 仍未被配置正在处理用于 hicolor-icon-theme (0.15-0ubuntu1.1) 的触发器 ...正在处理用于 gnome-menus (3.13.3-6ubuntu3.1) 的触发器 ...正在处理用于 desktop-file-utils (0.22-1ubuntu5.2) 的触发器 ...正在处理用于 bamfdaemon (0.5.3~bzr0+16.04.20180209-0ubuntu1) 的触发器 ...Rebuilding /usr/share/applications/bamf-2.index...正在处理用于 mime-support (3.59ubuntu1) 的触发器 ...在处理时有错误发生： dingtalkpatten@patten-hp:~/software$</code></pre><h3 id="解决方案更新系统安装gconf2依赖"><a class="markdownIt-Anchor" href="#解决方案更新系统安装gconf2依赖"></a> 解决方案：<strong>更新系统安装gconf2依赖</strong></h3><p>执行如下语句安装依赖：</p><pre><code>$ sudo apt update$ sudo apt upgrade$ sudo apt-get -f install</code></pre><p>如下所示：</p><pre><code>patten@patten-hp:~/software$ sudo apt update忽略:1 http://packages.microsoft.com/repos/vscode stable InRelease命中:2 http://mirrors.aliyun.com/ubuntu xenial InRelease                       忽略:3 http://dl.google.com/linux/chrome/deb stable InRelease                  错误:4 http://packages.microsoft.com/repos/vscode stable Release                 SECURITY: URL redirect target contains control characters, rejecting.命中:5 http://mirrors.aliyun.com/ubuntu xenial-updates InRelease               错误:6 http://dl.google.com/linux/chrome/deb stable Release                      SECURITY: URL redirect target contains control characters, rejecting. [IP: 203.208.40.41 80]命中:7 http://mirrors.aliyun.com/ubuntu xenial-backports InRelease             忽略:8 http://linux.teamviewer.com/deb stable InRelease                        命中:9 http://mirrors.aliyun.com/ubuntu xenial-security InRelease              忽略:10 http://www.scootersoftware.com bcompare4 InRelease                     错误:11 http://linux.teamviewer.com/deb stable Release                           SECURITY: URL redirect target contains control characters, rejecting. [IP: 54.192.151.80 80]忽略:12 http://archive.canonical.com/ubuntu xenial InRelease                   错误:13 http://www.scootersoftware.com bcompare4 Release                         SECURITY: URL redirect target contains control characters, rejecting.错误:14 http://archive.canonical.com/ubuntu xenial Release                       SECURITY: URL redirect target contains control characters, rejecting. [IP: 91.189.92.150 80]命中:15 http://ppa.launchpad.net/maarten-baert/simplescreenrecorder/ubuntu xenial InRelease命中:16 http://archive.ubuntu.com/ubuntu xenial InRelease正在读取软件包列表... 完成   E: 仓库 “http://packages.microsoft.com/repos/vscode stable Release” 没有 Release 文件。N: 无法安全地用该源进行更新，所以默认禁用该源。N: 参见 apt-secure(8) 手册以了解仓库创建和用户配置方面的细节。E: 仓库 “http://dl.google.com/linux/chrome/deb stable Release” 没有 Release 文件。N: 无法安全地用该源进行更新，所以默认禁用该源。N: 参见 apt-secure(8) 手册以了解仓库创建和用户配置方面的细节。E: 仓库 “http://linux.teamviewer.com/deb stable Release” 没有 Release 文件。N: 无法安全地用该源进行更新，所以默认禁用该源。N: 参见 apt-secure(8) 手册以了解仓库创建和用户配置方面的细节。E: 仓库 “http://www.scootersoftware.com bcompare4 Release” 没有 Release 文件。N: 无法安全地用该源进行更新，所以默认禁用该源。N: 参见 apt-secure(8) 手册以了解仓库创建和用户配置方面的细节。E: 仓库 “http://archive.canonical.com/ubuntu xenial Release” 没有 Release 文件。N: 无法安全地用该源进行更新，所以默认禁用该源。N: 参见 apt-secure(8) 手册以了解仓库创建和用户配置方面的细节。patten@patten-hp:~/software$ sudo apt upgrade正在读取软件包列表... 完成正在分析软件包的依赖关系树       正在读取状态信息... 完成       您也许需要运行“apt-get -f install”来修正上面的错误。下列软件包有未满足的依赖关系： dingtalk : 依赖: libappindicator1 但是它还没有被安装E: 不能满足依赖关系。不妨试一下 -f 选项。patten@patten-hp:~/software$patten@patten-hp:~/software$ sudo apt-get -f install正在读取软件包列表... 完成正在分析软件包的依赖关系树       正在读取状态信息... 完成       正在修复依赖关系... 完成将会同时安装下列软件：  libappindicator1 libindicator7下列【新】软件包将被安装：  libappindicator1 libindicator7升级了 0 个软件包，新安装了 2 个软件包，要卸载 0 个软件包，有 2 个软件包未被升级。有 1 个软件包没有被完全安装或卸载。需要下载 41.2 kB 的归档。解压缩后会消耗 165 kB 的额外空间。您希望继续执行吗？ [Y/n] Y获取:1 http://mirrors.aliyun.com/ubuntu xenial/main amd64 libindicator7 amd64 12.10.2+16.04.20151208-0ubuntu1 [21.9 kB]获取:2 http://mirrors.aliyun.com/ubuntu xenial-updates/main amd64 libappindicator1 amd64 12.10.1+16.04.20170215-0ubuntu1 [19.4 kB]已下载 41.2 kB，耗时 0秒 (202 kB/s)         正在选中未选择的软件包 libindicator7。(正在读取数据库 ... 系统当前共安装有 298637 个文件和目录。)正准备解包 .../libindicator7_12.10.2+16.04.20151208-0ubuntu1_amd64.deb  ...正在解包 libindicator7 (12.10.2+16.04.20151208-0ubuntu1) ...正在选中未选择的软件包 libappindicator1。正准备解包 .../libappindicator1_12.10.1+16.04.20170215-0ubuntu1_amd64.deb  ...正在解包 libappindicator1 (12.10.1+16.04.20170215-0ubuntu1) ...正在处理用于 libc-bin (2.23-0ubuntu11) 的触发器 ...正在设置 libindicator7 (12.10.2+16.04.20151208-0ubuntu1) ...正在设置 libappindicator1 (12.10.1+16.04.20170215-0ubuntu1) ...正在设置 dingtalk (2.0.13-145) ...正在处理用于 libc-bin (2.23-0ubuntu11) 的触发器 ...patten@patten-hp:~/software$</code></pre><h3 id="修复完毕再次安装"><a class="markdownIt-Anchor" href="#修复完毕再次安装"></a> 修复完毕，再次安装</h3><p>执行“Step 2：安装”的安装命令<code>sudo dpkg -i dingtalk_2.0.13-145_amd64.deb</code>。</p><pre><code>patten@patten-hp:~/software$ sudo dpkg -i dingtalk_2.0.13-145_amd64.deb (正在读取数据库 ... 系统当前共安装有 298647 个文件和目录。)正准备解包 dingtalk_2.0.13-145_amd64.deb  ...正在将 dingtalk (2.0.13-145) 解包到 (2.0.13-145) 上 ...正在设置 dingtalk (2.0.13-145) ...正在处理用于 hicolor-icon-theme (0.15-0ubuntu1.1) 的触发器 ...正在处理用于 gnome-menus (3.13.3-6ubuntu3.1) 的触发器 ...正在处理用于 desktop-file-utils (0.22-1ubuntu5.2) 的触发器 ...正在处理用于 bamfdaemon (0.5.3~bzr0+16.04.20180209-0ubuntu1) 的触发器 ...Rebuilding /usr/share/applications/bamf-2.index...正在处理用于 mime-support (3.59ubuntu1) 的触发器 ...patten@patten-hp:~/software$</code></pre>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> Linux </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu16.04/18.04安装企业微信教程</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/57905/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/57905/</url>
      
        <content type="html"><![CDATA[<p>相关文章：《<strong><a href="https://guopengzhen.com/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/9699/">Ubuntu16.04/18.04安装钉钉教程</a></strong>》</p><p>默认已配置Git等基本环境。</p><p>如果没有，如下图所示：</p><p>“Ctrl + Alt + T”打开terminal，执行如下命令安装git：</p><pre><code>sudo apt install git</code></pre><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/57905/--.png" alt></p><p>git配置完成后，是时候展现真正的技术了～～～</p><h3 id="step-1下载deepin-wine-for-ubuntu"><a class="markdownIt-Anchor" href="#step-1下载deepin-wine-for-ubuntu"></a> Step 1：下载deepin-wine-for-ubuntu</h3><pre><code>$ git clone https://gitee.com/wszqkzqk/deepin-wine-for-ubuntu.git</code></pre><p>本步骤采用gitee码云资源，github资源请点击<a href="https://github.com/wszqkzqk/deepin-wine-ubuntu">这里</a>查看。</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/57905/---1.png" alt></p><h3 id="step2安装"><a class="markdownIt-Anchor" href="#step2安装"></a> Step2：安装</h3><p>cd到deepin-wine-for-ubuntu文件夹下面，执行安装命令(一路“Y”即可，可能时间比较久，你可以先去泡杯☕):</p><pre><code>$ cd deepin-wine-for-ubuntu$ ./install.sh</code></pre><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/57905/---2.png" alt></p><h3 id="step3下载deepin企业微信"><a class="markdownIt-Anchor" href="#step3下载deepin企业微信"></a> Step3：下载deepin企业微信</h3><p>进入你想安装的文件夹根目录,我命名的是software，然后cd进入software，执行如下命令：</p><pre><code>$ cd ~$ cd software/$ wget http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin.com.weixin.work/deepin.com.weixin.work_2.4.16.1347deepin0_i386.deb</code></pre><p>其他诸如微信、QQ、淘宝、百度云盘、Foxmail、微信开发工具等资源下载请戳<a href="http://mirrors.aliyun.com/deepin/pool/non-free/d/">这里</a>。</p><p>感谢<a href="https://www.deepin.com/">deepin</a>团队的研发适配，感谢<a href="https://www.aliyun.com/">阿里云</a>提供的存储镜像等。</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/57905/image-4.png" alt></p><h3 id="step4-安装deepin企业版微信"><a class="markdownIt-Anchor" href="#step4-安装deepin企业版微信"></a> Step4: 安装deepin企业版微信</h3><p>在sofeware目录下，执行：</p><pre><code>sudo dpkg -i deepin.com.weixin.work_2.4.16.1347deepin0_i386.deb</code></pre><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/57905/image-5.png" alt></p><h3 id="step5安装完毕"><a class="markdownIt-Anchor" href="#step5安装完毕"></a> Step5：安装完毕</h3><p>最后：在ubuntu的搜索器中搜索“wechat”，打开运行即可。</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/57905/image-8.png" alt></p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/57905/image-9.png" alt></p><h3 id="结语"><a class="markdownIt-Anchor" href="#结语"></a> 结语</h3><p>如有其他问题，可在下方评论区免注册留言(记得留下邮箱哦，便于沟通)，共同探讨解决。</p><p>Enjoy it！ Good luck!</p>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> Linux </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MBR与GPT的区别以及相互转换</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/60027/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/60027/</url>
      
        <content type="html"><![CDATA[<p>很多人在安装windows系统时会碰到一个喋血的问题，就是“Windows无法安装到这个磁盘。选中的磁盘具有MBR分区。在EFI系统上，Windows只能安装到GPT磁盘”。<br>为了解决这个问题，我们应该先了解MBR与GPT的区别，如果急于解决问题的伙伴，直接到第二部分。</p><h2 id="一-mbr与gpt的区别"><a class="markdownIt-Anchor" href="#一-mbr与gpt的区别"></a> 一、MBR与GPT的区别</h2><p>从Intel 6系列主板之后，就开始提供UEFI BIOS支持，正式支持GPT硬盘分区表，一举取代了此前的MBR分区表格式，不过为了保持对老平台的兼容，微软即使最新的Windows 10系统也继续提供了对MBR分区表格式的支持。<br><em>MBR和GPT分区表详解</em><br>全新硬盘（未初始化）装系统之前，必须对齐进行分区，硬盘分区初始化的格式包括MBR和GPT两种。当然对于基于PowerPC的Mac电脑还有专门的Apple分区图，在这里就不做介绍。<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/60027/201610170953377750.jpg" alt="201610170953377750"></p><p>MBR的全称是Master Boot Record（主引导记录），MBR早在1983年IBM PC DOS 2.0中就已经提出。之所以叫“主引导记录”，是因为它是存在于驱动器开始部分的一个特殊的启动扇区。这个扇区包含了已安装的操作系统的启动加载器和驱动器的逻辑分区信息。</p><p>主引导扇区是硬盘的第一扇区。它由三个部分组成，主引导记录MBR、硬盘分区表DPT和硬盘有效标志。在总共512字节的主引导扇区里MBR占446个字节，偏移地址0000H–0088H），它负责从活动分区中装载，并运行系统引导程序；第二部分是Partition table区（DPT分区表），占64个字节；第三部分是Magic number，占2个字节。<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/60027/201610170953378340.png.jpeg" alt="201610170953378340.png"></p><p><em>MBR分区表系统</em><br>所谓启动加载器，是一小段代码，用于加载驱动器上其他分区上更大的加载器。如果你安装了Windows，Windows启动加载器的初始信息就放在这个区域里——如果MBR的信息被覆盖导致Windows不能启动，你就需要使用Windows的MBR修复功能来使其恢复正常。如果你安装了Linux，则位于MBR里的通常会是GRUB加载器。<br>分区表偏移地址为01BEH–01FDH，每个分区表项长16个字节，共64字节为分区项1、分区项2、分区项3、分区项4，分别对应MBR的四个主分区。<br>Magic number也就是结束标志字，偏移地址01FE–01FF的2个字节，固定为55AA，如果该标志错误系统就不能启动。<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/60027/lc.jpeg" alt="lc"></p><p>MBR最大支持2.2TB磁盘，它无法处理大于2.2TB容量的磁盘。MBR还只支持最多4个主分区——如果你想要更多分区，你需要创建所谓“扩展分区”，并在其中创建逻辑分区。</p><p>GPT的全称是Globally Unique Identifier Partition Table，意即GUID分区表，它的推出是和UEFI BIOS相辅相成的，鉴于MBR的磁盘容量和分区数量已经不能满足硬件发展的需求，GPT首要的任务就是突破了2.2T分区的限制，最大支持18EB的分区。<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/60027/gpt.jpg" alt="gpt"></p><p><em>GPT分区表系统</em><br>而在分区数量上，GPT会为每一个分区分配一个全局唯一的标识符，理论上GPT支持无限个磁盘分区，不过在Windows系统上由于系统的限制，最多只能支持128个磁盘分区，基本可以满足所有用户的存储需求。在每一个分区上，这个标识符是一个随机生成的字符串，可以保证为地球上的每一个GPT分区都分配完全唯一的标识符。<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/60027/gpt-1.jpg" alt="gpt-1"></p><p>而在安全性方面，GPT分区表也进行了全方位改进。在早期的MBR磁盘上，分区和启动信息是保存在一起的。如果这部分数据被覆盖或破坏，事情就麻烦了。相对的，GPT在整个磁盘上保存多个这部分信息的副本，因此它更为健壮，并可以恢复被破坏的这部分信息。GPT还为这些信息保存了循环冗余校验码（CRC）以保证其完整和正确——如果数据被破坏，GPT会发觉这些破坏，并从磁盘上的其他地方进行恢复。</p><p>所以对于新平台用户（Intel 6系以后/AMD 900系列以后和A系列）来说，都强烈推荐使用GPT分区表格式，目前包括Windows Vista、7、8、8.1、10已经都支持读取和使用GPT分区表。而对于使用Windows 8、8.1、10的用户，换用GPT后开机启动速度也可以进一步得到显著提升。</p><h2 id="二-mbr与gpt的转换"><a class="markdownIt-Anchor" href="#二-mbr与gpt的转换"></a> 二、MBR与GPT的转换</h2><p>通过你这个不能继续安装的启动盘，选择“修复计算机”——&gt;“疑难杂症”——&gt;“命令行”（具体名字记不清了，仅作参考），进入CMD程序后，依次输入以下命令:</p><ul><li>1.diskpart（启动Diskpart程序）</li><li>2.list disk （查看电脑中有哪些磁盘）</li><li>3.select disk 0（选中编号为0的磁盘，默认一般是0,也有其他的，看自己的硬盘大小确定)</li><li>4.clean（清除磁盘所有分区，<strong>特别注意：整个磁盘都会被清空</strong>)</li><li>5.convert gpt（将磁盘转换成GPT格式，<strong>同理，也可以是&quot;mbr&quot;，但暂时还没试过</strong>）</li><li>6.list partition（查看当前磁盘分区情况）</li><li>7.create partition efi size=100（默认大小为M）</li><li>8.create partition msr size =128</li><li>9.create partition primary size =102400(此处为你想设置C盘的大小)</li><li>10.两次输入exit</li></ul><p>现在就可以顺利安装了，祝你好运！</p><p><strong>致谢</strong><br>一、中关村在线《<a href="http://www.chinaz.com/server/2016/1017/595444.shtml">装机、做系统必备：秒懂MBR和GPT分区表</a>》<br>二、lzrreach的博客《<a href="https://blog.csdn.net/lzrreach/article/details/54933707">重装系统时将mbr分区改为gpt分区</a>》</p>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 程序猿的学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10安装Git步骤、常用的Git命令及上传已有的本地项目到github或码云</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2891/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2891/</url>
      
        <content type="html"><![CDATA[<p>据说程序猿界鄙视链中有一条“知道github的鄙视不知道github的”，我再加一句，“会用github的鄙视只知道github的”，这样，我就从一个被鄙视者，变成了鄙视者，想想还是挺激动的。</p><h2 id="一-win10安装git步骤和常用的git命令"><a class="markdownIt-Anchor" href="#一-win10安装git步骤和常用的git命令"></a> 一、win10安装Git步骤和常用的Git命令</h2><p>先从<a href="https://git-scm.com/download/win">Git官网下载中心</a>,由于我的系统是64位的，所以选择64-bit Git for Windows Setup<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2891/git.png" alt="git"></p><h2 id="二-git安装"><a class="markdownIt-Anchor" href="#二-git安装"></a> 二、Git安装</h2><p>直接一路点击【next】，安装完成以后在cmd中输入<br><code>git --version</code><br>查看是否正确安装好。<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2891/version.png" alt="version"></p><h2 id="三-git配置"><a class="markdownIt-Anchor" href="#三-git配置"></a> 三、Git配置</h2><h3 id="设置自己的昵称"><a class="markdownIt-Anchor" href="#设置自己的昵称"></a> 设置自己的昵称</h3><pre><code>`git config --global user.name &quot;yourname&quot;`</code></pre><h3 id="设置自己的email"><a class="markdownIt-Anchor" href="#设置自己的email"></a> 设置自己的email</h3><pre><code>` git config --global user.email &quot;youreamil&quot;`</code></pre><h2 id="四-常用的一些git命令"><a class="markdownIt-Anchor" href="#四-常用的一些git命令"></a> 四、常用的一些Git命令</h2><ul><li>显示command的 <code>helpgit help &lt;command&gt;</code></li><li>将工作文件修改提交到本地暂存区 <code>git add &lt;file&gt;</code></li><li>提交修改内容 <code>git commit &quot;message&quot;</code></li><li>将本地主分支推到远程 <code>git push -u &lt;remoteName&gt; &lt;localBrachName&gt;</code></li><li>克隆远程仓库 <code>git clone &lt;url&gt;</code></li><li>初始化仓库 <code>git init</code></li><li>创建仓库 <code>git remote add &lt;remoteName&gt; &lt;url&gt;</code></li><li>删除远程仓库 <code>git remote rm &lt;name&gt;</code></li><li>修改远程主机名 <code>git remote rename &lt;remoteName&gt; &lt;newRemoteName&gt;</code></li><li>拉取远程仓库 <code>git pull &lt;remoteName&gt; &lt;localBrachName&gt;</code></li><li>修改远程仓库 <code>git remote set-url --push &lt;remoteName&gt; &lt;newUrl&gt;</code></li><li>获取远程仓库的更新 <code>git fetch &lt;remoteName&gt;</code></li><li>获取远程仓库特定分支的更新 <code>git fetch &lt;remoteName&gt; &lt;brachName&gt;</code></li></ul><h2 id="五-上传已有的本地项目到github"><a class="markdownIt-Anchor" href="#五-上传已有的本地项目到github"></a> 五、上传已有的本地项目到github</h2><h3 id="1-在github上新建项目"><a class="markdownIt-Anchor" href="#1-在github上新建项目"></a> 1、在github上新建项目</h3><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2891/newproject.png" alt="newproject"></p><h3 id="2-然后填写项目名描述等"><a class="markdownIt-Anchor" href="#2-然后填写项目名描述等"></a> 2、然后填写项目名，描述等</h3><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2891/des.png" alt="des"></p><h3 id="3-创建成功后记好创建成功后的https下面要用"><a class="markdownIt-Anchor" href="#3-创建成功后记好创建成功后的https下面要用"></a> 3、创建成功后记好创建成功后的https，下面要用</h3><p><img src="win10%E5%AE%89%E8%A3%85Git%E6%AD%A5%E9%AA%A4%E3%80%81%E5%B8%B8%E7%94%A8%E7%9A%84Git%E5%91%BD%E4%BB%A4%E5%8F%8A%E4%B8%8A%E4%BC%A0%E5%B7%B2%E6%9C%89%E7%9A%84%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E5%88%B0github%E6%88%96%E7%A0%81%E4%BA%91/httpsImg.png" alt="https"></p><h3 id="4-进入到本地项目根目录下"><a class="markdownIt-Anchor" href="#4-进入到本地项目根目录下"></a> 4、进入到本地项目根目录下</h3><h3 id="5-右键选择-git-base-here"><a class="markdownIt-Anchor" href="#5-右键选择-git-base-here"></a> 5、右键选择 【git base here】</h3><h3 id="6-输入-命令git-init会生成一个git-文件夹"><a class="markdownIt-Anchor" href="#6-输入-命令git-init会生成一个git-文件夹"></a> 6、输入 命令<code>git init</code>（会生成一个.git 文件夹）</h3><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2891/folder.png" alt="folder"></p><h3 id="7-输入命令git-add-注别忘记后面的此操作是把test文件夹下面的文件都添加进来"><a class="markdownIt-Anchor" href="#7-输入命令git-add-注别忘记后面的此操作是把test文件夹下面的文件都添加进来"></a> 7、输入命令<code>git add .</code>（注：别忘记后面的【.】，此操作是把Test文件夹下面的文件都添加进来）</h3><h3 id="8-输入命令-git-commit-m-baoli2"><a class="markdownIt-Anchor" href="#8-输入命令-git-commit-m-baoli2"></a> 8、输入命令 <code>git commit -m “baoli2”</code></h3><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2891/add.png" alt="add"></p><h3 id="9-输入命令git-remote-add-origin-httpsgithubcomhanxue10180baoliclientgit"><a class="markdownIt-Anchor" href="#9-输入命令git-remote-add-origin-httpsgithubcomhanxue10180baoliclientgit"></a> 9、输入命令<code>git remote add origin https://github.com/hanxue10180/baoliClient.git</code></h3><h3 id="10-git-push-u-origin-master"><a class="markdownIt-Anchor" href="#10-git-push-u-origin-master"></a> 10、<code>git push -u origin master</code></h3><p>会让输入github的用户名，密码</p><h3 id="11-好了上传成功刷新github"><a class="markdownIt-Anchor" href="#11-好了上传成功刷新github"></a> 11、好了，上传成功，刷新github</h3><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2891/gitafter.png" alt="gitafter"></p><h2 id="五-上传已有的本地项目到码云20180713"><a class="markdownIt-Anchor" href="#五-上传已有的本地项目到码云20180713"></a> 五、上传已有的本地项目到码云（20180713）</h2><p>今天更新时，系统已经从win10换成了deepin。</p><h3 id="1-在码云上新建项目点击右上角的加号点击新建项目"><a class="markdownIt-Anchor" href="#1-在码云上新建项目点击右上角的加号点击新建项目"></a> 1、在<a href="https://gitee.com/">码云</a>上新建项目，点击右上角的加号，点击【新建项目】</h3><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2891/newproject-1.png" alt="newproject-1"></p><h3 id="2-填写基本信息后点击创建"><a class="markdownIt-Anchor" href="#2-填写基本信息后点击创建"></a> 2、填写基本信息后点击【创建】。</h3><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2891/edit-1.png" alt="edit-1"></p><h3 id="3-跳出一个新的页面点击右侧的克隆下载选中https复制这个链接后面有用"><a class="markdownIt-Anchor" href="#3-跳出一个新的页面点击右侧的克隆下载选中https复制这个链接后面有用"></a> 3、跳出一个新的页面，点击右侧的【克隆/下载】，选中【HTTPS】，复制这个链接，后面有用。</h3><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2891/giturl.png" alt="giturl"></p><h3 id="4-在你的计算机上到项目根目录下开启终端terminal默认你已经安装好了git我这里用的系统是deepin页面可能和你的不太一样-但是安装好git后git的操作指令是一样的"><a class="markdownIt-Anchor" href="#4-在你的计算机上到项目根目录下开启终端terminal默认你已经安装好了git我这里用的系统是deepin页面可能和你的不太一样-但是安装好git后git的操作指令是一样的"></a> 4、在你的计算机上，到项目根目录下，开启终端terminal，默认你已经安装好了<a href="https://git-scm.com/downloads">git</a>,我这里用的系统是Deepin,页面可能和你的不太一样。但是安装好git后，git的操作指令是一样的。</h3><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2891/root.png" alt="root"></p><h3 id="5-本地初始化一个项目在终端里输入"><a class="markdownIt-Anchor" href="#5-本地初始化一个项目在终端里输入"></a> 5、本地初始化一个项目，在终端里输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git remote add origin &quot;你的项目地址(刚才在码云创建的项目的地址)&quot; &#x2F;&#x2F;注:项目地址形式为:http:&#x2F;&#x2F;git.oschina.net&#x2F;xxx&#x2F;xxx.git或者 git@git.oschina.net:xxx&#x2F;xxx.git</span><br></pre></td></tr></table></figure><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2891/remote.png" alt="remote"><br>这样就完成了一次版本你的初始化</p><p>如果你想克隆一个项目,只需要执行(因为是将本地项目上传，所以这步可跳过)<br><code>git clone &quot;项目地址&quot;</code></p><h3 id="6-完成第一次提交"><a class="markdownIt-Anchor" href="#6-完成第一次提交"></a> 6、完成第一次提交</h3><p>进入你已经初始化好的或者克隆项目的目录,然后执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git pull origin master</span><br><span class="line">git touch init.txt &#x2F;&#x2F;如果已经存在更改的文件,则这一步不是必须的</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;第一次提交&quot;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2891/success.png" alt="success"></p><p>然后如果需要账号密码的话就输入账号密码，这样就完成了一次提交。<br>此时，你可以在你的个人面板、项目主页查看到你的提交记录<br>到这里就已经完成了，如在同步时遇到异常，请继续往下看</p><h3 id="7-同步冲突"><a class="markdownIt-Anchor" href="#7-同步冲突"></a> 7、同步冲突</h3><p>按照本文档新建的项目时，在码云平台仓库上已经存在readme文件，故在提交时可能会存在冲突，这时您需要选择的是保留线上的文件或者舍弃线上的文件；</p><h4 id="1如果您舍弃线上的文件则在推送时选择强制推送强制推送需要执行下面的命令"><a class="markdownIt-Anchor" href="#1如果您舍弃线上的文件则在推送时选择强制推送强制推送需要执行下面的命令"></a> (1)如果您舍弃线上的文件，则在推送时选择强制推送，强制推送需要执行下面的命令</h4><p><code>git push origin master -f</code></p><h4 id="2如果您选择保留线上的readme文件则需要先执行"><a class="markdownIt-Anchor" href="#2如果您选择保留线上的readme文件则需要先执行"></a> （2）如果您选择保留线上的readme文件,则需要先执行</h4><p><code>git pull origin master</code></p><p>然后才可以推送,如果发生冲突，则需要先解决冲突,关于如何处理冲突</p><p><strong>致谢</strong></p><blockquote><p>askycat的博客《<a href="https://blog.csdn.net/askycat/article/details/55106299">使用Git上传项目到码云</a>》</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 程序猿的学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>习立风浅谈：李笑来录音泄密背后的ICO</title>
      <link href="%E9%9A%8F%E7%AC%94/63491/"/>
      <url>%E9%9A%8F%E7%AC%94/63491/</url>
      
        <content type="html"><![CDATA[<blockquote><p>“你如果是一个商人，纯粹是为了钱，大大方方赚钱当然没有什么不好，但总是披着理想主义的外衣，把自己塑造很高尚很纯洁就太虚伪了，我很讨厌虚伪” ——罗永浩</p></blockquote><p>  简单谈一下我理解的已被央行等七大部门叫停的ICO（Initial Coin Offering，首次币发行），这个“精英在做啤酒，平民在吹泡沫，骗子在割韭菜”的ICO。</p><p>  今天，李笑来的一个50min的录音泄露，导致了“区块链共识崩塌”，就相当于——</p><blockquote><p>【<br>币圈外的人说，“币圈内的人都是傻×！不承认自己是傻Ⅹ的人都在装不知道”<br>币圈内的人回应，“我们最多是个韭菜，你们才是傻×，那个谁谁谁几天资产翻了几十几百倍，多看看人家李笑来老师。”<br>李笑来：“圈外人说的对，不要自欺欺人了，圈内人都是傻Ⅹ。”<br>圈内人：“······”<br>】</p></blockquote><p>  要理解这个事件，就要先理解ICO，甚至要回答“ICO是技术革命还是庞氏骗局？”。<br>  简单举个例子说一下什么是ICO，我最近基于区块链技术做了一个“分布式智能纺纱机”的项目，什么都准备好了，就是没钱怎么办？简单，发行“代币”（简单说，一个圈内基于一定共识认为可流通的“货币”），我决定发行一亿枚“代币”，名字叫“纱币”，分配方案是我占15%，30%给挖矿者，55%给“韭菜”。我承诺，“纱币”只有一亿枚，永不增发。你感兴趣吗？感兴趣的话你只能用你的比特币或以太币来投资我，你可以购买我首次发行的“纱币”里10%(1000W枚)的一部分，发行价是，1比特币=1000纱币。<br>  简单算笔账，一枚比特币10W,这1000W枚纱币就是10个亿。天呐，你什么都没有，就要融资十个亿，你这个“纱币”，值这么多钱吗？你要这些钱干什么？还不能参与公司分红？你万一募资成功，卖了自己的15%跑了怎么办。<br>  你开始犹豫了，在你犹豫的这一天里，10%的“纱币”已经卖完了。<br>  天哪，谁买的？我也要买。<br>  对不起，由于大佬站台，我这边已经没有了，你现在只能去交易所买了，听说价格好像已经翻倍了。这就是“币圈一日，人间一年”。</p><p>  总之，接下来的这两三年这个行当可以赚钱，而且我深信不疑，但是一个没有国家信用背书并监管的ICO，很容易被“类传销”运用变为庞氏骗局，但基于多数人的“群体想象”，没有人会轻易退出，在不知不觉中共同助长了一个新的“泡沫”。</p><p>  给大家一组数据———</p><blockquote><p>2018年的前五个月ICO规模几乎已是2017年的两倍，但纳斯达克首席执行官Friedman认为，ICO因缺乏透明度而具有严重的潜在风险，容易导致散户投资者夭折。目前，世界上已有1000个数字货币“死亡”。<br>普华永道咨询公司和瑞士加密谷协会的一份联合报告则显示，在2018年1月到5月期间，共有537家公司注册发行了ICO项目，并筹集了137亿美元，规模几乎是整个2017年的两倍。在2017年，总共有552家发行ICO，筹集总额仅超过70亿美元。</p></blockquote><p><img src="/%E9%9A%8F%E7%AC%94/63491/1-1.jpg" alt="1-1"><br><img src="/%E9%9A%8F%E7%AC%94/63491/2-2.jpg" alt="2-2"><br><img src="/%E9%9A%8F%E7%AC%94/63491/3-1.jpg" alt="3-1"><br><img src="/%E9%9A%8F%E7%AC%94/63491/4-1.jpg" alt="4-1"><br><img src="/%E9%9A%8F%E7%AC%94/63491/5-1.jpg" alt="5-1"><br><img src="/%E9%9A%8F%E7%AC%94/63491/6-1.jpg" alt="6-1"><br><img src="/%E9%9A%8F%E7%AC%94/63491/7.jpg" alt="7"><br><img src="/%E9%9A%8F%E7%AC%94/63491/8.jpg" alt="8"></p><p><img src="/%E9%9A%8F%E7%AC%94/63491/fz.jpg" alt="fz"></p><p><strong>代浩热评：</strong><br>一般玩家：相信自己不是最后一波韭菜。<br>高级玩家：相信会有无数的韭菜来给自己割。<br>顶级玩家：施好肥浇好水等韭菜长出来。</p><p><strong>致谢：</strong></p><blockquote><p>网易新闻<a href="https://mbd.baidu.com/newspage/data/landingsuper?context=%7B%22nid%22%3A%22news_10413647536347104982%22%7D&amp;n_type=0&amp;p_from=1">区块链共识崩塌，李笑来承认割了罗振宇的韭菜</a><br>知乎问题[近期曝光的 50 分钟李笑来谈话录音内容是否戳了你的心？]<a href="https://www.zhihu.com/question/283798564">https://www.zhihu.com/question/283798564</a>)<br>刘润《ICO：ICO到底是庞氏骗局，还是伟大创新？》<br><a href="https://www.zhihu.com/question/283798564/answer/433421919">张行知乎回答</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何搭建win10 asp开发环境安装iis10？</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/40541/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/40541/</url>
      
        <content type="html"><![CDATA[<p>到目前大部分网站还是用asp，可见短期内不会被彻底淘汰，学习asp开发就需要搭建本机的环境，接下来我给大家介绍Windows10如何安装IIS信息服务。</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/40541/localhost.png" alt="localhost"></p><h2 id="工具原料windows10系统"><a class="markdownIt-Anchor" href="#工具原料windows10系统"></a> 工具/原料:Windows10系统</h2><h2 id="方法步骤"><a class="markdownIt-Anchor" href="#方法步骤"></a> 方法/步骤</h2><p>一、按下【win + R】调出运行界面，输入【control.exe】，如下图所示：<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/40541/run.png" alt="run"><br>二、查看方式调为【类别】，点击【程序】，如下图所示：<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/40541/control.png" alt="control"><br>三、点击【启用或关闭Windows功能】，如下图所示：<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/40541/cx.png" alt="cx"><br>四、到了这一步我先说明一下，文件夹前面的框里是方块的意思是这个文件夹内容没有全选，框里是对勾的是这个文件夹里的内容全选了。如图配置即可。<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/40541/windowsfeature.png" alt="windowsfeature"><br>五、配置完成之后，点击确定，慢慢等待。可以看到正在应用所做的更改 的进度条，完成之后会提示已完成请求的更改。关闭即可。<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/40541/after-windowsfeature.png" alt="after-windowsfeature"><br>六、接下来我们要打开IIS管理器。桌面上右键点击【此电脑】–&gt;【管理】。即可进入【计算机管理】。在【服务和应用程序】里有IIS管理器，点击 进入IIS管理器。<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/40541/international.png" alt="international"><br>七、我们可以看到中间部分有很多图标，找到【ASP】，点击。<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/40541/asp.png" alt="asp"><br>八、这一步是配置asp应用程序，找到【启用父路径】，选为【True】。<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/40541/asp-1.png" alt="asp-1"><br>九、到这里IIS环境已经搭建好了，在浏览器里输入localhost就可以看到iis的主页了。想要添加网站程序可以点右侧的高级设置，将物理路径改成你的网站程序就能访问了。<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/40541/localhost-1.png" alt="localhost-1"></p><p><strong>参考</strong></p><blockquote><p>感谢作者<a href="https://jingyan.baidu.com/user/npublic?uid=98b0bd12cafcbe2126ee159e">九三四九</a>原创文章百度经验<a href="https://jingyan.baidu.com/article/bad08e1eef7afa09c85121ff.html">如何搭建win10 asp开发环境安装iis10？</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>闲来无事，想起我们的那些日子，你能猜出哪个是你吗？朋友，岁月使我们更加紧密</title>
      <link href="%E9%9A%8F%E7%AC%94/65417/"/>
      <url>%E9%9A%8F%E7%AC%94/65417/</url>
      
        <content type="html"><![CDATA[<p>  警察☆★你总是绷着个嘴，与刘博之间有太多无端的仇怨，有待长高哦<br>  经理○●假期在党河见到你真没想到你谈恋爱了，还爱的挺深，要把握好与学习的关系啊<br>  法官◇◆数学方面你、夏海玉、我可有一拼，记得徐老师曾对咱仨说～必须一百，否则砍掉手指头<br>  教师□■你沉沦的太深，房东说你画的跟个鬼一样，希望早日转正<br>  总经理△▲如果没有你姐，你和你妹或许让人羡慕，记得没有你的大头贴啊，同学录上是…<br>  运输管理员▓▽知道你喜欢过我，要不上课就不会老望着我喽，你为什么不上了<br>  科学家▼◢不说你了，好像让女生打哭三次吧…<br> 歌手◣◤希望你梦想能实现，有相貌，只是为什么你也沉沦？假期见你和曹威霞三次，只谈了五六分钟吧<br>  作家◥♂字迹太工整了，能当个袖珍作家，但再见到你字迹就有点小变化喽<br>  警察♀¤你的辈份长的真快，一下子从孙女变成妹了<br>  还不确定￠￡这么多人一个假期之内都喜欢上了你，而你却选择了我第一个排除的人，不可思议<br>  飞行员‰§你可以把柔柔的腔调改一改吗？否则你还会继续受气的<br>  宰相№◎你太喜欢给别人起外号了，还记得自己外号吗<br>  教师◇◆你也堕落了，永远忘不了～考试你抄我的，我97你100<br>  导游、空姐◣◤小学时真崇拜你的英语，但现在…你被约束在家里，滋味一定不好受吧<br>  老板◢◥瘦的简直就一干鸡，想想蒲京咱仨露宿街头，好怀念<br>  大学生▁▓你的嘴巴如果能干净一点就好了，我在你家门前掉到大干渠那天你在吗<br>  公司经理※→小学时，我的头几乎都是你老妈剪的，希望早日适应家乡新环境<br>  攀登最高峰←↑咱班的黑板报几乎都是你主持的吧，应该向美术发展<br>  飞行员↓↖乒乓球早日过二级，咱俩还算是老乡哩<br>  DJ↗↘与俄国总理同名，服了你了。加油跑！想在奥运会场见到你↙<br>  官员●﹏离家出走的滋味好受吗？别再那样做了，好想再见到你<br>  不清楚●∩嗓音真棒，还记得我们一起朗诵的《我骄傲，我是中国人》吗<br>  大学生﹏∩宋大炮的外号是你起的吧？你俩若结合，就能攻城了<br>  学生⊙﹏拾棉花真迅速，你还因此获过奖呢<br>  老师⊙ 英语课代表，六年级有人把咱们扯在一起了，对你真没好感<br>  警察<sup>_</sup>老赵、老库你们关系不错，记得汶川地震你捐十元<br>  科学家(☆＿你与小郭要幸福！咱俩关系挺密切，勿忘哦<br>  航天事业建设者☆)你家楼上水龙头还开着呢！你家棉花还要我和康把子去拾吗<br>  安稳工作( T__话语不太多，想去美国，自从认识你，又学会一个带“王”的字<br>  无_T ) 只有咱俩懂得的公式：12*2，咱俩已不分你我了，放弃学业了，一定要有出息<br>  空白(≧教师节那天，你自愿交了五元，而后你老妈找来又要回去三元，记得吗？朋友<br>  教师◇≦)那次聚会你喝醉了，还问我是谁买的醒 酒剂，自己想<br>  警察(ˉ□立定跳远时，你跳地很轻，一不小心跌倒碰到那块颂德碑上了<br>  无ˉ）咱们几个偷你家的铁块卖了，之后你如愿回老家了，不知是对是错<br>  中专 ≧▽在卫生上你锱铢必较，六年级时我们一直第一，你的宦大豆呢<br>  科学家≦＋咱班就你自己住在康益山庄吧！也是咱班极少数留短发的<br>  一天十万元的﹏＋武术上真佩服你，侧空翻都不用手的，刀枪棍棒可以啊<br>  医生 (-__从你家那道道直直走别拐弯就到天桥了，如果没记错<br>  军人-)b跟老师差不多，到学校就戴两个袖筒子，不是老库<br>  很多██很文静，几乎不说话，但与前后左（右边没人）关系处地蛮不错<br>  无█▄︻很自信，即使每次回答问题都结结巴，但一次次的又举起手，把这股韧劲投入现有工作冲不会失业了<br>  律师┻┳篮球、台球、乒乓球，哪样不精？溜冰、摆酷、KTV、何事不专？</p><p>═一　▄︻┳一　▄︻┻═┳一? ??? ? ??? ε?з ●? ??发现了吗，是按我们六年级座位排的！希望再开一次毕业典礼！朋友，谁能将小学趣事串连起来？</p><p>2010/11/14</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2010-2013杂诗三首</title>
      <link href="%E9%9A%8F%E7%AC%94/65069/"/>
      <url>%E9%9A%8F%E7%AC%94/65069/</url>
      
        <content type="html"><![CDATA[<h1 id="文明的回响"><a class="markdownIt-Anchor" href="#文明的回响"></a> 文明的回响</h1><blockquote><p>～～读余秋雨《千年一叹》有感并感叹我中国的传统文化</p></blockquote><p>希腊的石柱林，拜伦的名字依旧在闪闪发光』<br>头颅沉下，那是虔诚地敬仰』<br>海波荡，思绪飞』』』</p><p>埃及的金字塔，隔世的老人在雕饰隔世的梦』<br>灰石飘飞，那是不渝的坚守』<br>黄沙走，阑干泪』』』</p><p>两河的巴比伦，空中的花园终究化作空想』<br>古路静默，那是徒然的控诉』<br>两河奔，空回首』</p><p>印度的释迦牟尼，厚重的棺醇黝黝发光』<br>印河流淌，那是高声地召唤』<br>黑云压，追往昔』』』</p><p>中国的喜马拉雅，巍峨的身躯傲然挺立』<br>山路回绕，那是环状的文明』<br>雪峰融，入江河</p><p>2013/02/09</p><h1 id="我的感悟"><a class="markdownIt-Anchor" href="#我的感悟"></a> 我的感悟</h1><p>人生应冲向何方？</p><p>是啊！何方？何方？<br>渝水边的老人告诉我：</p><p>有钱能使鬼推磨。</p><p>真的吗？<br>失望!!!</p><p>在怀疑中追问老师，<br>答道：</p><p>为了自己的理想与追求~~~</p><p>可以奉为真理吗？<br>迷茫！有点迷茫！！！</p><p>漫步于沂水，<br>默默然恍大悟：</p><p>自己的，目标，</p><p>只是为了更多的人更好的活着！</p><p>2010/03/27</p><h1 id="是否体验过成功"><a class="markdownIt-Anchor" href="#是否体验过成功"></a> 是否体验过成功</h1><p>成功似乎很遥远,</p><p>可望而不可及.</p><p>漫漫征途已过,</p><p>征途漫漫已过，<br>方觉曾几何时,</p><p>曾几何时，<br>世间之大,</p><p>成功漫步于山川湖海,</p><p>你，也遇见,<br>不曾注意,</p><p>或许某天我们仰天长笑:</p><p>我也成功过!!!</p><p>2010/02/10</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我可以说，我暂时落榜了吗？</title>
      <link href="%E9%9A%8F%E7%AC%94/35806/"/>
      <url>%E9%9A%8F%E7%AC%94/35806/</url>
      
        <content type="html"><![CDATA[<p>  这一天终究是来了，可以说，在我意料之中，但我还是不敢相信，从头到尾把今年的录取名单看了3遍。到最后，我信了，我落榜了。  2年来的努力似乎被宣判了死刑。信心满满的笔试跪了，接下来的高考也跪了，那时我觉得自己已经和南科大渐行渐远了，背驰的感觉蓦然袭来，但我还是怀着渺茫的希望参加了面试。结果，我还是输了。我相信，即使我从高一重新来过，我仍然会选择同样的道路，同样的生活方式。<br>  到目前为止，我已经做了最后的挣扎，争取一个机会，哪怕碰到的仍然是失败。敢于抗争的生命，怎会轻易凋谢？我给梦想一次挣扎的机会。<br>  无论后来的结果如何，我想未来的自己不会因为今天的决定而嘲笑现在的自己。高考跪了后，我就处于矛盾之中，一方面非常渴望南方科大会录取自己；另一方面，如果自己被录取，不是拉低了南方科大的档次了吗？ 可是，我还是去面试，去填报志愿，目的是什么，其实我自己也不知道，但我知道：我必须这么做，这是心灵深处的召唤。<br>  了解南方科大的这2年多来，说实话，我成长了不少，变得“宽容、忍让、和善”，这3点似乎与南方科大无关；但是“责任，担当”来自南方科大，我是丝毫也不怀疑的。至今仍然记得“每天叫醒我们的不是闹钟，是高教改革的梦想”，“或许我们不能成为超级老鼠，至少我们能成为大老鼠”，“与其在已有的大树下乘凉，不如亲自动手去栽培一棵新的大树”之类云云。<br>  高中2年来的念想似乎已经化成了泡影，没有了目标的人生似乎太无聊了。忽然想起，“离别伴随着阵痛，这种阵痛叫做成长”，“跌倒是一次纪念，纪念的是一朵温馨的花”。我一次次告别梦想，一次次成长；我在一次次挫折前爬起，纪念的花连起来也能绕地球一圈了吧。<br>  了解我的人都应该知道，第一，我更喜欢“君子之交淡如水”的感觉，有些感情没必要刻意维持，不常联系，只祈求，当我达到了你的城市，能得到你的欢迎； 第二，从不在意别人无厘头的指指点点，做我自己，做好我自己。<br>  高中时，“多少次，迎着冷眼与嘲笑，从来没有放弃心中的理想”，坚信“自信打不死的心态活到老”，欣赏“与现实对垒，理想快输了，我别无他法，用血肉顶住”。如今，争取一旦失败，理想真的输了 ，我能怎样呢？一，不顾一切，到南方科大，呆上四年，也许走上研究道路；二，进入一所传统大学，用自己喜欢的方式，追寻我初中的梦想，企业家OR政治家OR完成一个企业家到政治家的过渡，年过半百时，如果教育依旧存在条条框框，转战教育领域。我知道高考跪了的那一段时光，我的心里已经有有答案了。<br>  为什么说“我暂时落榜了”呢？还是那句“高考不是终点，而是一个崭新的起点”，高二时我的思想体系就已经初步形成，核心是“本我”，主要奉行蔡元培先生的“思想自由，兼容并包”之精神，浅显地吸取华夏传统中庸之道，似乎也部分受到曼德拉的影响。“一切的存在与不存在，都有其必然性和合理性” ，“你认为别人错了，同时别人也可能认为你错了，在思想领域里没有绝对的对与错”。<br>  此时的自己如果萎靡不振，那太不符合我的风格了。乐观、阳光的我会开始一段崭新的征程，读到四年前（2010年）的拙作最后一句，再次产生共鸣，现摘抄如下：</p><blockquote><p>《是否体验过成功》<br>成功似乎很遥远,</p><p>可望而不可及.</p><p>漫漫征途已过,</p><p>征途漫漫已过，<br>方觉曾几何时,</p><p>曾几何时，<br>世间之大,</p><p>成功漫步于山川湖海,</p><p>你，也遇见,<br>不曾注意,</p><p>或许某天我们仰天长笑:</p><p>我也成功过!!!</p></blockquote><p><strong>写于</strong>：2014/07/09</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在大学的周末，如果还想睡觉？</title>
      <link href="%E9%9A%8F%E7%AC%94/3637/"/>
      <url>%E9%9A%8F%E7%AC%94/3637/</url>
      
        <content type="html"><![CDATA[<p>  走在路上，总是喜欢想些什么，一系列情景的触动，也是恍然之间，想到八个字，“我的大学，没有周末”，于是又觉得自己应该写点什么了。<br>  今天2014年11月15日。<br>  早上5:40和舍友崔原从床上爬起，因为参加了体育老师的一个实验，自愿做了一只小白鼠，不能在实验期间做一些其他的运动，所以，没有去晨跑。默然发出慨叹，多快啊！刚开学时自己是通过那几天的晨跑来熟悉自己的校园内外，转眼间，也有两个多月了。<br>  于是就去读英语教材，在阳台上，呼吸着南通清新的空气，直到看着圆圆的红日升起，仅仅读了半个单元，回到宿舍，看看《阮籍评传》，快6:40的样子。<br>  略微收拾，和舍友崔原一起去食堂吃饭，路上，谈到了我们电子信息工程的专业前景，我们的未来，我们的梦想。<br>  回到宿舍不久，7:40左右，舍友秦德阳、张志勇、崔原，去工程训练中心，参加“嵌入式比赛”的前期培训。<br>  9:00，我去大学生活动中心参加“大学生走进后勤动员大会”，还好，我在大学的一系列会议、培训、活动，从来没有感到假大空，总能让人学到东西，或技能、或思想等等。说的很好，“扫地也是一门学问”，“即使在一个普通岗位工作时，我们也应该思考一个岗位的最高标准”，“大学生去扫地，去打饭、去收碗筷，而不去思考，如何做的更好，和大字不识一个的人有什么区别”，“先示范，而后劝导”。<br>  11:10分结束，去二食堂吃饭。<br>  将近12:00，回到宿舍，拿出手机，浏览QQ空间，上QQ看看有没有新的信息，而后浏览新闻，了解一下“国际”、“军事”两个大板块。看到“歼-31”的雄姿，又想到：我国的发动机何时才能引领世界？<br>  1:10，出发参加培训部组织的“策划培训”，也算有所收获。<br>  2:30左右，记不清了，培训结束，和尹自强一起走，碰到了郭昱珍，她说，“夏帮苗下午还有事，比较忙”，其实她自己也够忙的，一个团支书的团日活动就够忙了。在综合楼看到了“家乡话PK赛”的现场，巧合的是，正好是甘肃方言的节目，是以“我的家住在黄土高坡”结束的，不知为什么，想起了高音调的高利强。我就在那里一边听，一边想我逝去的小学时光，那时的我们是如此单纯幼稚，单纯幼稚到可以盯着一群蚂蚁看几个小时，单纯幼稚到为了一个玻璃球争执不休，单纯幼稚到肆无忌惮。小学同学们，记忆的阀门一旦打开， 是回忆上的回忆。远方的你们，还好吗？<br>  3:00左右，去图书馆4楼，想去copy因我前天去晚了、昨天下午跑赞助而未去copy的《PhotoshopCS6从入门到精通》的光盘素材，可是，没人。<br>  3:15左右，刚到宿舍门口，舍友秦德阳打来电话，说，他们几个从8点到现在还没有吃饭，让我送点吃的、喝的过去。8个小时，没有吃午饭！是什么在支撑着这么一群人？<br>  一路上，看到“决战火海”的活动正在进行；循着轰鸣声，抬头，看到正在试飞的飞机模型正在表演，这支团队，我已经见过多次；继续走，击剑馆里正在比赛，看着他们认真的表情，心里莫名的钦佩；足球场上，伴随着呐喊声，拔河比赛如火如荼；室内篮球场，训练正在进行，白色的球服上留下了多少奋斗的汗水？<br>  3:50左右，回到宿舍楼群门口，碰到一个背着吉他的纺院的男生，吃力的提着一个箱子，帮他送到30号楼6楼。他因为对吉他的热爱，约了乐友，一起去练吉他。忽然间，想起暑假在北大校园里的那座小山上传来的笛声，无言中，默默地改变了我原本的路线。<br>  这一系列的情景，很容易让人想起梦想。梦想，多么让人心怀热忱！每个人都有自己的朝圣路，每个人都有所追求，因为对梦想的坚持，多少人在本该好好休息的周末，抽出时间，去做一些更有意义的事，而不是选择睡觉，上网打游戏。今天的你，如果看到了现在的这段话，请认真想想，我们来大学前的初衷是什么？来大学后，我们的初衷是否有所改变？为了我们的初衷，自己又做了什么？下次如果还想在周末睡8个小时以上，请给自己找一个说服的了自己的借口。当看着有的同学在大学宽松的环境里开始堕落，甚至开学了两个月，依然在茫然，不知所措。我也开始不知所措，不希望看着我的朋友们开始变得散漫。我们是要对自己负责的，欠下的东西，总是要还的；现在不学的东西，以后可能要花更多的时间来弥补。现在不去过充实的大学生活，以后还有机会吗？<br>  梦的航船总是那么容易颠覆，真希望有一天看到所有人的梦想一个个的变成现实。<br>  可是，不去追寻，梦会因为同情，而向我们靠近吗？<br>  不忘初心，初心不忘。想实现梦想，总要有所行动。<br>  如果觉得自己时间紧，算算自己一天扣手机的一半时间是多少？</p><p>2014/11/15</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>真爱伊人不变</title>
      <link href="%E5%8E%9F%E5%88%9B%E6%8B%99%E7%AC%94/5675/"/>
      <url>%E5%8E%9F%E5%88%9B%E6%8B%99%E7%AC%94/5675/</url>
      
        <content type="html"><![CDATA[<h1 id="真爱伊人不变"><a class="markdownIt-Anchor" href="#真爱伊人不变"></a> 真爱伊人不变</h1><blockquote><p>记忆是一位带有太多情绪和偏见的编辑。他常自作主张地留下他所喜欢的东西；而对那些不尽如人意的事情充耳不闻。在这种剪辑下，玫瑰色的往事清晰如昨，一切美好的时光也被注入了神奇的魔力，不开心的日子慢慢消退，直至消失，只留下一片颇具魅力、朦朦胧胧的阳光岁月。<br>——彼得·梅尔《重返普罗旺斯》</p></blockquote><h2 id="2100年普罗旺斯墓园悠悠百年子不语吾已了然于心"><a class="markdownIt-Anchor" href="#2100年普罗旺斯墓园悠悠百年子不语吾已了然于心"></a> 2100年，普罗旺斯墓园：悠悠百年，子不语，吾已了然于心</h2><p>  暮雪潇潇，寒风阵阵，风卷残云中，又一番阑珊。<br>  暗灰色的天空，抖落了一身的寒气，肆意的撒下残损的雪花瓣儿，似乎裹挟着哀怨，似乎揣着愤恨，难以将这般干冷的雪堆砌起一个形状来，倔强的如同薰衣草田中的野花，非要以自己的色彩去点缀那片片紫色云彩，却在摄像师的镜头下消逝无踪。<br>偌大的世界，因为有爱，所以有了故事。<br>  顾平洲今年已经105了，一个世纪老人站在灰白的墓碑前，一道阳光狠狠地推开浓重的乌云，不顾一切地扑倒在老人手里的薰衣草上，普罗旺斯的香气随着这抹阳光扩散至远方。那股熟悉的味道，那幕幕往事，那个她。也许记忆的闸门已经打开，他泪眼滂沱，只听到低沉的“呜呜…”声。<br>  萎蔫在手里的薰衣草依旧散发着属于他们的记忆。</p><h2 id="2055年吕贝隆修道院再握子手已过半百身"><a class="markdownIt-Anchor" href="#2055年吕贝隆修道院再握子手已过半百身"></a> 2055年，吕贝隆修道院：再握子手，已过半百身</h2><p>  云淡风轻，花香扑鼻，普罗旺斯的容颜，属于薰衣草。<br>  “平洲，快看，阿尔卑斯山，我们，我们是不是要到普罗旺斯了？”<br>  “对，对······快了。薰儿，咱们等了这么些年，盼了这么些年，蓦然白首，却已半百身，多希望时光可以陡转一次。普罗旺斯，我们，来晚了！”顾平洲的眼角闪着泪光，又悄然掩面拭去。<br>  普罗旺斯马赛机场，打开舱门的那一刻，地中海的海风，夹杂着薰衣草、百里香、松树的芬芳，扑面而来，任性地流淌在空气中，而不管你爱，抑或不爱。两个花甲之人，为了一个愿望，还是决定徒步去呂贝隆山区。年轻时的双肩包，依偎在肩头。看着走在前面的背影，顾平洲心里一阵阵微痛，可还是没有开口，他知道即使开口，她也会执意背着，用她的话说，“背着满载梦想的包，心里才踏实。就如同顶着穗状花的薰衣草，满满的梦想”。<br>  任性，疯狂，也对步履蹒跚的老者敞开怀抱。<br>  不知在后面跟了多久，顾平洲走向前去，两只布满生命印记的手，默契地十指相扣；两双用眉毛勉强支撑眼皮的眼睛，对视良久，折射着属于青年人的光辉。<br>  两人并排向前走去。<br>  真爱，无言。</p><h2 id="2025年韩道口镇薰衣草普罗旺斯的紫韵"><a class="markdownIt-Anchor" href="#2025年韩道口镇薰衣草普罗旺斯的紫韵"></a> 2025年，韩道口镇：薰衣草，普罗旺斯的紫韵</h2><p>  一片镶着金边的云朵，被风无意中吹成了鱼鳞状。风剪云，是自然赐予我们的美丽。<br>  光秃秃的枝干，尚未放晴的天空，不时传来的“咩咩”声，混杂着“汪汪”声，飘起的炊烟，农村的交响乐，承载了一个金秋。<br>  酒杯碰在一起，迸发出清脆的声响，声音里回响着薰衣草的香味。而立之年的生日，亲交故知，一言，又一语，可是顾平洲还是执拗地以茶代酒。多少年了，他已经忘了酒的醇香，杯茶入肠，摇落不知宋玉悲。还如素年锦时，听从来张内心深处的召唤，不为俗世的叽叽喳喳所混淆视听。<br>  或许只有她懂，这，也就够了。紫色的酒杯，伊人浸泡在薰衣草的大水杯中，小火煨热，蹲着注视着水的温度，控制在85℃左右，足足有四个钟头，眼睛一直没敢离开，深怕出了些许差错。</p><h2 id="2022年南通大学附属医院孩子听从内心的召唤"><a class="markdownIt-Anchor" href="#2022年南通大学附属医院孩子听从内心的召唤"></a> 2022年，南通大学附属医院：孩子，听从内心的召唤</h2><p>  万里无云，风，似乎在这一刻，也屏住呼吸，似乎在等待着什么。<br>  “子木，请记住：人，这一辈子，只需听从内心的召唤，你的世界，由你自己选择。或许一生跌跌撞撞，或许一生踉踉跄跄，但是，你至少属于自己。有棱角地活着，比圆滑地活着，更有作为人的尊严。挺立的薰衣草，就是一种有尊严的存在。”顾平洲第一次见到刚出生的孩子，意味深长，爱眼脉脉。<br>  “木木，以后有机会了，就多出去看看世界吧。即使是一个别人活腻的地方，也会拥有属于你的一角，那里，落英缤纷；那里，风摇影动；那里，或许还有满载梦想的薰衣草。当然，你，有你的自由；你，有你的选择权，未来，属于你自己。”李薰在剖腹产后醒来，说的第一段话，也是给顾子木的。<br>  顾子木的世界，就这样与薰衣草结缘。<br>  也许我们，在尚未懵懂之时，就结缘于斯。</p><h2 id="2020年新疆天山脚下就想这样一直牵着你的手直到白头"><a class="markdownIt-Anchor" href="#2020年新疆天山脚下就想这样一直牵着你的手直到白头"></a> 2020年，新疆天山脚下：就想这样，一直牵着你的手，直到白头</h2><p>  云与风飘摇嬉笑，彼此逗笑。不时传来一阵喷嚏声，就化作了洁白的雪花点点。<br>昨日的雪还没有融化，今天的雪就迫不及待地爬将上去。柔和的阳光中，参杂着点点白雪。逆着阳光看去，柳絮般纯白的六角星，舞蹈于半空。<br>  薰衣草的紫色海浪中间，顾平洲与李薰十指相扣，脚步轻松而愉快，活像刚刚学会走路的孩童。顾平洲吻向李薰的绛唇前，不自觉得吟起：</p><blockquote><p>“执子之手，与子并行。<br>执子之手，与子双飞。<br>执子之手，与子共箸。<br>执子之手，与子同眠。<br>执子之手，与子偕老。<br>执子之手，夫复何求？”</p></blockquote><p>  两个人的婚礼，一片薰衣草的花海，再无旁人。两人沉醉在新婚的愉悦中，全然不顾雪花中是否还夹带薰衣草的花香。</p><h2 id="2018年苏州拙政园毕业季待子长发及腰浸染一袭紫韵可好"><a class="markdownIt-Anchor" href="#2018年苏州拙政园毕业季待子长发及腰浸染一袭紫韵可好"></a> 2018年，苏州拙政园：毕业季，待子长发及腰，浸染一袭紫韵可好</h2><p>  风中逗留着前世的云，云中包络着前世的风，后世几何？<br>  临近那年毕业的那个元旦，顾平洲与李薰十指相扣，迈进了苏州拙政园。他们没有选择夏天，是因为这个时候，是向学生时代挥手的时候，风景不应太美，怕是击碎了那柔肠百结。但，还是太美，美的可以想象盛夏的妩媚。池中野鸭，夺去了本该属于荷花的妖娆；地砖上的花与字，诉说着久远的古朴悠扬；白墙上的石窗，延续着“一步一景，移步换景”的魅颜；女墙后的青竹，摇晃着那世的纯真。空心的百年老树前，李薰噘着嘴说：<br>  “今天，让它来见证我们的爱情。我们的未来，属于我们的梦想。”<br>  “这里没有薰衣草，但，你早已化作我心中的薰衣草。薰衣草如你，你如薰衣草。”顾平洲答道。<br>  有些手，扣在了一起，也就是永恒。</p><h2 id="2013年4月6日敦煌鸣沙山夫妻树下不是等待而是在等在等你"><a class="markdownIt-Anchor" href="#2013年4月6日敦煌鸣沙山夫妻树下不是等待而是在等在等你"></a> 2013年4月6日，敦煌鸣沙山夫妻树下：不是等待，而是在等，在等你</h2><p>  “你知道薰衣草的花语吗？”<br>  “知道，是等待爱情。”<br>  “错了，不是等待，是在等，在等你。”<br>  “我也在等你。”<br>  ······<br>  “薰衣草不是草，是披着紫荆的花朵。”<br>  黄沙扬起，驼铃回响，命中注定，必然之中，他们，相识。</p><p>  忠诚、信任、专一，直至白首。</p><p>  他们的故事完了，我们自己的故事呢？<br>  不是相信爱情，是相信TA本身。</p><p>2015/01/24</p>]]></content>
      
      
      <categories>
          
          <category> 原创拙笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《通大微赋》骈文体</title>
      <link href="%E9%9A%8F%E7%AC%94/5508/"/>
      <url>%E9%9A%8F%E7%AC%94/5508/</url>
      
        <content type="html"><![CDATA[<blockquote><p>今吾辈幸入通大已半载，应友人之请，乃斗胆动笔，纰漏颇多，恐难为赋，故为“微赋”，还望友人多多见谅。<br>——题记</p></blockquote><p>  岁在甲午，时为仲秋。季直故里，微风拂柳。携天高云淡兮，畅游通大千亩旖旎，如醉如痴；感济济人才兮，书写通大百年基业，心醉神迷。物华天宝，亭台楼榭，奇花异草可穷举；人杰地灵，伟绩丰功，才子佳人不穷尽。念我南通兮，据江海之会，扼南北咽喉，不慕往，不闵来；壮我通大兮，揽神州英才，聚东西富荣，乐当下，铸来日。</p><p>  梦回一九一二，昔者同侪师长，春风满面，指点江山；激情洋溢，为国求索。立足二零一五，今者吾辈当长风破浪，上下齐心，仗剑太行，横刀武夷。</p><p>  遥想季直当年，暴霜雪，斩荆棘，清末状元，实业救国，以有我通大之前身；近观十翼，诗为魂，书为骨，抱冲斋主，书画通达，以厚我通大之底蕴。</p><p>  祈通中西，拾级而上，满腔敬思，止步于楼门，回首微波荡漾，湖中倒影，红绿朦胧；力求精尽，升堂入室，驻足于书架，仰面浩繁卷帙，文史经籍，法理典藏，群卷荟萃。楚辞张謇，试卷高数，寄生虫金字塔，红珊瑚中国画，七九游子善舞天风阁墨韵；社联心协，心晴科协，学生会就创协，莫文隋红十字，一四青年挥汗大学报精粹。</p><p>  百年霏霏淫雨洗涤魂灵兮，百年悠悠烟云萦绕心尖；百年蒸蒸日上之科技兮，百年皑皑白雪静我心智。</p><p>  吾志所向，一往无前；愈挫愈勇，再接再厉。</p><p>  噫！忽觉煌煌万言不足书我方寸十之一二，已矣乎，至此毕。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>D15柜台的女孩D15柜台的女孩</title>
      <link href="%E9%9A%8F%E7%AC%94/42220/"/>
      <url>%E9%9A%8F%E7%AC%94/42220/</url>
      
        <content type="html"><![CDATA[<blockquote><p>萍水相逢,尽是他乡之客.<br>----王勃&lt;&lt;滕王阁序&gt;&gt;<br>我们萍水相逢,莫非有缘?<br>----李汝珍&lt;&lt;镜花缘&gt;&gt;</p></blockquote><p>  冥冥之中,有那么一种力量,叫做命中注定.遇见,是一种缘分;再见,是未完待续…<br>  七月初,南通,台风&quot;灿鸿&quot;裹挟着咸咸的水汽,肆虐着他的余威.校园里,低垂的杨柳,轻抚水面,荡起一圈圈涟漪,渐行渐远;傲娇的白色莲花,亭亭玉立,不时地摇动着纤弱的身姿,心醉神迷;三两只白鹭,悠悠信步在莲花之畔,此时,世界与我们无关.我们,只是一群备考的学子.<br>  7月7日,考完英语,我们,就可以回家了,然而,“回家&quot;这个温暖的字眼,与我无关,我,要做点什么.<br>  还不知道能不能联系上那个团队,为了不让自己闲着,在此之前,搜遍了几乎知道的所有网站,只想找一份假期兼职做做.运气不好,那只团队,已经消失在我的视界.<br>  7月09日上午,申请留校,有幸参加了&quot;三创训练营”,几乎打乱了整个假期原本的安排;在某网站上看到一个还算比较适合的兼职工作,一周只要做周末三天,剩余的时间可以自己支配.<br>  7月10日,周五,下午3点,面试通过,由于训练营闭营时间未知,只好恳请刘主管宽限一周,她答应了.<br>  7月18日下午1:30,开始了兼职生活,被分到了D06柜台,一切,本应该是平静的,时间&quot;滴答滴答&quot;,流苏般的掠过,没有一丝痕迹.<br>  “习飒,你是电子信息学院的?”<br>  “对.”<br>  “信班的?”<br>  “对,怎么了?”<br>  “没什么.”<br>  似乎蒙了一小段时间,反应过来后,留给我的,只是一个模糊的背影.<br>  有些事情,注定不会如此平静,接待了两三个顾客,接到店长通知,新员工与兼职人员要去楼上参加培训,是的,她也在.另外,一个女孩,从未谋面的QQ好友,也在.不由得想起,训练营期间,遇到了上学期一面之缘的苏伙伴,遇到了从未谋面的董伙伴,路上遇到了开幕式坐在一起的一个不知名的女同学.之后,无意中认识了高中共同追求南科大的张伙伴的前女友(以后的学妹).这是冥冥中的注定吗?我不知道,只知道,这些事情发生了.<br>  培训开始,我们坐在一起,注意到,她一直再咬自己的指甲,习惯性地问:<br>  “需要指甲钳吗?”<br>  “没事,不用的.”<br>  培训在继续,当然要认真听着,公司宗旨·理念·绩效考核，诸如此类。<br>  “你叫什么名字?”,在培训考试的时候,我问道.<br>  &quot;诺.&quot;拿出了自己的工作牌,一眼看过去,这个名字好熟,但是,这个字和以前那个字确实有点区别.<br>  &quot;你应该认识我吧?&quot;这个空隙,我想到了,上大学之前,在电子信息学院群里,她在,一个特殊的存在.我们就这样聊着,算是初识后的初识.<br>  接下来的工作时间,发现她在D15,很近,柜台相邻.我会有意无意的望向她那边,有时也会有四目相对的一刻,正常的如同掷四枚硬币,正好两面朝上,两面朝下.时间很快,下班了,我们P1班的四个伙伴一起回到休息室,一起下楼,一起离开.她戴上一顶蓝色的鸭舌帽,骑着自行车,消失在翻滚的夜风里.欣赏她的勇气,担心她的安全.<br>  回到宿舍时,知道了:咬指甲能够帮助我们平稳情绪。当我们厌烦的时候带来启发；当我们压力大或者沮丧的时候，能够让我们得到暂时的平静。<br>  7月19日下午两点钟左右,接待了一个台湾老伯.<br>  “您好,欢迎光临顺电!”<br>  “你好,小伙子.”<br>  “您需要一款什么样的手机?”<br>  “我现在用的HTC,家里还有一个苹果,但是对大陆的手机不太了解,你能推荐我几款吗?”<br>  未曾想到,这位老伯会问的这么细,从品牌到产地,从硬件到软件,从销量到用户体验…而我,只是个新来的,一边以自己临时储备的商品知识介绍,一边询问老员工,四个半小时,记得清清楚楚,终于拿下了我的第一单,中间好几次想靠在柜台上休息一下,但是一想到企业宗旨----“精·诚·利他”,还有老伯也没显示出疲态,我就装作精力充沛的样子,笑脸相迎.中间,她来过几次,帮忙接待了一会这位老伯.<br>  7月31日,周五,顾客稀少,她时而拿起相机,新奇的视角拍摄着她的世界,那一刻,整个世界都是她的;时而伏在柜台前,低头写着什么东西,长发飘忽,浸染了一个盛夏;时而,咬着自己的指甲.若无其事.<br>  忽然,一个小孩哭哭啼啼地跑向了她,原来,他找不到自己的妈妈了.她,牵着那个孩子的手,走遍了三楼,转了一圈又一圈,脚步缓慢,不时地低下头来安慰那个小男孩,如同一个折翼的天使,守护着孩子的心灵.我向她投去了赞许的微笑,她报我以微笑.<br>  7月29日,兼职裁员,虽然我销售额不是那么理想,但是还是阴差阳错的被留下来了.<br>  8月9日,周日,由于参加了一个培训即将开班,请假,以后只能周日过来上班.跟她聊天时,她笑笑,<br>  “把上课重要的东西都记下来发给我.”<br>  “好的.”<br>  8月16日,我从西边进店门,她恰好从东边进店门,相视而笑,笑而不语.吃过晚饭,回店铺的路上,扶梯,我北边上,她南边下,互相打了一个招呼,我的心情何尝不像这上上下下的扶梯.“滴滴答答”,下班了,回到休息室,看到她正在清理冰箱.<br>  “我看看还有没有我的东西,没啦!”<br>  “怎么?你不来了吗?”<br>  “对了,忘了跟你说了哦,我想去看看世界.先去苏州,再去…”<br>  伙伴说,“世界那么大,我想去看看你;钱包那么小,哪也去不了.”<br>  “去吧,好好玩,这么年轻,不出去走走,还什么时间去?”<br>  …<br>  听说,台风&quot;天鹅&quot;就要来了,明天,8月23日,周日.<br>  彼得·梅尔在《重返普罗旺斯》里说,记忆是一位带有太多情绪和偏见的编辑。他常自作主张地留下他所喜欢的东西；而对那些不尽如人意的事情充耳不闻。在这种剪辑下，玫瑰色的往事清晰如昨，一切美好的时光也被注入了神奇的魔力，不开心的日子慢慢消退，直至消失，只留下一片颇具魅力、朦朦胧胧的阳光岁月。<br>  她,暂时消失了,没有联系方式,平淡,没有涟漪,生活在这个lonely planet,我们都是彼此生命中的过客,又有多少人,揣着&lt;<Lonely planet>&gt;,在世界上留下自己的足迹.<br>  再见,是缘分;再也不见,是杨柳依依.</Lonely></p><p>2015/08/22</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>八声甘州廉韵 习飒拙笔（大学生廉洁文化教程作业）</title>
      <link href="%E9%9A%8F%E7%AC%94/64584/"/>
      <url>%E9%9A%8F%E7%AC%94/64584/</url>
      
        <content type="html"><![CDATA[<p>  吴隐之不惧饮贪泉，希仁暮诫廉。问滚滚流年，两袖清风，汝贤几何？切勿遑论来日，倚栏叹今朝。谁知屈子怨？身服未沫。<br>  青天莲竹兰梅，改革正好处，不污不受。古狐裘悬鱼，今长霞沈浩。约它年，核心价值，看我华夏风轻云淡。中国梦，举目望远，企足而待。</p><blockquote><p>小注：<br>a.晋代人吴隐之任广州太守，在广州城外，见一池泉水名“贪泉”。当地传说饮了贪泉之水，便会贪婪成性。他不信这些，照饮不误，饮后还写了一首诗：“古人云此水，一歃怀千金。试使夷齐饮，终当不易心。”他在任期间，果然廉洁自律，坚持了自己的操守。</p><p>b.希仁，包拯字希仁。北宋时，他为官清正廉洁是妇孺皆知的，老百姓称之为“包青天”。包拯一生，身居高位，大公无私，痛恨贪官污吏，到了晚年，担心后人会出不肖之徒，于是就在家中立了一块石碑，上面镌刻着著名的《诫廉家训》以警戒后人。其意大致是：“凡是包氏后代子孙中有贪污受贿者，不能被称为包氏后代，甚至死后，也不能葬入其家族的墓地中。不遵从此训令者，一概不是包公子孙。”</p><p>c.明·于谦《七绝·入京》诗：“清风两袖朝天去，免得闾阎话短长。”</p><p>d.汝贤，海瑞字汝贤。明朝著名清官。海瑞一生，经历了正德、嘉靖、隆庆、万历四朝。1549年（嘉靖二十八年）海瑞参加乡试中举，初任福建南平教渝，后升浙江淳安和江西兴国知县，推行清丈、平赋税，并屡平冤假错案，打击贪官污吏，深得民心。得到提升，历任州判官、户部主事、兵部主事、尚宝丞、两京左右通政、右佥都御史等职。他打击豪强，疏浚河道，修筑水利工程，力主严惩贪官污吏，禁止循私受贿，并推行一条鞭法，强令贪官污吏退田还民，遂有“海青天”之誉。</p><p>e.廉洁，最早出现在战国时期伟大的诗人屈原的《楚辞·招魂》中：“朕幼清以廉洁兮，身服义尔未沫。”</p><p>f.东汉著名学者王逸在《楚辞·章句》中注释说：“不受曰廉，不污曰洁”，也就是说，不接受他人的馈赠的钱财礼物，不让自己清白的人品受到玷污，就是廉洁。</p><p>g.狐裘悬鱼。狐裘：春秋齐景公时，齐国的良相晏婴一生崇尚节俭。他平日粗茶淡饭，妻室只着布衣，从不奢望丝绸。晏婴自己有一狐裘，一直穿了三十年，别人讥笑他，他却泰然处之。景公称赞他勤政廉洁，并赐给他千金之裘，但他却坚持不接受。悬鱼：汉时官吏羊续为南阳太守时，有府丞送鱼给他，他把鱼挂起来，府丞再送鱼时，他就把所挂的鱼拿出来教育他，从而杜绝了馈赠。后用以形容为官清廉，拒受贿赂。</p><p>h.任长霞（1964.2.8 - 2004.4.14），河南省商丘市睢县人。20世纪末至21世纪初的中国警察界先进人物，曾被作为先进典型，在全国学习。工作期间，被誉为“警界女神警”。她始终把人民群众的疾苦和安危放在心上，解决了十多年积累的控申积案。2004年4月14日晚8时40分，时任登封市公安局长的任长霞在侦破“1·30”案件途中遭遇车祸不幸去世，年仅40岁。2004年6月，被公安部追授为全国公安系统一级英雄模范称号。</p><p>i.沈浩，男，1964年5月出生于安徽省萧县，全国农村基层干部“十大新闻人物”、安徽省第二批选派干部标兵、全国百名优秀村官、感动中国2009年度人物、全国敬业奉献模范。1986年6月，毕业于铜陵学院。1986年7月，加入中国共产党，同年在安徽省财政厅参加工作。先后担任省财政厅副主任科员、主任科员、副调研员。2004年，作为安徽省第二批选派农村任职干部到到凤阳县任小溪河镇党委副书记，小岗村党委第一书记、村委会主任。为党的事业，为“三农”做出了重大贡献。在小岗村任职近6年来，始终以党和人民的事业为重，干事创业，勤奋务实，勇于创新，无私奉献，以实际行动践行科学发展观，忠实履行共产党员的神圣职责，在广大干部群众心中竖起了一座巍峨的丰碑。2009年，仅46岁的沈浩倒在工作岗位上。其墓位于安徽省凤阳县小岗村公墓，有《永远的忠诚》和《第一书记》等纪念影视作品。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>陨落的额仑草原狼 闲谈大命管小命的个人感悟</title>
      <link href="%E9%9A%8F%E7%AC%94/17879/"/>
      <url>%E9%9A%8F%E7%AC%94/17879/</url>
      
        <content type="html"><![CDATA[<blockquote><p>说狼图腾里有假，不错，我也承认，那三国演义就是历史事实吗？一部小说，真正的读者不是像读史记那样去读故事的真实性，而是小说的故事给我们带来的情感的激荡，让我们在作者的笔下走进他笔下的主角，走进他的的精神世界。我们读的不是故事，而是恰恰是畜生与人的区别——情感！</p><p>——网友“狼图腾之戎狼”</p></blockquote><h2 id="一-正文之前的闲谈"><a class="markdownIt-Anchor" href="#一-正文之前的闲谈"></a> 一、正文之前的闲谈</h2><p>  很多读者总会对原著翻拍成影视剧感到很失望，《狼图腾》也不例外。且不主要谈论电影与原著的差别，因为我们不能苛求法国的让·雅克·阿诺先生全面展现中国人的思维模式，于他，已足够Perfect。但是，平心而论，他小心翼翼地回避了原著对汉族赤裸裸的鄙视，加入爱情的元素，还是原来的味道吗？如今，我们能做的的是走回原著，品味最初的味道。似乎又回想到最初读完这本书的感觉，心情是那么的压抑。<br>  《狼图腾》是吕嘉民的首部著作，亦是到目前为止吕嘉民唯一一部著作，以姜戎为笔名，低调如他，《狼图腾》畅销两年后，誉谤参半，十年来，几乎不露面，不接受采访，大部分读者也不知道姜戎是谁，众人浮躁个中静。毋庸置疑，他对儒家文化，汉族思想的大反思正是基于对它的爱，一个愿意在七十年代去内蒙古插队的小伙子，一定是爱国的，但往往越是喜爱，反思后的阵痛就越强烈；批评的越厉害，爱得愈深。有人说过，我批评我的祖国是因为我的亲人朋友和所爱的人生活在那里，应该是一个道理吧。</p><p>  暗夜，寒风，山巅，满月，孤狼，嗥鸣。</p><p>  这恐怕是我对狼最初的印象，也是未读过《狼图腾》，未看过电影《狼图腾》，一想起狼，脑海里就会浮现的景象。狼于过去的我，是残忍、凶残、恩将仇报的代表；于过去的整个华夏民族，关于狼的成语熟语，不过“狼子野心”、“狼心狗肺”、“狼狈为奸”、“狼戾不仁”、“狼贪鼠窃”、“白眼狼”、“东郭先生和狼”云云。<br>  《狼图腾》里有很多段落、语句都可以深入下去，现仅摘录一句，简单谈谈个人的看法——</p><h2 id="二-正文大命与小命"><a class="markdownIt-Anchor" href="#二-正文大命与小命"></a> 二、正文：大命与小命</h2><p>  “难道草不是命？草原不是命？在蒙古草原，草和草原是大命，剩下的都是小命，小命要靠大命才能活命，连狼和人都是小命。”</p><p>  放眼于无限的时间与无限的空间，简称为“宇宙”，一切似乎都太微不足道。但是，我们的存在，换种说法，我们思考某一问题时，或者当你读到这一句话时，总是受限于一定的空间与时间，在我们这个维度里，如果我们关于时间空间的认知是正确的，时间坐标t、空间坐标(x,y,z)总是唯一确定的。</p><p>  就彼时彼地，在历经草原变迁、所谓与时俱进思想的灌溉下，姜戎笔下最后一个纯粹的的草原人——毕力格眼里，同样有大命与小命的哲学生存逻辑，草原是大命，草原人生于草原、成长于草原、葬于草原；在草原上奔跑，在草原上赛马，在草原上歌唱，生命从始至终，身上飘着草香味，吃着牛羊肉，喝着马奶，离开尘世的时候，伴随着颠簸的木车，在哪里跌落，哪里就是自己的归宿，把血肉还给草原，被狼啃食是一种莫大的荣幸。每一天，当东方第一缕曙光照耀在草原上时，风吹草摇，牛羊低吟，骏马昂首，炊烟袅袅；当月亮的光辉终于撼动了太阳，狼嗥回荡在广阔的草原上。草原上的一切生灵恰到好处地处于自己应该存在的位置，那没有外人踏入的数千年的演化，形成了一个稳固的生态圈，这本身就是大自然的一个大手笔。所以说，草原，是大命，是一切小命生存的基础。</p><p>  人与狼、牛、儿马子、黄羊、山獭等等的小命，在草原上显得多么渺小，不过是生态链中的一环罢了，或许只需要一次足够猛烈的白毛风，或者一次我们自己导演的沙尘暴，接连不断的暴雨，就可以让数万生灵消失，我们能不崇拜自然吗？“征服自然”也只是过去狂妄的人类发出的疯话罢了，只有对大地崇敬、对长生天敬畏，我们才能更好地生存下去，在时间的流里，我们只是一棵棵会思想的苇草，仅此而已。</p><p>  忽然想到，草原大命之上的主宰又是什么呢？长生天腾格里，把狼推上神坛后形成的图腾吗？不，这个主宰，应该是我们自己，此时此刻此地的自己，还能自由思考的自己。</p><p>2015/12/05</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My views on February 28 Incident</title>
      <link href="%E9%9A%8F%E7%AC%94/13853/"/>
      <url>%E9%9A%8F%E7%AC%94/13853/</url>
      
        <content type="html"><![CDATA[<p>  I read some news about February 28 Incident on the website <a href="http://today.It">today.It</a>’s obvious that the incident has been effecting the life of taiwanese.<br>  Above all else,I’d like to point out that “Universal history never existed” according to a historian.What I mean is that we always view history from a position affected by what we have heard and what we have seen intentionally or unintentionally.Therefore,forgive me,please, if what I said is obviously different from your standpoint.</p><p>  OK,from now on,I’ll state my views on “February28 Incident”.</p><p>  As a saying goes,”There is no such thing as a coincidence in this world,there is only the inevitable.”In my opinion,we’d better analyze the Frbruary 28 incident from economic,political and cultural dimensions.However,plenty of people have described this incident from various points of view and make their own <a href="http://decisions.As">decisions.As</a> for me,I’ll tell what I think on the basics of what I know.</p><p>  As we all know,for the Taiwanese,they were influenced by different cultures about each of the fifty years,such as Netherlands,Qing dynasty,Japan and China.I asked myself a question after last class,what kind of person I will become during these years?No clearly answer had occurred to me until I wrote this <a href="http://text.It">text.It</a>’s really really really hard to say.</p><p>  Maybe the main reason is that they had had great expectations on returning to motherland originally.But they were depressed after Kuomintang and their army <a href="http://arrived.At">arrived.At</a> first,they are so confused and then they began to think about some questions,why should we be ruled by others?Why don’t we be the masters of our own?Perhaps this is the original source of Taiwan Independence.</p><p>  I don’t know whether you understand what I mean or not because history is so insteresting that I usually tell the history from a position where I don’t really <a href="http://know.In">know.In</a> short,what I said just now depending on what I have heard and seen.Suddenly,a sentence of Voltaire occurred to me.He said,”I disapprove of what you say,but I will defend to the death your right to say it”.</p><p>  That’sall.Thank you.</p><p>2016/02/29</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WanWan President Election In LuLus Eyes(script)</title>
      <link href="%E9%9A%8F%E7%AC%94/30286/"/>
      <url>%E9%9A%8F%E7%AC%94/30286/</url>
      
        <content type="html"><![CDATA[<p>  Good afternoon,everyone.<br>  I’m Patten Kuo……<br>  The subject of today’s presentation is “WanWan’ President Election In LuLu’s Eyes”<br>  Maybe you’ll ask what do “Wanwan” and “Lulu” mean?<br>  It’s quite interesting.In2014,two years ago,the young peopole from the biggest Baidu post Bar,like the FB page,“Liyi bar”,with 22million users,almost equals to Tanwanese 23million population flood in FB to leave millions of words to oppose Taiwan indendence.<br>  After that,”LuLu” means Mainland and Mainlanders,”WanWan” means Taiwan and Taiwanese.<br>  To return to the subject.<br>  I’ll give you an overview of 2016 Taiwan Presidential election by watching a short video.<br>  She is Tsai ing-wen<br>  He is Ma Ying-jeou,the panda refers to mainland China.<br>  Tsai took the place of Ma.<br>  People in green refers to the DPP supporters.Democratic progressive Party,DPP.<br>  James Soong.<br>  They enter into a competition for President success.<br>  As we all know, China-friendly Ma refers to Ma Ying-jeou,He has sent much more kindness to mainland China.<br>  Eventually,Tsai ing-wen won.<br>  Now I’ll give you an overview of democrary prosess of Taiwan.<br>  228 incident.We have been familiar with it.<br>  Taiwan leaves the UN when the international body switches recognition to the mainland China.</p><p>  Chiang Kai Shek passes away and Vice President Yen Chia-Kan (嚴家淦) assumes control of the government as interim leader.<br>  Chiang Ching Kuo (蔣經國), son of Chiang Kai Shek becomes president.<br>  President Chiang pledges political reform including a free press, the formation of opposition parties and the right to lawful assembly.DPP appeared.<br>  Chiang Ching Kuo passes away and Lee Teng Hui becomes president.<br>Government allows the formation of new independent television stations.<br>  KMT presidential candidate Lien Chan (連戰) and Independent James Soong (宋楚瑜) are defeated in elections by opposition party candidate Chen Shui Bian (陳水扁) ending half a century of Nationalist rule over the island.<br>  Ma Ying Jeou (馬英九) returns the KMT to power.</p><p>  Sunflower (太陽花學運) protests take control of legislature in order to pressure government to stop taking unilateral “black box” (黑箱) action with regards to relations with mainland China.<br>  Nine in One elections (九合一選舉) take place for all the cities and counties in the country and KMT is dealt a massive defeat forcing President Ma to step down as the chairman of the party setting up a battle for 2016 presidential and legislative elections.<br>  We can easily conclude that the road of Taiwan’s democratization went through ups and downs for several years.<br>  Fortunately,as we can see,democracy comes into being a lifestyle of taiwanese.<br>  taiwan is approaching toward dempcratization step by step.<br>  Now is Yang’ turn.<br>  Here is another question: Is democracy the best system?<br>  From my point of view,I don’t think so.<br>  We made an online questionnaire about our subject few days ago.Unfortunately,the questionnaire contains few sensitive questions,for example,”Does democracy work in mainland China in your mind?”,</p><p>  Therefore,after receving 50 reactions, our questionnaire was deleted by the questionnaire platform.<br>  Fortunately,we searched another report carried out by American political researchers in 2015,Roberto Foa and Yascha Mounk.<br>  Let’s glance over it together in few minutes.<br>  Americans trust their political institutions less<br>  Young Americans are giving up on politics<br>  Most millennials don’t think it’s essential to live in a democracy<br>  A growing number of young Americans think democracy is a bad way to run the country<br>  More Americans want the Pentagon to take over<br>  I’ll talk about democracy in ancient Greece.<br>  Many modern democracies reconciles this conflict by having citizens elect those they consider qualified to legistate on their behalf.But this poses its own problems,including the influence of wealth and the emergence of professional politicians with different interests than their constituents.</p><p>  Could reviving election by lottery lead to more effective government through a more diverse and representative group of legislatures?<br>  Like Athenian military command require specialized knowledge and skills?<br>  You probably shouldn’t hold your breath to win a spot in your country’s government.But depending on where you live,you may still be selected to participate in a jury,a citizens’ assembly,or a deliberative poll.All examples of how the democratic principle behind sortition,still survive today.<br>  Thanks for listening&amp; sleeping</p><p>2016/06/16</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《海上钢琴师》语录</title>
      <link href="%E6%91%98%E6%8A%84/6534/"/>
      <url>%E6%91%98%E6%8A%84/6534/</url>
      
        <content type="html"><![CDATA[<blockquote><p>有些电影是你看过之后，心中涌动万千却无从下笔，是你满脑子的思绪却不知从何整理，《海上钢琴师》就是这样一部让我欲罢不能欲言又止的电影。</p><p>——我们无处安放的孤独</p></blockquote><p>You’re never really done as long as you have a good story and some one to tell it to.</p><p>Hey,Max! Imagine the music I could play with two right arms. Hope I can find a piano up there.</p><p>Why why why why why… I think land people waste a lot of time wondering why. Winter comes they can’t wait for summer; summer comes they’re living dread of winter. That’s why you’re never tired of travelling, with chasing some place far away, where there’s always summer. That doesn’t sound like a good bet to me.</p><p>“All that city. You just couldn’t see the end to it. The end? Please? You please just show me where it ends? It was all very fine on that gangway. And I was grand too, in my overcoat. I cut quite a figure. And I was getting off. Guaranteed. There was no problem. It wasn’t what I saw that stopped me, Max. It was what I didn’t see. You understand that? What I didn’t see. In all that sprawling city there was everything except an end. There was no end. What I did not see was where the whole thing came to an end. The end of the world… ”</p><p>“Take a piano. The keys begin, the keys end. You know there are eightyeight of them, nobody can tell you any different. They are not infinite. You are infinite. And on these keys the music that you can make is infinite. I like that. That I can live by. ”</p><p>“You get me up on that gangway and you’re rolling out in front of me a keyboard of millions of keys, millions and billions of keys that never end, and that’s the truth, Max. That they never end. That keyboard is infinite. And if that keyboard is infinite, then on that keyboard there is no music you can play. You’re sitting on the wrong bench. That’s God’s piano. ”</p><p>“Christ! Did, did you see the streets? Just the streets… There were thousands of them! And how do you do it down there？How do you choose just one? One woman, one house, one piece of land to call your own, one landscape to look at, one way to die… ”</p><p>“All that world is weighing down on me, you don’t even know where it comes to an end, and aren’t you ever just scared of breaking apart at the thought of it? The enormity of living it? ”</p><p>“I was born on this ship, and the world passed me by, but two thousand people at a time. And there were wishes here,but never more than fit between prow and stern. You played out your happiness, but on a piano that was not infinite. I learned to live that way. ”</p><p>“Land? Land is a ship too big for me. It’s a woman too beautiful; it’s a voyage too long, a perfume too strong. It’s a music I don’t know how to make. I could never get off this ship. At best, I can step off my life. After all, I don’t exist for anyone. You’re an exception, Max, you’re the only one who knows I’m here. You’re a minority, and you better get used to it. Forgive me, my friend, but I’m not getting off.”</p><p>我爱那座城市<br>那里的冬天真是美极了<br>到三月<br>在你最意想不到的时候<br>总有个下午<br>大雾席卷而来<br>就像是一道屏障<br>它刚好垂到街灯那么高<br>将一切拦腰斩断<br>像一把白剑<br>真是神奇<br>房子没有了屋顶<br>树木失去了枝干<br>圣路易大教堂的尖顶也不见了<br>街上的行人都没有了脑袋<br>肩膀以上一切都消失了<br>在杰克逊广场上只能看到<br>一具无头尸体走来走去<br>撞到一起<br>他们就问候说<br>“家里人都好么？”</p><p><img src="/%E6%91%98%E6%8A%84/6534/hsgqs-1.jpg" alt="hsgqs-1"></p><p>2016/11/11</p>]]></content>
      
      
      <categories>
          
          <category> 摘抄 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 摘抄 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>木心《云雀叫了一整天》《伪所罗门书》摘抄</title>
      <link href="%E6%91%98%E6%8A%84/20377/"/>
      <url>%E6%91%98%E6%8A%84/20377/</url>
      
        <content type="html"><![CDATA[<p>最初因为《从前慢》而第一次听说了木心，后来在《看理想》中陈丹青老师一再提起木心，忍不住查了查他的资料，那矍铄的眼神，至今记忆犹新。去看他的眼神，怎么看得出这是一个多次下狱的人儿呢？<br>不过话又说出来，不排除把他地位推崇的太高的可能性，因为，就本篇诗集而言，甲辑写的小诗确实不咋地，不过联想到他那个时代，如果是对诗歌的一个探索而言，确实还算蛮不错的，记事、记事，素描般地叙述景与事，至少不是我喜欢的风格。但是自乙辑开始，就是一句话一句话的写，“短句见风骨”来形容再也合适不过了，让人欲罢不能，欲罢不能，一口气读完了乙辑，最后一句【再见】有种莫名的突兀感。<br>《伪所罗门书》要说好在哪里，也不能从诗的建筑美、音乐美、绘画美来谈，只能说他要传达的思想还是有点需要琢磨的地方的。<br>个人觉得写的比较好的，现摘抄分享如下——<br><img src="/%E6%91%98%E6%8A%84/20377/mx800.jpg" alt="mx800"></p><h2 id="木心云雀叫了一整天"><a class="markdownIt-Anchor" href="#木心云雀叫了一整天"></a> 木心《云雀叫了一整天》</h2><p>爱才是生命</p><p>然后生命才能爱</p><p>——《火车中的情诗》</p><p>凡是没有泪水的眼</p><p>便被人看不起</p><p>——《女优的肖像》</p><p>我能抗拒任何诱惑</p><p>直到它们被我所诱惑</p><p>——《论诱惑》</p><p>我愿他人活在我身上</p><p>我愿自己活在他人身上</p><p>这是“知”</p><p>我曾经活在他人身上</p><p>他人曾经活在我身上</p><p>这是“爱”</p><p>——《知与爱》</p><p>生在任何时代</p><p>我都是痛苦的</p><p>所以不要怪时代</p><p>也不要怪我</p><p>——《卡夫卡的旧笔记》</p><p>人生在于体会</p><p>今时哪及昔时</p><p>——《路菜》</p><p>记得早先少年时</p><p>大家诚诚恳恳</p><p>说一句是一句</p><p>清早上火车站</p><p>长街黑暗无行人</p><p>卖豆浆的小店冒着热气</p><p>从前的日色变得慢</p><p>车、马、邮件都慢</p><p>一生只够爱一个人</p><p>从前的锁也好看</p><p>钥匙精美有样子</p><p>你锁了，人家就懂了</p><p>——《从前慢》</p><p>我自己硬想，人要走就走的远</p><p>我也知道柏拉图，柏拉图式的爱</p><p>修船的敲打声一直在蛊惑我</p><p>口诵着《公羊传》、《战国策》</p><p>心已随熏风飞向爱琴海、地中海</p><p>——《修船的声音》</p><p>事情发生了，又发生</p><p>说不得的，除非记忆</p><p>记忆就像滚滚浪潮</p><p>撞上海湾里的礁石激出巨响</p><p>记忆的巨响人们是听不到的</p><p>——《克里斯港旧居》</p><p>清明时节，雷雨过</p><p>推窗风来蛙声满水田</p><p>爱，就抱着爱</p><p>夜夜欲壑难添</p><p>通宵灯明，肉体如管弦</p><p>润了这那，又霑那这</p><p>……</p><p>却曾是，蒙昧的智者</p><p>喜怒哀乐皆可念</p><p>虽然我并未预知</p><p>青春是一去不回来的</p><p>——《河边楼》</p><p>停步，是为了一湾小溪</p><p>入店，是闻到油炸薯条的香味</p><p>幽会，在长满樱草的土坑中</p><p>或在保持白昼温度的麦穗上</p><p>……</p><p>同时还可以坐在一处泉孔边</p><p>俯身啜饮，沾湿鼻尖和胡子</p><p>随我自己设想是在与谁接吻</p><p>——《素描旅者》</p><p>偶然的一个机缘中诞生了啤酒</p><p>就像偶然的一个机缘中我发现了你</p><p>——《加拿大魁北京有一家餐厅》</p><p>人于初交黄梅时收雨</p><p>以其甘滑胜山泉</p><p>南方多雨</p><p>南人似不以为苦</p><p>——《清嘉录其二》</p><p>迎春送春是说说的</p><p>春天又不是一个人</p><p>——《春》</p><p>我是一个在黑暗中大雪纷飞的人哪</p><p>——《我》</p><p>你这样吹过</p><p>清凉，柔和</p><p>再吹过来的</p><p>我知道不是你了</p><p>——《五月》</p><p>从前的生活</p><p>那种天长地久的氛围</p><p>当时的人是不知觉的</p><p>从前的家庭</p><p>不论贫富尊卑</p><p>都显得天长长，地久久</p><p>生命与速度应有个比例</p><p>我们的世界越来越不自然</p><p>人类在灭绝地球上的诗意</p><p>失去了许多人</p><p>失去了许多物</p><p>失去了一个又一个的氛围</p><p>——《失去的氛围》</p><p>农民的家</p><p>几乎不讲话</p><p>来了个客人</p><p>忽然闹盈盈了</p><p>大家都讲话</p><p>同时讲同样的话</p><p>——《农家》</p><p>个人主义是</p><p>把每个人都当作诗人来对待</p><p>——《巴黎——法兰克福》</p><p>以下出自乙辑——</p><p>找一个情敌比找一个情人还要难</p><p>女孩拢头发时斜眼一笑很好看</p><p>男孩系球鞋带而抬头说话很好看</p><p>冰是睡熟了的水</p><p>给我的自由愈多 我用的自由愈少</p><p>结伴旅行比平居更见性情</p><p>第一个发明刮耳光的人多有才气</p><p>我们也曾有过黑暗的青春</p><p>我不好斗 只好胜</p><p>信投入邮筒 似乎已到了收信人手里</p><p>你背后有个微笑的我</p><p>性格极好脾气极坏 微斯人吾谁与归</p><p>凡倡言雅俗共赏者 结果都落得俗不可耐</p><p>我们不会有呼天抢地的快乐</p><p>我的童年祖辈苍劲的咳嗽声</p><p>每个人的童年都没有玩够</p><p>从前的那个我 如果来找现在的我 会得到很好的款待</p><p>久别重逢那种漠然的紧张</p><p>历史是一条它自己会走的路</p><p>像火车铁轨边的蔓草那样的一生呵</p><p>十九世纪所寄望的可不是二十世纪那样子</p><p>一夜透雨寒意沁胸 我秋天了</p><p>花也不香了，人装出闻嗅的样子</p><p>思想家一醉而成诗人 一怒而成舞蹈家</p><p>在“桃园三结义”里你演什么角色 我演桃花</p><p>这也不过是独立苍茫万家灯火的十五分钟</p><p>少年人都是毫无准备地发育发情了</p><p>提倡幽默是最不幽默的事</p><p>走在老街上我不来 街上是没有这些往事的</p><p>如果拿破仑与贝多芬会面，贝多芬是不会让的</p><p>我回过头去对十九世纪说我们不该是二十世纪</p><p>对爱情的绝望还只是对人性的绝望的悄然一角</p><p>春夏秋冬我不忍说哪个季节最佳</p><p>我贪看青年们的天性在我面前水流花开</p><p>练习的时候是你爱艺术 创作的时候是艺术爱你</p><p>在任何异端面前他都是异端</p><p>平安夜 梵蒂冈做弥散的大纲细节 都是耶稣所反对的</p><p>门无风而自开的那种夜晚</p><p>岁月不饶人 我亦未曾饶过岁月</p><p>人是在等人的时候老下去的</p><p>爱情幻想出来的幻想</p><p>你的口唇极美 可惜你自己不能吻它</p><p>暴徒处死 暴徒一身的壮丽的肌肉是无辜的</p><p>雷风 自然界真把春天当一回事的</p><p>你强 强在你不爱我 我弱 弱在我爱你</p><p>花的香是形而上的</p><p>我眺望秋天的叶林 那末我真是太久不与自然同在了</p><p>是你们在哪里星光灿烂 我这里总是暗淡寂寞的</p><p>你使我感到分外的满足与虚空</p><p>世上多的是无缘之缘</p><p>我觉得坐在书桌前 一如坐在钢琴前</p><p>成也是海 败也是海 海是帆船的致命情人</p><p>你二十出头了 颈上还有奶花香</p><p>宇宙无人文 奈何以人文释之</p><p>没什么 不过是我在想念你罢了</p><p>我怎好意思走进那个少年的我呢 他一定受不了我的善意</p><p>会当身由己 婉转入江湖</p><p>性欲是裸体的 爱情是穿衣裳的</p><p>意味着的中心比坚持着的中心更有中心作用</p><p>淡淡的浓 浓浓的淡 人情味是这样的</p><p>爱情要看是谁的爱情</p><p>夕照灰瓦顶上 一层淡红暗下去了</p><p>歌德七十四岁犹动情 到底是歌德</p><p>我回来了 我将盾牌放在神殿的石阶上</p><p>我追索人心的深度 却看到了人心的浅薄</p><p>世界乱书桌不乱</p><p>我的情人因自己美的足够故而不计较我的丑</p><p>先要把别人的不义而富且贵看得如浮云吧</p><p>又回家了 回别人的家了</p><p>旅馆里的一切陈设无非告诉你此处非君家</p><p>我快乐吗 噢我忍耐着不让自己不快乐</p><p>思想可有可无 感觉却是生命</p><p>你草莽 不英雄</p><p>悄悄地继往开来 何必弄到皇皇的空前绝后</p><p>在我面前你永远无过失</p><p>每次你来了我总有大难不死之感</p><p>那种宽衣解带脱手表的夜晚</p><p>小失败 有目共睹 大失败 还以为是成功了</p><p>我喜欢冷冷清清的热闹一番</p><p>换了新浴缸 临入水 有点不好意思</p><p>路边的树干上倚着一根手杖</p><p>万念俱灰也是一种哲学</p><p>眼睡了眉是不睡的</p><p>留的好记忆便是永恒</p><p>世事凡有胜者 皆胜于策略</p><p>那种静好像全是为了我似的静</p><p>其实每一次恋都是初恋</p><p>解释神秘是为了使神秘更加神秘</p><p>我讨厌肉麻 不过不麻就没有肉了</p><p>你常常美的使我看不清</p><p>你将在我不断的赞美中成长</p><p>凡是我看不起的人 我总要多看两眼</p><p>那种吃苦也像享乐的岁月便叫青春</p><p>往往是还没开始爱 爱已过去了</p><p>快乐的种类有很多 我取彷徨不能成寐的那种</p><p>自杀者都是被杀的</p><p>麻木的人都爱说跟着感觉走</p><p>错字是明明白白地错在那里的</p><p>我有一个花园 这个花园不是我的</p><p>再见</p><h2 id="伪所罗门书"><a class="markdownIt-Anchor" href="#伪所罗门书"></a> 《伪所罗门书》</h2><p>艾伦呵，没有现在，我只有将来</p><p>一切幸乐都要由你赋予我的</p><p>别人给的都只能是平淡或凄苦</p><p>——《艾伦》</p><p>四千年前这样的风</p><p>台阶在想瑰玮的脚</p><p>圆柱在想遒劲的背</p><p>风知之，予亦知之</p><p>风未能立未能卧</p><p>一停下来就不是风</p><p>我哂故我在</p><p>蔚蓝平静爱琴海</p><p>······</p><p>噢，朋友，我的朋友</p><p>没料到竟在这里重见你</p><p>你弗在受日照风吹</p><p>我弗能抚摩圆柱躺在台阶上</p><p>你落得这样的永恒</p><p>还不如我这样不永恒的好</p><p>——《小神殿》</p><p>这世界上，宏大的事物</p><p>都起源于或人的飘忽一念</p><p>······</p><p>我爱你是因为忽然感到你爱我</p><p>——《黎巴嫩》</p><p>几百年岂不总是这个样子</p><p>好比人们喜欢更换园中的花</p><p>从来不想更换无边的草地</p><p>——《匈牙利》</p><p>金字塔太重，强盗都搬不动</p><p>永恒太贵，谁也买不起</p><p>我独揽你粗犷中的秀娟</p><p>——《入埃及记》</p><p>如果爱一个人</p><p>就跟他有讲不完的话</p><p>如果真是这样</p><p>那末没有这样的一个人</p><p>······</p><p>如果爱一个世界</p><p>就会有写也写不完的诗</p><p>如果真是这样</p><p>那末没有这样的一个世界</p><p>——《雪橇事件之后》</p><p>无论何方，都可以安顿自己</p><p>乡愁，哪个乡值得我犯愁呢</p><p>——《在保加利亚》</p><p>大自然在做什么，它在回忆，回忆回忆</p><p>回忆着回忆中的回忆的回忆</p><p>——《大回忆》</p><p>爱海要在陆地上爱，登高山，瞭望大海</p><p>爱人亦然，万全处，方可率性狂恋</p><p>——《与米什莱谈海》</p><p>实际的灾难总比预感的小我要结婚</p><p>蜜月，世界不会在最近四个星期中毁灭</p><p>——《1914》</p><p>四十岁，按说是男人成熟的起点</p><p>秉性谦韧，行谊徇达，幽默间作</p><p>因此生活上就没有发生什么困难</p><p>······</p><p>人性虽有几种好品质，依我之见</p><p>当大家都说你幼稚的时候</p><p>终究感到荒凉，希望从此老练起来</p><p>——《西班牙的蔼列斯》</p><p>如果没能在某种事物中找到它的和谐处</p><p>那，要么它欠完善，要么我尚未理解</p><p>——《SOFIA》</p><p>你如不睡，就发现城市也没睡</p><p>——《伦敦》</p><p>说到底一个人精神是否失常不打紧</p><p>重要的是生活舒适，无所企求</p><p>——《BULGARIA》</p><p>2017/05/04</p>]]></content>
      
      
      <categories>
          
          <category> 摘抄 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 摘抄 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>圣埃克苏佩里《小王子》《夜航》《人的大地》随想</title>
      <link href="%E9%9A%8F%E7%AC%94/63154/"/>
      <url>%E9%9A%8F%E7%AC%94/63154/</url>
      
        <content type="html"><![CDATA[<blockquote><p>看东西只有用心才能看得清楚，重要的东西用眼睛是看不见的。<br><img src="/%E9%9A%8F%E7%AC%94/63154/1.jpg" alt="1"></p></blockquote><p>安东尼·德·圣埃克苏佩里的文笔，是文学界的一瞥独树一帜的视角，飞行员的冒险生涯与几次与死亡的擦肩锤炼了他的钢铁意志与对人性更深层次的思考。勇气不止在《夜航》、《人的大地》里，更把航线飞行、冒险行为作为一生的坐标，“人应当完成自己的使命······行动会拯救死亡，同样也能让人摆脱恐惧，摆脱所有缺点，甚至可以消除寒冷的感觉，免遭疾病的侵袭”。<br><img src="/%E9%9A%8F%E7%AC%94/63154/2-1.jpg" alt="2-1"></p><p>谈到这里，顺便提一句，有人谈起愿景、使命、价值观的时候，有时候会引用这一句话“如果你想造一艘船，先不要找人去收集木头，也不要给他们分配任何任务，而是先让他们对浩瀚无垠的海洋心生崇敬”，然后后面标注出自《小王子》，读过小王子，再去思考这句话，我觉得这句话放在哪里都不符合文中的意境，怀疑这个引用是无中生有或者张冠李戴，这句话放在《夜航》里让里维埃尔来说倒是在妥切不过了，于是我在《夜航》第19章里找到了类似的一段“他想到古代的小城镇，只因为听说有什么“岛”，就着手给自己造一艘船。来运载他们的希望，让大家看到自己的希望扬帆航行在海上。由于一艘船，所有这些人茁壮成长，有所施展，获得解放。“目的可能不说明什么，行动则可救人于死亡。这些人通过自己的船而延续。”是来自法语原文这一段“pensa aux petites villes d’autrefois qui entendaient parler des « Iles » et se construisaient un navire. Pour le charger de leur espérance. Pour que les hommes pussent voir leur espérance ouvrir ses voiles sur la mer. Tous grandis, tous tirés hors d’eux-mêmes, tous délivrés par un navire. « Le but peut-être ne justifie rien, mais l’action délivre de la mort. Ces hommes duraient par leur navire. »”</p><p><img src="/%E9%9A%8F%E7%AC%94/63154/3.jpg" alt="3"></p><p>我们可以去想童年的琐碎事，可以回忆，不要渴求回去。如果生活只有《童趣》，而没有《浮生六记》，那这样的人生有何意义？永远不要拒绝成长，要向未来敞开胸膛，展开怀抱。未来，总会让人成长。<br><img src="/%E9%9A%8F%E7%AC%94/63154/4.jpg" alt="4"></p><p>不谈《小王子》里的讽刺等大人们注意到的问题，也被说烂了。我只简单说说里面的“爱情”，艺术来源于生活又高于生活，一些角色的诞生，或多或少都受到作者周围人群带来的灵感，那株玫瑰花的原型应该是佩里的妻康素罗，她喜怒无常，极具想象力，又好冲动，又善演戏，她这种个性、气质和脾气，无疑对圣埃克苏佩里的创作产生了深远的影响。“她特别爱虚荣，又有点爱耍小性子，很快就折磨起小王子，弄得小王子痛苦不堪。小王子决定远游，临行前，花儿向他吐露心声：‘其实我爱你······由于我的过错，你丝毫也不了解我的心意。不过，你也同我一样傻。但愿你能幸福。’”</p><p><img src="/%E9%9A%8F%E7%AC%94/63154/5.jpg" alt="5"></p><p>小王子来到地球，远离玫瑰花，才想明白这种感情纠葛，他所牵挂的花儿还在那里，所以他要回去，“永远不要听花儿说什么，只需观察，闻着花香就行了。我的那朵花儿，芳香弥漫着我的星球，我却不懂得享受······花儿给我的生活带来芳香，带来光彩。我绝不应该逃离！早就应该猜到，她那小伎俩的背后，掩藏着她的温情。花儿总是那么自相矛盾！可是，我那时太年轻，还不知道该如何爱她。”</p><p><img src="/%E9%9A%8F%E7%AC%94/63154/6.jpg" alt="6"></p><p>狐狸说：“对我来说，你只是一个小男孩，就像其他成千上万个小男孩一样没有什么两样。我不需要你。你也不需要我。对你来说，我也只是一只狐狸，和其他成千上万的狐狸没有什么不同。但是，如果你驯养了我，我们就会彼此需要。对我来说，你就是我的世界里独一无二的了；我对你来说，也是你的世界里的唯一了。”</p><p>2017/06/06</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《惠普之道》随想</title>
      <link href="%E9%9A%8F%E7%AC%94/62765/"/>
      <url>%E9%9A%8F%E7%AC%94/62765/</url>
      
        <content type="html"><![CDATA[<p>  “我们决定在电子领域开发和制造产品。但是到底要做什么产品？这个留着以后再说吧。”</p><p>  这就是某公司第一次会议记录。有点商学背景或者管理学背景的人几乎都觉得，这缺乏目标、好的构想、清晰的市场等等，这个公司是不可能成功的。当得知这是惠普David Packard和Bill Hewlett的1937年成立声明，有人恍然大悟——他们最伟大的产品就是惠普公司，最伟大的构想就是惠普之道。<br>  有个逻辑必须清楚，是先有了公司，才有了管理学和商学。<br>  HP这个名字和硅谷、斯坦福紧密相连，“车库咖啡”也在叙述着那群年轻人的激情过往。</p><p>  当Carly S. Fiorina做出惠普并购康柏的惊人之举后，结果证明是错误的，其被董事会解雇。“惠普没落”的声音甚嚣尘上。到2017年当HP的PC销量超越联想夺得世界头筹时，发出“惠普没落”声音的人再次惊叹。</p><p>  《惠普之道》（The HP way）的精髓，如下图所示。<br><img src="/%E9%9A%8F%E7%AC%94/62765/hpzdb.jpg" alt="hpzdb"></p><p>  海尔张瑞敏说，“没有成功的企业，只有时代的企业，所有的企业都要跟上时代的步伐才能生存，但是时代变迁太快，所以必须不断的挑战自我、战胜自我。”</p><p>  如斯言。</p><p>  斯赫习立风说，“不管你承认与否，大多数时候，这个世界就是结果导向的，带有结果偏见的。当一个骑士冲向风车时，大战一百回合，铩羽而归，我们说他是疯子；当一百个骑士冲向风车，大战一百回合，都输了，不免有些悲壮了，唏嘘不已了；如果里面有一个骑士摧毁了风车，总结经验后又发表了激情的演讲，这时又有人来赞叹冲向风车是需要多么难得的壮士扼腕的勇气。”</p><p>2017/07/22</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在最好的年纪，做一个最好的你</title>
      <link href="%E9%9A%8F%E7%AC%94/10634/"/>
      <url>%E9%9A%8F%E7%AC%94/10634/</url>
      
        <content type="html"><![CDATA[<p>——余秋雨《泥步修行》、稻盛和夫《活法》、李开复《向死而生》有感</p><blockquote><p>参禅之初，看山是山，看水是水；禅有悟时，看山不是山，看水不是水；禅中彻悟，看山依然山，看水依然水。<br>——题记（宋·青原行思）</p></blockquote><p>  之所以选择青原行思的这个题记，我想强调的是“之初”、“有悟”、“彻悟”这个时间观念，而且这句话和习领导班子提到的“新常态”也有异曲同工之妙。</p><p>  首先，以下所有观点系个人观点，也只是view，并不是fact，“事实有真假，观点无对错”，所以都可以讨论，如果觉得我说的和你的观念相左，不妨来一句“因缺斯汀”。我所说的可能都是错的，但对我来说都是对的。</p><p>  三本书，命中注定也好，事出偶然也罢，都视“名、财、位”如浮云，强调“因果论”，都号召回归年少之时的“正觉、本心、心怀善意”云云。吾侪年轻人读了这些书，并按照他们所指出的生活“准则”去生活，即使过得不好，也不至于精神颓废地如同一匹倒地的骆驼，气喘吁吁。他们的这些view也可能都是错的，但是对他们个人而言，都是对的；或者说对现在的他们是对的，但对过去及未来的他们都是错的。我们采用鲁迅的“拿来主义”直接奉若圭臬呢？不说对，也不见得错。每个人都有各自的朝圣路。只看结果，可以说他们都是成功的，在“结果偏见”下，我们很容易忽略“概率轴”的存在。</p><p>  个人认为，年轻人不应该按照他们所倡导的心态来生活，“无争、无欲、无所求、空”，所有的人都这样，世界该是多么的单调，又是多么无趣啊！从年轻人角度出发，如果按照这样的生活准则行事，未免太没有活力与激情了。年轻人，尤其是二十来岁的年轻人，应该心怀大念想、大目标，就是要最大影响力，就是要“Change the world”，偏执、傲慢、不羁、放任、狂妄等等去追求，去寻找，去叫板，不但要“有欲”，还要“有所求”，舍我其谁，非我不可，我就是救世主，老子就是命中注定要去点亮世界！不认认真真、煞有介事地浪一次，要年轻干什么？和一把老骨头有什么区别？也许到了他们那个年纪“无欲无求”了，那时再放下，岂不乐哉？</p><p>  在正确的时间做正确的事，不把正确的方法用在错误的阶段。在起点没有出发过，眼所见，不过是朝起夕至的地方；走了一个大圈圈，可能绕了数不清的弯子，划破了衣衫，可能还摔了个鼻青脸肿，一身戾气，回到了原点，眼所见，不过是朝起夕至的地方，however，我们有了故事了啊，我们可以吹牛皮了啊，这时候再要一盏烧酒、二两牛肉，坦荡荡、心至静，大不同未出发时的模样。正如《射雕英雄传》里的郭靖在三十九回里思考“是非善恶” ，没有拒华筝、五师亡、黄蓉去，作恶多端的欧阳锋、裘千仞仍然逍遥在外，至亲至爱的人相继而去，那会有这大反思、大阵痛、大体悟？</p><p>  我说二十来岁是最好的年纪，一些人可能会嗤之以鼻，但对现在的我来说，然也。“人生到处知何似？应似飞鸿踏雪泥。泥上偶然留指爪，鸿飞那复计东西”固然言之凿凿，“男儿何不带吴钩,收取关山五十州”亦不乏男儿浩然之气。</p><p>  哪有什么条条框框？在最好的年纪，做一个最好的你，此生无憾，美哉美哉。</p><p>  2017/09/24</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《工程伦理学》课程感想</title>
      <link href="%E9%9A%8F%E7%AC%94/55515/"/>
      <url>%E9%9A%8F%E7%AC%94/55515/</url>
      
        <content type="html"><![CDATA[<p>  大学期间可能最后一篇课程感想类的总结。<br>  本人所读第一本关于伦理学的著作是德国泡尔生所著、近代蔡元培译、毛泽东批注的《伦理学原理》，其中第五章（“义务及良心”）里谈到的第一个问题就是人格道德中义务感情的起源，他首先引述了达尔文《The Descent of Man，and selection in Relation to Sex》（有人译作“人种原始论”，也译作“人的起源和性的选择”）里一条母犬的故事——</p><blockquote><p>“兽类感情之发展，与人相似。曰，有母犬卧抚其雏，见主人出猎，欲从之，既而恋其雏，不克从。及见主人猎而归，则贴尾乞怜，若甚愧者，盖悔其不忠于主人也。”</p></blockquote><p>  欲从主人出猎是“义务感情”，对幼雏的爱扶眷恋是“自然冲动”，追悔不忠于主人是“良心发现”。其提出的两种冲动是，“自然冲动”及“义务感情”。泡尔生认为“盖人类之记忆过去，较之兽类，益久而益确，则其本乎教育习惯以决定其意志，而与目前之自然冲动相反对者，其力自益强矣”，毛批“我疑惑自然冲动未必非真，义务感情，未必非伪。盖义务感情得之于训练及习惯，乃后天的、人为的，自然冲动发生于自然，乃先天的、非人为的”。<br>  我认为，大部分人，婴儿呱呱坠地，“自然冲动”最为强烈，渴而饮、饿而食，喜则朗笑，悲则抽泣，指出皇帝新装骗局的一定是个孩子，这是人之本觉；随着年龄的增长，“自然冲动”与“义务感情”你推我进，喜则窃笑，悲则哽咽，有了“全心全意为人民服务”的出现；及至耄耋之年，喜则无言，悲则无言，“义务感情”逐渐占了主导，而“自然冲动”已经消弭殆尽了。<br>  《伦理学原理》也好，《工程伦理学》也罢，都是尽力让我们抑制荀子所言“口好美味，耳好美乐，目好美色，体好清闲，心好利禄”的性、情、欲自然属性，同时加强“富强、民主、文明、和谐,自由、平等、公正、法治,爱国、敬业、诚信、友善” 、“仁义礼智信”云云的社会属性。谁让我们是生活在一个社会组织中呢，如果单独一个人可以活着，而且活的有意义，那倒是一种世界奇观了。鲁滨孙的生活如果没有“星期五”的陪伴，没有走出荒岛，他的生活也只是可怜的一种存在罢了，于人类的整体发展无益亦无害。<br>  进一步说，在未来的职业生涯中，我们只需秉持三个字——“同理心”，做到对别人不扰、不烦、不罪、不乱，对自己要自省、自察 、自警、自重。己所不欲勿施于人，己所欲勿施于人，谓之大丈夫。一旦有了强烈的同理心，就有了甄别真假、美丑、善恶的火眼金睛，如何去承担社会责任、家庭责任，如何做到诚实守信、如何不剽窃不诬赖，自有一把尺牍在心中。<br>  在以后的职业生涯中，秉持同理心，就可以在追求“经济价值、技术价值、道德价值”的同时“对雇主负责、对社会负责、对环境和人类的未来负责”。做技术研究时，要向低碳环保、可持续发展、经济易用等方向靠拢，做出符合人类共同利益和可持续发展的判断和抉择，构建人类命运共同体，为世界创造优质的产品与服务。</p><p>2017/10/29</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>习立风大学的那些话儿</title>
      <link href="%E9%9A%8F%E7%AC%94/15278/"/>
      <url>%E9%9A%8F%E7%AC%94/15278/</url>
      
        <content type="html"><![CDATA[<p>感谢敖宇邀请我参加青春故事报告会，在做PPT的过程中，抱着“不瞎讲、有质量、有趣”的初衷，我才有机会重新审视自己的大学生涯，回顾了自己大学生涯中的每一个动态。以往看自己初中的动态经常会发笑，现在看过去三年多的动态偶尔才会发笑。看待世界的角度能够独立思考了，多次提到“听从内心深处的召唤”，不负如来不负己。也不难看出，一年比一年可记录的话要少。<br>综合了一下QQ空间说说、微信朋友圈、FB的po文——</p><p>我相信，我的四年时光，仍会听从自己的内心呼唤，走出自己的道路。 2014/09/06（从家里出发到学校）</p><p>或许有些同学会因为这些天的学生会竞选失败而郁郁寡欢，其实转念想想，又何必呢？我们总应该保持“得之我幸，失之我命”的心态。有幸入选，当然，可以自豪地说，“这是我自己的努力”；无缘于此，但是有比我更适合的人加入了我梦寐以求的部门，他们会更好的发展。我们输了什么？年轻的我们输的起，因为我们本身什么都没有。这，只是人生航程里一朵小小的浪花，能舞出什么玩意？ 2014/09/21</p><p>进而想到：我的青春，或者说，我的一生，应该活的有意义。即使每天嘻嘻哈哈，希望也永远不会忘记自己心灵深处的召唤。可是，毕竟是希望，人总在改变，永远，又究竟有多远？很难想象，被弃置于思想的荒漠里，会是怎样的一番滋味？ 2014/10/07（《丑陋的中国人》《匆匆那年》读后）</p><p>…… 这就是大学，每个人做着自己做的事情，没有对与错，谁都没有真正意义上是非曲直的标尺，谁都有为自己伸张正义的自由和理由，谁都有自己的人生准则和方向；谁都可以犯错，据说这里摔得不会很疼；谁都会得到别人的尊重，身份地位完全平等因为你们都是学生；谁都可以说自己是对的，因为以前定义对错的你的老师和家长在你上大学以后已经不怎么管你了；谁都可以随时堕落和振作，你有大把的时间做这些事情；一切的一切，只是，因为这是大学！ 2014/11/26</p><p>决定加入校外联。在这个平台上，我怀着激情一直在学习，因为，确实有很多地方值得我去学习，一个本子，记载了我这段时间学到的财富；后来，觉得能学到的东西忽然间少了，但是一句“激情过后是责任”一直支撑着我，支撑着我做好手下每一件该做的事。一次次地学习新东西、一次次地认识新面孔、一次次地收获了精神上的启迪。 2014/12/03（后来退出是准备第一次创业）</p><p>“他日随吾凌云志，必笑泰山不丈夫” 2015/01/06</p><p>听到关于姚贝娜的噩耗，没有觉得多么意外，因为我并不是多么了解她，本来不想说什么，不过空间出现了刷屏。她，昙花一现，生命的弧线太美，但太短。她走了，倾覆了满天烟花。生命之于己，若宣纸之于画笔，人言，“人生苦短”。唯峨峨之高山，涓涓之细流；成乎吾心，顺乎吾意，走笔纸上，或曲或直，或轻或重，或浓或淡，或密或稀，或连或断……余不知其全者，然知其大略。故谋定一大事，必三思于方寸，至于无憾，方可曰，“得之我幸，失之我命”者也。 2015/01/17</p><p>厌倦安稳，喜欢挑战、酷爱不确定的生活状态。不确定是我现在的内心召唤。“飒生也狂耳，怎奈何，忽困樊茏二十载。心欲远徙野鹤间，何惧？且教我，芳华之年，尽吾愿。” 2015/03/12</p><p>雨大也如此，嗟尔远道之人，百亩油菜花，作黄袍加身，可否？知其难为而为之。 2015/04/05</p><p>===============================================================</p><p>弱冠宣言：听从内心的召唤，年轻是男人最大的资本！<br>年轻，可以挥霍，可以珍惜每一分每一秒；可以骂天骂地骂自己，可以赞美生活中的一切；可以下一刻停止呼吸，也可以下一刻活的更精彩。无对无错，只有是否坚定不移。随性而为，听从内心的召唤。<br>客问：“后悔过吗？”<br>习飒答曰：“后悔只存在于之前的某时某地。那刻之后，再无后悔可言，因为时间可以用来追忆，却无法用来追悔。”<br>客问：“如何评价自己？”<br>习飒答曰：“逗比地生活，冷峻地思考（这个生活定位也是我两面性的主要原因）。不知从某一刻开始，听从内心的召唤已经深入骨髓。有梦想，有计划，有行动，也有过懒惰，懈怠，堕落。但是，整体趋势是向上的，是符合内心深处召唤的。｀思想自由，兼容并包｀，宽容。”<br>客问：“让你重过十九年，你要怎么过？”<br>习飒答曰：“如果可以，我还愿意这样过。以往每时每地的所见所闻，才造就了此时此刻的回答。”<br>二十几岁，会发生什么？<br>彼岸花开，可容我化茧成蝶？ 2015/04/15</p><p>选择的0－与0+，更多的是enthusiasm;<br>稳定状态后，更多的是responsibility.<br>更多的时间，是责任大于热情。<br>坚持下去，知难而进，是对自己负责。 2015/04/22</p><p>做了认真考虑后，决定photoshop的学习到此为止，没必要那么精通，业余的作品总是跟不上专业水准，如果真的需要细致的作品，完全可以转交给专业人士来做。 2015/05/03（后来知道有种说法是“专业人做专业事，管理成本大于活动成本，交给市场来做”）</p><p>有时候，就是这样，当我们看着别人的幸福快乐的动态，是不一定需要去评论的，只需要做一个好的观众，点一个小小的赞，却不需要去改变别人原本发动态的心境，去守护他们的幸福。 2015/05/09</p><p>甘霖逝后，蛙鸣鸟啼，白鹭掠江，静水鱼跃为哪般？素年锦时，天接地，地连天，怕只是苍穹无主，邀君共议。 2015/05/30</p><p>他的生活是让我们羡慕的，但也只是羡慕羡慕而已，我们能做的，无非是把握当下的生活，并去矢志不渝地追求自己的梦想，蓦然，想起给南科大写的一份个人简历，标题是“青春万岁，追梦无罪”。 2015/06/18（《背包十年》读后感）</p><p>写上名字，只有你和你身边的人再来到这里会有所感慨；而写上时间，会让后面到来的人感叹流逝的岁月。我，选择了后者。 2015/06/20（骑行至苏通大桥一景点）</p><p>不如归去<br>西北倚栏寻桑梓，<br>秋水望穿日暮穷。<br>夜来忽闻不如归，<br>却念故人采莲蓬。 2015/08/07</p><p>经过这件事，又长大了些，即使弱冠之年，涉世未深的我们只能慢慢学习社会经验。除了一段的时间、精力，我们也没有输什么，因为我们年轻，本来就一无所有。不怕犯错。<br>鲲鹏扶摇凌云志，落木飒飒复始归。何惧？复始归，归复始，英雄揾泪，皱了一江秋水。 2015/09/01（第一次创业失败）</p><p>那一刻，我是唯一一个引起雏鸟振翅的人；如果那一刻，我是唯一一个凝视朝阳的人。 2015/09/24</p><p>敖<br>狂傲<br>无与行<br>快意恩仇<br>一枝笔杆子<br>怒骂老虎苍蝇<br>回首向来萧瑟处<br>多一过多少一过少 2015/10/12（评李敖）</p><p>塑造自己，过程很疼，但你最终能收获一个更好的自己。 2015/10/30</p><p>家，到底应该怎么定义？物质，不是家真正的内涵；爱，才是家的本质。<br>望向家的方向，味蕾里沁着甜味，夜遮不住脸上的惬意；整个身心，轻松了许多。<br>男人不只会学习工作，还会享受家的温馨。 2015/11/11（一次与家人视频后）</p><p>人微言轻，北风萧萧无端起；<br>韬光养晦，人生何处不春风？ 2015/11/18</p><p>雨，刚刚好，一个人，骑行在未曾去过的街道，轻轻地，慢慢地，假装沒有来过这座城。 2016/01/28（只记得那天心情不好，顶着雨骑行）</p><p>谈起价值，每个人都会有自己的感受，所经历的过程、一些事、结果、看法、体会各不相同，这是个人的个性所在，共性是都在实践中找到自我，守住一个宝贵的人生信条，并持之以恒下去。人无完人，你就是你自己，做大事做小事必须有真正的自我，好高鹜远、弄虚作假那就失去了自我的价值。 2016/02/16</p><p>年輕，意味著，無限的可能。迎接海浪🌊，還是送走夕陽，或許本身並不重要。重要的是，這一群人，這一刻，做了什麼。 2016/02/21（安平古堡看落日之后）</p><p>《我們說過，要一起去最美麗的地方》<br>螢火蟲飛舞在你的裙擺間<br>浪花親吻著你的腳踝<br>柔沙上的妳，輕輕的轉過頭來<br>背著行囊的我們，遠遠的聽你<br>呢喃道——<br>我們說過，要一起去最美麗的地方<br>妳握著槳一支<br>他握著槳一支<br>槳尖流出的“欸乃”聲<br>多像一隻隻振翅欲飛的海鷗<br>漸行漸遠的漣漪<br>躍動著迷人的弧線，流連忘返<br>我們相信<br>夢想在那裡開出最美麗的花朵<br>身影在那裡凝成最永恆的記憶<br>話語在那裡蕩出最悅耳的樂曲<br>我們相信<br>在那裡<br>有你<br>有我<br>還有一段不曾忘卻的歲月<br>因為那裡<br>有你<br>有我<br>有我們<br>是的，最美麗的地方<br>是的，要一起去<br>是的，我們，說過<br>是的…… 2016/02/27</p><p>猎鹰属于苍穹，少年属于世界。 2016/04/03（半马前一晚，与扬威彻夜长谈，未眠）</p><p>有趣的现象：郑成功被大陸人，台湾人，甚至日本人都视为民族英雄（national hero）。<br>大陸：郑成功收复台湾<br>台湾：郑成功驱荷复台，另外反清复明与蒋介石反攻大陆类似<br>日本：郑成功母亲是日本人并且出生在日本<br>同一个人，不同的原因，被不同的国家和地区视为民族英雄。再多想一层，民族英雄是谁选出来的？为什么要选择他们？目的是什么？我们为什么需要他们？ 2016/04/14</p><p>大江大山那麼多，可我独独愛这片海。 2016/04/30（第一次去垦丁）</p><p>骑行的乐趣在于:转角的一泓流水，坡顶的一片开阔地，乌云密布的天空突然出现缕缕阳光，路旁陌生人的鼓励，偶遇骑行者的互勉。<br>走着太慢，开车太快，骑行，速度刚刚好;<br>走着是人力，开车是机械，骑行，则是人力与机械配合的完美体现。 2016/10/03</p><p>路虽远，行则将至，久行必至。 2016/11/02</p><p>左手深秋右手春，<br>半边萧萧半边萋。 2016/11/02</p><p>想起来几个伙伴问过我:为什么你总是那么正能量？就没有烦心事吗？<br>一句话很简单:再悲伤忧愁抱怨，也解决不了当下的问题，只能徒增愁绪，还会影响周围的伙伴。<br>若你以积极的心态去面对日常琐事，宽容、忍让、和善，琐事也就不是事了。一般的烦心事，换位思考，或者睡个觉，醒来就解决了。2016/11/23</p><p>晨曦六君子，狂傲一孤天。<br>凛冽风途何处去?江海之都意留君。<br>浮沉廿载君尚在，杯酒一笑乾;<br>但观闲云信中庭，弃我者一时，同我者一世。 2016/12/18</p><p>这是个最好的时代，也是个最坏的时代。<br>决定人生高度的从来不是做事的完美程度，而是做事的速度。当你做事的速度足够快，执行力足够强，你会深信：这的确是一个最好的时代。<br>短期比的是idea,长期比的是模式。 2017/03/05</p><p>薰衣草，是受到了上帝的偏爱吗？<br>回头看看，身后也是一片紫色的花海。<br>花开半夏，似水流年，谁曾着一袭紫韵？ 2017/05/26</p><p>《仲夏问》<br>宝剑未妥御远寇，排云直上万丈楼。<br>忽而天公重抖擞，何不含笑弄吴钩？<br>今朝莫惜孙仲谋，来日封他万户侯。<br>秣马踏遍五十州，少年归来可知否？ 2017/06/03</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《听说，是这么回事》灵感来于霍金及史铁生【待续，尚待充实】</title>
      <link href="%E5%8E%9F%E5%88%9B%E6%8B%99%E7%AC%94/20052/"/>
      <url>%E5%8E%9F%E5%88%9B%E6%8B%99%E7%AC%94/20052/</url>
      
        <content type="html"><![CDATA[<blockquote><p>【 霍金在书中提到了“人存原理”这个概念，其释义为：我们看到的宇宙之所以是这个样子， 那是因为我们的存在。科学工作的一切活动如果脱离了人的存在，就不会有任何意义可言。 人存原理告诉我们，我们对宇宙的认识和描述，都带有我们人类特有的认识能力。我们之所以看到宇宙是这个样子。是因为它如果不是这样的话，我们就不会在这里去观察它。】</p></blockquote><p>  “咦～～快点啊！”<br>  “呦～开始了～～～！”<br>  拨开一支遮挡了视线的满缀着桃花的枝条，粉色的花瓣纷纷扬扬，洒落了满满一地，飘飞的花瓣帘幕后面，两个孩子映入眼帘，在孩子中间的是一只古旧的陶碗，陶碗里有两个蛐蛐，原本在东南角一个，西北角一个，现在都跳到碗正中间了，在碗东边的孩子戴着天蓝色鸭舌帽，手里拿着塑料制黑色手枪；在碗西边的孩子扎着一绺一绺的小辫子，头发略微发黄，手里握着一把桃木制一榨长一指半宽的剑，当剑刃朝着东北、西南方向，剑柄朝着东南方向时，会看到剑脊上面从左到右刻着古体字“水流山高”。<br>  意料之外，必然之中，一个男人走过，看到了他们，但是没有打扰他们。不知道为什么，也没有人曾提起过。</p><p>  一粒葡萄籽无意中坠落，无声无息，风、雨、脚步、马蹄、把它深深埋在泥土里，它埋怨、控诉、心底严重的失衡，风声化作低吟，雨水溅做泪花，它不服啊！为什么只是自己，而没有相像的兄弟姐妹？为什么被活活的欺负，而没有一丝丝的同情？难道自己的一生注定埋没于此，无人垂怜，无人注视，有的只是肮脏的马蹄铁、鞋底板。较弱的它能改变什么呢？注定如此，注定如此······</p><p>  在孩子玩耍的正南方向227米处有一座不算太大，也不算太小的城市，高楼大厦鳞次栉比、交通线路如密密的渔网一般，但，整个城市，只有一座桥…···在城市的西北角有三个17层楼高的烟囱楼东北～西南一字排开，累的气喘吁吁。据说，这个城市只刮东南风，只刮东南风。顺着似乎卷着桃花瓣的浓浓白烟望去，约莫着大约6公里处有一座山，在英文里算得上是mountain，而不是hill，如果没记错的话，名叫卑黎梧。没记错，确实是卑黎梧。烟、云、雾混在一起，你也辨不清哪是烟、哪是云、哪是雾······<br> &amp;emsp男人看了一下表，11：04。卸下自己的背包，自言自语道：“为什么只刮东南风呢？究竟是为什么呢？”低头，陷入另一个世界徜徉，一片桃花瓣划过鼻尖。蓦地感觉有人拍了自己的肩膀，并听到娃娃音一样甜美的声音：<br> &amp;emsp“ 如果它不总是刮东南风的话，你就不会问为什么这样了，不是吗？”<br> &amp;emsp男人回过头笑笑，好奇地问：“你也知道？”<br> &amp;emsp“嗯。”<br> &amp;emsp是的，世上有多少这样的事呢？当它们按照不同常理的方式发展，我们总想问“为什么”，可答案往往就是这么简单。不是吗？我说“没有完全相同的桃花瓣”，你问“怎么可能，为什么？”；他说“有长在空中的葡萄蔓”，你又是一样的惊讶。你很疑惑，我也很疑惑。</p><p>  经历了太多痛苦，满身泥泞的葡萄籽不再抱怨命运的不平，不再埋怨上天的不公，一切既已发生，也就发生了。我们控制不了寒风冷雨，我们却能改变自己的态度，对人、对事、对世界。葡萄籽开始积聚力量，反抗生命，它利用微弱的阳光、浅渗的雨水、大地轻微的震动、甚至路过孩子的笑声，开始反抗，虽然细微，但命中注定它会与众不同，敢于抗争的生命，怎会轻易凋败？ 胚芽小心翼翼地，一次一次的试探后，冲破一重种皮，和土壤来了个亲密接触，它感到了微弱的光，向上，向上，再向上······</p><p>  女人放下背包，面向太阳，事实上也是面向男人，上臂与肩膀齐平，下臂向上举着，在风中摇晃，男人这才有机会端详这个戴着眼镜的女人，脸上、手上的皮肤很白、很细。戴着紫色的画有桃花瓣的帽子，围着紫色的围巾，穿着紫色的夹克、紫色的牛仔裤、紫色的运动鞋，甚至连眼镜框都是紫色的，当然，也背着一个紫色背包。女人又面朝西北坐在背包上面，两手托腮，胳膊肘各抵在双膝上，眯着双眼望远处的卑黎梧山，像是在听一曲古筝，又像读一首古诗，品一幅名画······<br>  男人不自觉的面朝东南而坐，从内侧袋里缓缓取出一只烟，掏出火柴，眼前一阵明亮，烟，点着了······其实男人吸烟从来不过肺，只是简单地为了解解乏，有点男人样。</p><p>  那粒葡萄籽所蕴含的葡萄蔓顺着身旁的一棵不知是谁运到这里的死去的胡杨的躯干蜿蜒前行，艰难而自信的伸展。不知过了多久，只记得那是三月底四月初的日子，它自然的生发出一片葡萄架，绿的。没人除草、犁土，更不用说除虫害了，它依靠着自己，到了六月初葡萄蔓上长出了花絮。</p><p>  有谁知道呢？在男人、女人都还是6岁的时候，一天中午，一只刚从桃林飞过，牵引着桃花味的蜻蜓栖息在女人的窗前。那时候，女人刚刚睡下，蜻蜓在那里做了什么？没人知道，也从未有人问起。只知道这只蜻蜓在当天下午被这个戴着天蓝色鸭舌帽的男人用一把大扫帚完完全全地捂住了，恰恰这时，女人醒了，揉揉惺忪的睡眼，走到窗前，眺望远景，不知道发生了什么。当天晚上，拿着塑料制黑色手枪的男人放飞了一只闪着绿光的萤火虫，这只萤火虫恰巧在窗边女人的眼前飞过，又落在女人肩上，这一切又有谁知道呢？<br>  “这件事发生过吗？”我们时常会问自己，或许真的发生过，只是我们没有注意，似乎也与自己无关，也不管不问了。</p><p>  躲在葡萄架阴影下的很细、很白的、处于豆蔻年华的一朵葡萄花情窦初开，她羞涩的、不由自主地把眼瞥向阳光下的他，阳光下的他豪放、粗犷，无所顾忌地高谈属于男孩子的秘密，她在黑暗处静静地听着，憧憬着心中的爱神，憧憬着和他在一起的美好时光，他毫不知晓。他一说话，她就细细地听，听着听着就进入了幻境，这里温暖和谐、春暖花开。</p><p>  沉寂，沉寂，还是沉寂·····<br>  “咦～～快点啊！”那个扎着一绺一绺辫子的孩子说，也不知对谁说。<br>  “你到哪里去？”男人女人几乎同时开口。<br>  “何奈桥。”几乎同时回答。<br>  “你从哪儿来？”恰巧又同时问。<br>  男人指指正北面，说，“那里！”<br>  女人没有细问究竟是正北多远的什么地方，说：“那里！”，说过撅起嘴对着正东方向。<br>  男人心里怪怪的，表情也怪怪的，语言也怪怪的，女人也是如此······<br>  “呦～开始了～～～！”戴鸭舌帽的男孩说。<br>  彼此交流了大概了5分钟吧，又回归沉寂······</p><p>  从卑黎梧山西边山后流过来一条大河，在山南分成两条河流，一条大拐弯似的从山的东面回流过去，另一条流经这座城市，据说很久以前城市居民过着原始生活之时，这条河流早就在了，她无私地养育着这座城市，养育着这里的人儿，养育着这里的一切。从何奈桥下流过，而何奈桥在这座城市的正中间，何奈桥呵，何奈桥，这个名字也不知叫了多久。</p><p>  之后两人起身走了，再没有说话，没有回头，甚至没有交换联系方式，明明都要去那座城市，却一前一后，一左一右。虽然只交流了前前后后没有10句话，但他们的神情却很满足。真正伟大的情感不过如此，只言片语，即使彼此神态窘迫，即使相望无语，但过后，彼此间却感觉这是世界上最真切的交流。短短的邂逅罢了，下次还会相遇吗？会在什么时候？在哪里？<br>  不知道。</p><p>  那朵阴影下的葡萄花向往着心中的爱神，向往着属于自己明天的幸福，她尽力向外伸着自己的头顶，向外，再向外。葡萄藤盘螺一气，葡萄叶愈发茂密，她看不到他，只能再向外。晴朗的正午，只有热风肆虐，她第一次触到了燥热的阳光，莫名的恐惧席卷全身，她也不知道为什么，只是害怕，怕。</p><p>  顺着高耸的卑黎梧山慢慢往下望，依次是皑皑白雪、低矮的荆棘丛、针叶林、阔叶林，视线跳过从东面回转的支流，在“丫”字型岔口有一间土房子，表面涂上了一层白色石灰，有的地方脱落了一块，就不和谐地漏出黄色的泥土。<br>  当你对着房子喊：<br>  “有人吗？”<br>  如果没人答应，那他一定就在书房里，不是翻阅读了N遍的老书籍，就是在写十多年就开始动笔却始终都没有完稿的书。书房的书桌前里有一个敞口的破旧背包，里面装着一本似乎在水里泡过的皱巴巴的《现代汉语词典》、三个空的牛肉罐头罐（红、黄、绿三种颜色）、一顶天蓝色鸭舌帽、一把塑料制黑色手枪。<br>  “滚他妈的，是谁？没看见我在数葡萄吗？”<br>  “龟孙子的，怎么偏偏就现在来了，不知道我在枣树下尿尿呢吗？”<br>  “尻，有本事你过来把葡萄都给我剪下来！”<br>  ……<br>  如果你听到诸如此类的回话，不要像一般人要么默默离开，全当作没来过；要么抱怨的骂几声作为回应，继续自己的旅途。你不妨想一想，这个男人为什么不管三七二十一就是一顿臭骂？又骂得如此粗糙，酣畅淋漓？我们是不是有时候自己也想这样痛痛快快地骂几句，不管骂天、骂地或只是简单的发泄一下糟糕的情绪？为什么有的语言被尊奉为艺术，有些就必须消失呢？<br>  这时，那个男人不是在葡萄架下数青涩的葡萄，“1,2，3,4,5,6,7,8,9······”，就是在枣树下数微微发红的枣子，，“1,2，3,4,5,6,7,8,9······”。仅此而已，不知疲倦。<br>  那间土屋朝着卑黎梧山，周围的院墙是用篱笆围成的，到了夏天开满了牵牛花，红的、粉的、白的，仅此而已。土房子的颜色也在变，早上是灰绿色，正午是白色，到了傍晚是橙红色，晚上当然就是黑色的了。当太阳刚亲吻到卑黎梧山时，就已经是傍晚了，那里的沉沉天空真的抹着“赤橙黄绿蓝靛紫”皱纹似的彩霞，那个男人这时可能就会在葡萄架下品读“山气日夕佳”的美景交融。嘴里不时骂上一句“真他妈的漂亮！”</p><p>  在何奈桥，男人午夜蓦地记起上次女人好像开玩笑的说了一句，“不知道何奈桥边有没有卖婆孟汤的？”为什么偏偏这么叫呢？所以男人早早地顶着黎明前最后的黑暗，到了何奈桥，一直等到夕阳西下也未曾见有卖“婆孟汤”的······男人几乎绝望了，怎么会没有呢？男人于是漫无目的地走到了何奈桥下，不知不觉间好像碰到了什么东西，回过神来，原来是一块石碑，正面没有字，是灰色的，后面呢？男人好奇的走过去，拨开遮盖的长长的苇草，有一排字：到那群微生物腐蚀了那具尸首为止。男人很是好奇：什么意思？有什么预兆吗？仅仅这一句话不通，直觉告诉他还少些什么，但是是什么呢？<br>  “喂，你也在这？”声音很轻很轻，轻的只有在这无风的日子才能听到。<br>  男人猛地一惊， 转过头，什么也没看见，视线慢慢下移：<br>  “嘿，原来是你啊！”<br>  是，是那个扎着一绺一绺的小辫子，头发略微发黄，手里握着一把桃木制一榨长一指半宽的剑的小孩，他蹲在男人后面，两眼盯着男人发呆。<br>  “我认识你，你······就是那个······戴着······天蓝色鸭舌帽·······的孩子，一定是！”<br>  “你胡说什么，我都这么大了，是个孩子？可笑！哈哈哈哈······”男人真的笑了，是仰天大笑！<br>  当一个人告诉你一件驴头不对马嘴的事时，你会怀疑吗？不知你会作何解答，我承认，我会。<br>  那个孩子也没有说什么，只是拿起那把剑，在石碑正面从左向右轻轻一扫，石碑上出现了浮雕效果的动画：无数的蝌蚪状精子向前游动，一会儿这几个在前面，一会儿那几个在前面，一会儿那几个在前面，不断地交换，更替……越到后面，差别越大，最后，一个精子稍稍领先，最后几个精子前前后后都撞向了那个卵细胞，但是只有一个的头部挤了进去……受精卵不断分裂、分化，渐渐地向子宫靠近…春天里孩子出生了，伴随着一个男婴的哭脸相，其余所有人的嘴角都向上翘起，笑地很幸福……躺着、打滚、坐着、爬着、站起来了、走着、跑起来了……放眼望去，白茫茫的一片，一个戴着黑色草帽的老人，拄着拐棍，在桥下异常显眼，坐在他用了一辈子的背包上，里面装着一本似乎在水里泡过的皱巴巴的《现代汉语词典》、三个空的牛肉罐头罐（红、黄、绿三种颜色）、一顶天蓝色鸭舌帽、一把塑料制黑色手枪，还有一本书，是雨果的《悲惨世界》。他笑着用沙哑的声音说：“这个背包里的东西只会多，不会少。人的经历只会多，不会少。”周围的人都泪流满面了。第二天，在他背包沾地的地方，多了一把桃木制一榨长一指半宽的剑，剑柄指着东南，剑脊上面从左到右刻着古体字“水流山高”。<br>  ······<br>  人的一生又何尝不是如此，出生时哭着，所有人都笑了；临死时笑着，所有人都哭了。<br>  男人感觉很熟悉，又很陌生，同样没有问“为什么”，他是知道答案的：如果不是这样，我就不会问“为什么”了。<br>  ······<br>  这时唯有静坐才可静心，男人在这里呆了一夜，那个小孩不知去了哪里。</p><p>  在何奈桥南边有间茶屋，很小的一间，玻璃门，上贴“容膝”。屋中间放着一张黄色仿木茶桌，最下面就像是树根，缠缠绕绕，很难找出这条树根进去后从哪里出来，茶屋老板是个男人，在茶道方面颇有造诣，天天逍遥自在，以茶会友，从不收茶钱，问起旁人，只知道他曾说在文化大革命期间卖瓜子，其他一直是个谜。<br>  男人看见了这间茶屋门前有一幅大大的旌旗，上书“缘”，很有劲道的一个毛笔字。于是男人进去了······</p><p>  那个住在卑黎梧山脚的男人一直在等一个人，他不知道那个人会从哪里来，可能从卑黎梧山顶越来，可能从“丫”字型河流的任一方顺流或逆流而来，也可能从东南方向的任一路走来，向他招手：我来了！他只知道TA来了，他就要动身了，去哪里？何奈桥。为什么？我们也知道了答案：如果他不去，我们就不会问：他为什么去。男人一直在等，枣儿红了又红，葡萄剪了又剪，但那个人一直没出现。</p><p>  男人打开门的刹那间，从玻璃门上隐隐约约看到一团紫色，心里悸动了一下，这种悸动算不上害怕，反正是莫名其妙的，男人没有回头，心想：幻觉吧。但是，男人还没来得及迈步，就有一双白皙的手从头后伸出捂住了男人的眼睛，稚嫩的娃娃音：<br>  “你知道我要问什么吗？”<br>  “猜猜你是谁。”<br>  “笨啦！我要问‘猜猜我是谁’，嘿嘿嘿…”把“我”字读得很重。<br>  “脑子反应真慢，我说的‘你’，就是你说的‘我’，明白吗，呆子 ？”<br>  “什么乱七八糟的丸子，我不知道。”<br>  “呆子不知道，很正常的嘛！”<br>  “我那么聪明的人，你怎么能喊我‘呆子’，傻瓜？”<br>  “呆子，自己是什么不是别人叫出来的，不是吗？”<br>  “你这个大大大大傻瓜，别跟我扯那么深奥的，我不想听。只知道那个可以回答一切以‘为什么’开头问题的答案：如果不是这样，那我们就不会问‘为什么这样’。”女人说这句话时没有笑，收回了白皙的手。<br>  男人也没有笑，只是回头看了看女人，看了看那幅旌旗，说：“进去吧！”<br>  他们什么时候就这么熟悉了，才刚刚第二次见面。<br>  “有人吗？”女人轻声问道。</p><p>  女人眼睛瞥向男人，看见男人望着那个木桌发呆。女人走了过去。</p><p>  桌子上的订着一张卡片，上写：“请自便”，旁边是一张纸，上有一篇文章《伪装》，纸上有淡淡墨痕，像一把剑，剑脊上面从左到右刻着古体字“水流山高”。</p><blockquote><p>伪装</p><p>把自己装在袋子里</p><p>不，还戴着面具</p><p>只为了顺应这个</p><p>所谓的新新世界<br>新新世界</p><p>够了，真的够了</p><p>面具太沉，压扁了我的脸</p><p>袋子太闷，我几乎要窒息</p><p>但别人还戴着面具</p><p>还在袋子里</p><p>不，不，不，</p><p>我要出去！</p><p>我要出去！</p><p>我要出去！</p><p>摘下面具</p><p>我是我，我又不是我</p><p>呵，<br>呵，</p><p>去他娘的</p><blockquote><p>我摘下了面具，走了，去卑黎梧山下，见一个等我的人，再等另一个人，<br>如果你来了，呆在茶屋吧，去武夷山可以学习茶道</p><p>我知道，你也见到了那两个斗蛐蛐的小孩</p></blockquote></blockquote><p>  男人真的停了下来，问女人：“你也一直在袋子里还戴着面具吗？”</p><p>  “你说呢，傻瓜？”</p><p>  “我不想问为什么了，摘下面具出来吧！”</p><p>  “不，不，那样的自己，我都不敢想是怎样的，好可怕的。”声音里伴着哭腔。</p><p>  “是啊！做人不容易啊！有人说：我们的生命就像一根弦，拉紧了才能弹好，弹好了就够了。”</p><p>  “说的容易，不，不，我不愿意那样，那样的自己未免太可怕了。”泪水决堤而出。</p><p>  “是啊！我自己在这里慢慢参透吧！”</p><p>  之后进了内间，关上了门，泪水奔涌但没有哭声。颤抖着说：“你走吧！”</p><p>  “走？，不，我会回来的！可是，就这样结束了吗？”娃娃音里伴着哭腔，撕心裂肺的痛。</p><p>  “从来就没有开始过，哪里谈得上结束呢？”</p><p>  是啊！没有开始过，哪里谈得上结束？就像上一个男人与上一个女人一样，此后再也没有见面，这一别变成了永别······</p><p>  永别······</p><p>  男人一直呆在茶屋里，直到下一个人到来前······</p><p>  过了多久？葡萄花也已变成了葡萄，从前的她这朵葡萄花已经离她的爱神更近，可是他却把她当做哥们，她也不能再爱他，因为阴影里的她在阳光照射下，俨然变成了雄性。努力追求了很久，才发现，一生如梦。她与他在同一只篮子里，她的泪水哭干，化作淡淡冰凌薄雾，附在葡萄皮上，从此刚剪下的葡萄，皮上大多都有白色泪痕······</p><p>  在卑黎梧山下的山下的男人那天醒的很早，他有预感，那个人快到了，收拾起背囊，戴着一顶黑色草帽，在门口等着，远远地看到了背着背包的茶屋主人，就走了，登上了卑黎梧山，翻了过去。走了多久已无从考证，只知道他最终在雪天里走到了何奈桥下，笑着离开了人世·····</p><p>2012/08/11</p>]]></content>
      
      
      <categories>
          
          <category> 原创拙笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>瞎子扫光【完】</title>
      <link href="%E5%8E%9F%E5%88%9B%E6%8B%99%E7%AC%94/49796/"/>
      <url>%E5%8E%9F%E5%88%9B%E6%8B%99%E7%AC%94/49796/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言:由于一天在宿舍扫地，误把一块光斑当做白纸片，扫了几次都不动，离近一看，我笑道：“我瞎了”，灵感就来了，于是开始构思这一篇小说，听了外号为欧米伽的舍友关于他【瞎马】的故事后，再加上自己的一段经历，就成了。</p></blockquote><p>烈日。飞尘。汗柱。衰蝉。<br>炙热的太阳烘烤着大地，想要把世界蒸糊了一般。晚上侥幸偷偷地爬上蒸腾的树枝上的蝉，无力的聒噪，树枝衰弱地摇动一下，掀起一阵阵热浪。树下的一只狗静静地趴着，尽量减少一切不必要的活动，不时地伸出舌头，重重的呼吸几口。偌大的世界，一片明亮！</p><p>“唰唰唰······”<br>“唰唰唰······”<br>一缕阳光奋力地冲破蒸笼似的大气，利剑一般穿过斑驳的枝叶，却触摸到了一根根锈迹斑斑的铁棍。它似乎在试探，却又无奈地滑落下去。<br>“唰唰唰······”声音越来越清晰，顺着那扇破窗户看去，只见一把崭新的手编竹扫帚来回游动，如果稍微仔细一下，你会发现它竟然没有沾着地。但声音是那么清晰。<br>“唰唰唰······”<br>“有人吗？”我忐忑的问道。<br>没人回应。<br>“是谁在扫地啊？”<br>依旧没人回应。<br>“我走了哦。”我故作生气说道。<br>“别走啊！咳咳······”苍老的声音吓得我不自觉地哆嗦了一下。<br>“啊······啊！好，好······我不······走了。”<br>“哈哈哈······咳咳······多少年了？没有人过来看我了，呵，呵！这个万恶的社会！这个万恶的年代！我······咳咳······”他说完就伸出自己左手的食指和中指，颤抖着轻轻地贴在眼皮上，“我是一个瞎子啊！咳咳······”<br>“啊？老爷爷，怎么了？”我紧张地问道。<br>“哈哈哈······成功了屁都是经验，失败了经验都是屁！我是个瞎子啊！咳咳······孩子，听我说，52年前，我背井离乡，来到这座城市，当过搬运工，做过砖瓦匠，也干过跑堂。后来我才知道什么是“蘑菇定律”，我不甘于生活在社会底层这个不安而黑暗的角落，就开始买励志方面的书，之前王八才晓得啥是励志！只因为一天，咳咳······”咳嗽的同时，他脸上堆满了幸福的笑。<br>我觉得他还是可以亲近的，就问“老爷爷，后面怎么啦？怎么啦？你说啊！”<br>“那一天，那天我记得很清楚，很清楚，是在就像今天这样的天气，黄昏，光线不是那么刺眼，而是是温柔的刺眼，不，不是刺眼，但是用那个词呢······引目，对吸引了我······那天她在绿顶报亭门口面对太阳而站，我在她身后，啊！多么美的一幅画面啊！她是上帝用金色的彩笔小心翼翼地轻轻地勾画出来的啊！然后她华丽地转身，裙摆在风中旋转、翩飞。我陶醉其中，竟然不知道她什么时候已经关门离去。为了走近她，我以后每天都去那家报亭，去寻找我的爱神！记得是一个周日，我拿着一支镂花铅笔，去了窗口旁，离她是那么近，我能够清晰的听见她均匀的呼吸，我怯怯地问道：‘你能告诉我你的名字吗？’她没有说话，只是拿出一张强烈反光的白纸，努了一下嘴唇，我看着那娟秀的笔迹，“莫唯夕”，多么具有诗意啊！<br>‘哎！’<br>‘哦，能帮我拿一本书吗？’<br>她没有说话，用纤细的手指抚摸那一本本书，停留在海伦凯勒的《假如给我三天光明》，却又顺着光线滑到了《二十几岁，男人的资本》，她递给我时又努了努嘴，只见封面上写着【年轻，是你最大的资本】。我慌张地放下镂花铅笔，就飞快地跑了，没有敢回头看她。到了我的工地，眼前总是出现爱神的那几个大字，不知怎么的，白灰总是刷的厚薄不均，瓦片也摆的不在一条线上，怎么也进不去工作状态。我要娶她！只知道当天下午我去了包工头那里辞了职，开始了我的奋斗生活。”<br>“老爷爷，是不是然后你就到了这里扫地啊？”我满怀兴趣地问。<br>“咳咳咳······不，不，我侥幸申请了一项设计专利，却无人敢征用，在我后来的潦倒生活中遇到了同样潦倒的刘增利，刘增利！这个龟儿子！兔崽子！如果知道后来的事，我非剁了他不可！当时他有充足的资金，想将我的专利投入商业，说好了“55分成”，这个王八狗腿子的竟然把我当做不谙世事的乡巴佬，我当时确实是，呵，这个龟孙刘增利竟然把所有的所有都划归他的名下，他每月给不懂什么狗屁上市公司的那个我10万，那个我却很是乐呵。咳咳咳······直到有一天，一个保安开着车，把西装革履的我送到了所谓的出差地，扔下我，撂下一句‘商业上没有所谓永远的友谊，只有永远的利益，利益，益利，所以我叫增利’，我久久困惑后，才幡然醒悟：我被涮了！咳咳咳······巧合的是，他把我扔在了那绿顶报亭旁，一抬头，我又看到了夕阳下的爱神！不去管那个刘增利，只要拥有我的爱神，就够了，真的就够了。看着自己一身上下，我信心满满地走到她面前，<br>‘唯夕，嫁给我吧！’<br>她捂着脸庞，钻进了报亭，晃着一支镂花铅笔，我追上去，<br>‘唯夕，你还拿着呢？’<br>她拿出那张写着她名字的白纸，流着一如几年前一样的笔迹，只见后面多了四个字‘是个哑巴’。一缕阳光照在她脸上，是多么可人啊！<br>‘唯夕，没关系，我是从骨子里爱你，你会不会说话没关系。’<br>她写下‘像你这样的人，我初次看到，就想我会终生仰望，不是因为你高高在上，而是因为你能把自己压得很低’<br>‘爱你的性格、内心，胜过爱你的躯体。答应我吧，唯夕？’”<br>老人呜咽起来，摆弄着他的右手无名指，继续说道，<br>“她缓缓地伸出右手，我才注意到无名指上戴着折射刺眼光彩的钻戒，看着她的眼里噙满泪水，我的泪水终究决堤。冲了出去，模糊中听到后面微微的抽泣。那天的阳光是如此刺眼。”<br>“然后。你就到了这里？”<br>“我返回去找熊人刘增利，被保安拦下，并被乱棍抽打。后来那个王八刘增利走到我面前，说,‘你个瞎子！作为一个真正的男人，你首先是一个男人，其次才是人，所以你不应该被生活中的小打小闹所击毁，不要因为生活中一些波澜就痿糜不振，寻死觅活。无论面对的是怎样看似致命的挫折、困难、打击！你还年轻，耸耸肩，转转腰，昂首挺胸，迈出下一步坚定的步伐，再说一声，嗨！你好！世界！林肯说过，30岁之前你的脸还是父母的，经得起高强度、快频率的打击。’他的阴阳怪气搞得我浑身不对劲。<br>那个王八一句‘嗨！你好！世界！’后，一把竹扫帚扔在了我的太阳穴上，我晕了。”<br>“老爷爷，看来你不瞎啊！”<br>“不，我是一个彻头彻尾的瞎子！也许，也许只有在她面前我不瞎，可是我扫了44年的光，还没有看到我的爱神！”</p><p>2013/7/14</p>]]></content>
      
      
      <categories>
          
          <category> 原创拙笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>求解中越1979年战争中为何不动用空军？</title>
      <link href="%E9%9A%8F%E7%AC%94/31164/"/>
      <url>%E9%9A%8F%E7%AC%94/31164/</url>
      
        <content type="html"><![CDATA[<p>   首先，为今天长江湖北监利段458人客船突遇龙卷风瞬间翻沉事件同胞祈福。<br>   言归正传，形势与政策课上看了“中越自卫反击战”相关视频，令我疑惑的是：1979年的这次双方都认为自己胜利的战争（在高平战役的关键时刻，某师奉命不惜一切代价开辟出一条血路，却遭遇伏击，伤亡惨重），为什么没有动用空军来减少我军伤亡（如果有自己看法的，欢迎交流一下）？即使二战中，优先夺取制空权，从而配合陆军作战，有必要的话（沿海），还可以陆海空三军协同作战。关于未动用空军，网上有各种不同说法，但个人不敢苟同。查询相关资料，部分列举如下：</p><p>1、时间（1979年2.17<sub>3.16）：1960年，中苏决裂；1976年十年文革结束；1979年1月1日中美建交，1月28日</sub>2月4日邓小平总理应美国总统卡特邀请，访美。<br>2、地点（中越边境线及越南纵向距越首都河内百里）：应该是以卡斯特地貌、热带山岳丛林地貌为主，临海。<br>3、中越关系：由于南海问题，1974年1月19日，中越西沙海战，我军获胜；越南抱苏联大腿，入侵中国盟国柬埔寨，苏联默许，想以越南来钳制我国，两国边界多次武装非正式冲突。<br>4、 越南方面：在苏联扶持下，建立了类似苏联的防空系统，部分项目中国辅助承建。美越战争1975年结束，越南取胜，击落美军各型飞机220架左右，获取美军部分先进装备与飞机。<br>5、双方空军对比： 越南飞行员曾在我国学习。当时越南空军的主力机型是不到60架米格-21、缴获的20多架F-5，为了应对这只力量，中国空军调集了20多个歼击航空兵团，6个轰炸机、强击机团，各型飞机共700多架，其中歼七约100架。为了保证对约米格-21、F-5的绝对优势，还把两个大队的歼六飞机进行了挂载空空导弹的改装，确保使用空空导弹的歼击机数量是越南空军的2倍。数量的优势带来了新的麻烦，由于中越双方使用的是几乎相同的机型（米格-21、米格-19），因此敌我识别成了大问题。<br>6、技术层面：我空军定位导航技术不精确，战斗机未配备惯性导航仪。我们国家这些年来飞机导航就靠四件宝：一是罗盘（即指北针），二是“塔康”（即信标机），三是飞行地图，四是飞行员的经验。<br>7、其他（负面）： 空军军费占我国军费总量三分之一，自70年代末以来，空军年年宣扬飞行“万时率”世界领先，限制或取消部队进行难度很大的复杂科目训练，使飞行部队得到了一种“安全就是全部”的印象。许多训练有成效的飞行师领导，可能仅仅因为在他统辖的部队出现出现一个事故，不管原因是什么，都有可能丢掉了升职的途径。而弄虚作假，在训练中搞“豆腐渣”工程的人反而很可能获得升迁；2000年左右，海空军在东海海域举行名为“高科技练兵成果汇报演习”，向中央领导汇报表演他们这一年在科技练兵中取得的成果。演习的第一个科目是轰炸机对水面舰船进行轰炸：只见海面上空500米左右的高度飞来了三架轰―6型轰炸机，它们排成“品”字轰炸队形，以500公里左右的速度，小心翼翼地接近靶船，然后密集地投下了数十枚空炸炸弹，炸弹整齐地朝靶船降落，然后在距靶船20米的上空整齐地依次爆炸，爆炸产生的水柱和烟雾激起了在指挥船上参观人群的热烈掌声和欢呼声，但懂军事的观众却呆若木鸡！</p><p>2015/16/02</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从TPP和亚投行浅谈中国特色社会主义制度优越性</title>
      <link href="%E9%9A%8F%E7%AC%94/36794/"/>
      <url>%E9%9A%8F%E7%AC%94/36794/</url>
      
        <content type="html"><![CDATA[<p>   是的，我们国家用了二三十年时间完成了其他国家一两百年才能企及的发展高度。从一定程度上展示了我国政治制度在经济发展层面的优越性，这不是套话，政治制度是国家稳健发展的根本保证，稳定的社会环境，谈发展，就如同你在死海里找一条活鱼，可能性太小了。从这里可以顺便谈谈许多年轻人羡慕的西方所谓的民主制度，好的方面先不说，我们先谈谈不足之处。</p><p>   就拿TPP和亚投行来说，如果仅从美国奥巴马09年宣布开始加入算起，这项协议在美国国内一直“会而不议、议而不决”的状态，直到特朗普胜选，把TPP协议扔在纸篓里；而亚投行自从习近平主席在13年在雅尔达提出，15年底，也就是去年，已经成立，为什么？我把这个归结为政治制度原因。</p><p>   自从孟德斯鸠在《论法的精神》中提出“三权分立”的观点，即将国家权力分为三种：立法权、行政权和司法权。所谓三权分立是通过法律规定，将三种权力分别交给三个不同的国家机关管辖，既保持各自的权限，又要相互制约保持平衡。看起来是不错，但是导致了什么问题呢？效率底下。加上民主制度的不断“民粹化”，在野党喜欢拿执政党的政策负面作用做文章，恰恰忽略了一个“辩证主义”的眼光，有好的方面，肯定有不好的方面嘛！难道执政党不想让广大的人民群众过上好日子？回想一下吧，我们90后都是目睹着中国的发展的，小时候什么样，现在什么样，还用一一举例说明吗？闲言要少叙，继续刚刚的分析，我们之所以会推出一项政策，有一点可以肯定的，就是：这项政策利大于弊。效率底下加上无法很好的主导舆论倾向，直接导致了TPP的破产。</p><p>   而我们的亚投行就比较顺利了，提出之后，不断推进、推进、推进。可以联想到我们国家政策的延续性，五年计划、十年计划、三十年目标、五十年目标、两个一百年目标。曾经在美国卡特政府做过国家安全顾问的布热津斯基，在总结其从政生涯时，也颇有感触地说，美国现行体制热衷于追求新奇，每一位新总统在外交政策上都有一个新的“主义”，这使美国对外政策和地缘战略缺乏一贯性和连续性。</p><p><strong>写于</strong>：2016/12/10</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《西西里的美丽传说》影评</title>
      <link href="%E9%9A%8F%E7%AC%94/9782/"/>
      <url>%E9%9A%8F%E7%AC%94/9782/</url>
      
        <content type="html"><![CDATA[<p>  《西西里的美丽传说》，初看，可能会与色情片联系在一起，就如同一个网友所说，音像店老板挤眉弄眼、神色淫荡地推荐。但是，了解到和《海上钢琴师》是同一个导演——朱塞佩·托纳多雷，就开始思考深层次主题。但是，又似乎只能说是自己认为的主题(尽量不剧透)。<br>  表面上与影片名不符，实际上那一段故事是具有浪漫色彩的。</p><p>  从13岁的雷纳多角度而言，很自然想到徐志摩一句，“一生该有一次为了某个人，而忘了自己，不求有结果，不求同行，不求曾经拥有，甚至不求你爱我，只求在最美的年华里遇见你”，青少年性意识的萌动，是深藏在心底的梦，具有强烈荷尔蒙意味的，一句“Good luck”结束了未曾开始的爱恋;<br>  从玛莲娜角度出发，“与现实对垒，理想快输了，我别无他法，用血肉顶住”，生活一次次的将自己逼向墙角，打击接踵而至，一次打击，意味着一层防线的溃退(不自觉联想到《钢琴家》里的瓦拉迪斯劳)，当剪发的那一刻，意味着心底防线的崩溃，称不上彻底崩溃，只要看着她的眼睛，哪怕是被众妇人围攻匍匐在地上，眼睛里澄澈的光芒，无人否认;</p><p>  从众人角度，“她有什么罪过？她唯一的罪过就是太美丽”，男人垂涎女人恨，也正是这群人不断推波助澜，导致悲剧的发生，却不认为与自己有关;众生相是可悲的存在，不想多言，无众生，无主旋律。最后一句招呼语的情景，还是想不透。<br>美丽的传说也可能包含悲剧色彩。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《追寻毛泽东的革命轨迹》读书笔记</title>
      <link href="%E4%B9%A6%E4%B8%AD%E8%87%AA%E6%9C%89%E9%BB%84%E9%87%91%E5%B1%8B/26788/"/>
      <url>%E4%B9%A6%E4%B8%AD%E8%87%AA%E6%9C%89%E9%BB%84%E9%87%91%E5%B1%8B/26788/</url>
      
        <content type="html"><![CDATA[<p><strong>2016-12-13</strong><br>  我对毛泽东的认识，也是一个不断变化的过程。从一开始的崇拜，到后来的质疑，再到现在的理性仰望。这与我会社会主义制度的认识也是相契合的。<br>我们的社会为什么要进行社会舆论引导，“言论自由”，1956以“百花齐放、百家争鸣”为方针的  “鸣放运动”的结果告诉了我们当前政府所执行政策的合理性。社会是需要一个统一的意识来引导的，不然，会引起社会动荡，会动摇“经济建设”中心论。我们在稳健发展，发展中会遇到问题，我们也坚信:华夏儿女有信心有能力解决出现的问题！<br>  今天有人为王健林的霸气发言喝彩，透过现象，我们进一步去想:他的背后是一个强大的中国！只有国家强大了，我们才有更多的在国际舞台上谈判的筹码！<br>  “国富则少年富，国强则少年强，国独立则少年独立，国自由则少年自由，国进步则少年进步，国胜于欧洲则少年胜于欧洲，国雄于地球则少年雄于地球。”</p><p><strong>2016-12-26</strong><br>  毛泽东诞辰123周年。缅怀伟人!<br>  客观来说，毛泽东的功过应该分开来看，结论是“功大于过”。<br>  前天晚上十点翻开了李中(韩)写的《追寻毛泽东的革命轨迹》，全书论述较为客观，没有一味的褒扬和讽刺。昨天凌晨大约一点钟读完了，由于联想比较多，禁不住敲了2000字左右的一篇读书笔记。<br>    我一直认为这本书与我有缘，在TP类借书时，回到宿舍，发现这本书夹在专业书籍中，本来准备直接还的，但老五无意中翻到毛泽东通读十七遍《资治通鉴》那一页时，我恰好看到，拿过来翻了翻目录，就产生了要读一读这本书的想法;那时，我还在读《资治通鉴》。<br>  当然，错误地主导了“大跃进”、“农业学大寨”、“文化大革命”等，当然，这也是有历史必然性的，我认为主要原因是我国从半封建半殖民地化直接进入社会主义。针对部分国民对毛泽东评价侧重于负面影响，以下简单谈谈我敬佩之处(六理论，八实践)——</p><ul><li><p>一、推翻“城市中心论”，提出“农村包围城市”;</p></li><li><p>二、提出了“持久战”的可行性，反对“亡国论”和“速胜论”;</p></li><li><p>三、联系中国实际，提出了“游击战术”，并有“敌进我退，敌驻我扰，敌疲我打，敌退我追”的十六字方针;</p></li><li><p>四、建国后与第一代领导集体丰富并发展了“毛泽东思想”;</p></li><li><p>五、创造大量文学作品;</p></li><li><p>六、提出“建立抗日民族统一战线”的战略;<br>(以上六条是理论上的伟大之处)</p></li><li><p>七、建立了井冈山革命根据地;</p></li><li><p>八、遵义会议力挽狂澜，完成战略后退;</p></li><li><p>九、建立中华人民共和国;</p></li><li><p>十、做出“抗美援朝，保家卫国”的决策，运筹帷幄之中;</p></li><li><p>十一、文化大革命期间，保证核武器和人造卫星等的成功研制;</p></li><li><p>十二、充分调动广大人民建设国家的积极性;</p></li><li><p>十三、客观的评价对手，才会有“建立统一的中华民国”的蒋介石与李世民、武则天、孙中山等放在一起，而不是与秦桧、袁世凯放在一起;</p></li><li><p>十四、未给其子毛岸英搞特殊化，与其他阵亡志愿军一起安葬在朝鲜。<br>(以上八条是实践中的伟大之处)</p></li></ul><h1 id="指点江山"><a class="markdownIt-Anchor" href="#指点江山"></a> 指点江山#</h1>]]></content>
      
      
      <categories>
          
          <category> 书中自有黄金屋 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 书中自有黄金屋 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>log4js配置说明</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/35450/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/35450/</url>
      
        <content type="html"><![CDATA[<p>NOTE: this documentation is for version 2.x. You probably want to look at <a href="https://github.com/log4js-node/log4js-node/tree/v1.1.1">version 1.1.1 docs</a> instead.</p><p>This is a conversion of the <a href="https://github.com/stritti/log4js">log4js</a> framework to work with <a href="https://nodejs.org/en/">node</a>. I started out just stripping out the browser-specific code and tidying up some of the javascript to work better in node. It grew from there. Although it’s got a similar name to the Java library <a href="https://logging.apache.org/log4j/2.x/">log4j</a>, thinking that it will behave the same way will only bring you sorrow and confusion.</p><p>The full documentation is available here.</p><p>Out of the box it supports the following features:</p><p>· coloured console logging to stdout or stderr<br>· file appender, with configurable log rolling based on file size or date<br>· SMTP appender<br>· GELF appender<br>· Loggly appender<br>· Logstash UDP appender<br>· logFaces (UDP and HTTP) appender<br>· multiprocess appender (useful when you’ve got multiple servers)<br>· a logger for connect/express servers<br>· configurable log message layout/patterns<br>· different log levels for different log categories (make some parts of your app log as DEBUG, others only ERRORS, etc.)</p><p>** installation**<br><code>npm install log4js</code></p><p>** usage**<br>Minimalist version:</p><p><code>var log4js = require('log4js'); var logger = log4js.getLogger(); logger.level = 'debug'; logger.debug(&quot;Some debug messages&quot;);</code></p><p>By default, log4js will not output any logs (so that it can safely be used in libraries). The level for thedefault category is set to OFF. To enable logs, set the level (as in the example). This will then output to stdout with the coloured layout (thanks to <a href="https://github.com/masylum">masylum</a>), so for the above you would see:</p><p><code>[2010-01-17 11:43:37.987] [DEBUG] [default] - Some debug messages</code></p><p>See example.js for a full example, but here’s a snippet (also in examples/fromreadme.js):</p><p>`const log4js = require(‘log4js’);<br>log4js.configure({<br>appenders: { cheese: { type: ‘file’, filename: ‘cheese.log’ } },<br>categories: { default: { appenders: [‘cheese’], level: ‘error’ } }<br>});</p><p>const logger = log4js.getLogger(‘cheese’);<br>logger.trace(‘Entering cheese testing’);<br>logger.debug(‘Got cheese.’);<br><a href="http://logger.info">logger.info</a>(‘Cheese is Gouda.’);<br>logger.warn(‘Cheese is quite smelly.’);<br>logger.error(‘Cheese is too ripe!’);<br>logger.fatal(‘Cheese was breeding ground for listeria.’);<br>`</p><p>Output (in cheese.log):</p><p><code>[2010-01-17 11:43:37.987] [ERROR] cheese - Cheese is too ripe! [2010-01-17 11:43:37.990] [FATAL] cheese - Cheese was breeding ground for listeria.</code></p><p><strong>Note for library makers</strong><br>If you’re writing a library and would like to include support for log4js, without introducing a dependency headache for your users, take a look at <a href="https://github.com/log4js-node/log4js-api">log4js-api</a>.</p><p><strong>Documentation</strong></p><p>Available here.</p><p>There’s also <a href="https://github.com/log4js-node/log4js-example">an example application</a>.</p><p><strong>Contributing</strong><br>Contributions welcome, but take a look at the <a href="https://github.com/log4js-node/log4js-node">rules</a> first.</p><p><strong>License</strong><br>The original log4js was distributed under the Apache 2.0 License, and so is this. I’ve tried to keep the original copyright and author credits in place, except in sections that I have rewritten extensively.</p>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序猿的学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>天猫、淘宝、阿里巴巴、京东商品图片抓取保存操作步骤（图文详细产品图片保存）</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/62973/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/62973/</url>
      
        <content type="html"><![CDATA[<p>近期，由于工作需要天猫上的一些产品图片以及详细图文，由于单个保存有点繁琐，索性弄了一个小程序根据地址来抓取图片。</p><p><strong>工具百度云下载链接</strong>：<br>链接：<a href="https://pan.baidu.com/s/1tn8XXJLkeUPwAspNdo1Imw">https://pan.baidu.com/s/1tn8XXJLkeUPwAspNdo1Imw</a><br>提取码：55qj</p><p>原理很简单，首先是根据地址获取页面内容，因为天猫、淘宝、阿里巴巴、京东等的产品页面结构都是一样的，直接根据正则分析其中图片，然后保存即可。</p><p>1.打开Svenhetin-PicCapture.exe，打开后的界面如下（运行程序确保已安装Microsoft .NET Framework 4.0）<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/62973/Step1.jpg" alt="v2-6d1e330f2fffba41b5ad77f4dcd68c15_hd"></p><p>2.在文本框内填写天猫、淘宝、阿里巴巴、京东等的商品地址：<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/62973/Step2.jpg" alt="v2-f6f30fdecec7cefad6df7da72d9b65d4_hd"></p><p>3.点击获取，稍等8-20秒，如果获取到相关图片信息，会弹出保存目录选择框。<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/62973/Step3.jpg" alt="v2-e569c648ba0a5c3ac87462664796d4a4_hd"></p><p>4.点击【确定】保存即可。<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/62973/Step4.jpg" alt="v2-3cdec66c039faa8ed805bd9350377069_hd"></p><p>5、点击【是】后查看获取的天猫产品图片信息目录结构：<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/62973/Step5.jpg" alt="v2-a036847838ad969a7ea2be3e19e4fcc1_hd"></p><p>6、产品主图如下：<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/62973/Step6a.jpg" alt="v2-6c6a2acca0f7ae0bdece3852a37d4598_hd"></p><p>产品详细图片如下：<br><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/62973/Step6b.jpg" alt="v2-1adae09b5ccbe866b1b97d64f5f38e16_hd"></p><p>原1688页面图片对照</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/62973/Step6c.jpg" alt="v2-256f05434b2e5416f1df00692cf0bbfb_hd"></p><p><strong>PS：如果打不开，或者打开报错，请确保是否安装了Microsoft .NET Framework 4.0</strong><br>下载NET Framework 4.0地址：<a href="%EF%BC%88%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80%EF%BC%9Ahttp://dl1sw.baidu.com/soft/9b/15910/Microsoft.NET.exe?version=585709662%EF%BC%89">点击这里</a></p><p><strong>PS:发布后，有伙伴反应总是报脚本错误，这应该是1688等网站的反爬虫脚本导致的，点击【否】即可。</strong></p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/62973/jiaoben.png" alt="jiaoben"></p>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> 跨境电商 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>吴晓波《历代经济变革得失》读后感</title>
      <link href="%E4%B9%A6%E4%B8%AD%E8%87%AA%E6%9C%89%E9%BB%84%E9%87%91%E5%B1%8B/34692/"/>
      <url>%E4%B9%A6%E4%B8%AD%E8%87%AA%E6%9C%89%E9%BB%84%E9%87%91%E5%B1%8B/34692/</url>
      
        <content type="html"><![CDATA[<p>“如果不研究历代经济的变革，其实无法真正理解当前的中国”现在来简单总结一下吴晓波《历代经济变革得失》对我的几个问题从经济层面进行了刷新，简要陈述——</p><p>一、中国为什么是一个人民民主专政的国家？首先这是一个上一代人（我认为包括我们这一代人）终其一生都无法找到其他的抉择。“经济基础决定上层建筑”，以经济的观点来解释中国政治、法律制度再好不过，其在【结语·回到历史的基本面】得出的第一个基础性判断就是：“统一文化”是一切自由化改革的边界。中国在两千年的进程中，一直保持着中央集权的政治体制，自由化的市场经济变革必将削弱中央的集权能力，最近两次短暂的放权型变革实验（即民国初期1916-1927，改革开放初期1978-1989），尽管刺激了民间经济的高速发展，然而都没有寻找到维持社会稳定的良方。若分权失控，边疆地区出现的独立事件，是任何改革者无法承受的。</p><p>二、为什么国地税合并，房价为何不断上涨，可能的解决方案是什么？主要原因在93年朱镕基总理为了重塑89年以来的失落的政府权威，改变中央政府在收入分配上的被动局面，采用了“分税制”，地方政府为了维持足够的财政收入，不得不在“土地财政”上下功夫，直接导致房地产行业泡沫的形成与膨胀，但回过头来看，这是当时不得已而为之的强有效的措施，意义不容忽视，历史不容假设，是否有更好的方案，另当别论。我认为，当前的“国地税合并”就是在推倒“分税制”，如果落实到实处，解决了地方财政问题，房价的涨势可以刹刹车了，但是考虑到“民众大多是不理性的”，可能在这件事上反而事与愿违，还需要国家再次出手进行宏观调控。</p><p>三、现在中国有哪些势力挑战了现有的体制？四股新势力“互联网”、“非政府组织（NGO）”、“企业家阶层”、“自由知识分子”对维持中央集权的四大基本制度构成了挑战。</p><p>四、中国重新成为世界时间中心还需要多久？如果傅斯年的“经济兴衰周期”（中国若无战乱，十年可恢复，三十年可振兴，五十年到七十年必成盛世）正确，中国在未来的二十年内超越美国，世界时间的钟摆重新回归中国，乃“必然”发生的大概率事件。</p><p>五、最近美国为什么一直“退群”，倡导“美国优先”？“先开放，后闭关”的规律（一开放就搞活，一搞活就失衡，一失衡就内乱，一内乱就闭关，一闭关就落后，一落后就开放）解释了这个现象，美国正处于“一内乱就闭关”的状态。</p><p>六、为什么阿里京东要推出新零售？网购总交易额占全社会消费品零售总额的百分比从12年吴晓波成书的5%上升到可查的16年12.6%，估计今年也不会超过18%，也就是说网购的规模似乎已经到达上限了，这个时候开展线下市场，尤其刚结束的“6·18大促”，反而线下市场竞争更为激烈，展现了非常强的活力。</p><p>非常晚了，就先说这五个问题吧。</p><p>晚安，我的愿望是：世界和平。</p><p><strong>补充：吴晓波《历代经济变革得失》读书笔记·1</strong><br>吴晓波在《历代经济变革得失》的论述让人大呼过瘾，第一章中把管仲变法（公元前八世纪，“管鲍之交”的管仲）称为“两年多年前的‘凯恩斯主义’”，我只谈一下自己的六点延申联想思考或观念刷新——</p><p>一、春秋五霸中的霸主并不是一个全国性的公认的霸主，只是区域性的霸主。最后一霸“越王勾践”只是在主要战争区域谋求和平、一派祥和之后，放大了在中国偏僻角落里的吴越之战；</p><p>二、“士农工商”历来被我认为是尊卑排序，士为首，商为末，但从管仲变法的具体措施来看，是一反之前观念，是四个并举，地位等同；这种按专业聚集在固定区域的政策，在西方公元十至十一世纪（如果没记错）才施行；</p><p>三、管仲不但是娼妓业的“祖师爷”，也是国营经济体制、开放国门、“盐铁专营”垄断、宏观调控、货币战的“祖师爷”；</p><p>四、鼓励奢侈，鼓励消费，通过公共设施建设增加就业，第三个鼓励措施美、德等国在1929年经济危机时用此方法度过经济危机；</p><p>五、中国在一带一路沿线采用的对外政策在某些方面与之“以商止战”的理念相契合。</p><p>六、在“看不见的手”和“看得见的手”，我是站凯恩斯的，之前讲课的时候我已经讲过很多遍自己的论据了，不再赘述。</p>]]></content>
      
      
      <categories>
          
          <category> 书中自有黄金屋 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 书中自有黄金屋 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于 CentOS 搭建 Ghost 博客</title>
      <link href="%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16541/"/>
      <url>%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16541/</url>
      
        <content type="html"><![CDATA[<h2 id="一-安装-nodejs-及相关包"><a class="markdownIt-Anchor" href="#一-安装-nodejs-及相关包"></a> 一、安装 Node.js 及相关包</h2><p>=================</p><h3 id="安装-nodejs"><a class="markdownIt-Anchor" href="#安装-nodejs"></a> 安装 Node.js</h3><p>逐行输入下面的命令进行安装：</p><pre><code>yum update -yyum -y install nodejs</code></pre><p>安装成功后通过运行node -v及npm -v 出现版本号即可表示安装成功。</p><p>安装 Ghost Client （ghost-cli）</p><p><code>npm i -g ghost-cli</code></p><p>一般而言，安装成功后通过运行 ghost -v，出现版本号即可表示安装成功。但因为国内的网络问题，安装后请检查下终端的 log，如果有出现任意红色报错信息，则证明只有部分安装成功，需要重新执行命令安装。</p><p>如果不能正常安装请多次执行上面的命令。</p><h2 id="二-安装-ghost"><a class="markdownIt-Anchor" href="#二-安装-ghost"></a> 二、安装 Ghost</h2><p>==========</p><h3 id="添加-ghost-运行用户并创建目录"><a class="markdownIt-Anchor" href="#添加-ghost-运行用户并创建目录"></a> 添加 Ghost 运行用户并创建目录</h3><p>请按行依次输入下面的命令</p><pre><code>adduser ghostmkdir /var/wwwmkdir /var/www/ghostchown ghost /var/www/ghost</code></pre><h3 id="安装-ghost"><a class="markdownIt-Anchor" href="#安装-ghost"></a> 安装 Ghost</h3><p>本教程以 SQLite3 作为 Ghost 的数据库。</p><pre><code>cd /var/www/ghostsu ghostghost install local --db=sqlite3</code></pre><p>安装成功的截图：</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16541/Ghost-install-local.png" alt="-----2017-10-31---5.13.36"></p><p>如果你安装后不是类似上面的截图，则证明 Ghost-cli 没有安装成功；请重复执行上一步的“安装 Ghost Client”步骤。</p><h3 id="启动-ghost"><a class="markdownIt-Anchor" href="#启动-ghost"></a> 启动 Ghost</h3><p>安装成功后 Ghost 默认就已经启动的了，下面的命令分别是 Ghost 的停止、启动、重启命令，可尝试使用。</p><pre><code>ghost stopghost startghost restart</code></pre><p>当前若为root身份登陆，需用su ghost 更换用户身份，安装成功后默认是运行在http://localhost:2368/，如果需要对外访问，则需要通过 Nginx 进行反向代理。</p><h2 id="安装-nginx"><a class="markdownIt-Anchor" href="#安装-nginx"></a> 安装 Nginx</h2><p>========</p><h3 id="安装-nginx-2"><a class="markdownIt-Anchor" href="#安装-nginx-2"></a> 安装 Nginx</h3><pre><code>su rootyum install -y nginx</code></pre><p>如无意外，Nginx 将完成安装在你的服务器中。</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16541/-----2017-10-31---5.18.14.png" alt="-----2017-10-31---5.18.14"></p><p>启动 Nginx<br>刚安装的 Nginx 不会自行启动，需要通过如下命令启动<br><code>systemctl start nginx.service</code></p><p>如果一切进展顺利的话，现在你可以通过你 IP( http://&lt;您的 CVM IP 地址&gt;/ )来访问你的 Web 页面来预览一下 Nginx 的默认页面。</p><p><img src="/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16541/nginx_default.png" alt="nginx_default"></p><p>如果看到上面的页面,那么说明你的 CentOS 中的 Nginx 已经正确安装。</p><p>另外还可以通过systemctl enable nginx.service命令加入开机启动项。</p><h3 id="nginx-配置反向代理"><a class="markdownIt-Anchor" href="#nginx-配置反向代理"></a> Nginx 配置反向代理</h3><p>修改 config 文件<br>请确保 Ghost 已经在运行阶段方可进行如下操作。<br><code>vi /etc/nginx/conf.d/default.conf</code><br>运行上面的命令后，再键入 i 然后移动光标在约第七行修改相关文件代码：</p><pre><code>location / &#123;        root   /usr/share/nginx/html;        index  index.html index.htm;    &#125;</code></pre><p>改为：</p><pre><code>location / &#123;        proxy_pass http://127.0.0.1:2368;        proxy_redirect default;        root   /usr/share/nginx/html;        index  index.html index.htm;    &#125;</code></pre><p>完成后通过按 ESC ，随后输入 :wq 回车保存。</p><p>然后运行 nginx -s reload 重启 Nginx。</p><h2 id="ghost-的界面管理"><a class="markdownIt-Anchor" href="#ghost-的界面管理"></a> Ghost 的界面管理</h2><p>===========</p><h3 id="首页"><a class="markdownIt-Anchor" href="#首页"></a> 首页</h3><p>完成了上面的步骤之后，访问http://&lt;您的 CVM IP 地址&gt;/ 就能看到 Ghost 的默认页面：</p><h3 id="管理界面"><a class="markdownIt-Anchor" href="#管理界面"></a> 管理界面</h3><p>访问http://&lt;您的 CVM IP 地址&gt;/ghost 就可以继续相关写作设置了。</p><h2 id="长时间运行"><a class="markdownIt-Anchor" href="#长时间运行"></a> 长时间运行</h2><pre><code>pm2 start ./versions/1.24.6/index.js</code></pre>]]></content>
      
      
      <categories>
          
          <category> 程序猿的学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创拙笔 </tag>
            
            <tag> 程序猿的学习笔记 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
